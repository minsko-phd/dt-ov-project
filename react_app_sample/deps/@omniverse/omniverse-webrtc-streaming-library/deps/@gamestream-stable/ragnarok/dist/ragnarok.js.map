{"version":3,"file":"ragnarok.js","mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA,SAAS,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ;AACR,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACh0DA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,2BAA2B;AAC3B;AACA;AACA;AACA,yDAAyD;AACzD,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAA0B;AAC9B;AACA;;;;;;;;;;;;ACxzBA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACO;AACP,SAAS,WAAW;;AAEpB;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD;AACA;AACA;AACA,IAAI;AACJ,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD,GAAG,IAAI;AACP;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACwB;AACrC,gBAAgB,GAAS;;AAElB;AACP;;AAEA;AACA;AACA;;AAEA,yBAAyB,aAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,yDAAyD,qBAAqB;AAC9E,yDAAyD;AACzD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACN;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACwB;;AAEW;AACM;;AAE/C;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI,uBAA6B;AACjC;AACA;AACA,WAAW,QAAQ,sBAAsB;AACzC;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAiB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAA6B;AACjC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,WAAiB;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,yBAAyB,aAAmB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,yBAAyB,aAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP,yBAAyB,aAAmB;AAC5C,EAAE,uBAA6B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;ACxtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEqB;AAClC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEN,SAAS,6BAAgB;AAChC;;AAEA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEN,SAAS,mCAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEqB;AACkB;AACO;;AAEX;AACM;;AAE/C,SAAS,4BAAkB;AAClC,yBAAyB,aAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,2BAAqB;AACrD;AACA;AACA;AACA,0BAA0B,gBAAgB;AAC1C;AACA,MAAM,GAAS;AACf;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEqB;;AAE3B,SAAS,qCAAgB;AAChC,yBAAyB,aAAmB;AAC5C;AACA;;AAEA;AACA;AACA,IAAI,UAAgB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEN,SAAS,2CAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,QAAQ;AACR;AACA;AACA;AACA;AACA;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEqB;AACc;AACM;;AAE/C,SAAS,wBAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEO,SAAS,+BAAkB;AAClC,yBAAyB,aAAmB;;AAE5C;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uBAA6B;AAC/B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,UAAgB;AACtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,GAAG,8BAA8B;AAChE;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AC5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACqB;;AAE3B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAAS,4BAAgB;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA,2BAA2B;AAC3B;AACA,OAAO,OAAO,aAAmB;AACjC;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA,YAAY,UAAgB;AAC5B;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;;;;;AC/VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEc;AACM;;AAE1B;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,4BAAuB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,uBAA6B;AAC/B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA,yBAAyB,aAAmB;;AAE5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,2BAAsB;AAC3C;AACA;AACA,oBAAoB,wBAAmB;AACvC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,yBAAoB;AACtC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,uBAA6B;AAC/B;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA,yBAAyB,aAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;ACrVA;AACA;AACA;AACA;AACA;AACA;AACA;AACiC;;AAEjC;AACmD;AACN;AACS;AACH;AACP;;AAE5C;AACO,yBAAyB,QAAQ,IAAI;AAC5C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kBAAkB,GAAS;AAC3B,yBAAyB,aAAmB;;AAE5C;AACA;AACA,cAAc;AACd,oBAAoB,cAAoB;AACxC,gBAAgB,UAAgB;AAChC,qBAAqB,eAAqB;AAC1C;;AAEA;AACA;AACA;AACA,WAAW,2BAAU,KAAK,kBAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAAU;;AAEtC,MAAM,gBAA2B;AACjC,MAAM,eAA0B;AAChC,MAAM,kBAA6B;AACnC,MAAM,WAAsB;AAC5B,MAAM,uBAAkC;AACxC,MAAM,sBAAiC;AACvC,MAAM,YAAuB;AAC7B,MAAM,0BAAqC;AAC3C,MAAM,oBAA+B;;AAErC,MAAM,mBAA8B;AACpC,MAAM,mBAA8B;AACpC,MAAM,kBAA6B;AACnC,MAAM,sBAAiC;AACvC,MAAM,sBAAiC;AACvC;AACA;AACA,WAAW,4BAAW,KAAK,+BAA8B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAAW;;AAEvC,MAAM,qCAA4B;AAClC,MAAM,+BAA8B;AACpC,MAAM,wBAAuB;AAC7B,MAAM,gBAA4B;AAClC,MAAM,kBAA8B;AACpC,MAAM,oBAAgC;AACtC,MAAM,kBAA8B;AACpC,MAAM,kBAA8B;AACpC,MAAM,iBAA6B;AACnC,MAAM,eAA2B;AACjC,MAAM,gBAA4B;;AAElC,MAAM,mBAA8B;AACpC,MAAM,mBAA8B;AACpC,MAAM,kBAA6B;AACnC,MAAM,sBAAiC;AACvC;AACA;AACA,WAAW,yBAAQ,KAAK,4BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAQ;;AAEpC,MAAM,6BAAyB;AAC/B,MAAM,mCAA4B;AAClC,MAAM,4BAA2B;AACjC,MAAM,gBAAyB;;AAE/B;;AAEA,MAAM,kBAA6B;AACnC,MAAM,sBAAiC;AACvC;AACA;AACA,WAAW,2BAAU;AACrB;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAAU;;AAEtC,MAAM,oBAA+B;AACrC,MAAM,qBAAgC;AACtC,MAAM,gBAA2B;AACjC,MAAM,mBAA8B;AACpC,MAAM,oBAA+B;AACrC,MAAM,yBAAoC;AAC1C,MAAM,4BAA2B;AACjC,MAAM,gBAA2B;;AAEjC,MAAM,mBAA8B;AACpC,MAAM,kBAA6B;AACnC,MAAM,sBAAiC;AACvC,MAAM,sBAAiC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEuC;;AAEpD,gBAAgB,cAAc,EAAE,OAAO;AACvC,mDAAe,uDAAO,IAAC;;;;;ACdhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCgB;AACW","sources":["webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/eventemitter.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/settings.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/logger.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/dependencies.js","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/tracingmanager.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/cancellablewait.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/sdp.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/utils.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/utillogger.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/gridapp.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/workerutils.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/platform.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/logqueueingeventemitter.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/output/gridserver-core/output/gridserver.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/translateplatform.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/rtcutils-core/index-output.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/output/gridserver-core/output/settings.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/output/gridserver-core/output/gstelemetryinterfaces.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/output/gridserver-core/output/gstelemetryhandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/output/gridserver-core/output/tracing.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/index-output.js","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/genversion.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/gridserver-core/index-output.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/interfaces.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/rinterfaces.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/serverclienterrormap.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/latencyindicator.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/settings.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/ragnarokprofiler.js","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/streamclient.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/inputhandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/stats/out/output/stats/binaryreport.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/stats/out/output/stats/clientstatsservice.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/ragnarokworker.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/utils.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/gesturedetector.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/touchlistener.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/inputpackethandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/keycodes.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/inputpacketinfo.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/mousehandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/gamepadhandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/gamepadrsdmm.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/mousefilter.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/windowstateobserver.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/audiorecorder.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/stats/out/output/stats/streamstats.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/safezonehandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/ldatoverlay.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/stats/out/output/stats/qoscalculator.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/stats/out/output/stats/webrtcbinarystats.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/devicecapabilities.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/ldatcontroller.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/nvstconfig.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/websocketimpl.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/bitstreamdump.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/telemetry/out/output/telemetry/telemetryhandler.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/networkdetector.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/telemetry/out/output/telemetry/telemetryinterfaces.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/telemetry/out/output/telemetry/telemetryeventprocessor.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/out/output/miccapturer.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/sleepdetector.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/debug/out/output/debug/gamepadtester.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/input/out/output/input/virtualgamepad.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/indexdb.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/output/util/out/output/util/mockpmgridserver.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/out/out/index-output.ts","webpack://@gamestream/ragnarok/../ragnarok-core/dist/gridserver-core/index-output.js","webpack://@gamestream/ragnarok/../ragnarok-core/dist/rtcutils-core/output/rtcutils-core/output/version.ts","webpack://@gamestream/ragnarok/./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack://@gamestream/ragnarok/./node_modules/sdp/sdp.js","webpack://@gamestream/ragnarok/external commonjs2 \"@opentelemetry/api\"","webpack://@gamestream/ragnarok/webpack/bootstrap","webpack://@gamestream/ragnarok/webpack/runtime/compat get default export","webpack://@gamestream/ragnarok/webpack/runtime/define property getters","webpack://@gamestream/ragnarok/webpack/runtime/hasOwnProperty shorthand","webpack://@gamestream/ragnarok/webpack/runtime/make namespace object","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/utils.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/common_shim.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack://@gamestream/ragnarok/./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack://@gamestream/ragnarok/../ragnarok-core/dist/shim.js","webpack://@gamestream/ragnarok/./index.js"],"sourcesContent":["export declare interface IEventEmitter {\n    addListener(eventname: string, handler: Function): void;\n    removeListener(eventname: string, handler: Function): void;\n    removeAllListenersOfEvent(eventname: string): void;\n    removeAllListeners(): void;\n    hasListener(eventname: string): boolean;\n    emit(eventname: string, ...args: any[]): void;\n}\n\n/**\n * Implements a custom event emitter pattern.\n *  a. Provides option for adding and removing listeners for an event type.\n *  b. Exposes function to emit events with variable argument.\n **/\nexport class EventEmitter implements IEventEmitter {\n    private handlers: Map<string, Set<Function>>;\n    private emitSynchronously?: boolean;\n    constructor(emitSynchronously?: boolean) {\n        this.handlers = new Map();\n        this.emitSynchronously = emitSynchronously;\n    }\n\n    /**\n     * Adds a function for to be invoked for a particular event.\n     * Any number of handlers can be registered for an event.\n     * @param eventname - the event type for which the corresponding handler to be invoked.\n     * @param handler - listener function to be invoked when the event is emitted.\n     **/\n    public addListener(eventname: string, handler: Function) {\n        const handles = this.handlers.get(eventname);\n        if (handles !== undefined) {\n            handles.add(handler);\n        } else {\n            const newHandles = new Set<Function>();\n            newHandles.add(handler);\n            this.handlers.set(eventname, newHandles);\n        }\n    }\n\n    /**\n     *  Removes an handler for a particular event.\n     * @param eventname - the event type for which the corresponding handler  has to be removed.\n     * @param handler - listener function to be removed.\n     * Note: Removes only on instance of the function in each call, if a function is added as listener for X times\n     * then this function needs to be invoked X times to remove all instances.\n     **/\n    public removeListener(eventname: string, handler: Function) {\n        let handles = this.handlers.get(eventname);\n        handles?.delete(handler);\n    }\n\n    public removeAllListenersOfEvent(eventname: string) {\n        this.handlers.delete(eventname);\n    }\n\n    public removeAllListeners() {\n        this.handlers.clear();\n    }\n\n    public hasListener(eventname: string): boolean {\n        const handles = this.handlers.get(eventname);\n        return handles !== undefined && handles.size > 0;\n    }\n\n    /**\n     *  Emits an event. The corresponding listeners will be executed.\n     * @param eventname - the event type.\n     * @param args - variable number of args for this event. These parameters are passed to registered listeners.\n     * Note: If there are no listener for input event type then this function is no op.\n     **/\n    emit(eventname: string, ...args: any[]) {\n        try {\n            let handles = this.handlers.get(eventname);\n            if (handles) {\n                for (const handler of handles) {\n                    if (this.emitSynchronously) {\n                        handler(...args);\n                    } else {\n                        window.setTimeout(handler, 0, ...args);\n                    }\n                }\n            }\n        } catch (err) {\n            //Can't send this log to UI due to circular calls emit->Log.i->emit\n            console.log(\"Exception in emit: \" + err);\n        }\n    }\n}\n","// This file/module has to be standalone; in particular it cannot depend on\n// the logger module, since that module depends on this one.\n//\n// Therefore, this file cannot log anything itself.\n\ninterface _RtcUtilsSettings {\n    loggingEnabled: boolean; // Disable log events to client.\n    consoleLoggingEnabled: boolean; // Enable log events to UA console. Requires loggingEnabled.\n}\n\n/* Note: This variable is not meant to be used by public Clients.\n */\nexport let RtcUtilsSettings: _RtcUtilsSettings = {\n    loggingEnabled: true,\n    consoleLoggingEnabled: false\n};\n\n/** Free form Ragnarok library configuration parameter.\n    To be used only by GFN client and internal dev clients. */\nexport declare interface RtcUtilConfigData {\n    overrideData?: string;\n}\n\n/** Returns the boolean representation of the associated string */\nexport function toBool(value: string): boolean | undefined {\n    if (value) {\n        switch (value) {\n            case \"enable\":\n            case \"on\":\n            case \"1\":\n            case \"true\":\n                return true;\n            case \"disable\":\n            case \"off\":\n            case \"0\":\n            case \"false\":\n                return false;\n        }\n    }\n    return undefined;\n}\n\n/**\n * This function allows GFN/dev clients to configure the ragnarok library to toggle various features from override tools or from remote config server.\n * This should be invoked before initializing other components of ragnarok library.\n *\n * The RtcUtilConfigData.remoteConfigData is all GFN specific settings, its exposed as a string to prevent dependency on GFN client from configuring values to it.\n * The json data received form the RemoteConfig server is stringified as it is and passed into the library without interpretation.\n *\n *\n * The RtcUtilConfigData.overrideData is a string of feature toggle/options separated by '&' character.\n * The options exposed exposed are:\n *\n *      mode=lean|dev|default           -- Lean mode of ragnarok put the library into minimal functionality mode.\n *                                         Most features will be disabled and users configure enabling of selected features.\n *                                         Dev mode of ragnarok enables dev internal tools for the library (by default enabled for Lean mode)\n *      log=enable|disable              -- Enable log generation from the library.\n *      console=enable|disable          -- Enable console log from the library if log generation is enabled.\n *\n *  Ex: In order to put the ragnarok in Lean mode yet support logging, the settings string would be\n *      \"mode=lean&log=enable\"\n *  Instead of enable/disable,  on/off or 0/1 can be used as well.\n */\n\nexport function ConfigureRtcUtilsSettings(data: RtcUtilConfigData) {\n    if (data.overrideData) {\n        /* The below code logic is to disable all features when user has selected lean mode.\n          However each feature can be individually controlled\n          so that performance can be analyzed by turning on one feature at a time. */\n\n        const settings = data.overrideData.toLowerCase();\n\n        /* Using URLSearchParams is simpler even when UI clients give a text option in Override tools to configure ragnarok.\n           It splits on '&' and '=', which is what we would need when configured through UI Clients. */\n        const settingsMap = new URLSearchParams(settings);\n        if (settingsMap.get(\"mode\") === \"lean\") {\n            RtcUtilsSettings.loggingEnabled = false;\n        }\n        const getSettingBool = (key: string): boolean | undefined => {\n            const value: any = settingsMap.get(key);\n            return toBool(value);\n        };\n\n        RtcUtilsSettings.loggingEnabled = getSettingBool(\"log\") ?? RtcUtilsSettings.loggingEnabled;\n        RtcUtilsSettings.consoleLoggingEnabled =\n            RtcUtilsSettings.loggingEnabled &&\n            (getSettingBool(\"console\") ?? RtcUtilsSettings.consoleLoggingEnabled);\n    }\n}\n","import { EventEmitter } from \"./eventemitter\";\nimport { UTIL_EVENTS, LogEvent, LogLevel } from \"./interfaces\";\nimport { RtcUtilsSettings } from \"./settings\";\n\ntype LogFunction = (tag: string, msg: string, ...jsonObject: any[]) => void;\ntype FormatFunction = (msg: string, ...args: any[]) => string;\n\ndeclare interface LogInterface {\n    d: LogFunction;\n    w: LogFunction;\n    e: LogFunction;\n    i: LogFunction;\n    format: FormatFunction;\n    //commit can mean sending logs buffer to some http server\n    commit(logevent: LogEvent): void;\n    sanitize(string?: string): string | undefined;\n}\n\n// Only exported for dev client:\nexport class LogImpl extends EventEmitter implements LogInterface {\n    // A no-op logging function for when logging is disabled\n    private _nop: LogFunction;\n    private _nopf: FormatFunction;\n    // Cached closures for emitted logging.\n    private _d: LogFunction;\n    private _i: LogFunction;\n    private _w: LogFunction;\n    private _e: LogFunction;\n    private _f: FormatFunction;\n    private queue: LogEvent[] = [];\n\n    constructor() {\n        super(true);\n\n        this._nop = (tag: string, msg: string, ...jsonObject: any[]) => {};\n        this._d = (tag: string, msg: string, ...jsonObject: any[]) =>\n            this.emitLogMsg(LogLevel.DEBUG, tag, msg, jsonObject);\n        this._i = (tag: string, msg: string, ...jsonObject: any[]) =>\n            this.emitLogMsg(LogLevel.INFO, tag, msg, jsonObject);\n        this._w = (tag: string, msg: string, ...jsonObject: any[]) =>\n            this.emitLogMsg(LogLevel.WARN, tag, msg, jsonObject);\n        this._e = (tag: string, msg: string, ...jsonObject: any[]) =>\n            this.emitLogMsg(LogLevel.ERROR, tag, msg, jsonObject);\n        this._nopf = (msg: string, ...args: any[]) => {\n            return \"\";\n        };\n        this._f = (msg: string, ...args: any[]) => {\n            return this.formatString(msg, ...args);\n        };\n    }\n\n    public get d(): LogFunction {\n        if (RtcUtilsSettings.consoleLoggingEnabled) {\n            return console.debug.bind(console, \"%s DEBUG [%s] %s@@\", this.renderDate(new Date()));\n        } else {\n            return RtcUtilsSettings.loggingEnabled ? this._d : this._nop;\n        }\n    }\n\n    public get w(): LogFunction {\n        if (RtcUtilsSettings.consoleLoggingEnabled) {\n            return console.warn.bind(console, \"%s WARN  [%s] %s@@\", this.renderDate(new Date()));\n        } else {\n            return RtcUtilsSettings.loggingEnabled ? this._w : this._nop;\n        }\n    }\n\n    public get i(): LogFunction {\n        if (RtcUtilsSettings.consoleLoggingEnabled) {\n            return console.info.bind(console, \"%s INFO  [%s] %s@@\", this.renderDate(new Date()));\n        } else {\n            return RtcUtilsSettings.loggingEnabled ? this._i : this._nop;\n        }\n    }\n\n    public get e(): LogFunction {\n        if (RtcUtilsSettings.consoleLoggingEnabled) {\n            return console.error.bind(console, \"%s ERROR [%s] %s@@\", this.renderDate(new Date()));\n        } else {\n            // Always emit errors\n            return this._e;\n        }\n    }\n\n    public sanitize(msg?: string): string | undefined {\n        if (!msg) {\n            return msg;\n        }\n\n        interface SanitizationParams {\n            secretBlock: RegExp;\n            replaceStr: string;\n        }\n        const sanitizationGroups: SanitizationParams[] = [\n            {\n                secretBlock: /(partnerCustomData\" *: *\")((\\\\\"|[^\"])*)(?=\")/g,\n                replaceStr: \"$1***\"\n            },\n            {\n                secretBlock: /(\"clientIp\" *: *\")(\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?=\")/g,\n                replaceStr: \"$1***\"\n            }\n        ];\n\n        for (const group of sanitizationGroups) {\n            msg = msg.replace(group.secretBlock, group.replaceStr);\n        }\n        return msg;\n    }\n\n    public get format(): FormatFunction {\n        return this._f;\n    }\n\n    public commit(logevent: LogEvent): void {\n        if (this.hasListener(UTIL_EVENTS.LOG_EVENT)) {\n            this.emit(UTIL_EVENTS.LOG_EVENT, logevent);\n        } else {\n            this.queue.push(logevent);\n        }\n    }\n\n    public stringifyArgs(...args: any[]): string {\n        if (args.length) {\n            return `##${JSON.stringify(args)}`;\n        }\n        return \"\";\n    }\n\n    /// Formats a string with substituions {<digit>}\n    private formatString(str: string, ...args: any[]) {\n        return str.replace(/{(\\d+)}/g, function (match, number, _offset, _string) {\n            return typeof args[number] != \"undefined\" ? args[number] : match;\n        });\n    }\n\n    private emitLogMsg(level: string, tag: string, msg: string, args: any[]): void {\n        let logmsg = `${msg}${this.stringifyArgs(...args)}`;\n\n        let logevent: LogEvent = {\n            logModule: \"R\",\n            timeStamp: this.renderDate(new Date()),\n            logLevel: level,\n            logtag: tag,\n            logstr: logmsg\n        };\n        this.commit(logevent);\n    }\n\n    public addListener(eventname: string, handler: Function) {\n        super.addListener(eventname, handler);\n        if (eventname == UTIL_EVENTS.LOG_EVENT && this.queue.length > 0) {\n            for (const logevent of this.queue) {\n                this.commit(logevent);\n            }\n            this.queue = [];\n        }\n    }\n\n    private renderDate(date: Date): string {\n        const lpad = (value: string, chars: number, padWith: string): string => {\n            const howMany = chars - value.length;\n            if (howMany > 0) {\n                let res: string = \"\";\n                for (let i = 0; i < howMany; i++) {\n                    res += padWith;\n                }\n                res += value;\n                return res;\n            }\n            return value;\n        };\n\n        const fullYear = (d: Date): string => {\n            return lpad(d.getFullYear().toString(), 4, \"0\");\n        };\n\n        const month = (d: Date): string => {\n            return lpad((d.getMonth() + 1).toString(), 2, \"0\");\n        };\n\n        const day = (d: Date): string => {\n            return lpad(d.getDate().toString(), 2, \"0\");\n        };\n\n        const hours = (d: Date): string => {\n            return lpad(d.getHours().toString(), 2, \"0\");\n        };\n\n        const minutes = (d: Date): string => {\n            return lpad(d.getMinutes().toString(), 2, \"0\");\n        };\n\n        const seconds = (d: Date): string => {\n            return lpad(d.getSeconds().toString(), 2, \"0\");\n        };\n\n        const millis = (d: Date): string => {\n            return lpad(d.getMilliseconds().toString(), 3, \"0\");\n        };\n\n        const dateSeparator = \"-\";\n        let ds: string = \"\";\n        // yyyy-mm-dd hh:mm:ss,m\n        ds =\n            fullYear(date) +\n            dateSeparator +\n            month(date) +\n            dateSeparator +\n            day(date) +\n            \" \" +\n            hours(date) +\n            \":\" +\n            minutes(date) +\n            \":\" +\n            seconds(date) +\n            \".\" +\n            millis(date);\n\n        return ds;\n    }\n}\n\n// Singleton LogImpl instance.  All users of LogImpl should use this instead.\nexport let Log = new LogImpl();\n","goog.provide(\"_opentelemetry.api\");\n","import { trace, context, Tracer } from \"@opentelemetry/api\";\n\nexport const TracingComponent = {\n    name: \"rtcutils-core\",\n    version: \"2.0\"\n};\n\nexport class TracingManager {\n    private static instance: TracingManager;\n    private tracer: Tracer;\n\n    private constructor() {\n        this.tracer = trace.getTracer(\"gfn-web-gamestream\", \"2.0\");\n    }\n    public static getInstance(): TracingManager {\n        if (!TracingManager.instance) {\n            TracingManager.instance = new TracingManager();\n        }\n        return TracingManager.instance;\n    }\n\n    public createSpan<T>(operationName: string, fn: () => Promise<T> | T): Promise<T> {\n        const span = this.tracer.startSpan(operationName);\n        const wrapper = async () => {\n            try {\n                const result = fn();\n                if (result instanceof Promise) {\n                    return await result;\n                }\n                return result;\n            } finally {\n                span.end();\n            }\n        };\n        return context.with(trace.setSpan(context.active(), span), wrapper);\n    }\n}\n","/**\n * This class is a wrapper for a promise which waits for a timeout or abort on the signal.\n * The promise stored in the class can be obtained through getPromise function.\n * The constructor accepts the waitTime (in milliseconds) and an optional AbortSignal.\n *    When the signal is aborted, the promise is rejected.\n *    When the waitTime is met, the promise will be resolved.\n * The cancel function provides option to cancel the timeout and prevent rejection upon abort.\n * After cancel, once the reference to this object is removed then GarbageCollector will free the promise.\n *\n * Note: In signal abort cases the promise rejection doesnt return the signal reason.\n *  Reasons:\n *    1. Eventhough AbortSignal.reason is introduced in node 17.2.0, the node version 18.12.1 still doesnt support plumbing of reason from AbortController to AbortSignal.\n *    2. AbortSignal.reason was introduced in chrome/edge -98, safari 15.4.\n *    3. Relying on the reason of AbortSignal for business logic will be erroneous.\n *    4. The previous implemenation of setTimeoutPromise was providing a AbortError message created by our module, unit tests were passing because of this reason, this creates more confusion.\n */\nexport class CancellableWait {\n    private promise: Promise<void>;\n    private promiseResolve: any;\n    private promiseReject: any;\n    private onAbortFunc: any;\n    private timerId: number = 0;\n    private abortSignal: AbortSignal | undefined;\n    private timedOut: boolean = false;\n    private aborted: boolean = false;\n\n    constructor(waitTimeInMS: number, signal?: AbortSignal) {\n        this.promise = new Promise((resolve, reject) => {\n            this.promiseResolve = resolve;\n            this.promiseReject = reject;\n        });\n\n        if (signal?.aborted) {\n            // signal is already aborted, just reject the promise, nothing else required.\n            // Note: If users attach the handlers to the promise after getting promise from getPromise() then catch/reject handler will get executed.\n            this.aborted = true;\n            this.promiseReject();\n        } else {\n            this.abortSignal = signal;\n            this.onAbortFunc = this.onAbort.bind(this);\n            this.abortSignal?.addEventListener(\"abort\", this.onAbortFunc);\n            this.timerId = window.setTimeout(this.onTimeout.bind(this), waitTimeInMS);\n        }\n    }\n\n    /** Cancels the promise, the promise will never resolve or reject after this call.\n     *  If the promise needs to be rejected then perform abort on the signal passed in constructor instead of calling this function.\n     *  This is a no op function if promise was already resolved/rejected. */\n    public cancel(): void {\n        this.abortSignal?.removeEventListener(\"abort\", this.onAbortFunc);\n        if (this.timerId) {\n            window.clearTimeout(this.timerId);\n            this.timerId = 0;\n        }\n        this.abortSignal = undefined;\n    }\n\n    /** Returns the actual promise which can be used in promise race or for adding .then/.catch handlers. */\n    public getPromise(): Promise<void> {\n        return this.promise;\n    }\n\n    /** Returns true if wait timedout and promise was resolved. */\n    public isTimedOut(): boolean {\n        return this.timedOut;\n    }\n\n    /** Returns true if signal was aborted and promise was rejected.\n     *  Note: If cancel was invoked before signal abort, then this value will be false.\n     */\n    public isAborted(): boolean {\n        return this.aborted;\n    }\n\n    private onAbort(): void {\n        this.aborted = true;\n        this.promiseReject();\n        this.cancel();\n    }\n\n    private onTimeout(): void {\n        this.timedOut = true;\n        this.promiseResolve();\n        this.timerId = 0;\n        this.cancel();\n    }\n}\n","export type SDPBlob = string;\nexport type SDPLine = string;\nexport type SDPSection = string;\nexport interface ISDPIceParameters {\n    iceLite?: boolean;\n    usernameFragment: string;\n    password: string;\n}\n\nexport interface ISDPFingerprint {\n    algorithm: string;\n    value: string;\n}\n\nexport interface ISDPDtlsParameters {\n    role: string;\n    fingerprints: ISDPFingerprint[];\n}\n\nexport class SDPUtils {\n    // Splits SDP into lines, dealing with both CRLF and LF.\n    static SplitLines(blob: SDPBlob): SDPLine[] {\n        return blob\n            .trim()\n            .split(\"\\n\")\n            .map(line => line.trim());\n    }\n\n    // Splits SDP into sessionpart and mediasections. Ensures CRLF.\n    static SplitSections(blob: SDPBlob): SDPSection[] {\n        const parts = blob.split(\"\\nm=\");\n        return parts.map((part, index) => (index > 0 ? \"m=\" + part : part).trim() + \"\\r\\n\");\n    }\n\n    // Returns the session description.\n    static GetDescription(blob: SDPBlob): SDPSection {\n        const sections = SDPUtils.SplitSections(blob);\n        return sections && sections[0];\n    }\n\n    // Returns the individual media sections.\n    static GetMediaSections(blob: SDPBlob): SDPSection[] {\n        const sections = SDPUtils.SplitSections(blob);\n        sections.shift();\n        return sections;\n    }\n\n    // Returns lines that start with a certain prefix.\n    static MatchPrefix(blob: SDPBlob, prefix: string): SDPLine[] {\n        return SDPUtils.SplitLines(blob).filter(line => line.indexOf(prefix) === 0);\n    }\n\n    // Parses a fingerprint line for DTLS-SRTP.\n    static ParseFingerprint(line: SDPLine): ISDPFingerprint {\n        const parts = line.substr(14).split(\" \");\n        return {\n            algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n            value: parts[1].toUpperCase() // the definition is upper-case in RFC 4572.\n        };\n    }\n    // Extracts DTLS parameters from SDP media section or sessionpart.\n    // FIXME: for consistency with other functions this should only\n    //   get the fingerprint line as input. See also getIceParameters.\n    static GetDtlsParameters(\n        mediaSection: SDPSection,\n        sessionpart: SDPSection\n    ): ISDPDtlsParameters {\n        const lines = SDPUtils.MatchPrefix(mediaSection + sessionpart, \"a=fingerprint:\");\n        // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n        return {\n            role: \"auto\",\n            fingerprints: lines.map(SDPUtils.ParseFingerprint)\n        };\n    }\n    // Parses ICE information from SDP media section or sessionpart.\n    // FIXME: for consistency with other functions this should only\n    //   get the ice-ufrag and ice-pwd lines as input.\n    static GetIceParameters(mediaSection: SDPSection, sessionpart: SDPSection): ISDPIceParameters {\n        const ufrag = SDPUtils.MatchPrefix(mediaSection + sessionpart, \"a=ice-ufrag:\")[0];\n        const pwd = SDPUtils.MatchPrefix(mediaSection + sessionpart, \"a=ice-pwd:\")[0];\n        /*\n        if (!(ufrag && pwd)) {\n            return null;\n        }\n        */\n        return {\n            usernameFragment: ufrag.substr(12),\n            password: pwd.substr(10)\n        };\n    }\n}\n","import { AuthType, AuthInfo, ErrorDetails } from \"./interfaces\";\nimport { Log } from \"./utillogger\";\nimport { PlatformDetails } from \"./platform\";\nimport { PlatformName, BrowserName, DeviceModel, DeviceType } from \"./enumnames\";\nimport { TracingManager, TracingComponent } from \"./tracingmanager\";\nimport { CancellableWait } from \"./cancellablewait\";\nimport { trace, context, propagation } from \"@opentelemetry/api\";\nexport * from \"./sdp\";\n\nconst LOGTAG = \"utils\";\n\nexport function IsXbox(platform: PlatformDetails): boolean {\n    return platform.os === PlatformName.XBOX;\n}\n\nexport function IsEdge(platform: PlatformDetails): boolean {\n    return platform.browser === BrowserName.EDGE;\n}\n\nexport function IsXboxEdge(platform: PlatformDetails): boolean {\n    return IsXbox(platform) && IsEdge(platform);\n}\n\nexport function IsiOS(platform: PlatformDetails): boolean {\n    return platform.os === PlatformName.IOS;\n}\n\nexport function IsiPadOS(platform: PlatformDetails): boolean {\n    return platform.os === PlatformName.IPADOS;\n}\n\nexport function IsiDevice(platform: PlatformDetails): boolean {\n    return IsiOS(platform) || IsiPadOS(platform);\n}\n\n/**\n * Returns true if the input string is an ipv4 address format. X.X.X.X -> X:<0 - 255>\n **/\nexport function IsValidIPv4(ipaddress: string): boolean {\n    if (\n        /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\n            ipaddress\n        )\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Returns an randomly generated number in string format for the requested length.\n **/\nexport function GetRandNumericString(length: number): string {\n    let multiplier = 1;\n    for (let x = 1; x < length; x++) {\n        multiplier = multiplier * 10;\n    }\n    let randnum = \"\" + Math.floor(Math.random() * multiplier);\n    randnum = randnum.padEnd(length, \"0\");\n    return randnum;\n}\n\n/**\n * Convert a signed integer value to an unsigned integer value.\n *\n * Returns signed 2's complement for negative numbers and results in no-op for positive numbers.\n *\n * Unified error codes are represented as 32 bit unsigned integers.\n *  Because Javascript's number type is not a 32 bit integer, these codes can be sent as a negative value.\n * For example, the code 0xC1C8B0B0 is sent as -1043812176, or -0x3E374F50 in hex.  This code is converted\n * to 0xFFFFFFFFC1C8B0B0, which after extracting the rightmost 32 bits results in the original code, 0xC1C8B0B0.\n *\n * https://confluence.nvidia.com/display/GNCE/New+Schema+Format\n **/\nexport function convertToUnsignedInt(code: number): number {\n    return code >>> 0;\n}\n\n/**\n * Returns an hex format of an integer code. The hex string starts with 0x and has 8 upper case hex format.\n **/\nexport function GetHexString(code: number): string {\n    code = convertToUnsignedInt(code);\n    let hex = (\"00000000\" + code.toString(16).toUpperCase()).slice(-8);\n    return \"0x\" + hex;\n}\n\n/**  Returns true if origin service bits are set.\n **/\nexport function isUnifiedErrorCode(code: number): boolean {\n    code = convertToUnsignedInt(code);\n    const originService = code & 0x00ff0000;\n    return originService !== 0;\n}\n\n/**\n * Returns true if the browser is Chromium-based, else false.\n * Intentionally true for Edge Chromium, modern Opera, etc.\n */\nexport function IsChromium(): boolean {\n    var isChromium = (window as any).chrome;\n\n    return !!isChromium;\n}\n\n/**\n * Returns true if the browser is Safari, else false.\n **/\nexport function IsSafari(platformDetails: PlatformDetails): boolean {\n    return platformDetails.browser === BrowserName.SAFARI;\n}\n\n/**\n * Returns true if this is an iPhone or an iPod Touch.\n */\nexport function IsiPhone(platformDetails?: PlatformDetails): boolean {\n    if (platformDetails) {\n        return platformDetails.os === PlatformName.IOS;\n    }\n    return /iPhone|iPod/.test(navigator.userAgent);\n}\n\n/**\n * Returns true if this is an iPad.\n */\nexport function IsiPad(platformDetails?: PlatformDetails): boolean {\n    if (platformDetails) {\n        return platformDetails.os === PlatformName.IPADOS;\n    }\n    return /^(?!.*chrome).*safari/i.test(navigator.userAgent) && !IsiPhone() && IsTouchDevice();\n}\n\n/**\n * Returns true if this is a WebOS device.\n */\nexport function IsWebOS(platformDetails: PlatformDetails): boolean {\n    return platformDetails.os === PlatformName.WEBOS;\n}\n\nexport function IsChromeOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.CHROME_OS;\n}\n\nexport function IsWindowsOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.WINDOWS;\n}\n\nexport function IsMacOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.MAC;\n}\n\nexport function IsTizenOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.TIZEN;\n}\n\nexport function IsLinuxOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.LINUX;\n}\n\nexport function IsAndroidOS(platformDetails: PlatformDetails) {\n    return platformDetails.os === PlatformName.ANDROID;\n}\n\nexport function IsSteamDeck(platformDetails: PlatformDetails) {\n    return platformDetails.deviceModel === DeviceModel.STEAMDECK;\n}\n\nexport function IsFirefox(platformDetails: PlatformDetails) {\n    return platformDetails.browser === BrowserName.FIREFOX;\n}\n\n/**\n * Error codes return by utils lib\n */\nexport const enum UtilsErrorCode {\n    NoNetwork = 0xc0f21001, // An http operation could not performed because system is not connected to internet.\n    NetworkError = 0xc0f21002, // Network error while performing http request.\n    AuthTokenNotUpdated = 0xc0f22001, //client was not able to provide the auth token.\n    ResponseParseFailure = 0xc0f22003, // JSON parse error\n    UserAborted = 0x00f22001, // Abort called during HTTP operation\n    ExceptionHappened = 0xc0f21004 // Generic error due to unknown exception\n}\n\n/**\n * type to be used for header in performHttpRequestxxx options arg.\n */\nexport interface HttpRequestHeaders {\n    [key: string]: string;\n}\n\nexport interface RequestHttpOptions {\n    method?: string;\n    headers: HttpRequestHeaders;\n    body?: string;\n    retryCount?: number;\n    timeout?: number;\n    backOffDelay?: number;\n    keepalive?: boolean; // only used in the context of fetchAPI\n}\n\nexport interface Response {\n    status: number;\n    data: string;\n    retries: number;\n}\n\nexport const DefaultHttpRequestOptions: RequestHttpOptions = {\n    method: \"GET\",\n    headers: {},\n    body: \"\",\n    retryCount: 0,\n    timeout: 0,\n    keepalive: false\n};\n\nfunction addHttpRequestAttributes(method: string, urlString: string, headers: HttpRequestHeaders) {\n    const span = trace.getActiveSpan();\n    if (!span) {\n        return;\n    }\n\n    let httpRequestAttributes: Map<string, string> = new Map([\n        [\"component\", TracingComponent.name],\n        [\"component.version\", TracingComponent.version],\n        [\"http.method\", method],\n        [\"http.url\", urlString],\n        [\"type\", \"\"],\n        [\"http.hostname\", \"\"],\n        [\"http.path\", \"\"]\n    ]);\n\n    try {\n        const url: URL = new URL(urlString);\n        httpRequestAttributes.set(\"type\", url.protocol);\n        httpRequestAttributes.set(\"http.hostname\", url.hostname);\n        httpRequestAttributes.set(\"http.path\", url.pathname);\n    } catch (err) {\n        Log.e(\"{d988e7f}\", \"{997fb3a}\");\n    }\n\n    for (const [key, value] of httpRequestAttributes) {\n        span.setAttribute(key, value);\n    }\n    span.setAttributes(headers);\n}\n\nfunction addResultSuccessAttributes(status: number) {\n    const span = trace.getActiveSpan();\n    if (span) {\n        span.setAttribute(\"error\", \"false\");\n        span.setAttribute(\"http.status_code\", status.toString());\n    }\n}\n\nfunction addErrorAttributes() {\n    const span = trace.getActiveSpan();\n    if (span) {\n        span.setAttribute(\"error\", \"true\");\n    }\n}\n\n/**\n   * Performs an asynchronous http(s) request. Returns a promise which resolves when the http request completed (irrespective of http status code).\n   *         Promise will be rejected in case of network errors.\n   *         resolve( { status: <http status code> , data: <http response> } )\n   *         reject ( { code: <integer error code> } )\n   * Call the abort method on the returned Promise to abort any pending network requests and reject the Promise. The\n   * rejected object will be of the form: { code: UtilsErrorCode.UserAborted }\n   * @param url- http url\n   * @param options - optional http method, headers and other settings:\n          {method: string;       http method - GET(default), POST, PUT, DELETE\n          headers: {};          Key value pairs of headers.\n          body: string;         Request body for POST and PUT request.\n          retryCount: number;   Number of retires in error cases.\n          timeout: number;      timeout duration.\n          keepalive: boolean;   Keeps the connection alive even if the tab is closed.}\n  **/\nexport function performHttpRequest(\n    url: string,\n    options: RequestHttpOptions = DefaultHttpRequestOptions,\n    authInfo?: AuthInfo,\n    abortController?: AbortController\n): Promise<Response> {\n    const method = options.method ?? \"GET\";\n    const request = () => {\n        addHttpRequestAttributes(method, url, options.headers);\n        return performHttpRequestImpl(url, options, authInfo, abortController);\n    };\n    return TracingManager.getInstance().createSpan<Response>(method, request);\n}\n\nfunction performHttpRequestImpl(\n    url: string,\n    options: RequestHttpOptions = DefaultHttpRequestOptions,\n    authInfo?: AuthInfo,\n    abortController?: AbortController\n): Promise<Response> {\n    let retryCount = options.retryCount === undefined ? 1 : options.retryCount + 1;\n    const max_retry_count = retryCount;\n    const backOffIncrement = options.backOffDelay ?? 500;\n    let backOffTime = backOffIncrement;\n\n    const method = options.method ?? \"GET\";\n    let requestHeaders = new Headers();\n    const controller = abortController ?? new AbortController();\n    const addReqHeaders = (authInfo?: AuthInfo) => {\n        if (authInfo) {\n            switch (authInfo.type) {\n                case AuthType.JWT_GFN:\n                    if (authInfo.token) {\n                        requestHeaders.set(\"authorization\", \"GFNJWT \" + authInfo.token);\n                    }\n                    break;\n                case AuthType.JWT_PARTNER:\n                    if (authInfo.token) {\n                        requestHeaders.set(\"authorization\", \"GFNPartnerJWT auth=\" + authInfo.token);\n                    }\n                    break;\n            }\n        }\n        if (!(options.headers === undefined)) {\n            Object.keys(options.headers).forEach(key => {\n                requestHeaders.set(key, options.headers[key]);\n            });\n        }\n        const carrier: { [key: string]: string } = {};\n        propagation.inject(context.active(), carrier);\n        for (const [key, value] of Object.entries(carrier)) {\n            requestHeaders.set(key, value);\n        }\n    };\n    addReqHeaders(authInfo);\n\n    const promise = new Promise<Response>((resolve_, reject_) => {\n        const resolve = (response: Response) => {\n            addResultSuccessAttributes(response.status);\n            resolve_(response);\n        };\n        const reject = (x?: any) => {\n            addErrorAttributes();\n            reject_(x);\n        };\n        const performRequest = () => {\n            const retryRequest = (errorCode: number): boolean => {\n                if (retryCount > 1) {\n                    retryCount--;\n                    Log.d(\"{d988e7f}\", \"{97555ed}\", errorCode, retryCount);\n                    const wait = new CancellableWait(backOffTime, controller.signal);\n                    wait.getPromise()\n                        .then(performRequest)\n                        .catch((err: any) => {\n                            if (wait.isAborted()) {\n                                reject({\n                                    code: UtilsErrorCode.UserAborted,\n                                    retries: max_retry_count - retryCount\n                                });\n                            } else {\n                                // Should never occur, since we handle all the errors within performRequest.\n                                Log.w(\"{d988e7f}\", \"{d3ca39d}\", JSON.stringify(err));\n                                reject({\n                                    code: UtilsErrorCode.ExceptionHappened,\n                                    retries: max_retry_count - retryCount\n                                });\n                            }\n                        });\n                    backOffTime += backOffIncrement;\n                    return true;\n                }\n                return false;\n            };\n            if (!navigator.onLine) {\n                reject({\n                    code: UtilsErrorCode.NoNetwork,\n                    description: \"No network\",\n                    retries: max_retry_count - retryCount\n                });\n            } else {\n                let reqInit: RequestInit = {\n                    method: method,\n                    headers: requestHeaders,\n                    mode: \"cors\",\n                    keepalive: options.keepalive,\n                    signal: controller.signal\n                };\n                if (method !== \"GET\" && method !== \"HEAD\") {\n                    reqInit.body = options.body;\n                }\n                let fetchResponseStatus: number;\n                // Retry for the following errors:\n                // 0: Generic FetchError. See catch block for details of Bug: 3923439.\n                // 19: Network error\n                // 23: Timeout error\n                // 503: Internal server error.\n                const FETCH_GENERIC_ERR = 0;\n                const retryCodes = [\n                    FETCH_GENERIC_ERR,\n                    DOMException.NETWORK_ERR,\n                    DOMException.TIMEOUT_ERR,\n                    503\n                ];\n\n                const fetchTimeoutWait = options.timeout\n                    ? new CancellableWait(options.timeout)\n                    : undefined;\n                const promises = [];\n                promises.push(fetch(url, reqInit));\n                if (fetchTimeoutWait) {\n                    promises.push(fetchTimeoutWait.getPromise());\n                }\n                Promise.race(promises)\n                    .then(response => {\n                        if (fetchTimeoutWait?.isTimedOut()) {\n                            Log.w(\"{d988e7f}\", \"{5a69b89}\", url);\n                            throw {\n                                code: DOMException.TIMEOUT_ERR,\n                                message: \"Timeout while performing HTTP request\"\n                            };\n                        } else if (response instanceof globalThis.Response) {\n                            fetchResponseStatus = response.status;\n                            return response.text();\n                        }\n                    })\n                    .then(data => {\n                        // If server returned 503 with no valid reponse, then retry\n                        if (!data && retryCodes.includes(fetchResponseStatus)) {\n                            if (retryCount > 1) {\n                                // We have a retriable error. Throw here and retry in catch\n                                throw {\n                                    code: fetchResponseStatus,\n                                    message: \"Internal server error.\"\n                                };\n                            } else {\n                                // We have exhautsed all re-tries. Proceed to resolve as the caller will parse the\n                                // status codes and convert them to UEC (GsErrorCode/RErrorCode).\n                                Log.w(\"{d988e7f}\", \"{d639e52}\", fetchResponseStatus, max_retry_count);\n                            }\n                        }\n                        resolve({\n                            status: fetchResponseStatus,\n                            data: data ?? \"\",\n                            retries: max_retry_count - retryCount\n                        });\n                    })\n                    .catch(err => {\n                        // Fetch can throw the following DomExceptions:\n                        // https://www.w3.org/TR/2012/WD-dom-20120105/#domexception\n                        //\n                        // However, Fetch can also throw a generic failure: \"TypeError: Failed to fetch\".\n                        // or a non-standard AbortError that extends Error.\n                        // https://github.com/nodejs/node/issues/36084#issuecomment-729894622\n                        //\n                        // Consider all use cases and get an error code for the failure\n                        const getFetchErrorCode = (rejectReason: any): number => {\n                            let errorCode = FETCH_GENERIC_ERR;\n                            if (rejectReason?.code) {\n                                errorCode = rejectReason?.code;\n                            } else if (rejectReason?.name) {\n                                if (rejectReason.name === \"AbortError\") {\n                                    errorCode = DOMException.ABORT_ERR;\n                                } else if (rejectReason.name === \"NetworkError\") {\n                                    errorCode = DOMException.NETWORK_ERR;\n                                } else if (rejectReason.name === \"TimeoutError\") {\n                                    errorCode = DOMException.TIMEOUT_ERR;\n                                }\n                            }\n                            return errorCode;\n                        };\n                        // Map the DOMException to UtilsErrorCode\n                        const getUtilsErrorCode = (fetchError: number): UtilsErrorCode => {\n                            if (\n                                [\n                                    FETCH_GENERIC_ERR,\n                                    DOMException.NETWORK_ERR,\n                                    DOMException.TIMEOUT_ERR\n                                ].includes(fetchError)\n                            ) {\n                                Log.d(\"{d988e7f}\", \"{0a9fabe}\");\n                                return UtilsErrorCode.NetworkError;\n                            } else if (fetchError == DOMException.ABORT_ERR) {\n                                Log.d(\"{d988e7f}\", \"{235387a}\");\n                                return UtilsErrorCode.UserAborted;\n                            }\n                            Log.w(\"{d988e7f}\", \"{f116c88}\", fetchError);\n                            // Unhandled error. This will end up getting mapped to DOMExceptionInGridServer\n                            // If we start seeing a spike in this error code, we will have to look at the logs\n                            // and see what other failures are occuring and then add specific handling for them.\n                            return UtilsErrorCode.ExceptionHappened;\n                        };\n                        Log.d(\"{d988e7f}\", \"{ec768a1}\", JSON.stringify(err), err);\n\n                        // Either a fetch error or when we explicity threw on an internal server error\n                        const errCode = getFetchErrorCode(err);\n                        if (errCode == FETCH_GENERIC_ERR && options.keepalive) {\n                            // Bug: 3923439: https://bugs.chromium.org/p/chromium/issues/detail?id=835821\n                            // Preflight request for requests with keepalive specified is not supported in Chrome version 80 and below.\n                            // Note that, a failure here does not mean we hit this issue, but there is no other way to determine the\n                            // reason for the failure.\n\n                            // WAR: If Fetch fails when keepalive is set to true, we set it to false before retyring.\n                            options.keepalive = false;\n                        }\n                        if (retryCodes.includes(errCode)) {\n                            // if the retry is scheduled, returns true\n                            if (!retryRequest(errCode)) {\n                                // Failing after max_retry_count. If we are here, it could only be for network/fetch errors\n                                // For error codes received from server, we should not get into catch, as we check the retry count before throwing\n                                Log.w(\"{d988e7f}\", \"{dff1a05}\", max_retry_count, errCode);\n                                reject({\n                                    code: getUtilsErrorCode(errCode),\n                                    retries: max_retry_count - retryCount\n                                });\n                            }\n                        } else {\n                            reject({\n                                code: getUtilsErrorCode(errCode),\n                                retries: max_retry_count - retryCount\n                            });\n                        }\n                    })\n                    .finally(() => {\n                        fetchTimeoutWait?.cancel();\n                    });\n            }\n        };\n        performRequest();\n    });\n    return promise;\n}\n\nexport const CLIENT_VERSION = \"26.0\";\nexport const CLIENT_IDENTIFICATION = \"GFN-PC\";\n\nfunction mapPlatformToUserAgent(platform: string) {\n    let str = platform;\n    switch (platform) {\n        case PlatformName.MAC:\n            str = \"MacOSX\";\n            break;\n        case PlatformName.IPADOS:\n            str = PlatformName.IOS;\n            break;\n        default:\n            str = platform;\n    }\n    return str;\n}\n\nexport function IsTouchDevice(): boolean {\n    // If the primary mode of pointer input is 'coarse' we are very likely on a mostly-touch or touch-only device.\n    // TODO Consider TV systems that use an on-screen pointer, which could easily be 'coarse' as well.\n    return window.matchMedia?.(\"(pointer:coarse)\")?.matches;\n}\n\nexport function IsTouchCapable(): boolean {\n    // If any pointer input is 'coarse', then touch is a possible but not a primary pointer input.\n    // Do not use this to enable the TouchFriendly app launch mode.\n    return !!(window as any)[\"TouchEvent\"] && window.matchMedia?.(\"(any-pointer:coarse)\")?.matches;\n}\n\nexport function IsTV(platformDetails: PlatformDetails): boolean {\n    // TODO Exclude Tizen mobile devices from this check\n    return platformDetails.os === PlatformName.TIZEN || platformDetails.os === PlatformName.WEBOS;\n}\n\n/**\n * @param platformDetails - interface: PlatformDetails\n * @returns true if this is a mobile device, false if it is not\n **/\nexport function isMobile(platformDetails: PlatformDetails): boolean {\n    return (\n        platformDetails.deviceType === DeviceType.PHONE ||\n        platformDetails.deviceType === DeviceType.TABLET\n    );\n}\n\nexport function getNewGuid(): string {\n    let array = new Uint8Array(36);\n    window.crypto.getRandomValues(array);\n    let guid = \"\";\n\n    for (let i = 0; i < 36; i++) {\n        let randomNumber = array[i] % 16;\n        if (i == 8 || i == 13 || i == 18 || i == 23) {\n            guid += \"-\";\n        } else if (i == 14) {\n            guid += \"4\";\n        } else if (i == 19) {\n            randomNumber = (randomNumber & 0x3) | 0x8;\n            guid += randomNumber.toString(16);\n        } else {\n            guid += randomNumber.toString(16);\n        }\n    }\n    Log.i(\"{d988e7f}\", \"{534eaf4}\", guid);\n    return guid;\n}\n\n// Check each part individually to see which is greater\n// If they are equal, move on to the next part until we've checked all\nfunction VersionListIsAtLeast(actual: number[], desired: number[]): boolean {\n    for (let i = 0; i < desired.length && i < actual.length; ++i) {\n        const actualPart = actual[i];\n        const desiredPart = desired[i];\n        if (actualPart > desiredPart) {\n            return true;\n        } else if (actualPart < desiredPart) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function IsChromeBrowser(platformDetails: PlatformDetails) {\n    return platformDetails.browser == BrowserName.CHROME;\n}\n\nexport function IsChromeVersionAtLeast(\n    platformDetails: PlatformDetails,\n    major: number,\n    minor?: number,\n    build?: number,\n    patch?: number\n): boolean {\n    if (platformDetails.browser != BrowserName.CHROME) {\n        return false;\n    }\n    const desired = [major, minor ?? 0, build ?? 0, patch ?? 0];\n    try {\n        // The chrome version is split into 4 parts: w.x.y.z\n        const actual = platformDetails.browserFullVer.split(\".\").map(x => Number.parseInt(x));\n        return VersionListIsAtLeast(actual, desired);\n    } catch (_ex) {\n        Log.w(\"{d988e7f}\", \"{bcd8f94}\");\n    }\n    // Return true even if we fail to parse the version. This probably means a newer version of Chrome that\n    // changed the version format.\n    return true;\n}\n\n// Check the Safari application version\nexport function IsSafariVersionAtLeast(\n    platformDetails: PlatformDetails,\n    major: number,\n    minor?: number,\n    patch?: number\n): boolean {\n    if (platformDetails.browser != BrowserName.SAFARI) {\n        return false;\n    }\n\n    const desired = [major, minor ?? 0, patch ?? 0];\n    try {\n        // The Safari version is split into 3 parts: major.minor.patch\n        const actual = platformDetails.browserFullVer.split(\".\").map(x => Number.parseInt(x));\n        return VersionListIsAtLeast(actual, desired);\n    } catch (_ex) {\n        Log.w(\"{d988e7f}\", \"{07fd1dd}\");\n    }\n    // Return true even if we fail to parse the version. This probably means a newer version of Safari that\n    // changed the version format.\n    return true;\n}\n\n/**\n * @param platformDetails - interface: PlatformDetails\n * @param exact - If true, match the exact OS version.  Otherwise, check if OS version is at least the version provided\n * @param major - OS major version\n * @param minor - OS minor version [optional]\n **/\nfunction IsiOSVersionHelper(\n    platformDetails: PlatformDetails,\n    exact: boolean,\n    major: number,\n    minor?: number\n): boolean {\n    if (!IsiDevice(platformDetails)) {\n        return false;\n    }\n\n    const desired = [major, minor ?? 0];\n    try {\n        const numericalVersion = platformDetails.osVer.replace(/[^0-9.]/, \"\");\n        const actual = numericalVersion.split(\".\").map(x => Number.parseInt(x));\n        if (actual.length === 1) {\n            actual.push(0);\n        }\n        if (exact) {\n            return actual.every((val, index) => val === desired[index]);\n        } else {\n            return VersionListIsAtLeast(actual, desired);\n        }\n    } catch (_ex) {\n        Log.w(\"{d988e7f}\", \"{cf4149f}\");\n    }\n    // Return true even if we fail to parse the version, unless matching exact version. This probably means a newer version of Safari that\n    // changed the version format.\n    return exact ? false : true;\n}\n\n/**\n * @param platformDetails - interface: PlatformDetails\n * @param major - OS major version\n * @param minor - OS minor version [optional]\n * @returns true if OS version matches the major and minor version provided, false otherwise\n **/\nexport function IsiOSVersion(\n    platformDetails: PlatformDetails,\n    major: number,\n    minor?: number\n): boolean {\n    return IsiOSVersionHelper(platformDetails, true, major, minor);\n}\n\n/**\n * @param platformDetails - interface: PlatformDetails\n * @param major - OS major version\n * @param minor - OS minor version [optional]\n * @returns true if OS version is at least the major and minor version provided, false otherwise\n **/\nexport function IsiOSVersionAtLeast(\n    platformDetails: PlatformDetails,\n    major: number,\n    minor?: number\n): boolean {\n    return IsiOSVersionHelper(platformDetails, false, major, minor);\n}\n\n// TODO: Rework the interfaces and use of fetch/XMLHttpRequest to use standard types\n//       Raname the Response type used by performRequest() to be more specific\n//       Use the standard Response type for customFetch(), and delete the two interfaces below\n\n// interface Body {\n//     readonly body: ReadableStream<Uint8Array> | null;\n//     readonly bodyUsed: boolean;\n//     arrayBuffer(): Promise<ArrayBuffer>;\n//     blob(): Promise<Blob>;\n//     formData(): Promise<FormData>;\n//     json(): Promise<any>;\n//     text(): Promise<string>;\n// }\n\nexport interface FetchResponse {\n    //    readonly headers: Headers;\n    //    readonly ok: boolean;\n    //    readonly redirected: boolean;\n    readonly status: number;\n    //    readonly statusText: string;\n    //    readonly trailer: Promise<Headers>;\n    //    readonly type: ResponseType;\n    //    readonly url: string;\n    //    clone(): FetchResponse;\n}\n\nexport function customFetch(url: string, timeoutMs = 500, data = {}): Promise<FetchResponse> {\n    const controller = new AbortController();\n    window.setTimeout(() => {\n        controller.abort();\n    }, timeoutMs);\n    return fetch(url, { ...data, signal: controller.signal })\n        .then(response => {\n            return response;\n        })\n        .catch(err => {\n            throw err;\n        });\n}\n\nexport function getRErrorDetails(\n    code: number,\n    description?: string,\n    error?: Error | DOMException | null\n): ErrorDetails {\n    return {\n        code,\n        description,\n        error: error !== null ? error : undefined\n    };\n}\n","import { Log } from \"./logger\";\n\nexport { Log };\n","import {\r\n    GridServer,\r\n    PassThruServer,\r\n    SESSIONMODIFY_ACTION,\r\n    SessionParams,\r\n    StreamParam,\r\n    AppLaunchMode,\r\n    SessionState,\r\n    SessionProgressUpdateEvent,\r\n    SessionProgressState,\r\n    GsInitParams,\r\n    GS_EVENTS,\r\n    ActiveSessionResultEvent,\r\n    ClientType,\r\n    GridSession,\r\n    ClientStreamer,\r\n    AuthInfo,\r\n    IsValidIPv4,\r\n    GetHexString,\r\n    CLIENT_IDENTIFICATION,\r\n    CLIENT_VERSION,\r\n    customFetch,\r\n    PlatformDetails,\r\n    AddPlatformTelemetry,\r\n    ErrorDetails,\r\n    IsMacOS,\r\n    IsTouchDevice,\r\n    IsTV,\r\n    IsXbox,\r\n    UTIL_EVENTS,\r\n    getNewGuid,\r\n    LogQueueingEventEmitter,\r\n    IsWebOS,\r\n    IsiDevice,\r\n    MonitorSettings,\r\n    TelemetryEventPayload,\r\n    IsiOSVersion,\r\n    IsiOSVersionAtLeast,\r\n    NetworkTypeEnum,\r\n    PackageVersion,\r\n    Log,\r\n    IEventEmitter,\r\n    SessionUpdateEvent\r\n} from \"./dependencies\";\r\nimport {\r\n    EventDataElements,\r\n    StreamExitEventData,\r\n    Connectivity\r\n} from \"./telemetry/telemetryinterfaces\";\r\nimport {\r\n    InitParams,\r\n    StartSessionResultEvent,\r\n    StopSessionResultEvent,\r\n    GetSessionResult,\r\n    InputConfigFlags,\r\n    defaultInputConfigFlags,\r\n    EVENTS,\r\n    Zoneless,\r\n    CustomMessage,\r\n    RNotificationCode,\r\n    InputType,\r\n    StreamingTerminatedEvent\r\n} from \"./interfaces\";\r\nimport { StreamClient } from \"./streamclient\";\r\nimport { TelemetryHandler } from \"./telemetry/telemetryhandler\";\r\nimport { MicCapturer } from \"./miccapturer\";\r\nimport {\r\n    ConvertErrorOnSleep,\r\n    ConvertErrorOnConnectivityTest,\r\n    ShouldRunConnectivityTest,\r\n    CanResume\r\n} from \"./util/utils\";\r\nimport { RagnarokSettings } from \"./util/settings\";\r\nimport { SleepDetector } from \"./util/sleepdetector\";\r\nimport { VirtualGamepadHandler } from \"./input/virtualgamepad\";\r\nimport { GamepadTester } from \"./debug/gamepadtester\";\r\nimport { GamepadHandler } from \"./input/gamepadhandler\";\r\nimport { AudioRecorder } from \"./debug/audiorecorder\";\r\nimport { RErrorCode } from \"./rerrorcode\";\r\nimport { TelemetryEventProcessor } from \"./telemetry/telemetryeventprocessor\";\r\nimport { IStreamCallbacks, LowAudioVolumeType } from \"./rinterfaces\";\r\nimport {\r\n    CapabilitiesHelper,\r\n    MediaCapabilitiesDecodingInfo,\r\n    ConvertCapabilityToNumber,\r\n    IsMediaCapabilitiesSupported\r\n} from \"./util/devicecapabilities\";\r\nimport { NetworkDetector } from \"./util/networkdetector\";\r\nimport { MockPMGridServer } from \"./util/mockpmgridserver\";\r\n\r\nconst LOGTAG = \"gridapp\";\r\n\r\nconst IOS_CONTEXT_PROP = \"ios15AudioContext\";\r\nconst IOS_STREAM_PROP = \"ios15AudioStream\";\r\n\r\nperformance.mark(\"GfnRBegin\");\r\n\r\ninterface ValidatedStreamParam {\r\n    videoElement: HTMLVideoElement;\r\n    audioElement: HTMLAudioElement;\r\n}\r\n\r\ninterface ValidatedSessionParams {\r\n    sessionParams: SessionParams;\r\n    validatedStreamParams: ValidatedStreamParam[];\r\n}\r\n\r\ndeclare interface LGEventDetails {\r\n    idle: boolean;\r\n}\r\n\r\ndeclare interface LGSystemIdleEvent extends Event {\r\n    detail: LGEventDetails;\r\n}\r\n\r\ninterface ConnectivityStatus {\r\n    errorCode: number;\r\n    connectivity: string;\r\n}\r\n\r\n/**\r\n * The interface which defines the protocol to connect to server.\r\n *\r\n * GridApp is the class which implements the protocol and provides the actual ability to connect to server.\r\n * And it could be instantiated as: const gridApp: GridApp = new GridApp(platformDetails);\r\n *\r\n * Clients can register for callbacks only for EVENTS (declared in interfaces.ts). AddListener method of GridApp provided by EventEmitter\r\n * is used to register for these events and client can do UI updates accordingly.\r\n * Client needs InitParams and sessionStartParams object with correct data before a session is initiated.\r\n * call setAuthInfo to set auth method used to communicate with server (default is Jarvis).\r\n * call startSession only after successfull initialization of grid app using initialize method\r\n * call stopSession to stop streaming.\r\n * call getActiveSessions if SESSION_START_RESULT fails with RErrorCode.SessionLimitExceeded to get list of sessions\r\n * and then client can stop those sessions using stopSession method to start a new session later on.\r\n *\r\n * Sample Usage:\r\n * const gridApp = new GridApp(platformDetails);\r\n * gridApp.initialize({\r\n *     serverAddress: \"server-address.nvidiagrid.net\",\r\n *     authTokenCallback: <function callback>,\r\n *     deviceHashId: \"1234567890\",\r\n * },\r\n * {\r\n *     cursorType: CursorType.SOFTWARE,\r\n *     allowUnconfined: false\r\n * });\r\n * gridApp.setAuthInfo({ AuthType.JARVIS, \"some token\" });\r\n *\r\n * gridApp.addListener(EVENTS.SESSION_START_RESULT, (eventData: StartSessionResultEvent) => {});\r\n * gridApp.addListener(EVENTS.SESSION_STOP_RESULT, (eventData: StopSessionResultEvent) => {});\r\n * gridApp.addListener(EVENTS.ACTIVE_SESSIONS_RESULT, (eventData: ActiveSessionResultEvent) => {});\r\n * gridApp.addListener(EVENTS.PROGRESS_UPDATE, (eventData: SessionProgressUpdateEvent) => {});\r\n * gridApp.addListener(EVENTS.STREAM_STOPPED, (eventData: StreamingTerminatedEvent) => {});\r\n * gridApp.addListener(EVENTS.STREAMING_EVENT, (eventData: StreamingEvent) => {});\r\n * gridApp.addListener(EVENTS.GET_SESSION_RESULT, (eventData: GetSessionResult) => {});\r\n *\r\n * gridApp.startSession({\r\n *     appId: 100000000,\r\n *     keyboardLayout: \"en-US\",\r\n *     shortName: \"Fortnite (Epic)\",\r\n *     streamParams: [...]\r\n * }); // Start a session\r\n * gridApp.getSession(some_session_id); // Retrieve the session by using the given session id, session detail will be emitted through the GET_SESSION_RESULT event\r\n * gridApp.stopSession(some_session_id); // Stop a session\r\n */\r\ndeclare interface IGridApp extends IEventEmitter {\r\n    /**\r\n     * Initializes the GridApp.\r\n     * Returns true if successfully initialized.\r\n     * @param initializeParams - interface: InitParams\r\n     * @param inputConfigFlags - interface: InputConfigFlags [default: { allowUnconfined: false, preventNavigation: false }]\r\n     **/\r\n    initialize(initializeParams: InitParams, inputConfigFlags: InputConfigFlags): boolean;\r\n\r\n    /**\r\n     * This API is used by client to keep ragnarok informed about all the latest params need to be passed in telemetry event.\r\n     * To get user and session id updated client should at least call it just before every call to startSession and resume.\r\n     * @param {EventDataElements} eventDataElements\r\n     * @memberof GridApp\r\n     */\r\n    updateEventDataElements(eventDataElements: EventDataElements): void;\r\n\r\n    /**\r\n     * Gets the current active sessions for the user.\r\n     * This is an asynchronous API, upon completion ACTIVE_SESSIONS_RESULT event is emitted.\r\n     **/\r\n    getActiveSessions(): void;\r\n\r\n    /**\r\n     * Starts a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * If there result doesn't contain error then client should display the video tag as a successful result indicates\r\n     * streaming has begun.\r\n     * @param sessionStartParams - check SessionParams interface for details\r\n     **/\r\n    startSession(sessionStartParams: SessionParams): void;\r\n\r\n    /**\r\n     * getSession request.\r\n     * This is an asynchronous API and the result is delivered in GET_SESSION_RESULT event.\r\n     * This API is meant for resume scenario only. Since getActiveSessions is expensive as it includes a jarvis call.\r\n     * So client needs to make getActiveSessions call once and subsequent calls can be getSession to get the state.\r\n     * @param sessionId - sessionId to be resumed.\r\n     **/\r\n    getSession(sessionId: string): void;\r\n\r\n    /**\r\n     * resume request.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * This call is recommended instead of resume() and covers all resume cases.\r\n     * * @param sessionResumeParams - check SessionParams for details\r\n     * * @param sessionId of resumable session\r\n     * Here sre steps client go through:\r\n     * 1. Client make a startSessionRequest\r\n     * 2. Session is streaming.\r\n     * 3. Client gets STREAM_STOPPED event with error group (((eventData.error.code ^ RErrorCode.StreamerErrorCategory)>>8) == 0)\r\n     *    or tab is closed or browser crashed or session launched from different device with same account and same appid.\r\n     * 4. Client calls getactivesession() and if the appid is same and error is (RErrorCode.SessionLimitExceeded || RErrorCode.SessionLimitPerDeviceReached)\r\n     * 5. Client Calls multiple getSession(sessionid) untill status becomes SessionState.READY_FOR_CONNECTION\r\n     * 6. Client calls resumeSession()\r\n     **/\r\n    resumeSession(sessionResumeParams: SessionParams, sessionId: string): void;\r\n\r\n    /**\r\n     * Stops a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_STOP_RESULT event.\r\n     * If the session to be stopped is streaming in current client then streaming is aborted and session is terminated on the server.\r\n     * If not streaming then session is terminated on the server.\r\n     * @param sessionId - session to be stopped.\r\n     * @param exitCode - reason for stopping the session\r\n     **/\r\n    stopSession(sessionId?: string, exitCode?: number): void;\r\n\r\n    /**\r\n     * Pauses a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_STOP_RESULT event.\r\n     * If the session to be stopped is streaming in current client then streaming is aborted and session is not terminated on the server.\r\n     * If not streaming then session is terminated on the server.\r\n     * @param sessionId - session to be paused.\r\n     **/\r\n    pauseSession(sessionId?: string): void;\r\n\r\n    /**\r\n     * DEPRECATED - should use resumeSession instead.\r\n     * resume request.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * This call has a limitation that it is meant for auto resume only as client wants to stick with this due to same it's making in geronimo.\r\n     * We can't resume once the tab is closed or from another device.\r\n     * Here sre steps client go through:\r\n     * 1. Client make a startSessionRequest\r\n     * 2. Session is streaming.\r\n     * 3. Client gets STREAM_STOPPED event with error group (((eventData.error.code ^ RErrorCode.StreamerErrorCategory)>>8) == 0)\r\n     * 4. Client Calls multiple getSession(sessionid) untill status becomes SessionState.READY_FOR_CONNECTION\r\n     * 5. Client calls resume()\r\n     **/\r\n    resume(): void;\r\n\r\n    /**\r\n     * Find whether mic is supported or not\r\n     * This is definitive (either site is http (https/Chrome flags bypass is required),\r\n     * or browser does not support capture)\r\n     **/\r\n    isMicSupported(): boolean;\r\n\r\n    /**\r\n     * Enable/disable mic recording\r\n     * This will enable/disable recording of microphone (mic stream is already established\r\n     * if supported when we initialize), can cause perf issues if enabled\r\n     * This is an asynchronous API, upon completion MIC_STATE event is emitted.\r\n     * This method should be called after a successful session start\r\n     **/\r\n    setMicRecordingEnabled(enabled: boolean): void;\r\n\r\n    /**\r\n     * Get current status of mic recording\r\n     * This method will emit a MicStateEvent with result of operation\r\n     **/\r\n    getMicState(): void;\r\n\r\n    /**\r\n     * Find whether mic should be enabled by default\r\n     * This recommendation can be made based on various criteria\r\n     * e.g. platform permissions, performance, limited support etc.\r\n     * This is not the same as isMicSupported and cannot be used as a replacement\r\n     **/\r\n    shouldDefaultEnableMic(): boolean;\r\n\r\n    /**\r\n     * This API will enable/disable input handlings for given input types in fullscreen and windowed mode.\r\n     * When inputs are enabled/disabled, event listeners are registerd/de-registered with certain DOM elements.\r\n     * This could be useful when showing overlay buttton under fullsceen mode.\r\n     * @param enable - enable/disable\r\n     * @param inputs - input types that need to be enabled/disabled [default: InputType.All]\r\n     **/\r\n    toggleUserInput(enable: boolean, inputs?: InputType): void;\r\n\r\n    /**\r\n     * Send custom messages to the streaming server\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param message - messages need to be sent to the server\r\n     **/\r\n    sendCustomMessage(message: CustomMessage): void;\r\n\r\n    /**\r\n     * Get the reference of VirtualGamepadHandler. Reference can be undefined if inputchannel is failed to go in open state.\r\n     * Clients should refer virtualgamepad.ts API details.\r\n     **/\r\n    getVirtualGamepadHandler(): VirtualGamepadHandler | undefined;\r\n\r\n    /**\r\n     * Set the client's authorization information.\r\n     * initialize must be called before using this API.\r\n     * Should be called before the first use of APIs that require authentication with the server:\r\n     *   - startSession\r\n     *   - getActiveSessions\r\n     *   - getSession\r\n     *   - resumeSession\r\n     *   - stopSession\r\n     *   - pauseSession\r\n     *   - resume\r\n     * If not called, Jarvis authentication will be assumed.\r\n     * In the event of authentication related errors, can be called again to update the existing authentication information.\r\n     * @param authInfo - object\r\n     *               { type: enum<auth method for server communication>\r\n     *                 token: string<token to authenticate server communication>}\r\n     **/\r\n    setAuthInfo(authInfo: AuthInfo): void;\r\n\r\n    /**\r\n     * Send plain text to server.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param text - ArrayBuffer containing text in utf-8 format\r\n     */\r\n    sendTextInput(text: ArrayBuffer): void;\r\n\r\n    /**\r\n     * Send virtual keyboard state to server.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param visible - Boolean describing the visual state of the virtual keyboard\r\n     */\r\n    setVirtualKeyboardState(visible: boolean): void;\r\n\r\n    /**\r\n     * Transform video element locally.\r\n     * @param offsetX - X coordinate offset\r\n     * @param offsetY - Y coordinate offset\r\n     * @param zoomFactor - zoom factor to determine translation limits\r\n     */\r\n    setVideoTransforms(offsetX: number, offsetY: number, zoomFactor: number): void;\r\n\r\n    /**\r\n     * Toggle the visibility of on screen stats.\r\n     * Other shortcuts to bring up the stats (key combination and gestures) can still be used to toggle the visibility of the stats.\r\n     * NOTE: do nothing if stream is not started.\r\n     **/\r\n    toggleOnScreenStats(): void;\r\n\r\n    /**\r\n     * Toggle the stutter visualization tool.\r\n     * NOTE: do nothing if stream is not started.\r\n     **/\r\n    toggleStutterIndicator(): void;\r\n\r\n    /**\r\n     * Sets the keyboard layout on the server during a session\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param layout - keyboard layout string (e.g. \"en-US\")\r\n     */\r\n    setKeyboardLayout(layout: string): void;\r\n\r\n    /**\r\n     * Download the audio recording.\r\n     * NOTE: the audio recording must exist. If not exist, no file will be downloaded.\r\n     *       To generate the audio, ctrl + alt + d is needed to trigger PCM dump under dev mode.\r\n     */\r\n    downloadAudio(): void;\r\n\r\n    /**\r\n     * Toggle Right-Stick Dynamic Mouse Mode on/off.\r\n     * Default state is off, and must be explicitly enabled.\r\n     * Note: for xbox left stick will be used for rsdmm feature with same API\r\n     * @param enable - true to enable, false to disable.\r\n     */\r\n    toggleRsdmm(enable: boolean): void;\r\n\r\n    /**\r\n     * Sends keyboard event to streamer.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param event - keyboard event\r\n     */\r\n    sendKeyEvent(event: KeyboardEvent): void;\r\n\r\n    /**\r\n     * Sets the max bitrate while streaming.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param kbps - bitrate in kbps\r\n     * @param streamIdx - stream index\r\n     */\r\n    setStreamingMaxBitrate(kbps: number, streamIdx?: number): void;\r\n\r\n    /**\r\n     * Adjust for poor network condition while streaming.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param enabled - true for enable; false for disable\r\n     * @param streamIdx - stream index\r\n     */\r\n    setDrcDfcState(enabled: boolean, streamIdx?: number): void;\r\n}\r\n\r\nexport class GridApp extends LogQueueingEventEmitter implements IGridApp, IStreamCallbacks {\r\n    private currentSession?: GridSession;\r\n    private streamClient?: StreamClient;\r\n    private gridServer?: GridServer;\r\n    private initializeParams: InitParams;\r\n    private sessionStartParams?: ValidatedSessionParams;\r\n    private startTime: number;\r\n    private unloadFunc: any;\r\n    private onlineFunc: any;\r\n    private visibilitychangeFunc: any;\r\n    private unhandledExceptionFunc: any;\r\n    private framesDecoded: number;\r\n    private telemetry: TelemetryHandler;\r\n    private isResume: boolean;\r\n    private inputConfigFlags: InputConfigFlags;\r\n    private micCapturer: MicCapturer;\r\n    private audioRecorder: AudioRecorder;\r\n    private inputEnabled: boolean = false;\r\n    private inputs?: InputType;\r\n    private micEnabled: boolean = false;\r\n    private sleepDetector: SleepDetector;\r\n    private gamepadTester: GamepadTester = new GamepadTester();\r\n    public gamepadHandler: GamepadHandler;\r\n    private sessionSetUpInProgress: boolean = false;\r\n    private deviceChangeFunc: any = undefined;\r\n    private resetAudioFunc: any = undefined;\r\n    private pageShutDownCleanupDuringSessionDone: boolean = false;\r\n    private exitErrorCodeForUnload?: number;\r\n    private exitEventCacheTimeoutId: number = 0;\r\n    private telemetryEventProcessor: TelemetryEventProcessor;\r\n    private systemIdleFunc: any;\r\n    private systemIdleId: number = 0;\r\n    private visibilityHiddenTime: number = 0;\r\n    private deviceChangeCount: number = 0;\r\n    private isSessionOngoing: boolean = false;\r\n    private sessionPauseInProgress: boolean = false;\r\n    constructor(private platformDetails: PlatformDetails) {\r\n        super(EVENTS.LOG_EVENT);\r\n        Log.addListener(UTIL_EVENTS.LOG_EVENT, this.onLogEvent.bind(this));\r\n        this.initializeParams = {\r\n            clientIdentification: CLIENT_IDENTIFICATION,\r\n            clientVersion: CLIENT_VERSION,\r\n            deviceHashId: \"\",\r\n            serverAddress: \"\"\r\n        };\r\n        this.startTime = performance.now();\r\n        this.unloadFunc = this.unload.bind(this);\r\n        this.onlineFunc = this.online.bind(this);\r\n        this.visibilitychangeFunc = this.visibilitychange.bind(this);\r\n        this.unhandledExceptionFunc = this.unhandledException.bind(this);\r\n        this.framesDecoded = 0;\r\n        this.telemetryEventProcessor = new TelemetryEventProcessor();\r\n        this.telemetry = new TelemetryHandler(this, this.telemetryEventProcessor);\r\n        this.sleepDetector = new SleepDetector(this.telemetry);\r\n        this.isResume = false;\r\n        this.inputConfigFlags = defaultInputConfigFlags;\r\n        this.audioRecorder = new AudioRecorder();\r\n\r\n        window.addEventListener(\"error\", this.unhandledExceptionFunc);\r\n\r\n        const zoneless = (window as any).zoneless as Zoneless;\r\n        this.micCapturer = new MicCapturer(this.platformDetails, this.telemetry);\r\n        this.resetAudioFunc = this.micCapturer.resetAudio.bind(this.micCapturer);\r\n        this.deviceChangeFunc = this.deviceChange.bind(this);\r\n        this.gamepadHandler = new GamepadHandler(this.platformDetails, zoneless);\r\n        if (RagnarokSettings.gamepadTesterEnabled) {\r\n            this.gamepadHandler.addGamepadDataHandler(this.gamepadTester);\r\n            this.gamepadHandler.enableUserInput();\r\n        }\r\n\r\n        this.systemIdleFunc = this.handleSystemIdle.bind(this);\r\n\r\n        // Play out any cached Platform telemetry\r\n        AddPlatformTelemetry(this.telemetry);\r\n        // Send telemetry that won't change between sessions\r\n        this.collectPerformanceTimingTelemetry();\r\n        this.collectMediaCapabilitiesTelemetry();\r\n        if (RagnarokSettings.ragnarokConfig.sendNonEssentialMetricEvents) {\r\n            this.telemetry.emitMetricEvent(\r\n                \"PlatformDetailsExecutionTime\",\r\n                \"\",\r\n                this.platformDetails.totalTime,\r\n                0,\r\n                0,\r\n                0\r\n            );\r\n        }\r\n        // Register with network callbacks\r\n        NetworkDetector.registerNetworkCallback((network: NetworkTypeEnum) => {\r\n            this.gridServer?.setNetworkType(network);\r\n        });\r\n    }\r\n\r\n    private resetSessionIds() {\r\n        if (this.gridServer) {\r\n            const sessionId = this.gridServer.getSessionId();\r\n            const subSessionId = this.gridServer.getSubSessionId();\r\n            Log.d(\"{9d1820c}\", \"{2fd42df}\", sessionId, subSessionId);\r\n            this.telemetry.setSubSessionId(subSessionId);\r\n            this.sleepDetector.setSubSessionId(subSessionId);\r\n            this.telemetry.setSessionId(sessionId);\r\n            this.sleepDetector.setSessionId(sessionId);\r\n            this.telemetryEventProcessor.resetDataOnNewSubSession(sessionId, subSessionId);\r\n        }\r\n    }\r\n\r\n    private unhandledException(e: ErrorEvent): boolean {\r\n        Log.e(\"{9d1820c}\", \"{8516485}\", e.filename, e.lineno, e.colno);\r\n        this.telemetry.emitExceptionEvent(e.error,\r\n            e.error && e.error.message ? e.error.message : e.message,\r\n            e.filename,\r\n            e.lineno,\r\n            e.colno,\r\n            false);\r\n\r\n        if (RagnarokSettings.ragnarokConfig.terminateUnhandledException ?? true) {\r\n            this.terminateOrAbortStreaming(RErrorCode.UnhandledException);\r\n        }\r\n\r\n        return false; //false allows error to propogate\r\n    }\r\n\r\n    private sendExitAnalyticsEvent(exitAnalyticsEventData: StreamExitEventData) {\r\n        this.clearExitEventCacheTimeout();\r\n        // Clear the exitEvent cache once the telemetry is sent. When the GridServer session setup\r\n        // fails, we end up not have a streaming session, but we do send the telemetry. We were not\r\n        // clearing the index db in this case and the same set of events were being sent again in\r\n        // the next launch.\r\n        this.telemetry.sendExitAnalyticsEvent(exitAnalyticsEventData, true);\r\n    }\r\n\r\n    private getStreamExitEventData(\r\n        data: StreamingTerminatedEvent | StartSessionResultEvent,\r\n        streamDuration: number,\r\n        connectivity?: string,\r\n        sleep?: boolean\r\n    ): StreamExitEventData {\r\n        return {\r\n            exitErrorCode: data.error\r\n                ? GetHexString(data.error.code)\r\n                : GetHexString(RErrorCode.Success),\r\n            sessionId: data.sessionId,\r\n            subSessionId: data.subSessionId,\r\n            zoneAddress: data.zoneAddress,\r\n            streamDuration: streamDuration,\r\n            frameCount: this.framesDecoded,\r\n            codec: this.streamClient?.getVideoCodec() ?? \"UNKNOWN\",\r\n            isResume: this.isResume,\r\n            connectivity: connectivity ?? Connectivity.UNDEFINED,\r\n            sleep: sleep ?? false,\r\n            networkTestSessionId: this.sessionStartParams?.sessionParams.networkSessionId ?? \"\"\r\n        };\r\n    }\r\n\r\n    private pageShutDownCleanupDuringSession() {\r\n        if (this.pageShutDownCleanupDuringSessionDone) {\r\n            return;\r\n        }\r\n        this.pageShutDownCleanupDuringSessionDone = true;\r\n\r\n        this.terminateOrAbortStreaming(\r\n            this.exitErrorCodeForUnload ?? this.streamClient?.isStartNotified()\r\n                ? RErrorCode.WebPageClosed\r\n                : RErrorCode.SessionSetupCancelled\r\n        );\r\n    }\r\n\r\n    private unload(evt: any) {\r\n        this.pageShutDownCleanupDuringSession();\r\n    }\r\n\r\n    private online(evt: any) {\r\n        Log.i(\"{9d1820c}\", \"{a9a135f}\");\r\n        this.telemetryEventProcessor.sendAllCachedTelemetryEvents();\r\n    }\r\n\r\n    private visibilitychange(evt: any) {\r\n        Log.i(\"{9d1820c}\", \"{478a408}\", document.visibilityState, !!this.streamClient);\r\n        if (!this.streamClient) {\r\n            return;\r\n        }\r\n        const videoElement = this.sessionStartParams!.validatedStreamParams[0].videoElement;\r\n        const audioElement = this.sessionStartParams!.validatedStreamParams[0].audioElement;\r\n        // WAR for audio playing when device locked\r\n        const shouldApplyMuteWAR =\r\n            IsiOSVersionAtLeast(this.platformDetails, 15, 4) && RagnarokSettings.allowMutingVideo;\r\n        // WAR for mic disabled when PWA app minimized.  Do not apply when user terminated mic recorder.\r\n        const shouldEnableMicWAR =\r\n            IsiOSVersionAtLeast(this.platformDetails, 15, 4) &&\r\n            this.micEnabled &&\r\n            RagnarokSettings.allowEnableMic;\r\n        if (document.visibilityState === \"hidden\") {\r\n            this.visibilityHiddenTime = performance.now();\r\n            if (shouldApplyMuteWAR) {\r\n                Log.i(\"{9d1820c}\", \"{cbd3b6e}\");\r\n                videoElement.muted = true;\r\n                audioElement.muted = true;\r\n            }\r\n            this.cacheExitEventInDbPeriodically();\r\n        } else if (document.visibilityState === \"visible\") {\r\n            if (shouldApplyMuteWAR) {\r\n                Log.i(\"{9d1820c}\", \"{05deefa}\");\r\n                videoElement.muted = false;\r\n                audioElement.muted = false;\r\n            }\r\n            if (shouldEnableMicWAR) {\r\n                // User terminated mic recorder if time between onended and visibility events above given threshold in milliseconds\r\n                const USER_TERMINATED_MIC_RECORDER_THRESHOLD =\r\n                    RagnarokSettings.ragnarokConfig.userTerminatedMicRecorderThreshold ?? 2000;\r\n                if (\r\n                    this.visibilityHiddenTime - this.micCapturer.getTrackEndedTime() <\r\n                    USER_TERMINATED_MIC_RECORDER_THRESHOLD\r\n                ) {\r\n                    Log.i(\"{9d1820c}\", \"{862bd20}\");\r\n                    this.micCapturer.setWillAudioVolumeBeLow(true);\r\n                    this.setMicRecordingEnabled(true);\r\n                } else {\r\n                    this.micEnabled = false;\r\n                }\r\n            } else if (\r\n                IsiOSVersionAtLeast(this.platformDetails, 15, 4) &&\r\n                !this.micCapturer.isAudioVolumeLow() &&\r\n                this.micCapturer.isUsingBuiltInMic() &&\r\n                this.micCapturer.didUserDisableMic()\r\n            ) {\r\n                this.micCapturer.recordLowAudioDebugEvent(LowAudioVolumeType.VISIBILITY_CHANGE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onGsTelemetryEvent(eventPayload: TelemetryEventPayload) {\r\n        Log.d(\"{9d1820c}\", \"{972bb72}\", JSON.stringify(eventPayload));\r\n        // TODO: We will have to add index-db caching support for GridServer_GameLaunch_Event\r\n        // since we are separating the PM yield and Streaming yield.\r\n        this.telemetry.dispatchEvent(eventPayload);\r\n    }\r\n\r\n    private onGsActiveSessionsResult(eventData: ActiveSessionResultEvent) {\r\n        this.emit(EVENTS.ACTIVE_SESSIONS_RESULT, eventData);\r\n    }\r\n\r\n    private onGsProgressUpdate(eventData: SessionProgressUpdateEvent) {\r\n        this.emit(EVENTS.PROGRESS_UPDATE, eventData);\r\n    }\r\n\r\n    private onGsSessionUpdate(eventData: SessionUpdateEvent) {\r\n        this.emit(EVENTS.SESSION_UPDATE, eventData);\r\n    }\r\n\r\n    private initializeGridServer(gridServer: GridServer) {\r\n        Log.d(\"{9d1820c}\", \"{3c652b7}\");\r\n        // Reset the previous run's sessionId as these stale entries are being used in telemetry events sent before the new sessionId gets filled.\r\n        this.resetSessionIds();\r\n\r\n        gridServer.addListener(GS_EVENTS.TELEMETRY_EVENT, this.onGsTelemetryEvent.bind(this));\r\n        gridServer.addListener(GS_EVENTS.LOG_EVENT, this.onLogEvent.bind(this)); //this must be set before intialize\r\n        gridServer.addListener(\r\n            GS_EVENTS.ACTIVE_SESSIONS_RESULT,\r\n            this.onGsActiveSessionsResult.bind(this)\r\n        );\r\n        gridServer.addListener(GS_EVENTS.PROGRESS_UPDATE, this.onGsProgressUpdate.bind(this));\r\n        gridServer.addListener(GS_EVENTS.SESSION_UPDATE, this.onGsSessionUpdate.bind(this));\r\n        this.initializeParams.clientHeaders =\r\n            this.initializeParams.clientHeaders ?? new Map<string, string>();\r\n\r\n        const clientType =\r\n            RagnarokSettings.clientType || this.initializeParams.clientType || ClientType.BROWSER;\r\n        const shouldSetBrowser = clientType !== ClientType.NATIVE;\r\n\r\n        if (shouldSetBrowser) {\r\n            this.initializeParams.clientHeaders.set(\r\n                \"nv-browser-version\",\r\n                this.platformDetails.browserFullVer\r\n            );\r\n        }\r\n\r\n        const gsInitParams: GsInitParams = {\r\n            deviceOs: RagnarokSettings.deviceOs ?? this.platformDetails.deviceOS,\r\n            deviceOsVer: this.platformDetails.osVer,\r\n            deviceType: RagnarokSettings.deviceType ?? this.platformDetails.deviceType,\r\n            deviceModel: RagnarokSettings.deviceModel ?? this.platformDetails.deviceModel,\r\n            clientIdentification:\r\n                this.initializeParams.clientIdentification ?? CLIENT_IDENTIFICATION,\r\n            clientVersion: this.initializeParams.clientVersion ?? CLIENT_VERSION,\r\n            clientAppVersion: this.initializeParams.clientAppVersion,\r\n            clientStreamer: RagnarokSettings.clientStreamer ?? ClientStreamer.WEBRTC,\r\n            clientId: RagnarokSettings.clientId || this.initializeParams.clientId,\r\n            browserType: shouldSetBrowser ? this.platformDetails.browser.toUpperCase() : undefined,\r\n            clientPlatformName: RagnarokSettings.clientPlatformName || \"browser\",\r\n            clientType: clientType,\r\n            deviceHashId: this.initializeParams.deviceHashId,\r\n            serverAddress: this.initializeParams.serverAddress,\r\n            authTokenCallback: this.initializeParams.authTokenCallback,\r\n            clientHeaders: this.initializeParams.clientHeaders\r\n        };\r\n        gridServer.initialize(gsInitParams);\r\n        // Update telemetry network status\r\n        gridServer.setNetworkType(NetworkDetector.getNetworkType());\r\n    }\r\n\r\n    /**\r\n     * Initializes the GridApp.\r\n     * Returns true if successfully initialized.\r\n     * @param initializeParams - interface: InitParams\r\n     * @param inputConfigFlags - interface: InputConfigFlags [default: { allowUnconfined: false, preventNavigation: false }]\r\n     **/\r\n    public initialize(\r\n        initializeParams: InitParams,\r\n        inputConfigFlags: InputConfigFlags = defaultInputConfigFlags\r\n    ): boolean {\r\n        Log.i(\"{9d1820c}\", \"{2569364}\", PackageVersion);\r\n        Log.d(\"{9d1820c}\", \"{e85ad66}\", navigator.userAgent);\r\n        if (!initializeParams) {\r\n            Log.e(\"{9d1820c}\", \"{a98b177}\");\r\n            return false;\r\n        }\r\n\r\n        Object.assign(this.initializeParams, initializeParams);\r\n\r\n        this.gridServer?.uninitialize();\r\n        if (\r\n            !this.initializeParams.serverAddress ||\r\n            IsValidIPv4(this.initializeParams.serverAddress)\r\n        ) {\r\n            Log.d(\"{9d1820c}\", \"{e2d9a04}\");\r\n            this.gridServer = new PassThruServer();\r\n        } else if (this.initializeParams.serverAddress.startsWith(\"mockpm://\")) {\r\n            Log.d(\"{9d1820c}\", \"{4a79d8e}\");\r\n            this.gridServer = new MockPMGridServer();\r\n            this.initializeParams.serverAddress = this.initializeParams.serverAddress.replace(\r\n                \"mockpm://\",\r\n                \"\"\r\n            );\r\n        } else {\r\n            if (!this.initializeParams.authTokenCallback) {\r\n                Log.e(\"{9d1820c}\", \"{28d1400}\");\r\n                return false;\r\n            }\r\n\r\n            // Configure GridServer to emit events synchronously, since gridApp is configured to\r\n            // relay these events asynchronously to upper layers.\r\n            this.gridServer = new GridServer(this.platformDetails, true);\r\n        }\r\n        this.initializeGridServer(this.gridServer);\r\n\r\n        this.inputConfigFlags = inputConfigFlags;\r\n        this.telemetry.setClientShutDownCallback(this.initializeParams.clientShutDownCallback);\r\n\r\n        return true;\r\n    }\r\n\r\n    public downloadAudio() {\r\n        this.audioRecorder.downloadAudio();\r\n    }\r\n\r\n    /**\r\n     * This API is used by client to keep ragnarok informed about all the latest params need to be passed in telemetry event.\r\n     * To get user and session id updated client should at least call it just before every call to startSession and resume.\r\n     * @param {EventDataElements} eventDataElements\r\n     * @memberof GridApp\r\n     */\r\n    public updateEventDataElements(eventDataElements: EventDataElements) {\r\n        Log.i(\"{9d1820c}\", \"{4008dc4}\", JSON.stringify(eventDataElements)); //@todo remove string print later\r\n        this.telemetryEventProcessor.updateEventDataElements(eventDataElements);\r\n        if (eventDataElements.telemetryEventIds) {\r\n            this.gridServer?.updateTelemetryEventIds(eventDataElements.telemetryEventIds);\r\n        }\r\n        if (this.streamClient && !this.sessionSetUpInProgress) {\r\n            // we only want to write when session is streaming to prevent db from getting overritten of previous session\r\n            this.cacheExitEventInDbPeriodically();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the current active sessions for the user.\r\n     * This is an asynchronous API, upon completion ACTIVE_SESSIONS_RESULT event is emitted.\r\n     **/\r\n    public getActiveSessions() {\r\n        if (!this.gridServer) {\r\n            const result: ActiveSessionResultEvent = {\r\n                sessionList: [],\r\n                error: this.getGridAppUninitializedError(\"ActiveSessions\")\r\n            };\r\n            this.emit(EVENTS.ACTIVE_SESSIONS_RESULT, result);\r\n            return;\r\n        }\r\n        this.gridServer.getAllActiveSessions();\r\n    }\r\n\r\n    private onSessionStartException(exp: any) {\r\n        let result: StartSessionResultEvent = {\r\n            sessionId: this.gridServer?.getSessionId() ?? \"\",\r\n            subSessionId: this.gridServer?.getSubSessionId() ?? \"\",\r\n            error: {\r\n                code: RErrorCode.ExceptionHappened,\r\n                description: \"Quitting due to exception\"\r\n            },\r\n            streamInfo: this.currentSession?.streamInfo,\r\n            zoneName: this.gridServer?.getZoneName() ?? \"\",\r\n            zoneAddress: this.gridServer?.getZoneAddress() ?? \"\",\r\n            gpuType: this.gridServer?.getGpuType() ?? \"\",\r\n            isResume: this.isResume\r\n        };\r\n        this.onSessionStart(result, true);\r\n\r\n        let msg = \"Exception happened in session call\";\r\n        Log.e(\"{9d1820c}\", \"{90f98fb}\", exp);\r\n        this.telemetry.emitExceptionEvent(exp, msg, \"{9d1820c}.ts\", 0, 0, true);\r\n    }\r\n\r\n    private onSessionStartError(error: ErrorDetails, sessionId: string, subSessionId: string) {\r\n        let result: StartSessionResultEvent = {\r\n            sessionId: sessionId,\r\n            subSessionId: subSessionId,\r\n            error: error,\r\n            zoneName: \"\",\r\n            zoneAddress: \"\",\r\n            gpuType: \"\",\r\n            isResume: this.isResume\r\n        };\r\n        this.onSessionStart(result, true);\r\n    }\r\n\r\n    private runSession(\r\n        action: number,\r\n        sessionStartParams: ValidatedSessionParams,\r\n        sessionId?: string\r\n    ) {\r\n        this.currentSession = undefined;\r\n        this.sessionPauseInProgress = false;\r\n        if (!this.gridServer) {\r\n            const result: StartSessionResultEvent = {\r\n                sessionId: \"\",\r\n                subSessionId: \"\",\r\n                zoneName: \"\",\r\n                zoneAddress: \"\",\r\n                gpuType: \"\",\r\n                isResume: this.isResume,\r\n                error: this.getGridAppUninitializedError(this.isResume ? \"Resume\" : \"Start\")\r\n            };\r\n            this.emit(EVENTS.SESSION_START_RESULT, result);\r\n            return;\r\n        }\r\n\r\n        sessionStartParams.sessionParams.remoteControllersBitmap = this.gamepadHandler.getBitmap();\r\n\r\n        try {\r\n            this.telemetry.setGameDetails(\r\n                sessionStartParams.sessionParams.appId,\r\n                sessionStartParams.sessionParams.shortName ?? \"\"\r\n            );\r\n            this.startTime = performance.now();\r\n            this.sleepDetector.startSleepDetectionTimer();\r\n            Log.d(\"{9d1820c}\", \"{892168d}\", Log.sanitize(JSON.stringify(sessionStartParams.sessionParams)));\r\n            const gridServer = this.gridServer;\r\n            gridServer\r\n                .putOrPostSession(sessionStartParams.sessionParams, action, sessionId)\r\n                .then((session?: GridSession) => {\r\n                    // session will be empty if\r\n                    //  no GsInitParams were set (early exit path)\r\n                    // session will be undefined if:\r\n                    //  the session request had no response data\r\n                    //  the session request's response data had no \"session\" property\r\n                    // TODO: Handle these error cases\r\n                    //       (Causing \"TypeError: Cannot read property 'sessionId' of undefined\" exceptions)\r\n                    this.resetSessionIds();\r\n                    Log.d(\"{9d1820c}\", \"{92a2573}\", session?.sessionId, session?.subSessionId);\r\n                    if (session?.state === SessionState.READY_FOR_CONNECTION) {\r\n                        Log.d(\"{9d1820c}\", \"{2042e0a}\");\r\n                        this.currentSession = session;\r\n                        const pr: Promise<GridSession | undefined> = new Promise(\r\n                            (resolve, reject) => {\r\n                                resolve(session);\r\n                            }\r\n                        ); // just fake a poll success.\r\n                        return pr;\r\n                    } else {\r\n                        return gridServer.getSession(session!.sessionId, true);\r\n                    }\r\n                })\r\n                .then((session?: GridSession) => {\r\n                    this.currentSession = session; //we have updated ports now.\r\n                    Log.d(\"{9d1820c}\", \"{315afdc}\", session?.sessionId);\r\n                    this.startStreaming(sessionStartParams);\r\n                })\r\n                .catch(error => {\r\n                    this.resetSessionIds();\r\n                    if (error.code) {\r\n                        if (\r\n                            error.code == RErrorCode.SessionSetupCancelled ||\r\n                            error.code == RErrorCode.SessionSetupCancelledDuringQueuing\r\n                        ) {\r\n                            if (\r\n                                gridServer.getSessionId() &&\r\n                                !(this.sessionPauseInProgress && this.isResume)\r\n                            ) {\r\n                                // Cancel (delete) the session being setup at the PM unless the session should be paused and it is a resume request\r\n                                this.sendDeleteRequest(gridServer.getSessionId(), gridServer);\r\n                            }\r\n                        }\r\n\r\n                        Log.e(\"{9d1820c}\", \"{09efe49}\", GetHexString(error.code));\r\n                        let result: StartSessionResultEvent = {\r\n                            sessionId: gridServer.getSessionId() ?? \"\",\r\n                            subSessionId: gridServer.getSubSessionId() ?? \"\",\r\n                            error: error,\r\n                            sessionList: error.sessionList,\r\n                            streamInfo: this.currentSession?.streamInfo,\r\n                            zoneName: gridServer.getZoneName() ?? \"\",\r\n                            zoneAddress: gridServer.getZoneAddress() ?? \"\",\r\n                            gpuType: gridServer.getGpuType() ?? \"\",\r\n                            isResume: this.isResume\r\n                        };\r\n                        this.onSessionStart(result, true);\r\n                    } else {\r\n                        //it's an exception\r\n                        this.onSessionStartException(error);\r\n                    }\r\n                });\r\n        } catch (exp) {\r\n            this.onSessionStartException(exp);\r\n        }\r\n    }\r\n\r\n    private sendSessionSetupInProgressTelemetry(isResume: boolean) {\r\n        // collecting this to see how rare/huge the problem is\r\n        this.telemetry.emitDebugEvent(\"SessionSetupInProgressError\", isResume ? \"resume\" : \"start\");\r\n    }\r\n\r\n    private updateExitEventCacheWithNewParams(exitErrorCode: string) {\r\n        this.telemetryEventProcessor.updateCachedExitEvent(\r\n            exitErrorCode,\r\n            this.gridServer?.getSessionId() ?? \"\",\r\n            this.gridServer?.getSubSessionId() ?? \"\",\r\n            this.gridServer?.getZoneAddress() || this.initializeParams.serverAddress,\r\n            performance.now() - this.startTime,\r\n            this.streamClient?.getFramesDecoded() ?? 0,\r\n            this.streamClient?.getVideoCodec() ?? \"UNKNOWN\",\r\n            this.isResume\r\n        );\r\n    }\r\n\r\n    private clearExitEventCacheTimeout() {\r\n        if (this.exitEventCacheTimeoutId !== 0) {\r\n            window.clearTimeout(this.exitEventCacheTimeoutId);\r\n            this.exitEventCacheTimeoutId = 0;\r\n        }\r\n    }\r\n\r\n    private cacheExitEventInDbPeriodically() {\r\n        this.updateExitEventCacheWithNewParams(\r\n            GetHexString(this.exitErrorCodeForUnload ?? RErrorCode.DelayedSessionError)\r\n        );\r\n        const currentTimeoutId = this.exitEventCacheTimeoutId;\r\n        this.telemetryEventProcessor\r\n            .cacheExitEventInDb()\r\n            .then(() => {\r\n                if (currentTimeoutId === this.exitEventCacheTimeoutId) {\r\n                    this.setPeriodicExitEventCacheTimeout();\r\n                }\r\n            })\r\n            .catch(() => {\r\n                Log.e(\"{9d1820c}\", \"{204a7ac}\");\r\n            });\r\n    }\r\n\r\n    private setPeriodicExitEventCacheTimeout() {\r\n        this.clearExitEventCacheTimeout();\r\n        this.exitEventCacheTimeoutId = window.setTimeout(\r\n            () => this.cacheExitEventInDbPeriodically(),\r\n            2 * 60 * 1000 // 2 mins\r\n        );\r\n    }\r\n\r\n    private registerWindowAndDocumentEvents() {\r\n        // Using the `unload` event to determine terminate in page lifecycle it's unreliable, especially for iOS Safari.\r\n        // Using `pagehide` event rather than `unload`, it will only be fired while closing tabs and refreshing pages.\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event\r\n        window.addEventListener(\"pagehide\", this.unloadFunc);\r\n\r\n        window.addEventListener(\"online\", this.onlineFunc);\r\n        document.addEventListener(\"visibilitychange\", this.visibilitychangeFunc);\r\n        if (navigator.mediaDevices) {\r\n            navigator.mediaDevices.addEventListener(\"devicechange\", this.deviceChangeFunc);\r\n        }\r\n    }\r\n\r\n    private collectPerformanceTimingTelemetry() {\r\n        if (RagnarokSettings.ragnarokConfig.sendNonEssentialMetricEvents) {\r\n            const metricName = \"PerformanceTiming\";\r\n\r\n            const jsInitEntry = performance.getEntriesByName(\"GfnJsInitStart\")[0];\r\n            const platformBeginEntry = performance.getEntriesByName(\"platformBegin\")[0];\r\n            const ragnarokBeginEntry = performance.getEntriesByName(\"GfnRBegin\")[0];\r\n            const navigationEntries = performance.getEntriesByType(\"navigation\");\r\n\r\n            const jsInitTime = Math.round(jsInitEntry?.startTime ?? -1);\r\n            const platformBeginTime = Math.round(platformBeginEntry?.startTime ?? -1);\r\n\r\n            this.telemetry.emitMetricEvent(\r\n                metricName,\r\n                \"application timings\",\r\n                jsInitTime,\r\n                platformBeginTime,\r\n                Math.round(ragnarokBeginEntry?.startTime ?? -1),\r\n                platformBeginTime - jsInitTime\r\n            );\r\n\r\n            if (!navigationEntries.length) {\r\n                this.telemetry.emitMetricEvent(\r\n                    metricName,\r\n                    \"navigation timings unsupported\",\r\n                    0,\r\n                    0,\r\n                    0,\r\n                    0\r\n                );\r\n                return;\r\n            }\r\n\r\n            const navigationEntry = navigationEntries[\r\n                navigationEntries.length - 1\r\n            ] as PerformanceNavigationTiming;\r\n\r\n            this.telemetry.emitMetricEvent(\r\n                metricName,\r\n                \"load timings\",\r\n                Math.round(navigationEntry.loadEventStart),\r\n                Math.round(navigationEntry.loadEventEnd),\r\n                Math.round(navigationEntry.domContentLoadedEventStart),\r\n                Math.round(navigationEntry.domContentLoadedEventEnd)\r\n            );\r\n        }\r\n    }\r\n\r\n    private unregisterWindowAndDocumentEvents() {\r\n        window.removeEventListener(\"pagehide\", this.unloadFunc);\r\n        window.removeEventListener(\"online\", this.onlineFunc);\r\n        document.removeEventListener(\"visibilitychange\", this.visibilitychangeFunc);\r\n        if (navigator.mediaDevices) {\r\n            navigator.mediaDevices.removeEventListener(\"devicechange\", this.deviceChangeFunc);\r\n        }\r\n        if (IsWebOS(this.platformDetails)) {\r\n            document.removeEventListener(\"SystemIdle\", this.systemIdleFunc);\r\n            this.clearSystemIdleTimeout();\r\n        }\r\n    }\r\n\r\n    private prepareSession(isResume: boolean) {\r\n        this.exitErrorCodeForUnload = undefined;\r\n        this.telemetryEventProcessor.sendAllCachedTelemetryEvents();\r\n        this.isSessionOngoing = true;\r\n        this.registerWindowAndDocumentEvents();\r\n        this.isResume = isResume;\r\n        if (this.sessionSetUpInProgress) {\r\n            // Clients are not expected to start a new session while a previous session setup request\r\n            // is pending. We have made some improvements in handling the cancelSessionSetup and hence\r\n            // not calling cancelSessionSetup() explicitly from here.\r\n            this.sendSessionSetupInProgressTelemetry(this.isResume);\r\n        }\r\n        this.sessionSetUpInProgress = true;\r\n    }\r\n\r\n    /**\r\n     * Starts a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * If there result doesn't contain error then client should display the video tag as a successful result indicates\r\n     * streaming has begun.\r\n     * @param sessionStartParams - check SessionParams interface for details\r\n     **/\r\n    public startSession(sessionStartParams: SessionParams) {\r\n        this.prepareSession(false);\r\n        const validatedParams = this.updateSessionParams(sessionStartParams);\r\n        if (!validatedParams) {\r\n            return;\r\n        }\r\n        this.runSession(SESSIONMODIFY_ACTION.UNKNOWN, validatedParams);\r\n    }\r\n\r\n    /**\r\n     * getSession request.\r\n     * This is an asynchronous API and the result is delivered in GET_SESSION_RESULT event.\r\n     * This API is meant for resume scenario only. Since getActiveSessions is expensive as it includes a jarvis call.\r\n     * So client needs to make getActiveSessions call once and subsequent calls can be getSession to get the state.\r\n     * @param sessionId - sessionId to be resumed.\r\n     **/\r\n    public getSession(sessionId: string) {\r\n        if (!this.gridServer) {\r\n            const result: GetSessionResult = {\r\n                sessionId: \"\",\r\n                subSessionId: \"\",\r\n                error: this.getGridAppUninitializedError(\"GetSession\")\r\n            };\r\n            this.emit(EVENTS.GET_SESSION_RESULT, result);\r\n            return;\r\n        }\r\n\r\n        this.gridServer\r\n            .getSession(sessionId, false)\r\n            .then((session?: GridSession) => {\r\n                /**\r\n                 * @TODO fix the mismatch between the session? expressions here - requiring session to be non-empty - and the session? in the parameter arguments,\r\n                 * which permits session to be null. Either session can be null, in which case all of this code is potentially a source of errors, or it's not allowed\r\n                 * to be null, in which case there are unnecessary ? here.\r\n                 */\r\n                let result: GetSessionResult = {\r\n                    sessionId: session?.sessionId ?? \"\",\r\n                    appId: session?.appId,\r\n                    subSessionId: session?.subSessionId ?? \"\",\r\n                    state: session?.state,\r\n                    status: session?.state\r\n                };\r\n                this.emit(EVENTS.GET_SESSION_RESULT, result);\r\n            })\r\n            .catch(error => {\r\n                let result: GetSessionResult = {\r\n                    sessionId: sessionId,\r\n                    subSessionId: this.gridServer?.getSubSessionId() ?? \"\",\r\n                    error: error\r\n                };\r\n                this.emit(EVENTS.GET_SESSION_RESULT, result);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * NOTE: should use resumeSession instead.\r\n     * resume request.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * This call has a limitation that it is meant for auto resume only as client wants to stick with this due to same it's making in geronimo.\r\n     * We can't resume once the tab is closed or from another device.\r\n     * Here sre steps client go through:\r\n     * 1. Client make a startSessionRequest\r\n     * 2. Session is streaming.\r\n     * 3. Client gets STREAM_STOPPED event with error group (((eventData.error.code ^ RErrorCode.StreamerErrorCategory)>>8) == 0)\r\n     * 4. Client Calls multiple getSession(sessionid) untill status becomes SessionState.READY_FOR_CONNECTION\r\n     * 5. Client calls resume()\r\n     **/\r\n    public resume() {\r\n        // Delegate to the full-featured resumeSession call to make sure video/audio elements get re-initialized.\r\n        //TODO: Handle case where GridServer is uninitialized\r\n        this.resumeSession(this.sessionStartParams!.sessionParams, this.gridServer!.getSessionId());\r\n    }\r\n\r\n    /**\r\n     * resume request.\r\n     * This is an asynchronous API and the result is delivered in SESSION_START_RESULT event.\r\n     * This call is recommended instead of resume() and covers all resume cases.\r\n     * * @param sessionResumeParams - check SessionParams for details\r\n     * * @param sessionId of resumable session\r\n     * Here sre steps client go through:\r\n     * 1. Client make a startSessionRequest\r\n     * 2. Session is streaming.\r\n     * 3. Client gets STREAM_STOPPED event with error group (((eventData.error.code ^ RErrorCode.StreamerErrorCategory)>>8) == 0)\r\n     *    or tab is closed or browser crashed or session launched from different device with same account and same appid.\r\n     * 4. Client calls getactivesession() and if the appid is same and error is (RErrorCode.SessionLimitExceeded || RErrorCode.SessionLimitPerDeviceReached)\r\n     * 5. Client Calls multiple getSession(sessionid) untill status becomes SessionState.READY_FOR_CONNECTION\r\n     * 6. Client calls resumeSession()\r\n     **/\r\n    public resumeSession(sessionResumeParams: SessionParams, sessionId: string) {\r\n        this.prepareSession(true);\r\n        const updatedSessionParams = this.updateSessionParams(sessionResumeParams);\r\n        if (!updatedSessionParams) {\r\n            return;\r\n        }\r\n        this.runSession(SESSIONMODIFY_ACTION.RESUME, updatedSessionParams, sessionId);\r\n    }\r\n\r\n    /**\r\n     * Stops a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_STOP_RESULT event.\r\n     * If the session to be stopped is streaming in current client then streaming is aborted and session is terminated on the server.\r\n     * If not streaming then session is terminated on the server.\r\n     * @param sessionId - session to be stopped.\r\n     * @param exitCode - reason for stopping the session\r\n     **/\r\n    public stopSession(sessionId?: string, exitCode?: number) {\r\n        if (!this.gridServer) {\r\n            const result: StopSessionResultEvent = {\r\n                sessionId: \"\",\r\n                subSessionId: \"\",\r\n                error: this.getGridAppUninitializedError(\"StopSession\")\r\n            };\r\n            this.emit(EVENTS.SESSION_STOP_RESULT, result);\r\n            return;\r\n        }\r\n\r\n        if (exitCode !== undefined) {\r\n            Log.i(\"{9d1820c}\", \"{ae7f61b}\", GetHexString(exitCode));\r\n        }\r\n        // Will update this check to be more correct once we remove dependency on GridServer session caching\r\n        if (sessionId === this.gridServer.getSessionId() || sessionId === undefined) {\r\n            if (exitCode === RErrorCode.PauseSession) {\r\n                this.sessionPauseInProgress = true;\r\n            } else {\r\n                // do not disable input on PauseSession call\r\n                // \\todo: do not change inputEnabled at all. Depends on confirmation from the UI client that that is okay.\r\n                this.inputEnabled = false;\r\n            }\r\n            this.micCapturer.shutdown();\r\n            this.framesDecoded = this.streamClient?.getFramesDecoded() ?? 0;\r\n            this.sleepDetector.stopSleepDetectionTimer();\r\n            const exitAnalyticsEvent = this.getStreamExitEventData(\r\n                {\r\n                    sessionId: this.gridServer.getSessionId() ?? \"\",\r\n                    subSessionId: this.gridServer.getSubSessionId() ?? \"\",\r\n                    error: exitCode ? { code: exitCode } : undefined,\r\n                    zoneName: this.gridServer.getZoneName() ?? \"\",\r\n                    zoneAddress:\r\n                        this.gridServer.getZoneAddress() || this.initializeParams.serverAddress,\r\n                    gpuType: this.gridServer.getGpuType() ?? \"\",\r\n                    isResume: this.isResume\r\n                },\r\n                performance.now() - this.startTime\r\n            );\r\n            sessionId = this.gridServer.getSessionId() ?? \"\";\r\n            if (this.streamClient) {\r\n                this.isSessionOngoing = false;\r\n                this.unregisterWindowAndDocumentEvents(); // cancel case during polling is handled by notifyClientError\r\n\r\n                if (this.streamClient.isStartNotified()) {\r\n                    this.sendExitAnalyticsEvent(exitAnalyticsEvent);\r\n                }\r\n                this.stopStreamClient(\r\n                    exitCode ??\r\n                        (this.streamClient.isStartNotified()\r\n                            ? RErrorCode.Success\r\n                            : RErrorCode.SessionSetupCancelled)\r\n                );\r\n                if (exitCode === RErrorCode.PauseSession) {\r\n                    Log.d(\"{9d1820c}\", \"{12bc45e}\", sessionId);\r\n                    this.notifyClientOfStop(sessionId);\r\n                } else {\r\n                    this.sendDeleteRequest(sessionId, this.gridServer);\r\n                }\r\n            } else {\r\n                // Check if currentSession is null to determine if the session is in progress of setup\r\n                if (!this.currentSession) {\r\n                    // If the session request gets cancelled, SESSION_STOP_RESULT is emitted from putOrPostSession promise\r\n                    // Therefore, no need to call notifyClientOfStop explicitly\r\n                    this.cancelSessionSetup();\r\n                } else {\r\n                    // In the connection loss scenerio, when it is determined that the session is not resumable due\r\n                    // to the network issue, Ragnarok should notify client the result of stopSession explicitly.\r\n                    // Without notifying UI will result in forever block.\r\n                    // TODO: add an error code to indicate the session was already stopped before calling stopSession\r\n                    this.notifyClientOfStop(sessionId);\r\n                }\r\n            }\r\n        } else if (sessionId) {\r\n            this.sendDeleteRequest(sessionId, this.gridServer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pauses a session.\r\n     * This is an asynchronous API and the result is delivered in SESSION_STOP_RESULT event.\r\n     * If the session to be stopped is streaming in current client then streaming is aborted and session is not terminated on the server.\r\n     * If not streaming then session is terminated on the server.\r\n     * @param sessionId - session to be paused.\r\n     **/\r\n    public pauseSession(sessionId?: string) {\r\n        this.stopSession(sessionId, RErrorCode.PauseSession);\r\n    }\r\n\r\n    private startStreaming(sessionStartParams: ValidatedSessionParams) {\r\n        let progressData: SessionProgressUpdateEvent = {\r\n            sessionId: this.gridServer?.getSessionId() ?? \"\",\r\n            subSessionId: this.gridServer?.getSubSessionId() ?? \"\",\r\n            queuePosition: 0,\r\n            eta: 0,\r\n            state: SessionProgressState.STARTING_STREAMER\r\n        };\r\n        this.emit(EVENTS.PROGRESS_UPDATE, progressData);\r\n\r\n        const region = IsValidIPv4(this.initializeParams.serverAddress)\r\n            ? \"\"\r\n            : this.initializeParams.serverAddress.split(\".\")[0];\r\n\r\n        // TODO: Should remove need for video element, for headless mode\r\n        const { videoElement, audioElement } = sessionStartParams.validatedStreamParams[0];\r\n        if (IsiOSVersionAtLeast(this.platformDetails, 15)) {\r\n            const OLD_PLAY_PROP = \"ragnarokOldPlay\";\r\n            const video = <any>videoElement;\r\n            if (!video[OLD_PLAY_PROP]) {\r\n                video[OLD_PLAY_PROP] = videoElement.play;\r\n            }\r\n            const shouldResetSrc =\r\n                RagnarokSettings.allowSourceReset && IsiOSVersion(this.platformDetails, 15, 1);\r\n            videoElement.play = () => {\r\n                if (RagnarokSettings.allowAudioReset) {\r\n                    Log.i(\"{9d1820c}\", \"{4a5b360}\");\r\n                    this.removeContextFix();\r\n                    this.applyContextFix();\r\n                    this.micCapturer.resetAudio();\r\n                }\r\n                if (shouldResetSrc) {\r\n                    // WAR for blank video on app switch on iOS 15.1\r\n                    Log.i(\"{9d1820c}\", \"{8f5cd77}\");\r\n                    const src = videoElement.srcObject;\r\n                    videoElement.srcObject = null;\r\n                    videoElement.srcObject = src;\r\n                }\r\n                return video[OLD_PLAY_PROP].apply(videoElement);\r\n            };\r\n        }\r\n        // Workaround for bug where video freezes on iOS 15\r\n        // We need to disable autoplay when initially launching a session to prevent the bug\r\n        // The video is played when the user clicks continue in the UI\r\n        // However, in the case of autoresume this dialog is not present so we need to let it autoplay\r\n        if (\r\n            RagnarokSettings.allowAutoplayChange &&\r\n            (IsiOSVersion(this.platformDetails, 15, 0) || IsiOSVersion(this.platformDetails, 15, 1))\r\n        ) {\r\n            // using data prefix for custom tag: https://www.w3schools.com/tags/att_global_data.asp\r\n            const kShouldAutoplay = \"data-shouldautoplay\";\r\n            const kAutoplay = \"autoplay\";\r\n            if (videoElement.hasAttribute(kShouldAutoplay)) {\r\n                videoElement.setAttribute(kAutoplay, \"\");\r\n            } else {\r\n                videoElement.setAttribute(kShouldAutoplay, \"\");\r\n                videoElement.removeAttribute(kAutoplay);\r\n            }\r\n        }\r\n        this.streamClient = new StreamClient(\r\n            this,\r\n            videoElement,\r\n            audioElement,\r\n            this.micCapturer,\r\n            this.inputConfigFlags,\r\n            this.gamepadTester,\r\n            this.gamepadHandler,\r\n            this.telemetry,\r\n            this.platformDetails,\r\n            this.currentSession!,\r\n            sessionStartParams.sessionParams.accessToken || \"\",\r\n            sessionStartParams.sessionParams.streamParams![0],\r\n            this.audioRecorder,\r\n            this.initializeParams.textInputElement,\r\n            this.initializeParams.clientAppVersion,\r\n            this.isResume,\r\n            region\r\n        );\r\n        this.streamClient.start();\r\n        if (sessionStartParams.sessionParams.keyboardLayout) {\r\n            this.streamClient.setKeyboardLayout(sessionStartParams.sessionParams.keyboardLayout);\r\n        }\r\n        // The reason sendCachedExitEvent needed here is to prevent sending duplicate exit event if the session is running in another tab.\r\n        // And we also need valid session id when writing in db. Also as per telemetry data almost all missed events happen after succesfull launch.\r\n        // The existence of streamclient object is treated as evidence of polling complete which we use to clear db.\r\n        // @todo there is a very rare possibility that cached event from previous session might get deleted here.\r\n        this.telemetry\r\n            .sendCachedExitEvent(true)\r\n            .then(() => {\r\n                this.cacheExitEventInDbPeriodically();\r\n            })\r\n            .catch(() => {\r\n                Log.e(\"{9d1820c}\", \"{c761bfd}\");\r\n            });\r\n    }\r\n\r\n    private notifyClientStartResult(data: StartSessionResultEvent) {\r\n        this.sessionSetUpInProgress = false;\r\n        if (data.error) {\r\n            this.isSessionOngoing = false;\r\n            this.unregisterWindowAndDocumentEvents();\r\n        }\r\n        this.emit(EVENTS.SESSION_START_RESULT, data);\r\n    }\r\n\r\n    private notifyClientWithError(\r\n        errorData: StartSessionResultEvent | StreamingTerminatedEvent,\r\n        isLaunchResult: boolean,\r\n        exitAnalyticsEvent?: StreamExitEventData\r\n    ) {\r\n        this.removeContextFix();\r\n        if (exitAnalyticsEvent) {\r\n            const possiblyNoConnectivity =\r\n                exitAnalyticsEvent.connectivity?.startsWith(Connectivity.OFFLINE) ||\r\n                exitAnalyticsEvent.connectivity?.startsWith(Connectivity.TIMEOUT);\r\n            // If no connectivity, we should cache the exit event.\r\n            if (possiblyNoConnectivity) {\r\n                // just cache it, send exit event in next subsession\r\n                this.clearExitEventCacheTimeout();\r\n                this.updateExitEventCacheWithNewParams(\r\n                    GetHexString(errorData.error?.code ?? RErrorCode.DelayedSessionError)\r\n                );\r\n                this.telemetryEventProcessor.cacheExitEventInDb().catch(() => {\r\n                    Log.e(\"{9d1820c}\", \"{0c2de99}\");\r\n                });\r\n            } else {\r\n                this.sendExitAnalyticsEvent(exitAnalyticsEvent);\r\n            }\r\n        }\r\n        this.stopStreamClient(errorData.error ? errorData.error.code : RErrorCode.Success);\r\n        if (isLaunchResult) {\r\n            this.notifyClientStartResult(errorData as StartSessionResultEvent);\r\n        } else {\r\n            if (errorData.error) {\r\n                const isResumable = CanResume(errorData.error.code, this.platformDetails);\r\n                (errorData as StreamingTerminatedEvent).isResumable = isResumable;\r\n                Log.i(\"{9d1820c}\", \"{723f7be}\", isResumable);\r\n            }\r\n            this.isSessionOngoing = false;\r\n            this.sessionSetUpInProgress = false;\r\n            this.unregisterWindowAndDocumentEvents(); // streaming terminated with error case\r\n            this.emit(EVENTS.STREAM_STOPPED, errorData);\r\n        }\r\n    }\r\n\r\n    private getConnectivityStatus(errorCode?: number): Promise<ConnectivityStatus> {\r\n        let connectivityStatus: ConnectivityStatus = {\r\n            errorCode: errorCode ?? RErrorCode.Success,\r\n            connectivity: Connectivity.ONLINE\r\n        };\r\n\r\n        if (errorCode && ShouldRunConnectivityTest(errorCode)) {\r\n            let timeout = 1500; // 1.5 secs\r\n            if (\r\n                RagnarokSettings.ragnarokConfig.connectivityCheckTimeout &&\r\n                RagnarokSettings.ragnarokConfig.connectivityCheckTimeout !== 0\r\n            ) {\r\n                timeout = RagnarokSettings.ragnarokConfig.connectivityCheckTimeout;\r\n                Log.i(\"{9d1820c}\", \"{f9909d8}\", timeout);\r\n            }\r\n            const connectivityUrl =\r\n                (window.location.protocol === \"http:\" ? \"http://\" : \"https://\") +\r\n                this.initializeParams.serverAddress;\r\n            Log.i(\"{9d1820c}\", \"{df38106}\", connectivityUrl);\r\n            const requestStartTime = performance.now();\r\n            return customFetch(connectivityUrl, timeout, { method: \"OPTIONS\" })\r\n                .then(response => {\r\n                    if (\r\n                        !(\r\n                            (response.status >= 200 && response.status < 300) ||\r\n                            response.status == 403\r\n                        )\r\n                    ) {\r\n                        connectivityStatus.connectivity =\r\n                            Connectivity.OFFLINE_WRONG_STATUS + \"(\" + String(response.status) + \")\";\r\n                    } else {\r\n                        const requestCompleteTime =\r\n                            Math.ceil((performance.now() - requestStartTime) / 25) * 25;\r\n                        connectivityStatus.connectivity =\r\n                            Connectivity.ONLINE + \"(\" + String(requestCompleteTime) + \")\";\r\n                    }\r\n                    return connectivityStatus;\r\n                })\r\n                .catch(err => {\r\n                    if (err.name === \"AbortError\") {\r\n                        connectivityStatus.connectivity = Connectivity.TIMEOUT;\r\n                    } else {\r\n                        connectivityStatus.connectivity =\r\n                            Connectivity.OFFLINE + \"(\" + err.name + \":\" + err.message + \")\";\r\n                        // change error code\r\n                        connectivityStatus.errorCode = ConvertErrorOnConnectivityTest(errorCode);\r\n                    }\r\n                    return connectivityStatus;\r\n                });\r\n        } else {\r\n            return Promise.resolve(connectivityStatus);\r\n        }\r\n    }\r\n\r\n    private stopStreamClient(code: number) {\r\n        if (this.streamClient) {\r\n            this.streamClient.stop(code);\r\n            this.streamClient = undefined;\r\n        }\r\n    }\r\n\r\n    private notifyClientOfStop(sessionId: string, error?: ErrorDetails) {\r\n        const result: StopSessionResultEvent = {\r\n            sessionId: sessionId,\r\n            subSessionId: this.gridServer?.getSubSessionId() ?? \"\",\r\n            framesDecoded: this.framesDecoded,\r\n            error: error\r\n        };\r\n        this.removeContextFix();\r\n        if (IsiDevice(this.platformDetails) && this.micEnabled) {\r\n            Log.d(\"{9d1820c}\", \"{b9b1288}\");\r\n            this.setMicRecordingEnabled(false);\r\n        }\r\n        this.emit(EVENTS.SESSION_STOP_RESULT, result);\r\n    }\r\n\r\n    public onSessionStart(data: StartSessionResultEvent, sessionSetupFailed?: boolean) {\r\n        if (data.error) {\r\n            // Check sleep error codes upfront to use it for launch telemetry as well.\r\n            const wasSleepExit = this.sleepDetector.wasSleepExit(data.error.code);\r\n            if (wasSleepExit) {\r\n                data.error.code = ConvertErrorOnSleep(data.error.code, this.platformDetails);\r\n            }\r\n\r\n            // Get the modified error code based on connectivity status\r\n            this.getConnectivityStatus(data.error?.code).then(\r\n                (connectivityStatus: ConnectivityStatus) => {\r\n                    // if stream start fails, terminate connection if exists.\r\n                    this.framesDecoded = this.streamClient?.getFramesDecoded() ?? 0;\r\n                    if (!data.zoneAddress) {\r\n                        data.zoneAddress = this.initializeParams.serverAddress;\r\n                    }\r\n                    if (data.error) {\r\n                        data.error.code = connectivityStatus.errorCode;\r\n                    }\r\n                    let exitAnalyticsEvent: StreamExitEventData | undefined = undefined;\r\n                    if (!sessionSetupFailed) {\r\n                        exitAnalyticsEvent = this.getStreamExitEventData(\r\n                            data,\r\n                            0,\r\n                            connectivityStatus.connectivity,\r\n                            wasSleepExit\r\n                        );\r\n                        this.exitErrorCodeForUnload = data.error?.code;\r\n                    }\r\n                    this.notifyClientWithError(data, true, exitAnalyticsEvent);\r\n                }\r\n            );\r\n        } else {\r\n            this.telemetry.emitLaunchEvent(\r\n                data.sessionId,\r\n                data.subSessionId,\r\n                this.isResume,\r\n                data.zoneAddress || this.initializeParams.serverAddress,\r\n                Math.round(performance.now() - this.startTime),\r\n                GetHexString(RErrorCode.Success),\r\n                this.streamClient?.getVideoCodec() ?? \"UNKNOWN\",\r\n                this.sessionStartParams ? String(this.sessionStartParams?.sessionParams.appId) : \"\",\r\n                this.sessionStartParams?.sessionParams.networkSessionId ?? \"\"\r\n            );\r\n\r\n            this.startTime = performance.now();\r\n            if (this.isResume && this.micEnabled) {\r\n                this.setMicRecordingEnabled(true);\r\n            }\r\n\r\n            this.notifyClientStartResult(data);\r\n            /* Input handling is not enabled by default.\r\n               If Client had enabled input handling then continue to handle in next streaming session.\r\n               This is required for auto resume use case.*/\r\n            if (this.inputEnabled) {\r\n                this.streamClient?.toggleUserInput(true, this.inputs);\r\n            }\r\n\r\n            if (IsWebOS(this.platformDetails)) {\r\n                // Listen to LG TV's idle warning to prevent burn in\r\n                // Idle time cannot be set per platform in server, eventually move to GES\r\n                document.addEventListener(\"SystemIdle\", this.systemIdleFunc);\r\n            }\r\n        }\r\n    }\r\n\r\n    private collectMediaCapabilitiesTelemetry() {\r\n        const metricName = \"MediaCapabilities\";\r\n\r\n        if (!IsMediaCapabilitiesSupported()) {\r\n            this.telemetry.emitMetricEvent(metricName, \"API unsupported\", -1, -1, -1, -1);\r\n            return;\r\n        }\r\n\r\n        const startTime = performance.now();\r\n\r\n        CapabilitiesHelper.getDecodeCapability(\"h264\").then(\r\n            async (baseCapability?: MediaCapabilitiesDecodingInfo) => {\r\n                if (!baseCapability) {\r\n                    this.telemetry.emitMetricEvent(\r\n                        metricName,\r\n                        \"webrtc unsupported\",\r\n                        performance.now() - startTime,\r\n                        -1,\r\n                        -1,\r\n                        -1\r\n                    );\r\n                } else {\r\n                    const highProfilePromise = CapabilitiesHelper.getDecodeCapability(\r\n                        \"h264; profile-level-id=640033\", // 5.1 profile\r\n                        2560,\r\n                        1440,\r\n                        60\r\n                    );\r\n                    const constrainedProfilePromise = CapabilitiesHelper.getDecodeCapability(\r\n                        \"h264; profile-level-id=64e033\", // 5.1 constrained profile\r\n                        2560,\r\n                        1440,\r\n                        60\r\n                    );\r\n                    const highProfileResult = ConvertCapabilityToNumber(await highProfilePromise);\r\n                    const constrainedProfileResult = ConvertCapabilityToNumber(\r\n                        await constrainedProfilePromise\r\n                    );\r\n\r\n                    const highProfileCheckTime = performance.now() - startTime;\r\n\r\n                    const av1Promise = CapabilitiesHelper.getAv1Capabilities();\r\n                    const highFpsPromise = CapabilitiesHelper.getDecodeCapability(\r\n                        \"h264\",\r\n                        1920,\r\n                        1080,\r\n                        120\r\n                    );\r\n                    const av1Result = ConvertCapabilityToNumber(await av1Promise);\r\n                    const highFpsResult = ConvertCapabilityToNumber(await highFpsPromise);\r\n                    const refreshRate = await CapabilitiesHelper.getRefreshRate();\r\n                    const is120FpsSupported = await CapabilitiesHelper.is120FpsSupported();\r\n                    Log.d(\"{9d1820c}\", \"{1efbc27}\", refreshRate, is120FpsSupported);\r\n                    this.telemetry.emitMetricEvent(\r\n                        \"DisplayCaps\",\r\n                        \"Is120FpsSupported: \" + is120FpsSupported,\r\n                        refreshRate,\r\n                        0,\r\n                        0,\r\n                        0\r\n                    );\r\n                    this.telemetry.emitMetricEvent(\r\n                        metricName,\r\n                        \"codec 5.1: \" +\r\n                            highProfileResult +\r\n                            \" 5.1 constrained: \" +\r\n                            constrainedProfileResult +\r\n                            \" AV1: \" +\r\n                            av1Result,\r\n                        highProfileCheckTime,\r\n                        highFpsResult,\r\n                        highProfileResult | constrainedProfileResult,\r\n                        Math.round(window.screen.height)\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public onStreamStop(data: StreamingTerminatedEvent) {\r\n        this.micCapturer.shutdown();\r\n        Log.d(\"{9d1820c}\", \"{a94b484}\");\r\n        let sleep = this.sleepDetector.wasSleepExit(data.error.code);\r\n        if (sleep) {\r\n            data.error.code = ConvertErrorOnSleep(data.error.code, this.platformDetails);\r\n        }\r\n        this.framesDecoded = this.streamClient?.getFramesDecoded() ?? 0;\r\n        if (!data.zoneAddress) {\r\n            data.zoneAddress = this.initializeParams.serverAddress;\r\n        }\r\n        this.getConnectivityStatus(data.error?.code).then(\r\n            (connectivityStatus: ConnectivityStatus) => {\r\n                data.error.code = connectivityStatus.errorCode;\r\n                const exitAnalyticsEvent = this.getStreamExitEventData(\r\n                    data,\r\n                    performance.now() - this.startTime,\r\n                    connectivityStatus.connectivity,\r\n                    sleep\r\n                );\r\n                this.exitErrorCodeForUnload = data.error?.code;\r\n                this.telemetry.emitMetricEvent(\"HotPlug\", \"\", 0, this.deviceChangeCount, 0, 0);\r\n                this.deviceChangeCount = 0;\r\n                this.notifyClientWithError(data, false, exitAnalyticsEvent);\r\n            }\r\n        );\r\n    }\r\n\r\n    public onUserIdleClear(): void {\r\n        this.clearSystemIdleTimeout();\r\n    }\r\n\r\n    // This function validates, updates, and caches the session parameters and emits failure notifications for invalid parameters.\r\n    private updateSessionParams(params: SessionParams): ValidatedSessionParams | undefined {\r\n        let validated: ValidatedSessionParams = {\r\n            sessionParams: Object.assign({}, params),\r\n            validatedStreamParams: []\r\n        };\r\n        // check for valid video and audio element from provided tags\r\n        if (validated.sessionParams.streamParams) {\r\n            for (const stream of validated.sessionParams.streamParams) {\r\n                const videoElement = document.getElementById(stream.videoTagId);\r\n                if (videoElement == null || !(videoElement instanceof HTMLVideoElement)) {\r\n                    let err: ErrorDetails = {\r\n                        code: RErrorCode.InvalidVideoElement,\r\n                        description:\r\n                            \"Didn't find video element for videoTagId: \" + stream.videoTagId\r\n                    };\r\n                    this.onSessionStartError(err, \"\", getNewGuid());\r\n                    return undefined;\r\n                }\r\n                const audioElement = document.getElementById(stream.audioTagId);\r\n                if (audioElement == null || !(audioElement instanceof HTMLAudioElement)) {\r\n                    let err: ErrorDetails = {\r\n                        code: RErrorCode.InvalidAudioElement,\r\n                        description:\r\n                            \"Didn't find audio element for audioTagId: \" + stream.audioTagId\r\n                    };\r\n                    this.onSessionStartError(err, \"\", getNewGuid());\r\n                    return undefined;\r\n                }\r\n                validated.validatedStreamParams.push({\r\n                    videoElement: videoElement,\r\n                    audioElement: audioElement\r\n                });\r\n            }\r\n        }\r\n        // apply platform specific defaults\r\n        validated.sessionParams.keyboardLayout =\r\n            validated.sessionParams.keyboardLayout ??\r\n            (IsMacOS(this.platformDetails) ? \"m-us\" : \"en_US\");\r\n        if (\r\n            validated.sessionParams.appLaunchMode === undefined ||\r\n            validated.sessionParams.appLaunchMode === AppLaunchMode.Default\r\n        ) {\r\n            validated.sessionParams.appLaunchMode =\r\n                IsTouchDevice() || IsTV(this.platformDetails) || IsXbox(this.platformDetails)\r\n                    ? AppLaunchMode.GamepadFriendly\r\n                    : AppLaunchMode.Default;\r\n        }\r\n        // apply overrides\r\n        if (RagnarokSettings.sessionMetaData) {\r\n            if (!validated.sessionParams.metaData) {\r\n                validated.sessionParams.metaData = RagnarokSettings.sessionMetaData;\r\n            } else {\r\n                for (const key in RagnarokSettings.sessionMetaData) {\r\n                    validated.sessionParams.metaData[key] = RagnarokSettings.sessionMetaData[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (RagnarokSettings.appLaunchMode !== undefined) {\r\n            validated.sessionParams.appLaunchMode = RagnarokSettings.appLaunchMode;\r\n            Log.d(\"{9d1820c}\", \"{c4969b1}\", RagnarokSettings.appLaunchMode);\r\n        }\r\n\r\n        const shouldOverrideResolution =\r\n            !!RagnarokSettings.resWidth && !!RagnarokSettings.resHeight;\r\n        const shouldOverrideFps = !!RagnarokSettings.fps;\r\n        if (shouldOverrideResolution || shouldOverrideFps) {\r\n            validated.sessionParams.streamParams?.forEach((item: StreamParam) => {\r\n                if (shouldOverrideResolution) {\r\n                    item.width = RagnarokSettings.resWidth;\r\n                    item.height = RagnarokSettings.resHeight;\r\n                }\r\n                if (shouldOverrideFps) {\r\n                    item.fps = RagnarokSettings.fps;\r\n                }\r\n            });\r\n            validated.sessionParams.monitorSettings?.forEach((item: MonitorSettings) => {\r\n                if (shouldOverrideResolution) {\r\n                    item.widthInPixels = RagnarokSettings.resWidth;\r\n                    item.heightInPixels = RagnarokSettings.resHeight;\r\n                }\r\n                if (shouldOverrideFps) {\r\n                    item.framesPerSecond = RagnarokSettings.fps;\r\n                }\r\n            });\r\n\r\n            if (shouldOverrideResolution) {\r\n                Log.i(\"{9d1820c}\", \"{92a6b38}\", RagnarokSettings.resWidth, RagnarokSettings.resHeight);\r\n            }\r\n            if (shouldOverrideFps) {\r\n                Log.d(\"{9d1820c}\", \"{6618bcd}\", RagnarokSettings.fps);\r\n            }\r\n        }\r\n        // cache parameters\r\n        this.sessionStartParams = validated;\r\n        return this.sessionStartParams;\r\n    }\r\n\r\n    private sendDeleteRequest(sessionId: string, gridServer: GridServer) {\r\n        gridServer.sendDeleteRequest(sessionId).then(\r\n            () => {\r\n                Log.d(\"{9d1820c}\", \"{fee1eea}\", sessionId);\r\n                this.notifyClientOfStop(sessionId);\r\n            },\r\n            _error => {\r\n                Log.e(\"{9d1820c}\", \"{50e2a6e}\", sessionId);\r\n                this.notifyClientOfStop(sessionId, _error);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Find whether mic is supported or not\r\n     * This is definitive (either site is http (https/Chrome flags bypass is required),\r\n     * or browser does not support capture)\r\n     **/\r\n    public isMicSupported(): boolean {\r\n        return MicCapturer.isMicSupported();\r\n    }\r\n\r\n    /**\r\n     * Enable/disable mic recording\r\n     * This will enable/disable recording of microphone (mic stream is already established\r\n     * if supported when we initialize), can cause perf issues if\r\n     * enabled\r\n     * This is an asynchronous API, upon completion MIC_STATE event is emitted.\r\n     * This method should be called after a successful session start\r\n     **/\r\n    public setMicRecordingEnabled(enabled: boolean) {\r\n        Log.i(\"{9d1820c}\", \"{f5b2f30}\", enabled);\r\n        if (enabled) {\r\n            this.micEnabled = true;\r\n            this.micCapturer.startMicCaptureOnDefaultDeviceWithFallback();\r\n        } else {\r\n            this.micEnabled = false;\r\n            this.micCapturer.stopMicRecording();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current status of mic recording\r\n     * This method will emit a MicStateEvent with result of operation\r\n     **/\r\n    public getMicState() {\r\n        this.micCapturer.emitMicState();\r\n    }\r\n\r\n    /**\r\n     * Find whether mic should be enabled by default\r\n     * This recommendation can be made based on various criteria\r\n     * e.g. platform permissions, performance, limited support etc.\r\n     * This is not the same as isMicSupported and cannot be used as a replacement\r\n     **/\r\n    public shouldDefaultEnableMic(): boolean {\r\n        return this.micCapturer.shouldDefaultEnableMic();\r\n    }\r\n\r\n    /**\r\n     * Send custom messages to the streaming server\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param message - messages need to be sent to the server\r\n     **/\r\n    public sendCustomMessage(message: CustomMessage) {\r\n        this.streamClient?.sendCustomMessage(message);\r\n    }\r\n\r\n    /**\r\n     * This API will enable/disable input handlings for given input types in fullscreen and windowed mode.\r\n     * When inputs are enabled/disabled, event listeners are registerd/de-registered with certain DOM elements.\r\n     * This could be useful when showing overlay buttton under fullsceen mode.\r\n     * @param enable - enable/disable\r\n     * @param inputs - input types that need to be enabled/disabled [default: InputType.All]\r\n     **/\r\n    public toggleUserInput(enable: boolean, inputs?: InputType) {\r\n        this.streamClient?.toggleUserInput(enable, inputs);\r\n        this.inputEnabled = enable;\r\n        this.inputs = inputs;\r\n    }\r\n\r\n    /**\r\n     * Toggle Right-Stick Dynamic Mouse Mode on/off.\r\n     * Default state is off, and must be explicitly enabled.\r\n     * Note: for xbox left stick will be used for rsdmm feature with same API\r\n     */\r\n    public toggleRsdmm(enable: boolean) {\r\n        // Callback after platform details have been initialised; ensures that the GamepadHandler\r\n        // has been created before it's used.\r\n        this.gamepadHandler.toggleRsdmmMode(enable);\r\n    }\r\n\r\n    /**\r\n     * Get the reference of VirtualGamepadHandler. Reference can be undefined if inputchannel is failed to go in open state.\r\n     * Clients should refer virtualgamepad.ts API details.\r\n     **/\r\n    public getVirtualGamepadHandler(): VirtualGamepadHandler | undefined {\r\n        return this.streamClient?.getVirtualGamepadHandler();\r\n    }\r\n\r\n    /**\r\n     * Set the client's authorization information.\r\n     * initialize must be called before using this API.\r\n     * Should be called before the first use of APIs that require authentication with the server (startSession, getActiveSessions).\r\n     * If not called, Jarvis authentication will be assumed.\r\n     * In the event of authentication related errors, can be called again to update the existing authentication information.\r\n     * @param authInfo - object\r\n                     { type: enum<auth method for server communication>\r\n                       token: string<token to authenticate server communication>}\r\n     **/\r\n    public setAuthInfo(authInfo: AuthInfo) {\r\n        this.gridServer?.setAuthInfo(authInfo);\r\n    }\r\n\r\n    /**\r\n     * Send plain text to server.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param text - ArrayBuffer containing text in utf-8 format\r\n     */\r\n    public sendTextInput(text: ArrayBuffer) {\r\n        this.streamClient?.sendTextInput(text);\r\n    }\r\n\r\n    /**\r\n     * Send virtual keyboard state to server.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param visible - Boolean describing the visual state of the virtual keyboard\r\n     */\r\n    public setVirtualKeyboardState(visible: boolean) {\r\n        this.streamClient?.setVirtualKeyboardState(visible);\r\n    }\r\n\r\n    /**\r\n     * Transform video element locally.\r\n     * @param offsetX - X coordinate offset\r\n     * @param offsetY - Y coordinate offset\r\n     * @param zoomFactor - zoom factor to determine translation limits\r\n     */\r\n    public setVideoTransforms(offsetX: number, offsetY: number, zoomFactor: number) {\r\n        this.streamClient?.setVideoTransforms(offsetX, offsetY, zoomFactor);\r\n    }\r\n\r\n    /**\r\n     * Toggle the visibility of on screen stats.\r\n     * Other shortcuts to bring up the stats (key combination and gestures) can still be used to toggle the visibility of the stats.\r\n     * NOTE: do nothing if stream is not started.\r\n     **/\r\n    public toggleOnScreenStats() {\r\n        this.streamClient?.toggleOnScreenStats();\r\n    }\r\n\r\n    /**\r\n     * Toggle the stutter visualization tool.\r\n     * NOTE: do nothing if stream is not started.\r\n     **/\r\n    public toggleStutterIndicator() {\r\n        this.streamClient?.toggleStutterIndicator();\r\n    }\r\n\r\n    /**\r\n     * Sets the keyboard layout on the server during a session\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param layout - keyboard layout string (e.g. \"en-US\")\r\n     */\r\n    public setKeyboardLayout(layout: string) {\r\n        Log.i(\"{9d1820c}\", \"{10717a6}\", layout);\r\n        this.streamClient?.setKeyboardLayout(layout);\r\n    }\r\n\r\n    /**\r\n     * Sends keyboard event to streamer.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param event - keyboard event\r\n     */\r\n    public sendKeyEvent(event: KeyboardEvent) {\r\n        // TODO: We should detect and error out if the stream is not active. I suspect we will define active as\r\n        // \"between a successful SESSION_START_RESULT and STREAM_STOPPED\"\r\n        this.streamClient?.sendKeyEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Sets the max bitrate while streaming.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param kbps - bitrate in kbps\r\n     * @param streamIdx - stream index\r\n     */\r\n    public setStreamingMaxBitrate(kbps: number, streamIdx: number = 0) {\r\n        this.streamClient?.setStreamingMaxBitrate(streamIdx, kbps);\r\n    }\r\n\r\n    /**\r\n     * Adjust for poor network condition while streaming.\r\n     * NOTE: do nothing if stream is not started.\r\n     * @param enabled - true for enable; false for disable\r\n     * @param streamIdx - stream index\r\n     */\r\n    public setDrcDfcState(enabled: boolean, streamIdx: number = 0) {\r\n        this.streamClient?.setDrcDfcState(streamIdx, enabled);\r\n    }\r\n\r\n    private applyContextFix() {\r\n        if (!RagnarokSettings.allowAudioReset) {\r\n            return;\r\n        }\r\n        if ((<any>window)[IOS_CONTEXT_PROP]) {\r\n            Log.i(\"{9d1820c}\", \"{e2aba64}\");\r\n            return;\r\n        }\r\n\r\n        const AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\r\n        const context: AudioContext = new AudioContext(<AudioContextOptions>{\r\n            latencyHint: \"interactive\",\r\n            sampleRate: 48000\r\n        });\r\n        context.onstatechange = () => {\r\n            if (context.state === \"suspended\") {\r\n                context.resume();\r\n                this.micCapturer.resetAudio();\r\n                Log.i(\"{9d1820c}\", \"{faee684}\");\r\n            }\r\n        };\r\n        (<any>window)[IOS_CONTEXT_PROP] = context;\r\n        (<any>window)[IOS_STREAM_PROP] = context.createMediaStreamDestination();\r\n\r\n        if (navigator.mediaDevices && this.resetAudioFunc) {\r\n            navigator.mediaDevices.addEventListener(\"devicechange\", this.resetAudioFunc);\r\n        }\r\n        Log.i(\"{9d1820c}\", \"{b5f7b9b}\");\r\n    }\r\n\r\n    private removeContextFix() {\r\n        if (!RagnarokSettings.allowAudioReset) {\r\n            return;\r\n        }\r\n        if ((<any>window)[IOS_CONTEXT_PROP]) {\r\n            (<any>window)[IOS_CONTEXT_PROP].close();\r\n            (<any>window)[IOS_CONTEXT_PROP] = undefined;\r\n            Log.i(\"{9d1820c}\", \"{0ac2a42}\");\r\n        }\r\n        (<any>window)[IOS_STREAM_PROP] = undefined;\r\n        if (navigator.mediaDevices && this.resetAudioFunc) {\r\n            navigator.mediaDevices.removeEventListener(\"devicechange\", this.resetAudioFunc);\r\n        }\r\n    }\r\n\r\n    private handleSystemIdle(event: LGSystemIdleEvent) {\r\n        const DEFAULT_IDLE_SECONDS_LEFT = 60; // eventually get from GES, likely come from client\r\n        if (event.detail.idle) {\r\n            this.streamClient?.notifyIdleUpdate(\r\n                RNotificationCode.ApproachingIdleTimeout,\r\n                DEFAULT_IDLE_SECONDS_LEFT\r\n            );\r\n            this.systemIdleId = window.setTimeout(() => {\r\n                this.streamClient?.stopStreamWithError(RErrorCode.ClientDisconnectedUserIdle);\r\n            }, DEFAULT_IDLE_SECONDS_LEFT * 1000);\r\n        }\r\n    }\r\n\r\n    private clearSystemIdleTimeout() {\r\n        if (this.systemIdleId) {\r\n            window.clearTimeout(this.systemIdleId);\r\n            this.systemIdleId = 0;\r\n        }\r\n    }\r\n\r\n    private deviceChange() {\r\n        this.micCapturer.onDeviceChange(this.deviceChangeCount);\r\n        this.deviceChangeCount++;\r\n    }\r\n\r\n    private terminateOrAbortStreaming(errorCode: number) {\r\n        if (!this.isSessionOngoing) {\r\n            return;\r\n        }\r\n        // When there is an exception in the UI layer, typically a bunch of them occur one after the other in bursts.\r\n        this.isSessionOngoing = false;\r\n\r\n        this.framesDecoded = this.streamClient?.getFramesDecoded() ?? 0;\r\n        const streamingTerminatedEvent = {\r\n            sessionId: this.gridServer?.getSessionId() ?? \"\",\r\n            subSessionId: this.gridServer?.getSubSessionId() ?? \"\",\r\n            zoneName: this.gridServer?.getZoneName() ?? \"\",\r\n            zoneAddress: this.gridServer?.getZoneAddress() || this.initializeParams.serverAddress,\r\n            error: {\r\n                code: errorCode\r\n            }\r\n        };\r\n        const exitAnalyticsEvent = this.getStreamExitEventData(\r\n            streamingTerminatedEvent,\r\n            performance.now() - this.startTime\r\n        );\r\n\r\n        this.micCapturer.shutdown();\r\n\r\n        if (!this.streamClient || this.streamClient?.isStartNotified()) {\r\n            this.sendExitAnalyticsEvent(exitAnalyticsEvent);\r\n        }\r\n        this.stopStreamClient(errorCode);\r\n        this.cancelSessionSetup();\r\n    }\r\n\r\n    private cancelSessionSetup() {\r\n        if (!this.streamClient && this.gridServer) {\r\n            this.gridServer.cancelSessionSetup(); // will take care of delete request and events\r\n        }\r\n    }\r\n\r\n    private getGridAppUninitializedError(apiName: string): ErrorDetails {\r\n        return {\r\n            code: RErrorCode.GridAppNotInitialized,\r\n            description: apiName + \" called before initialize\"\r\n        };\r\n    }\r\n}\r\n","// Helper utilities to create Workers or SharedWorkers (\"Workers\") from classes.\n// All code to be run in a Worker should be in a class that implements DoWork.\n\n// Call makeWorkerFromInterface() or makeSharedWorkerFromInterface() with the class\n// definition object (*not* an instance!), which must implement DoWork and hence the\n// doWork() function.  Said function must return an object that can be transferred\n// through a Worker's or a MessagePort's postMessage() function.\n\n// Note:\n//   Logging DOES NOT WORK in a Worker (yet)!\n//   The Worker will be ephemeral - close it by calling stopWorker().\n//   Sometimes Workers don't work - have a fallback as well!\n\n// Implementation note:\n//  The regular expression in the class source code extraction (in addClassHierarchy)\n//  is necessary because of the development client's local-compile stage, with any classes\n//  that are derived from classes in another module.\n//  That makes derived classes have the source form:\n//     class DerivedWorker extends <moduleref>.<classname>\n//  The <moduleref> string appears in the source but is only meaningful in-place,\n//  and specifically is invalid when the code is running in a Worker.\n//  The regexp attempts to fix that, as well as *not* breaking things when running in\n//  the production mode - which doesn't have that 'namespace' issue.\n\nimport { Log } from \"./utillogger\";\n\nconst LOGTAG = \"workerlogger\";\n\nexport const enum Commands {\n    CREATE,\n    CREATE_SUCCESS,\n    CLOSE,\n    WORK,\n    RESULT,\n    ERROR\n}\n\nexport interface CmdMsg {\n    cmd: Commands;\n    data: any;\n}\n\nexport interface DoWork<Result> {\n    doWork(): Result | Promise<Result>;\n}\n\nexport type WorkerResultCallback<Result> = (workerResult: Result) => void;\n\nfunction addClassHierarchy(interfaceRef: Function, blobStrings: string[]): void {\n    let classes: Function[] = [];\n    do {\n        classes.push(interfaceRef);\n        interfaceRef = Object.getPrototypeOf(interfaceRef);\n    } while (interfaceRef.name != \"\");\n\n    // Must reverse the hierarchy.  Classes in JavaScript are not 'hoisted', so\n    // the base class definitions must precede the derived class definitions.\n    // The normal hierarchy walk above would have the derived classes first.\n    classes.reverse();\n\n    for (let klaz of classes) {\n        blobStrings.push(klaz.toString().replace(/(extends )[^ {]*\\.([^ ]*[ {])/, \"$1$2\"));\n    }\n}\n\nfunction makeWorkerUrlFromInterface<Result>(\n    interfaceRef: { new (): DoWork<Result> },\n    messageHandler: Function,\n    errorHandler: Function,\n    connectHandler?: Function\n): string {\n    let blobStrings: string[] = [];\n\n    addClassHierarchy(interfaceRef, blobStrings);\n\n    // Add the message handling function for dedicated Workers\n    blobStrings.push(`${messageHandler.toString()}`);\n\n    if (connectHandler) {\n        blobStrings.push(`${connectHandler.toString()}`);\n        const onconnectStr = `onconnect = (event) => { ${connectHandler.name}(${interfaceRef.name}, event, ${messageHandler.name}); };`;\n        blobStrings.push(onconnectStr);\n\n        // The connectHandler must set up a port.onmessage handler if it wants one.\n    } else {\n        const onmessageStr = `onmessage = (event) => { ${messageHandler.name}(${interfaceRef.name}, event); };`;\n        blobStrings.push(onmessageStr);\n    }\n\n    blobStrings.push(`${errorHandler.toString()}`);\n    const onerrorStr = `onerror = (event) => { ${errorHandler.name}(event); };`;\n    blobStrings.push(onerrorStr);\n\n    const workerBlob = new Blob(blobStrings, { type: \"text/javascript\" });\n    return URL.createObjectURL(workerBlob);\n}\n\nexport function makeWorkerFromInterface<Result>(\n    interfaceRef: { new (): DoWork<Result> },\n    callback: WorkerResultCallback<Result>,\n    errorCallback: WorkerResultCallback<MessageEvent | ErrorEvent | string>\n): Worker {\n    // The following check:\n    //  ensures that the DoWork-generating interface reference is usable\n    //  prevents the Closure Compiler from 'optimizing' away the body of the class\n    if (!(interfaceRef.prototype as unknown as DoWork<Result>).doWork) {\n        throw new Error(\"Invalid Worker class provided\");\n    }\n\n    const workerUrl = makeWorkerUrlFromInterface<Result>(\n        interfaceRef,\n        commonMessageHandler,\n        commonErrorHandler\n    );\n\n    const worker = new Worker(workerUrl);\n    // Immediately revoke the object URL; it's no longer needed directly.\n    URL.revokeObjectURL(workerUrl);\n    // Setup the worker and the result callback.\n    setupWorkerAndCallback<Result>(worker, callback, errorCallback);\n\n    return worker;\n}\n\nexport interface SharedWorker extends AbstractWorker {\n    port: MessagePort;\n}\n\nexport function makeSharedWorkerFromInterface<Result>(\n    interfaceRef: { new (): DoWork<Result> },\n    callback: WorkerResultCallback<Result>,\n    errorCallback: WorkerResultCallback<MessageEvent | ErrorEvent | string>\n): SharedWorker {\n    const w = window as any;\n    if (typeof w[\"SharedWorker\"] == \"undefined\") {\n        throw new Error(\"SharedWorker not supported\");\n    }\n\n    // The following check:\n    //  ensures that the DoWork-generating interface reference is usable\n    //  prevents the Closure Compiler from 'optimizing' away the body of the class\n    if (!(interfaceRef.prototype as unknown as DoWork<Result>).doWork) {\n        throw new Error(\"Invalid Worker class provided\");\n    }\n\n    const workerUrl = makeWorkerUrlFromInterface<Result>(\n        interfaceRef,\n        commonMessageHandler,\n        commonErrorHandler,\n        connectHandler\n    );\n\n    const worker: SharedWorker = new w[\"SharedWorker\"](workerUrl);\n    // Immediately revoke the object URL; it's no longer needed directly.\n    URL.revokeObjectURL(workerUrl);\n    // Setup the worker and the result callback.\n    setupWorkerAndCallback<Result>(worker, callback, errorCallback);\n\n    return worker;\n}\n\nconst workerCloseTimers = new Map<Worker | MessagePort, number>();\n\nfunction isWorkerStopping(worker: Worker | MessagePort): boolean {\n    return workerCloseTimers.has(worker);\n}\n\nfunction getWorkerOrPort(worker: Worker | SharedWorker) {\n    return \"port\" in worker ? worker.port : worker;\n}\n\nexport function stopWorker(worker?: Worker | SharedWorker) {\n    if (!worker) {\n        return;\n    }\n\n    const workerPort = getWorkerOrPort(worker);\n    stopWorkerInternal(workerPort);\n}\n\nfunction stopWorkerInternal(workerPort: Worker | MessagePort) {\n    if (isWorkerStopping(workerPort)) {\n        return;\n    }\n\n    const postMessage: Function = workerPort.postMessage.bind(workerPort);\n\n    const terminateWorker = () => {\n        const timer = workerCloseTimers.get(workerPort);\n        if (timer) {\n            clearTimeout(timer);\n            workerCloseTimers.delete(workerPort);\n        }\n\n        // Only dedicated Workers have a terminate() function.\n        // For shared workers, the best we can do is close our MessagePort. The shared worker\n        // may still be running, but it won't communicate with us\n        if (workerPort instanceof Worker) {\n            workerPort.terminate();\n        } else if (workerPort instanceof MessagePort) {\n            workerPort.close();\n        }\n    };\n\n    // Make sure to close the worker; it seems to take a huge amount of CPU otherwise.\n    postMessage({ cmd: Commands.CLOSE, data: null });\n    // Use a timeout to give the Worker some time to exit cleanly.\n    const timer = window.setTimeout(terminateWorker, 150);\n    workerCloseTimers.set(workerPort, timer);\n}\n\n// Setup the message and error callbacks for a worker\nfunction setupWorkerAndCallback<Result>(\n    worker: Worker | SharedWorker,\n    callback: WorkerResultCallback<Result>,\n    errorCallback: WorkerResultCallback<MessageEvent | ErrorEvent | string>\n) {\n    const workerPort = getWorkerOrPort(worker);\n\n    const postMessage: Function = workerPort.postMessage.bind(workerPort);\n\n    let hadError = false;\n    const errHandler = (error: MessageEvent | ErrorEvent | string) => {\n        if (hadError) {\n            return;\n        }\n        hadError = true;\n        Log.e(\"{10ca8e2}\", \"{03baf25}\", error, typeof error);\n\n        stopWorkerInternal(workerPort);\n\n        errorCallback(error);\n    };\n\n    workerPort.onmessage = event => {\n        const cmdMsg = event.data as CmdMsg;\n        let cmd: Commands = cmdMsg.cmd;\n        let data: any = cmdMsg.data;\n\n        switch (cmd) {\n            case Commands.CREATE_SUCCESS:\n                postMessage({ cmd: Commands.WORK, data: null });\n                break;\n            case Commands.RESULT: {\n                callback(data);\n\n                stopWorkerInternal(workerPort);\n                break;\n            }\n            case Commands.ERROR:\n                errHandler(data);\n                break;\n        }\n    };\n\n    // messageerror - received a non-deserializable Message.\n    if (\"onmessageerror\" in workerPort) {\n        // SharedWorker's MessagePort\n        workerPort[\"onmessageerror\"] = errHandler;\n    }\n\n    // Worker and SharedWorker's error handler.\n    // Should include errors propagated from the Worker context.\n    worker[\"onerror\"] = errHandler;\n\n    // Post a message to create the DoWork instance class.\n    postMessage({ cmd: Commands.CREATE, data: null });\n}\n\n// The connect handler function that runs in the SharedWorker context.\n// Not used for dedicated Workers.\nfunction connectHandler(\n    func: { new (): DoWork<any> },\n    event: MessageEvent,\n    messageHandler: Function\n) {\n    const thisObj = globalThis as any;\n    thisObj.port = event.ports[0];\n    thisObj.port.onmessage = messageHandler.bind(self, func);\n}\n\n// The message handler function that runs in the Worker or SharedWorker context.\nfunction commonMessageHandler(func: { new (): DoWork<any> }, event: MessageEvent) {\n    const thisObj = globalThis as any;\n\n    // Create global object to hold all message handlers in this SharedWorker.\n    thisObj.msgHandlers = thisObj.msgHandlers ?? {};\n\n    const cmdMsg = event.data as CmdMsg;\n    let cmd: Commands = cmdMsg.cmd;\n    let data: any = cmdMsg.data;\n\n    // TODO:  Update this for different worker global scopes (dedicated, shared, service)\n    let messagePoster = \"port\" in thisObj ? thisObj[\"port\"] : (self as any);\n    //let messagePoster = self as any; // Dedicated Worker\n    //let messagePoster = thisObj.port; // Shared Worker\n    //let messagePoster = ; // Service Worker\n\n    switch (cmd) {\n        case Commands.CREATE:\n            const msgHandler = new func();\n            thisObj.msgHandlers[func.name] = msgHandler;\n\n            messagePoster[\"postMessage\"]({ cmd: Commands.CREATE_SUCCESS, data: null });\n            break;\n        case Commands.CLOSE:\n            // Close Worker\n            self?.close?.();\n            break;\n        case Commands.WORK: {\n            const msgHandler = thisObj.msgHandlers[func.name];\n\n            // Use Promise.resolve() to handle async as well as normal functions.\n            // Normal functions return their value, async return a Promise.\n            // Promise.resolve() allows using .then for results of both forms.\n            Promise.resolve(msgHandler.doWork()).then(value => {\n                messagePoster[\"postMessage\"]({ cmd: Commands.RESULT, data: value });\n            });\n            break;\n        }\n        // TODO: Allow handling custom messages.\n        default:\n            throw new Error(`Unknown message: ${cmd}:${data}`);\n    }\n}\n\n// The error handling function that runs in the Worker or SharedWorker context.\n// Should capture all uncaught exceptions and errors, and report them to the main thread.\nfunction commonErrorHandler(event: ErrorEvent) {\n    const thisObj = globalThis as any;\n    // TODO:  Update this for different worker global scopes (dedicated, shared, service)\n    let messagePoster = \"port\" in thisObj ? thisObj[\"port\"] : (self as any);\n    messagePoster[\"postMessage\"]({ cmd: Commands.ERROR, data: event });\n}\n","import { Log } from \"./utillogger\";\nimport {\n    BrowserName,\n    DeviceModel,\n    DeviceOS,\n    DeviceType,\n    DeviceVendor,\n    PlatformName\n} from \"./enumnames\";\nimport {\n    DoWork,\n    makeWorkerFromInterface,\n    makeSharedWorkerFromInterface,\n    stopWorker,\n    SharedWorker\n} from \"./workerutils\";\n\nconst enum WorkerTelemetryType {\n    ERROR_EVENT = \"ErrorEvent\",\n    ERROR_STRING = \"ErrorString\",\n    MESSAGE_EVENT = \"MessageEvent\",\n    UNUSED = \"WorkerUnused\",\n    TIMEOUT = \"WorkerTimeout\",\n    CREATE_FAILURE = \"WorkerCreateFailure\",\n    OVERLONG_DELAY = \"WorkerOverlongDelay\"\n}\n\ninterface TelemetryHandler {\n    emitDebugEvent(\n        key1?: string,\n        key2?: string,\n        key3?: string,\n        key4?: string,\n        key5?: string,\n        sessionId?: string,\n        subSessionId?: string\n    ): void;\n}\n\nconst LOGTAG = \"platform\";\n\nfunction getDeviceOS(platformName: PlatformName): DeviceOS | undefined {\n    let os = undefined;\n    switch (platformName) {\n        case PlatformName.CHROME_OS:\n            os = DeviceOS.CHROMEOS;\n            break;\n        case PlatformName.WINDOWS:\n            os = DeviceOS.WINDOWS;\n            break;\n        case PlatformName.MAC:\n            os = DeviceOS.MACOS;\n            break;\n        case PlatformName.LINUX:\n            os = DeviceOS.LINUX;\n            break;\n        case PlatformName.IOS:\n            os = DeviceOS.IOS;\n            break;\n        case PlatformName.IPADOS:\n            os = DeviceOS.IPADOS;\n            break;\n        case PlatformName.TIZEN:\n            os = DeviceOS.TIZEN;\n            break;\n        case PlatformName.WEBOS:\n            os = DeviceOS.WEBOS;\n            break;\n        case PlatformName.ANDROID:\n            os = DeviceOS.ANDROID;\n            break;\n        case PlatformName.XBOX:\n            os = DeviceOS.XBOX;\n            break;\n        case PlatformName.STEAMOS:\n            os = DeviceOS.STEAMOS;\n            break;\n        case PlatformName.CCOS:\n            os = DeviceOS.CCOS;\n            break;\n    }\n    // @todo Fix for platforms: \"SHIELD\", \"TVOS\"\n    return os;\n}\n\nfunction getDeviceType(platformName: PlatformName, deviceModel?: DeviceModel): DeviceType {\n    switch (deviceModel) {\n        case DeviceModel.STEAMDECK:\n            return DeviceType.CONSOLE;\n        default:\n            break;\n    }\n    switch (platformName) {\n        case PlatformName.IOS:\n            return DeviceType.PHONE;\n        case PlatformName.IPADOS:\n            return DeviceType.TABLET;\n        case PlatformName.XBOX:\n            return DeviceType.CONSOLE;\n        case PlatformName.WEBOS:\n        case PlatformName.TIZEN: // can we have phones too ?\n            return DeviceType.TV;\n        default:\n            return DeviceType.DESKTOP;\n    }\n    // @todo Fix for all device types: \"DESKTOP\", \"LAPTOP\", \"TV\", \"PHONE\", \"TABLET\"\n}\n\nexport declare interface PlatformDetails {\n    // Name of the detected OS/Platform\n    os: PlatformName;\n    // Version of the OS/Platform\n    osRawVer: string;\n    // Version of the OS/Platform (sanitised)\n    osVer: string;\n    // Name of the detected browser\n    browser: BrowserName;\n    // Major version of the browser\n    browserVer: string;\n    // Full version of the browser (sanitised)\n    browserFullVer: string;\n    // Whether forging of the platform/browser has been detected\n    forging: boolean;\n    // Whether spoofing of the user agent data has been detected\n    spoofing: boolean;\n    // A confidence level, from 0 (not confident) to 10 (fully confident),\n    // regarding the overall detection.\n    //  0: No confidence.\n    //  3: Little confidence. UNKNOWN values are definitely unknown, others are low possibility.\n    //  5: Some confidence. UNKNOWN values are definitely unknown, others are possible.\n    //  6: Some confidence. UNKNOWN values are definitely unknown, other values might be spoofed.\n    //  7: Some confidence. UNKNOWN values are definitely unknown, other values are likely.\n    //  8: High confidence. Empty/0 values were spoofed and have been replaced.\n    //  9: High confidence. Values are expected to be correct or a sub-value\n    //                      (e.g. Chromium instead of specific browser name).\n    // 10: High confidence. All values are expected to be valid.\n    confidence: number;\n\n    // Derived values\n\n    // device vendor enumeration\n    vendor: DeviceVendor;\n    // full device vendor\n    vendorFull?: string;\n\n    // Generated values\n\n    // deviceType in the format Nvidia backend services expects\n    deviceType?: DeviceType;\n    // deviceOS in the format Nvidia backend services expects\n    deviceOS?: DeviceOS;\n    // deviceModel in the format Nvidia backend services expects\n    deviceModel?: DeviceModel;\n\n    // Timings\n\n    // How long the entire checking and determining process took\n    totalTime: DOMHighResTimeStamp;\n}\n\n// TODO: Add checks based on\n//       * screen size (distinguish tablet and phone)\n//       * additional GL renderers\n//       * mismatch between platform and other detection\n\ninterface GlDebugInfo {\n    vendorName: string;\n    rendererName: string;\n    present: boolean;\n}\n\ninterface SmartTVUAInfo {\n    isKnownTVDevice: boolean;\n    modelName: string;\n    vendorName: DeviceVendor;\n}\n\ndeclare interface UserAgentData {\n    brands: Brand[];\n    mobile: boolean;\n\n    platform?: string;\n    getHighEntropyValues(hints: string[]): Promise<UADataHEValues>;\n}\ndeclare interface Brand {\n    brand: string;\n    version: string;\n}\ndeclare interface UserAgentData_HighEntropyValues {\n    platform?: string;\n    architecture?: string;\n    uaFullVersion?: string;\n    platformVersion?: string;\n    model?: string;\n    bitness?: string;\n\n    brands?: Brand[];\n    mobile?: boolean;\n}\n\ndeclare type UADataHEValues = UserAgentData_HighEntropyValues | undefined;\n\ndeclare interface Navigator {\n    userAgentData?: UserAgentData;\n}\n\ninterface NavigatorPlatform {\n    platform: string;\n}\n\nconst UNKNOWN_VERSION = \"0\";\n\nconst INSTANT_TIMEOUT = 0;\nconst FALLBACK_TIMEOUT = 150;\nconst LONG_FALLBACK_TIMEOUT = FALLBACK_TIMEOUT * 2;\n\nconst MAX_VOICE_CHECK_TOTAL_TIME = 600;\n\nconst INVALID_TIMER_ID = 0;\n\n// A class to try to detect the browser, operating system, device type, device vendor and certain version information.\n// Much of the code is asynchronous, either intrinsically or due to running in timer callbacks.\n// This class gets instantiated early on, but some clients run a lot of code on the main thread during their first\n// initialization.  Ensure that any timers with important timeouts are started after that 'heavy' initialization,\n// otherwise the timeouts will always be exceeded prior to any work being able to be executed.\nclass Platform {\n    private start: DOMHighResTimeStamp = 0;\n    private finish: DOMHighResTimeStamp = 0;\n\n    private voiceIsChromeOS = false;\n    private voiceIsChrome = false;\n    private voiceIsFirefox = false;\n    private voiceIsFirefoxAndroid = false;\n    private voiceIsAndroid = false;\n    private voiceIsMicrosoft = false;\n    private voiceIsApple = false;\n    private voiceIsEdge = false;\n    private voiceIsWindows = false;\n    private voiceIsAppleEllen = true;\n    private voiceWasKnown = false;\n\n    private isBrowserEdge = false;\n    private isBrowserEdgeLegacy = false;\n    private isBrowserEdgeiOS = false;\n    private isBrowserSafari = false;\n    private isBrowserChrome = false;\n    private isBrowserChromeiOS = false;\n    private isBrowserNetscape = false;\n    private isBrowserFirefoxiOS = false;\n    private isBrowserFirefoxTV = false;\n    private isBrowserOpera = false;\n    private isBrowserOperaiOS = false;\n    private isBrowserOperaTouch = false;\n    private isBrowserBrave = false;\n    private isBrowserYandex = false;\n    private isBrowserSamsungChromium = false;\n    private isBrowserReactBased = false;\n\n    private isPlatformMacIntel = false;\n    private isPlatformiPhone = false;\n    private isPlatformWin = false;\n    private isPlatformiPad = false;\n    private isPlatformLinux = false;\n    private isPlatformFreeBsdX86 = false;\n    private isPlatAndroid = false;\n    private isPlatWebOS = false;\n    private isPlatTizen = false;\n    private isPlatCcOS = false;\n\n    private isPluginChromeNative = false;\n    private isPluginChromePDF = false;\n    private isPluginChromiumPDF = false;\n    private isPluginEdgePDF = false;\n    private isPluginSamsungHealth = false;\n\n    private isBrandChrome = false;\n    private isBrandEdge = false;\n    private isBrandOpera = false;\n    private isBrandYandex = false;\n    private isBrandChromium = false;\n    private isBrandUnknown = false;\n\n    private isMobileUAD = false;\n    private isMobileHE? = false;\n    private isMobileUAD_HE? = false;\n    private isMobileNavigator = false;\n\n    private isGLXbox = false;\n    private isGLXboxSeries = false;\n    private isGLSteamDeck = false;\n\n    private isHEModelXbox = false;\n    private isHEModelFireTV = false;\n    private isHEModelBraviaTV = false;\n    private isHEModelChromecastTV = false;\n    private isHEModelShieldTV = false;\n    private isHEModelMiTV = false;\n    private isHEModelTVision = false;\n\n    private isHEPlatformWindows = false;\n    private isHEPlatformMac = false;\n    private isHEPlatformChromeOS = false;\n    private isHEPlatformChromiumOS = false;\n    private isHEPlatformAndroid = false;\n    private isHEPlatformLinux = false;\n    private isHEPlatformOverridden = false;\n    private isHEKnownTVDevice = false;\n\n    private isKnownTVDeviceUA = false;\n    private UADeviceVendor?: DeviceVendor;\n    private UADeviceModel?: string;\n\n    private supportsAvif = false;\n\n    private supportsBigInt = false;\n    private supportsBigInt64Array = false;\n    // private supportsCorrect8bitCollationOrderName = false;\n    private supportsDecodingInfo = false;\n    private supportsPerformanceNavigationTiming = false;\n    private supportsWebAssemblyExceptions = false;\n    private supportsBroadcastChannel = false;\n    private supportsGpuBuffer = false;\n    private supportsMediaRecorder = false;\n\n    private supportsDeviceLightEvent = false;\n    private supportsAbortSignalAbort = false;\n    private supportsBeforeInputEvent = false;\n    private supportsIntlDisplayNames = false;\n    private supportsIntlCollationOptions = false;\n\n    private supportsApplePay = false;\n    private supportsCredential = false;\n    private supportsBrowserRuntime = false;\n\n    private supportsSharedWorker = false;\n    private supportsCSSCounterStyleRule = false;\n\n    private supportsLargestContentfulPaint = false;\n    private supportsCSSregisterProperty = false;\n    private supportsXR = false;\n    private supportsGetInstalledRelatedApps = false;\n    private supportsBarcodeDetector = false;\n    private supportsWakeLock = false;\n    private supportsPromiseAny = false;\n    private supportsFileSystemHandle = false;\n    private supportsAtomicsWaitAsync = false;\n    private supportsCSSaspectRatio = false;\n    private supportsWebHID = false;\n    private supportsOverflowClip = false;\n\n    private mediaPrimaryHover = false;\n    //private mediaAnyHover = false;\n    private mediaPrimaryNonHover = false;\n    //private mediaAnyNonHover = false;\n    private mediaPrimaryCoarsePointer = false;\n    //private mediaAnyPointer = false;\n    private mediaPrimaryFinePointer = false;\n    //private mediaAnyFinePointer = false;\n\n    private hasGL = false;\n    private hasUaData = false;\n    private isUaDataSpoofed = false;\n    private useUaData = false;\n    private ignoreUaData = false;\n    private wereHeChecksLate = false;\n\n    private performedChecks = false;\n    private performedVoiceChecks = false;\n    private performedGlChecks = false;\n    private performedHEChecks = false;\n    private performedNavigatorPlatformChecks = false;\n\n    private voiceCheckTimer = INVALID_TIMER_ID;\n    private glCheckTimer = INVALID_TIMER_ID;\n    private heCheckTimer = INVALID_TIMER_ID;\n    private smartTvCheckTimer = INVALID_TIMER_ID;\n    private platCheckTimer = INVALID_TIMER_ID;\n\n    private glCheckFallbackTime = 0;\n    private platCheckFallbackTime = 0;\n\n    private detector?: Promise<PlatformDetails>;\n\n    private platformDetails: PlatformDetails = {\n        os: PlatformName.UNKNOWN,\n        osRawVer: UNKNOWN_VERSION,\n        osVer: UNKNOWN_VERSION,\n        browser: BrowserName.UNKNOWN,\n        browserVer: UNKNOWN_VERSION,\n        browserFullVer: UNKNOWN_VERSION,\n        forging: true,\n        spoofing: true,\n        confidence: 0,\n        totalTime: 0,\n        vendor: DeviceVendor.UNKNOWN\n    };\n    private osName?: PlatformName;\n    private osRawVersion?: string;\n    private osVersion?: string;\n    private browserName?: BrowserName;\n    private browserVersion?: string;\n    private chromiumVersion?: string;\n    private browserFullVer?: string;\n    private chromeUaVersion?: string;\n    private chromeUaMajorVer?: string;\n    private deviceName?: string;\n    private deviceVendor?: DeviceVendor;\n    private deviceVendorFull?: string;\n    private devType?: DeviceType;\n    private devModel?: DeviceModel;\n    private isForged?: boolean;\n    private confidenceLevel?: number;\n\n    private telemetry?: TelemetryHandler;\n    private queuedTelemetry: { name: string; type: WorkerTelemetryType; data?: any }[] = [];\n\n    constructor() {}\n\n    public detectPlatformDetails(): Promise<PlatformDetails> {\n        if (!this.detector) {\n            this.detector = this.getDetectorPromise();\n        }\n        return this.detector!;\n    }\n\n    private getDetectorPromise(): Promise<PlatformDetails> {\n        this.start = performance.now();\n\n        return new Promise((resolve, reject) => {\n            if (this.performedChecks) {\n                resolve(this.platformDetails);\n                return;\n            }\n\n            this.beginChecking().then(() => {\n                this.performedChecks = true;\n                resolve(this.platformDetails);\n            });\n        });\n    }\n\n    // Need to handle four cases:\n    // 1. No speechSynthesis object at al, so just check immediately (voice check is no-op)\n    // 2. No onvoiceschanged event, so just check immediately\n    // 3. onvoiceschanged event but voices already changed, so process immediately\n    // 4. onvoiceschanged event and voices not changed yet, so wait for event to fire\n    //\n    // However, browsers can block detection of voices but leave the onvoiceschanged event present.\n    // The event will then never fire.\n    // This could conceivably happen if a user denies permission for voice detection.\n    //\n    // To accommodate that, a setTimeout() call is made to perform the checking, as well as the event hander.\n    // The first time the checks are run, resolve() will be called and 'finish' the Promise.\n    // Subsequent attempts to run the checks will return early, and not update the results.\n    // This avoids running the checking code multiple times.\n    //\n    // The checks will only be run if there are voices to check (unless the overall voice checking\n    // timeout has passed).  If there aren't and the overall voice checking timeout hasn't been reached,\n    // a new timeout callback is scheduled, and the voiceschanged event continues to be listened for.\n    // This means that multiple events or timeout callbacks may be needed before the voice checking completes.\n    private checkVoices(): Promise<void> {\n        const synthesis = window[\"speechSynthesis\"];\n        if (!synthesis) {\n            // No speech synthesis, so no voices\n            return new Promise(resolve => {\n                resolve();\n            });\n        } else {\n            const getVoices = synthesis[\"getVoices\"];\n            let curVoices = getVoices?.call(synthesis) || [];\n            return new Promise((resolve, reject) => {\n                if (!getVoices || curVoices.length) {\n                    this.checkVoicesInternal(curVoices);\n                    resolve();\n                } else {\n                    let startedVoiceChecking = 0;\n\n                    const checkVoicesLambda = () => {\n                        curVoices = getVoices.call(synthesis);\n                        const now = performance.now();\n                        // If there are no voices, and the overall timeout hasn't been reached (or even started),\n                        // wait some more and try again.\n                        if (\n                            curVoices.length == 0 &&\n                            (startedVoiceChecking == 0 ||\n                                now - startedVoiceChecking < MAX_VOICE_CHECK_TOTAL_TIME)\n                        ) {\n                            // Don't use empty voice lists for checking.  Wait for another event callback,\n                            // or for the timer check to fire again.\n                            // Voices should be available in all normal cases and should appear within a\n                            // few hundred milliseconds at worst; the MAX_VOICE_CHECK_TOTAL_TIME is the\n                            // maximum total delay time that can be introduced, but the delay won't be\n                            // that large unless someone has spoofed the speech synthesis voices to be empty.\n\n                            // Reset the fallback timeout.\n                            if (this.voiceCheckTimer) {\n                                clearTimeout(this.voiceCheckTimer);\n                            }\n                            this.voiceCheckTimer = window.setTimeout(\n                                checkVoicesLambda,\n                                FALLBACK_TIMEOUT\n                            );\n                            return;\n                        }\n\n                        // Clear any pending fallback/timer check.\n                        if (this.voiceCheckTimer) {\n                            clearTimeout(this.voiceCheckTimer);\n                            this.voiceCheckTimer = INVALID_TIMER_ID;\n                        }\n\n                        // Check the current set of voices.\n                        this.checkVoicesInternal(curVoices);\n                        resolve();\n                    };\n\n                    // Listen for voiceschanged events.\n                    // These can (potentially) fire prior to the 'instant' timeout callback being executed,\n                    // and thus in theory can run the voice checking sooner than would otherwise happen.\n                    if (synthesis[\"onvoiceschanged\"] !== undefined) {\n                        synthesis[\"onvoiceschanged\"] = checkVoicesLambda;\n                    }\n\n                    // Run the remainder of the code fully asynchronously.\n                    // This firstly allows time for the voices to be loaded, and secondly allows\n                    // the timeouts to be relative to when there's actual processing time available.\n                    // That is, don't start the timeouts until after the first 'heavy' initialization\n                    // some clients do.\n                    this.runAfterStartup(() => {\n                        // Short-circuit the fallback timeout if voice information has become available.\n                        // Otherwise, it takes at least FALLBACK_TIMEOUT milliseconds (or another\n                        // voiceschanged event) before the new voices are checked.\n                        curVoices = getVoices.call(synthesis);\n                        if (curVoices.length) {\n                            checkVoicesLambda();\n                            return;\n                        }\n\n                        this.voiceCheckTimer = window.setTimeout(\n                            checkVoicesLambda,\n                            FALLBACK_TIMEOUT\n                        );\n                        startedVoiceChecking = performance.now();\n                    });\n                }\n            });\n        }\n    }\n\n    private checkVoicesInternal(voices: SpeechSynthesisVoice[]): void {\n        if (this.performedVoiceChecks) {\n            return;\n        }\n\n        for (const voice of voices) {\n            const voiceID = voice[\"voiceURI\"] || \"\";\n\n            // First, check exclusive patterns.\n            if (voiceID.startsWith(\"Chrome OS\")) {\n                this.voiceIsChromeOS = true;\n            } else if (voiceID.startsWith(\"Google\")) {\n                this.voiceIsChrome = true;\n            } else if (voiceID.includes(\"moz-tts\")) {\n                if (voiceID.includes(\"android\")) {\n                    this.voiceIsFirefoxAndroid = true;\n                    this.isPlatAndroid = true;\n                }\n                this.voiceIsFirefox = true;\n            } else if (voiceID == \"English United States\") {\n                this.voiceIsAndroid = true;\n            }\n\n            // Now check for patterns that can be shared with the above.\n            if (voiceID.includes(\"Microsoft\")) {\n                this.voiceIsMicrosoft = true;\n                // NB - Lots of Windows-based browsers use Microsoft voices\n                //      However, only Edge has the Microsoft Online voices\n                if (voiceID.includes(\"Online\")) {\n                    this.voiceIsEdge = true;\n                } else {\n                    this.voiceIsWindows = true;\n                }\n            } else if (voiceID.includes(\"com.apple\")) {\n                this.voiceIsApple = true;\n                if (voiceID.includes(\"Ellen\")) {\n                    this.voiceIsAppleEllen = true;\n                }\n            } else if (voiceID == \"Zuzana\") {\n                // Apple voices on macOS running Chrome don't start with 'com.apple'\n                // Luckily, 'Zuzana' is always present AFAICS.\n                this.voiceIsApple = true;\n            }\n        }\n\n        this.voiceWasKnown =\n            this.voiceIsApple ||\n            this.voiceIsMicrosoft ||\n            this.voiceIsChrome ||\n            this.voiceIsChromeOS ||\n            this.voiceIsFirefox ||\n            this.voiceIsAndroid;\n\n        this.performedVoiceChecks = true;\n    }\n\n    private async beginChecking() {\n        // Perform checks\n        await (Promise as any)\n            .all([\n                this.checkGlDebugInfo(),\n                this.checkHighEntropy(),\n                this.checkAvif(),\n                this.checkVoices(),\n                this.checkUserAgentVersion(),\n                this.checkWindowProperties(),\n                this.checkPlatform(),\n                this.checkApplePay(),\n                this.checkPlugins(),\n                this.checkMobile(),\n                this.checkMediaQueries(),\n                this.checkTvDevices()\n            ])\n            .then(() => {\n                this.validateChecks();\n                this.createPlatformDetails();\n            });\n    }\n\n    private checkWindowProperties() {\n        const w = window as any;\n        const ownProp = w[\"hasOwnProperty\"];\n\n        const navi = w[\"navigator\"];\n        // Browser checks\n\n        if (ownProp.call(w, \"MSMediaKeys\")) {\n            this.isBrowserEdgeLegacy = true;\n        } else if (ownProp.call(w, \"_firefoxTV_cachedScrollPosition\")) {\n            // Firefox on FireTV has _firefoxTV_cachedScrollPosition, but frequently with value undefined\n            this.isBrowserFirefoxTV = true;\n        } else if (\n            w[\"__edgeActiveElement\"] !== undefined ||\n            w[\"__edgeTrackingPreventionStatistics\"]\n        ) {\n            // These are injected by Edge on iOS in different circumstances\n            this.isBrowserEdgeiOS = true;\n        } else if (w[\"safari\"]) {\n            this.isBrowserSafari = true;\n        } else if (w[\"opr\"]) {\n            this.isBrowserOpera = true;\n        } else if (w[\"oprt\"]) {\n            // oprt is from iOS\n            this.isBrowserOperaiOS = true;\n        } else if (navi[\"brave\"]) {\n            this.isBrowserBrave = true;\n        } else if (w[\"OperaTouch\"] !== undefined || w[\"ethereum\"]) {\n            // We know we haven't injected MetaMask's crypto wallet, so if\n            // window.ethereum is present this must be Opera on mobile.\n            // NB window.ethereum is also present in some Brave browsers, so check those before this.\n            // OperaTouch is from some versions on Android\n            this.isBrowserOperaTouch = true;\n            this.isPlatAndroid = true;\n        } else if (w[\"yandex\"]) {\n            this.isBrowserYandex = true;\n        } else if (w[\"QuickAccess\"]) {\n            this.isBrowserSamsungChromium = true;\n        } else if (w[\"chrome\"]) {\n            // Lots of Chromium-based browsers have this property; check them before this!\n            this.isBrowserChrome = true;\n        } else if (w[\"netscape\"]) {\n            this.isBrowserNetscape = true;\n        } else if (w[\"__firefox__\"]) {\n            // window.__firefox__ is injected by older Firefox on iOS.\n            // Newer Firefox on iOS runs that script in a different \"content world\".\n            // TODO Find a new way to detect Firefox on iOS\n            this.isBrowserFirefoxiOS = true;\n        } else if (w[\"__gCrWeb\"]) {\n            // Specially injected by Chrome on iOS platforms\n            this.isBrowserChromeiOS = true;\n        } else if (w[\"ReactNativeWebView\"]) {\n            this.isBrowserReactBased = true;\n        }\n\n        // Special platform checks\n        if (w[\"contacts\"] !== undefined || w[\"ContactsManager\"] !== undefined) {\n            this.isPlatAndroid = true;\n        } else if (\n            ownProp.call(w, \"onwebOSAccessibilityAlertDone\") ||\n            w[\"webOSSystem\"] ||\n            ownProp.call(w, \"onwebosaccessibilityalertdone\")\n        ) {\n            this.isPlatWebOS = true;\n        } else if (\n            w[\"tizen\"] ||\n            w[\"TizenTVApiInfo\"] ||\n            w[\"addEdgeEffectONSCROLLTizenUIF\"] ||\n            w[\"tizentvwasm\"]\n        ) {\n            this.isPlatTizen = true;\n        } else if (w[\"HardkeyEvent\"]) {\n            this.isPlatCcOS = true;\n        }\n\n        // Feature checks, for checking rendering engine version based on its capabilities.\n\n        const intl = w[\"Intl\"];\n\n        // On iOS, the rendering engine (WebKit) is only updated when the OS updates, so these\n        // checks can proxy for the OS version.\n        if (navi[\"mediaCapabilities\"]?.[\"decodingInfo\"]) {\n            this.supportsDecodingInfo = true;\n        }\n        if (w[\"BigInt\"]) {\n            this.supportsBigInt = true;\n            if (w[\"BigInt64Array\"]) {\n                this.supportsBigInt64Array = true;\n            }\n        }\n        if (w[\"PerformanceNavigationTiming\"]) {\n            this.supportsPerformanceNavigationTiming = true;\n        }\n        if (w[\"WebAssembly\"] && w[\"WebAssembly\"][\"Exception\"]) {\n            this.supportsWebAssemblyExceptions = true;\n        }\n        if (w[\"BroadcastChannel\"]) {\n            this.supportsBroadcastChannel = true;\n        }\n        if (w[\"GPUBuffer\"]) {\n            this.supportsGpuBuffer = true;\n        }\n        if (w[\"SharedWorker\"]) {\n            this.supportsSharedWorker = true;\n        }\n        if (w[\"MediaRecorder\"]) {\n            this.supportsMediaRecorder = true;\n        }\n        if (w[\"CSSCounterStyleRule\"]) {\n            this.supportsCSSCounterStyleRule = true;\n        }\n\n        // Firefox version updates tend to improve/modify JavaScript in some fashion.\n        if (ownProp.call(w, \"ondevicelight\")) {\n            this.supportsDeviceLightEvent = true;\n        }\n        if (w[\"AbortSignal\"]?.[\"abort\"]) {\n            this.supportsAbortSignalAbort = true;\n        }\n        if (ownProp.call(w, \"onbeforeinput\")) {\n            this.supportsBeforeInputEvent = true;\n        }\n        if (intl) {\n            if (intl[\"DisplayNames\"]) {\n                this.supportsIntlDisplayNames = true;\n            }\n            const col = new intl[\"Collator\"](\"zh\", { collation: \"pinyin\" });\n            this.supportsIntlCollationOptions = col.resolvedOptions()?.collation == \"pinyin\";\n        }\n\n        // Features that can be useful to distinguish different browsers.\n\n        if (w[\"Credential\"]) {\n            this.supportsCredential = true;\n        }\n\n        if (w[\"browser\"]?.[\"runtime\"]) {\n            this.supportsBrowserRuntime = true;\n        }\n\n        // Chrome version detection for older Chrome versions, where\n        // User Agent Client Hints are not supported, requires feature detection.\n\n        if (w[\"LargestContentfulPaint\"]) {\n            this.supportsLargestContentfulPaint = true;\n        }\n        if (w[\"CSS\"]?.[\"registerProperty\"]) {\n            this.supportsCSSregisterProperty = true;\n        }\n        if (navi[\"xr\"]) {\n            this.supportsXR = true;\n        }\n        if (navi[\"getInstalledRelatedApps\"]) {\n            this.supportsGetInstalledRelatedApps = true;\n        }\n        if (w[\"BarcodeDetector\"]) {\n            this.supportsBarcodeDetector = true;\n        }\n        if (w[\"WakeLock\"]) {\n            this.supportsWakeLock = true;\n        }\n        if (w[\"Promise\"]?.[\"any\"]) {\n            this.supportsPromiseAny = true;\n        }\n        if (w[\"FileSystemHandle\"]) {\n            this.supportsFileSystemHandle = true;\n        }\n        if (w[\"Atomics\"]?.[\"waitAsync\"]) {\n            this.supportsAtomicsWaitAsync = true;\n        }\n        if (w[\"CSS\"]?.[\"supports\"]?.(\"aspect-ratio: auto\")) {\n            this.supportsCSSaspectRatio = true;\n        }\n        if (w[\"HID\"]) {\n            this.supportsWebHID = true;\n        }\n        if (w[\"CSS\"]?.[\"supports\"]?.(\"overflow: clip\")) {\n            this.supportsOverflowClip = true;\n        }\n    }\n\n    private checkPlatform(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const workerName = \"Plat\";\n\n            const setPlatBasedFlags = (platInfo: NavigatorPlatform) => {\n                if (this.performedNavigatorPlatformChecks) {\n                    return;\n                }\n\n                const platform = platInfo.platform;\n                if (platform === \"MacIntel\") {\n                    this.isPlatformMacIntel = true;\n                } else if (platform === \"iPhone\") {\n                    this.isPlatformiPhone = true;\n                } else if (platform === \"Win32\") {\n                    this.isPlatformWin = true;\n                } else if (platform === \"iPad\") {\n                    this.isPlatformiPad = true;\n                } else if (platform === \"FreeBSD amd64\") {\n                    this.isPlatformFreeBsdX86 = true;\n                } else if (platform === \"Windows\") {\n                    // Not used by major browsers, so likely a forged value\n                    this.isPlatformWin = true;\n                    this.isForged = true;\n                }\n\n                if (platform.startsWith(\"Linux\")) {\n                    this.isPlatformLinux = true;\n                }\n\n                this.performedNavigatorPlatformChecks = true;\n            };\n            let platCheckFallbackCompleted = false;\n            const handlePlatInfo = (platInfo: NavigatorPlatform) => {\n                if (this.platCheckTimer) {\n                    // Fallback initialized but not yet executed.\n                    clearTimeout(this.platCheckTimer);\n                    this.platCheckTimer = INVALID_TIMER_ID;\n                } else if (platCheckFallbackCompleted) {\n                    // Fallback initialized, but timer is no longer set - ergo fallback has already run.\n\n                    // No point in handling this; the fallback timer has already fired, and will set flags itself.\n                    Log.w(\"{3c72abb}\", \"{b02109c}\");\n                    this.emitWorkerOverlongTelemetry(\n                        workerName,\n                        this.platCheckFallbackTime - performance.now()\n                    );\n                    // No point in calling resolve() either; that will have been done by the fallback code.\n                    return;\n                } else {\n                    // We've been called by the Worker code before the fallback had a chance to be initialized.\n                    // We *must* set this.performedNavigatorPlatformChecks in setPlatBasedFlags() to avoid the fallback being started.\n                }\n                setPlatBasedFlags(platInfo);\n                resolve();\n            };\n\n            let platCheckWithWorker = false;\n            let platCheckWithWorkerFailed = false;\n\n            const handlePlatError = (error: MessageEvent | ErrorEvent | string) => {\n                if (typeof error == \"string\") {\n                    this.emitWorkerErrorStringTelemetry(workerName, error);\n                } else if (\"data\" in error) {\n                    // MessageEvent.  Message deserialization error on Worker instance in main thread.\n                    this.emitWorkerMessageErrorTelemetry(workerName, error);\n                } else {\n                    // ErrorEvent.  Either onerror in WorkerGlobalScope, or onerror on Worker instance in main thread.\n                    this.emitWorkerErrorTelemetry(workerName, error);\n                }\n                platCheckWithWorkerFailed = true;\n                Log.e(\"{3c72abb}\", \"{6350135}\", error);\n            };\n\n            let timeoutDelay = INSTANT_TIMEOUT;\n            let worker: Worker | undefined;\n            try {\n                platCheckWithWorker = true;\n\n                worker = makeWorkerFromInterface<NavigatorPlatform>(\n                    NavigatorPlatformWorker,\n                    handlePlatInfo,\n                    handlePlatError\n                );\n\n                // Set the fallback timeout delay to be non-instant; this will call the fallback\n                // processing after a short timeout in case the Worker doesn't work.\n                timeoutDelay = FALLBACK_TIMEOUT;\n            } catch (ex) {\n                platCheckWithWorkerFailed = true;\n                this.emitWorkerCreationErrorTelemetry(workerName, ex);\n                Log.w(\"{3c72abb}\", \"{79668e5}\", ex);\n                // The fallback code will execute, with INSTANT_TIMEOUT.\n            }\n\n            // Run the remainder of the code fully asynchronously.\n            // The Worker will run in its separate thread (if available), and can run in parallel with the main\n            // thread whilst that is executing the client's first initialization.\n            // Use window.setTimeout() to run the rest of the code (that sets up the fallback timer) on the\n            // next 'event cycle', which will be after the client's first initialization.\n            // This ensures the fallback timeout is counted from when there's actual processing time available.\n            this.runAfterStartup(() => {\n                if (this.performedNavigatorPlatformChecks) {\n                    return;\n                }\n\n                // Use setTiemout to call the platform checking code asynchronously, both for fallback and for non-Worker.\n                //\n                // Note that a 0 delay to setTimeout() means \"immediately, after current event cycle\" - or, for us,\n                // when the main thread becomes free.  We want the GL checking to happen in 'dead time' - when the\n                // main thread is otherwise blocked - rather than fully synchronously with the rest of the main thread.\n                // That should reduce any delays caused by GL checking to the absolute minimum.\n                // Using a timeout of 0 (INSTANT_TIMEOUT) will give a greater chance of that happening.\n                //\n                // Hence, always use setTimeout() - both for the fallback checks (in case the Worker fails) or for the\n                // non-Worker case.\n                this.platCheckTimer = window.setTimeout(() => {\n                    this.platCheckTimer = INVALID_TIMER_ID;\n                    this.platCheckFallbackTime = performance.now();\n                    if (platCheckWithWorkerFailed) {\n                        // Worker creation failed\n                        Log.w(\"{3c72abb}\", \"{d9e1e01}\");\n                    } else if (platCheckWithWorker) {\n                        // Worker took too long\n                        Log.w(\"{3c72abb}\", \"{a8d68cb}\");\n                        this.emitWorkerTimeoutTelemetry(workerName);\n                        // Do *NOT* stop the worker here.  Instead, allow it to complete and then raise\n                        // telemetry / log that fact.\n                    } else {\n                        // No Worker in use\n                        Log.i(\"{3c72abb}\", \"{53e2225}\");\n                        this.emitWorkerUnusedTelemetry(workerName);\n                    }\n                    const platInfo = new NavigatorPlatformWorker().doWork();\n                    handlePlatInfo(platInfo);\n                    platCheckFallbackCompleted = true;\n                }, timeoutDelay);\n            });\n        });\n    }\n\n    private checkApplePay() {\n        const w = window as any;\n        const applePayWorks = !!(w[\"ApplePaySession\"] && w[\"ApplePaySession\"][\"canMakePayments\"]);\n        if (applePayWorks) {\n            // Apple Pay seems only to work in Safari, and some browsers that are very like Safari on iOS\n            // (such as Cloudy, in newer versions).\n            this.supportsApplePay = true;\n        }\n    }\n\n    private checkGlDebugInfo(): Promise<void> {\n        // Checking GL debug info can take 10s of milliseconds, due to the getContext() call.\n        // If possible, run in a Worker (only if the system supports OffscreenCanvas) to take\n        // advantage of multi-threading.\n        // Otherwise, run in a setTimeout() call to reduce immediate overhead and potentially\n        // allow concurrent waits/delays to overlap with the GL checking\n        return new Promise((resolve, reject) => {\n            const workerName = \"GL\";\n            const setGlBasedFlags = (glDbgInfo: GlDebugInfo) => {\n                if (this.performedGlChecks) {\n                    return;\n                }\n\n                const renderer = glDbgInfo.rendererName;\n                if (renderer.includes(\"SraKmd\")) {\n                    // Both Xbox One X and Xbox Series X have this string in their renderers.\n                    this.isGLXbox = true;\n                    if (renderer.includes(\"SraKmd_arden\")) {\n                        this.isGLXboxSeries = true;\n                    }\n                    const matches = /D3D11-(\\d{2,}\\.\\d{1,}\\.\\d{5,}\\.\\d{4,})/.exec(renderer);\n                    if (matches && matches.length > 1) {\n                        this.osVersion = matches[1];\n                    }\n                } else if (renderer.includes(\"AMD VANGOGH\")) {\n                    this.isGLSteamDeck = true;\n                }\n                // TODO - check for other GPUs (Mali, Adreno, AMD, etc.) and map to platforms?\n\n                this.hasGL = glDbgInfo.present;\n\n                this.performedGlChecks = true;\n            };\n            let glCheckFallbackCompleted = false;\n            const handleGlInfo = (glDbgInfo: GlDebugInfo) => {\n                if (this.glCheckTimer) {\n                    // Fallback initialized but not yet executed.\n                    clearTimeout(this.glCheckTimer);\n                    this.glCheckTimer = INVALID_TIMER_ID;\n                } else if (glCheckFallbackCompleted) {\n                    // Fallback initialized, but timer is no longer set - ergo fallback has already run.\n\n                    // No point in handling this; the fallback timer has already fired, and will set flags itself.\n                    Log.w(\"{3c72abb}\", \"{c1bb269}\");\n                    this.emitWorkerOverlongTelemetry(\n                        workerName,\n                        this.glCheckFallbackTime - performance.now()\n                    );\n                    // No point in calling resolve() either; that will have been done by the fallback code.\n                    return;\n                } else {\n                    // We've been called by the Worker code before the fallback had a chance to be initialized.\n                    // We *must* set this.performedGlChecks in setGlBasedFlags() to avoid the fallback being started.\n                }\n                setGlBasedFlags(glDbgInfo);\n                resolve();\n            };\n\n            let glCheckWithWorker = false;\n            let glCheckWithWorkerFailed = false;\n\n            const handleGlError = (error: MessageEvent | ErrorEvent | string) => {\n                if (typeof error == \"string\") {\n                    this.emitWorkerErrorStringTelemetry(workerName, error);\n                } else if (\"data\" in error) {\n                    // MessageEvent.  Message deserialization error on Worker instance in main thread.\n                    this.emitWorkerMessageErrorTelemetry(workerName, error);\n                } else {\n                    // ErrorEvent.  Either onerror in WorkerGlobalScope, or onerror on Worker instance in main thread.\n                    this.emitWorkerErrorTelemetry(workerName, error);\n                }\n                glCheckWithWorkerFailed = true;\n                Log.e(\"{3c72abb}\", \"{9e45306}\", error);\n            };\n\n            let timeoutDelay = INSTANT_TIMEOUT;\n            let worker: Worker | undefined;\n            try {\n                if (self[\"OffscreenCanvas\"]) {\n                    glCheckWithWorker = true;\n\n                    worker = makeWorkerFromInterface<GlDebugInfo>(\n                        GLWorker,\n                        handleGlInfo,\n                        handleGlError\n                    );\n\n                    // Set the fallback timeout delay to be non-instant; this will call the fallback\n                    // processing after a short timeout in case the Worker doesn't work.\n                    timeoutDelay = FALLBACK_TIMEOUT;\n                }\n            } catch (ex) {\n                glCheckWithWorkerFailed = true;\n                this.emitWorkerCreationErrorTelemetry(workerName, ex);\n                Log.w(\"{3c72abb}\", \"{caf8cd7}\", ex);\n                // The fallback code will execute, with INSTANT_TIMEOUT.\n            }\n\n            // Run the remainder of the code fully asynchronously.\n            // The Worker will run in its separate thread (if available), and can run in parallel with the main\n            // thread whilst that is executing the client's first initialization.\n            // Use window.setTimeout() to run the rest of the code (that sets up the fallback timer) on the\n            // next 'event cycle', which will be after the client's first initialization.\n            // This ensures the fallback timeout is counted from when there's actual processing time available.\n            this.runAfterStartup(() => {\n                if (this.performedGlChecks) {\n                    return;\n                }\n\n                // Use setTiemout to call the GL checking code asynchronously, both for fallback and for non-Worker.\n                //\n                // Note that a 0 delay to setTimeout() means \"immediately, after current event cycle\" - or, for us,\n                // when the main thread becomes free.  We want the GL checking to happen in 'dead time' - when the\n                // main thread is otherwise blocked - rather than fully synchronously with the rest of the main thread.\n                // That should reduce any delays caused by GL checking to the absolute minimum.\n                // Using a timeout of 0 (INSTANT_TIMEOUT) will give a greater chance of that happening.\n                //\n                // Hence, always use setTimeout() - both for the fallback checks (in case the Worker fails) or for the\n                // non-Worker case.\n                this.glCheckTimer = window.setTimeout(() => {\n                    this.glCheckTimer = INVALID_TIMER_ID;\n                    this.glCheckFallbackTime = performance.now();\n                    if (glCheckWithWorkerFailed) {\n                        // Worker creation failed\n                        Log.w(\"{3c72abb}\", \"{fbe663c}\");\n                    } else if (glCheckWithWorker) {\n                        // Worker took too long\n                        Log.w(\"{3c72abb}\", \"{2577061}\");\n                        this.emitWorkerTimeoutTelemetry(workerName);\n                        // Do *NOT* stop the worker here.  Instead, allow it to complete and then raise\n                        // telemetry / log that fact.\n                    } else {\n                        // No Worker in use\n                        Log.i(\"{3c72abb}\", \"{95c252e}\");\n                        this.emitWorkerUnusedTelemetry(workerName);\n                    }\n                    const glDbgInfo = new GLWorker().doWork();\n                    handleGlInfo(glDbgInfo);\n                    glCheckFallbackCompleted = true;\n                }, timeoutDelay);\n            });\n        });\n    }\n\n    private internalCheckUserAgentData(uad: UserAgentData) {\n        this.hasUaData = true;\n\n        const isMobile = uad.mobile;\n        if (isMobile) {\n            this.isMobileUAD = true;\n        }\n        const brands: Brand[] = uad.brands || [];\n        let unknownBrands = 0;\n        for (const brand of brands) {\n            const brandName = brand.brand;\n            const brandVersion = brand.version;\n            if (brandName === \"Google Chrome\") {\n                this.isBrandChrome = true;\n                this.browserVersion = brandVersion;\n            } else if (brandName === \"Microsoft Edge\") {\n                this.isBrandEdge = true;\n                this.browserVersion = brandVersion;\n            } else if (brandName === \"Opera\") {\n                this.isBrandOpera = true;\n                this.browserVersion = brandVersion;\n            } else if (brandName === \"Yandex\") {\n                this.isBrandYandex = true;\n                this.browserVersion = brandVersion;\n            } else if (brandName === \"Chromium\") {\n                this.isBrandChromium = true;\n                this.browserVersion = this.browserVersion ?? brandVersion;\n                this.chromiumVersion = brandVersion;\n            } else {\n                unknownBrands++;\n            }\n        }\n        // Current expectation is for one arbitrary brand\n        if (unknownBrands > 2) {\n            this.isBrandUnknown = true;\n        }\n    }\n\n    // Simple UA string based checks. However, using a sharedWorker to perform these checks, as it seems\n    // that the UA string when accessed from within a shared worker is less likely to be spoofed.\n    private checkTvDevices(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const setUABasedTVFlags = (smartTVInfo: SmartTVUAInfo) => {\n                if (smartTVInfo.isKnownTVDevice) {\n                    this.isKnownTVDeviceUA = smartTVInfo.isKnownTVDevice;\n                    this.UADeviceVendor = smartTVInfo.vendorName;\n                    this.UADeviceModel = smartTVInfo.modelName;\n                }\n            };\n            const handleTvValues = (smartTVInfo: SmartTVUAInfo) => {\n                if (this.smartTvCheckTimer) {\n                    clearTimeout(this.smartTvCheckTimer);\n                    this.smartTvCheckTimer = INVALID_TIMER_ID;\n                }\n                setUABasedTVFlags(smartTVInfo);\n                resolve();\n            };\n\n            let tvCheckWithWorker = false;\n            let tvCheckWithWorkerFailed = false;\n            const workerName = \"TV\";\n\n            const handleTvError = (error: MessageEvent | ErrorEvent | string) => {\n                if (typeof error == \"string\") {\n                    this.emitWorkerErrorStringTelemetry(workerName, error);\n                } else if (\"data\" in error) {\n                    // MessageEvent.  Message deserialization error on Worker instance in main thread.\n                    this.emitWorkerMessageErrorTelemetry(workerName, error);\n                } else {\n                    // ErrorEvent.  Either onerror in WorkerGlobalScope, or onerror on Worker instance in main thread.\n                    this.emitWorkerErrorTelemetry(workerName, error);\n                }\n                tvCheckWithWorkerFailed = true;\n                Log.e(\"{3c72abb}\", \"{f49e1b4}\", error);\n            };\n\n            let timeoutDelay = INSTANT_TIMEOUT;\n            let worker: SharedWorker | undefined;\n            try {\n                if ((self as any)[\"SharedWorker\"]) {\n                    tvCheckWithWorker = true;\n\n                    worker = makeSharedWorkerFromInterface<SmartTVUAInfo>(\n                        SmartTVWorker,\n                        handleTvValues,\n                        handleTvError\n                    );\n\n                    // Set the fallback timeout delay to be non-instant; this will call the fallback\n                    // processing after a short timeout in case the Worker doesn't work.\n                    timeoutDelay = FALLBACK_TIMEOUT;\n                }\n            } catch (ex) {\n                tvCheckWithWorkerFailed = true;\n                Log.w(\"{3c72abb}\", \"{2066dd6}\", ex);\n                this.emitWorkerCreationErrorTelemetry(workerName, ex);\n                // Couldn't get any TV data; leave at defaults\n            }\n\n            this.smartTvCheckTimer = window.setTimeout(() => {\n                stopWorker(worker);\n                if (tvCheckWithWorkerFailed) {\n                    // SharedWorker creation failed\n                    Log.w(\"{3c72abb}\", \"{cdb3848}\");\n                } else if (tvCheckWithWorker) {\n                    // SharedWorker took too long\n                    Log.w(\"{3c72abb}\", \"{f01188c}\");\n                    this.emitWorkerTimeoutTelemetry(workerName);\n                    this.wereHeChecksLate = true;\n                } else {\n                    // No SharedWorker in use\n                    Log.i(\"{3c72abb}\", \"{db9e3f4}\");\n                    this.emitWorkerUnusedTelemetry(workerName);\n                }\n                new SmartTVWorker().doWork().then((tvValues: any) => {\n                    handleTvValues(tvValues);\n                });\n            }, timeoutDelay);\n        });\n    }\n\n    private checkMobile() {\n        // Not the best check; the UserAgentData one is more reliable, but this is present\n        // for other devices/browsers (particularly Safari on iOS/iPadOS/macOS) that don't\n        // support UserAgentData.\n        if (navigator.maxTouchPoints && navigator.maxTouchPoints > 0) {\n            this.isMobileNavigator = true;\n        }\n    }\n\n    private checkMediaQueries() {\n        //const now = performance.now();\n        const w = window as any;\n\n        this.mediaPrimaryHover = w.matchMedia(\"(hover: hover)\").matches;\n        //this.mediaAnyHover = w.matchMedia(\"(any-hover: hover)\").matches;\n        this.mediaPrimaryNonHover = w.matchMedia(\"(hover: none)\").matches;\n        //this.mediaAnyNonHover = w.matchMedia(\"(any-hover: none)\").matches;\n        this.mediaPrimaryCoarsePointer = w.matchMedia(\"(pointer: coarse)\").matches;\n        //this.mediaAnyPointer = w.matchMedia(\"(any-pointer: coarse)\").matches;\n        this.mediaPrimaryFinePointer = w.matchMedia(\"(pointer: fine)\").matches;\n        //this.mediaAnyFinePointer = w.matchMedia(\"(any-pointer: fine)\").matches;\n        //const mediaQueryTotalTime = performance.now() - now;\n    }\n\n    private checkPlugins() {\n        const plugins = navigator.plugins;\n        for (const plugin of plugins) {\n            const pluginName: string = plugin.name;\n            if (pluginName === \"Native Client\") {\n                this.isPluginChromeNative = true;\n            } else if (pluginName.startsWith(\"Microsoft Edge PDF\")) {\n                this.isPluginEdgePDF = true;\n                this.isBrowserEdge = true;\n            } else if (pluginName.startsWith(\"Chrome PDF\")) {\n                this.isPluginChromePDF = true;\n            } else if (pluginName.startsWith(\"Chromium PDF\")) {\n                this.isPluginChromiumPDF = true;\n            } else if (pluginName.startsWith(\"PPAPI SAMSUNGHEALTH\")) {\n                this.isPluginSamsungHealth = true;\n                this.isPlatTizen = true;\n            }\n        }\n    }\n\n    private async avifSupported(): Promise<boolean> {\n        if (!window.createImageBitmap) return false;\n        const avifData =\n            \"data:image/avif;base64,\" +\n            \"AAAAGGZ0eXBhdmlmAAAAAGF2aWZtaWYxAAADm21ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAHBpY3QA\" +\n            \"AAAAAAAAAAAAAAAAAAAADnBpdG0AAAAAAAEAAAAiaWxvYwAAAABEQAABAAEAAAAAA7sAAQAAAAAA\" +\n            \"AAAjAAAAI2lpbmYAAAAAAAEAAAAVaW5mZQIAAAAAAQAAYXYwMQAAAAMbaXBycAAAAvxpcGNvAAAC\" +\n            \"rGNvbHJwcm9mAAACoGxjbXMEMAAAbW50clJHQiBYWVogB+UACAAJAAsAEAAFYWNzcE1TRlQAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1sY21zAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANZGVzYwAAASAAAABAY3BydAAAAWAAAAA2d3RwdAAA\" +\n            \"AZgAAAAUY2hhZAAAAawAAAAsclhZWgAAAdgAAAAUYlhZWgAAAewAAAAUZ1hZWgAAAgAAAAAUclRS\" +\n            \"QwAAAhQAAAAgZ1RSQwAAAhQAAAAgYlRSQwAAAhQAAAAgY2hybQAAAjQAAAAkZG1uZAAAAlgAAAAk\" +\n            \"ZG1kZAAAAnwAAAAkbWx1YwAAAAAAAAABAAAADGVuVVMAAAAkAAAAHABHAEkATQBQACAAYgB1AGkA\" +\n            \"bAB0AC0AaQBuACAAcwBSAEcAQm1sdWMAAAAAAAAAAQAAAAxlblVTAAAAGgAAABwAUAB1AGIAbABp\" +\n            \"AGMAIABEAG8AbQBhAGkAbgAAWFlaIAAAAAAAAPbWAAEAAAAA0y1zZjMyAAAAAAABDEIAAAXe///z\" +\n            \"JQAAB5MAAP2Q///7of///aIAAAPcAADAblhZWiAAAAAAAABvoAAAOPUAAAOQWFlaIAAAAAAAACSf\" +\n            \"AAAPhAAAtsRYWVogAAAAAAAAYpcAALeHAAAY2XBhcmEAAAAAAAMAAAACZmYAAPKnAAANWQAAE9AA\" +\n            \"AApbY2hybQAAAAAAAwAAAACj1wAAVHwAAEzNAACZmgAAJmcAAA9cbWx1YwAAAAAAAAABAAAADGVu\" +\n            \"VVMAAAAIAAAAHABHAEkATQBQbWx1YwAAAAAAAAABAAAADGVuVVMAAAAIAAAAHABzAFIARwBCAAAA\" +\n            \"DGF2MUOBDQwAAAAAFGlzcGUAAAAAAAAAEAAAABAAAAAoY2xhcAAAAAEAAAABAAAAAQAAAAH////x\" +\n            \"AAAAAv////EAAAACAAAAF2lwbWEAAAAAAAAAAQABBIGCA4QAAAArbWRhdBIACgkfzP/IIEBA0oAy\" +\n            \"FGW+OwPr0bIHHHHBATZPtaQ3RWTA\";\n        const blob = await fetch(avifData).then(r => r.blob());\n        return createImageBitmap(blob).then(\n            () => true,\n            () => false\n        );\n    }\n\n    private async checkAvif() {\n        // We do not care about AVIF support on non-Chromium-dervide browsers.\n        // Since the check is non-trivial, only perform it on the browsers where\n        // it makes sense to do so.\n        const w = window as any;\n        this.supportsAvif = w[\"chrome\"] ? await this.avifSupported() : false;\n    }\n\n    private checkHighEntropy(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!(navigator as Navigator).userAgentData) {\n                resolve();\n                return;\n            }\n\n            this.hasUaData = true;\n            const setHEBasedFlags = (heValues: UserAgentData_HighEntropyValues) => {\n                if (this.performedHEChecks) {\n                    return;\n                }\n\n                const model = heValues.model;\n                const platform = heValues.platform;\n                const platformVer = heValues.platformVersion;\n                const uaVer = heValues.uaFullVersion;\n                const bitness = heValues.bitness;\n\n                // Mobile flag can be in either location, depending on age of browser.\n                this.isMobileHE = heValues.mobile;\n                this.isMobileUAD_HE = (navigator as Navigator).userAgentData!.mobile;\n\n                // Check for spoofing.\n                if (model == \"\" && platform == \"\" && platformVer == \"\" && uaVer == \"\") {\n                    if ((this.isBrowserOperaTouch && this.isPlatAndroid) || this.isPlatTizen) {\n                        // Opera on Android still fills-in the UserAgentData with empty values.\n                        // Samsung's UWE(Upgraded Web Engine) instances also is in the same condition.\n                    } else if (bitness == undefined) {\n                        // Electron-based apps on Linux can leave bitness undefined.\n                    } else {\n                        this.isUaDataSpoofed = true;\n                    }\n                } else if (bitness == \"\") {\n                    if (platform == \"Android\") {\n                        // Android can still set bitness to an empty string, even when otherwise valid.\n                    } else {\n                        // On current Windows, Linux and macOS browsers, the built-in spoofing code clears\n                        // bitness to an empty string.\n                        // Non-spoofed scenarios leave bitness set to a valid string.\n                        // Earlier browser engines and other platforms don't have bitness defined.\n                        this.isUaDataSpoofed = true;\n                    }\n                }\n\n                // Check models first, for Xbox\n                if (model) {\n                    if (model === \"Xbox\") {\n                        this.isHEModelXbox = true;\n                    } else if (model.startsWith(\"AFT\")) {\n                        // All Amazon FireTV devices start with AFT\n                        // See https://developer.amazon.com/docs/fire-tv/identify-amazon-fire-tv-devices.html\n                        // TODO: Remove certain non-Amazon vendors with embedded Fire TV products:\n                        //       AFTHA001   - Toishiba\n                        //       AFTWMST22  - JVC\n                        //       AFTTIFF55  - Onida\n                        //       AFTWI001   - ok\n                        //       AFTDCT31   - Toshiba\n                        //       AFTDCT31   - Insignia\n                        //       AFTBAMR311 - Toshiba\n                        //       AFTEAMR311 - Insignia\n                        //       AFTKMST12  - Toshiba\n                        //       AFTLE      - Onida\n                        //       AFTEUFF014 - Grundig\n                        //       AFTEU014   - Grundig\n                        //       AFTSO001   - JVC\n                        //       AFTMM      - Nebula\n                        //       AFTEU011   - Grundig\n                        //       AFTJMST12  - Insignia\n                        //       AFTRS      - Element\n                        //       AFTMM      - TCL\n                        this.isHEModelFireTV = true;\n                        this.isHEKnownTVDevice = true;\n                    } else if (model.includes(\"BRAVIA\")) {\n                        this.isHEKnownTVDevice = true;\n                        this.isHEModelBraviaTV = true;\n                    } else if (model === \"Chromecast\") {\n                        this.isHEKnownTVDevice = true;\n                        this.isHEModelChromecastTV = true;\n                        this.deviceName = \"CHROMECAST\";\n                    } else if (model === \"SHIELD Android TV\") {\n                        this.isHEKnownTVDevice = true;\n                        this.isHEModelShieldTV = true;\n                        this.deviceName = \"SHIELDTV\";\n                    } else if (model.startsWith(\"MiTV\")) {\n                        this.isHEKnownTVDevice = true;\n                        this.isHEModelMiTV = true;\n                        this.deviceName = \"MITV\";\n                    } else if (model.startsWith(\"TVision\")) {\n                        this.isHEKnownTVDevice = true;\n                        this.isHEModelTVision = true;\n                        this.deviceName = \"TVISION\";\n                    }\n                }\n\n                // Check platforms as well\n                if (platform === \"Windows\") {\n                    this.isHEPlatformWindows = true;\n                } else if (platform === \"macOS\") {\n                    this.isHEPlatformMac = true;\n                } else if (platform === \"Chrome OS\" || platform === \"ChromeOS\") {\n                    this.isHEPlatformChromeOS = true;\n                } else if (platform === \"Chromium OS\") {\n                    this.isHEPlatformChromiumOS = true;\n                } else if (platform === \"Android\") {\n                    this.isHEPlatformAndroid = true;\n                } else if (platform === \"Linux\") {\n                    if (platformVer == \"\") {\n                        // Android Chromium-based browsers using \"desktop site\" set platform to \"Linux\"\n                        // and clear the platformVersion value.\n                        // The platform version is unobtainable, but set the platform correctly.\n                        this.isHEPlatformAndroid = true;\n                        this.isHEPlatformOverridden = true;\n                    } else {\n                        this.isHEPlatformLinux = true;\n                    }\n                }\n\n                // Record version information\n\n                // It would be nice to use a regex that would only replace \"odd\" punctuation in\n                // the midst of numeric strings (say \"14_5_1\").\n                // One such as the following:\n                //   /(?<!\\p{L})(?<=\\p{AHex})\\p{P}(?=\\p{AHex})(?!\\p{L})/gu\n                // which uses lookahead and lookbehind assertions, and Unicode property names.\n                // But that requires:\n                //  - a newer version of JavaScript than we transpile to\n                //  - a newer version of Google's closure-compiler than we use\n                //  - a new tsickle to support the newer closure-compile\n                //  = a new gstsickle to use the new tsickle\n\n                // So instead, use a simplistic \"replace all punctuation\" regex\n                const sanitiseVer = (version: any) => {\n                    if (!version || typeof version != \"string\") {\n                        return undefined;\n                    }\n                    return version.replace(/[-._,:;|#@]/g, \".\");\n                };\n\n                const deriveWindowsVer = (version?: string) => {\n                    if (!version || !this.chromiumVersion || +this.chromiumVersion < 95) {\n                        return version;\n                    }\n\n                    // Fomr Chromium 95 onwards, the platformVersion source has changed to be the\n                    // UniversalApiContract version.  That changes every time Microsoft releases\n                    // a new version of Windows.\n                    // Older Windows versions (8.1 and earlier) are now reported as \"0.0.0\".\n                    // Try to map the version to a 'real' Windows build version.\n                    const verComponents: number[] = version.split(\".\").map(x => Number.parseInt(x));\n                    switch (verComponents[0]) {\n                        case 0:\n                            return \"8-\"; // Windows 8.1 or earlier\n                        case 1:\n                            return \"10.0.10240\"; // Windows 10 1507 (10.0.10240.0)\n                        case 2:\n                            return \"10.0.10586\"; // Windows 10 1511 (10.0.10586.0)\n                        case 3:\n                            return \"10.0.14393\"; // Windows 10 1607 (10.0.14393.0)\n                        case 4:\n                            return \"10.0.15063\"; // Windows 10 1703 (10.0.15063.0)\n                        case 5:\n                            return \"10.0.16299\"; // Windows 10 1709 (10.0.16299.0)\n                        case 6:\n                            return \"10.0.17134\"; // Windows 10 1803 (10.0.17134.1)\n                        case 7:\n                            return \"10.0.17763\"; // Windows 10 1809 (10.0.17763.0)\n                        case 8:\n                            return \"10.0.18362+\"; // Windows 10 1903 (10.0.18362.0) or 10 1909 (10.0.18363.0)\n                        case 9:\n                            // Apparently not used.\n                            return \"10.0.9\";\n                        case 10:\n                            return \"10.0.19041+\"; // Windows 10 2004 (10.0.19041.0) or newer Windows 10\n                        case 11:\n                            // Apparently not used.\n                            return \"10.0.11\";\n                        case 12:\n                            // Apparently not used.\n                            return \"10.0.12\";\n                        case 13:\n                            // Windows 11 preview\n                            return \"11.0.0\";\n                        case 14:\n                            return \"11.0.22000.0\"; // Windows 11 21H2 (10.0.22000.0) or newer\n                        case 15:\n                            return \"11.0.22621.0\"; // Windows 11 22H2 (10.0.22621.0) or newer\n\n                        default:\n                            // Assume all newer versions are Windows 11 for now.\n                            return \"11.0.22621.0+\";\n                    }\n                };\n\n                const derivePlatformVer = (version?: string) => {\n                    if (this.isHEPlatformWindows) {\n                        if (!this.isHEModelXbox) {\n                            return deriveWindowsVer(version);\n                        }\n                    }\n                    return version;\n                };\n\n                // Check Brands information if present\n                if (heValues.brands) {\n                    this.internalCheckUserAgentData(heValues as UserAgentData);\n                }\n\n                this.browserFullVer = sanitiseVer(uaVer);\n                this.osRawVersion = platformVer;\n                this.osVersion = this.osVersion ?? derivePlatformVer(sanitiseVer(platformVer));\n\n                this.performedHEChecks = true;\n            };\n            const handleHEValues = (heValues: UADataHEValues) => {\n                if (!heValues) {\n                    // Do not set any flags.  If this was a failure in the Worker,\n                    // the fallback code will execute instead.\n                    return;\n                }\n\n                if (this.heCheckTimer) {\n                    clearTimeout(this.heCheckTimer);\n                    this.heCheckTimer = INVALID_TIMER_ID;\n                }\n                setHEBasedFlags(heValues);\n                resolve();\n            };\n\n            let heCheckWithWorker = false;\n            let heCheckWithWorkerFailed = false;\n            const workerName = \"HE\";\n\n            const handleHEError = (error: MessageEvent | ErrorEvent | string) => {\n                if (typeof error == \"string\") {\n                    this.emitWorkerErrorStringTelemetry(workerName, error);\n                } else if (\"data\" in error) {\n                    // MessageEvent.  Message deserialization error on Worker instance in main thread.\n                    this.emitWorkerMessageErrorTelemetry(workerName, error);\n                } else {\n                    // ErrorEvent.  Either onerror in WorkerGlobalScope, or onerror on Worker instance in main thread.\n                    this.emitWorkerErrorTelemetry(workerName, error);\n                }\n                heCheckWithWorkerFailed = true;\n                Log.e(\"{3c72abb}\", \"{217e106}\", error);\n            };\n\n            let timeoutDelay = INSTANT_TIMEOUT;\n            let worker: SharedWorker | undefined;\n            try {\n                if ((self as any)[\"SharedWorker\"]) {\n                    heCheckWithWorker = true;\n\n                    worker = makeSharedWorkerFromInterface<UADataHEValues>(\n                        HighEntropyWorker,\n                        handleHEValues,\n                        handleHEError\n                    );\n\n                    // Set the fallback timeout delay to be non-instant; this will call the fallback\n                    // processing after a short timeout in case the Worker doesn't work.\n                    // Use the longer fallback timeout to handle slower browsers; Edge seems to take\n                    // longer when users are spoofing the User Agent Client Hints, Chrome is quicker.\n                    timeoutDelay = LONG_FALLBACK_TIMEOUT;\n                }\n            } catch (ex) {\n                heCheckWithWorkerFailed = true;\n                Log.w(\"{3c72abb}\", \"{a583546}\", ex);\n                this.emitWorkerCreationErrorTelemetry(workerName, ex);\n                // Couldn't get any HE data; leave at defaults\n            }\n\n            this.heCheckTimer = window.setTimeout(() => {\n                stopWorker(worker);\n                if (heCheckWithWorkerFailed) {\n                    // SharedWorker creation failed\n                    Log.w(\"{3c72abb}\", \"{dbf4b42}\");\n                } else if (heCheckWithWorker) {\n                    // SharedWorker took too long\n                    Log.w(\"{3c72abb}\", \"{0bf7a38}\");\n                    this.emitWorkerTimeoutTelemetry(workerName);\n                    this.wereHeChecksLate = true;\n                } else {\n                    // No SharedWorker in use\n                    Log.i(\"{3c72abb}\", \"{7a82b59}\");\n                    this.emitWorkerUnusedTelemetry(workerName);\n                }\n                new HighEntropyWorker().doWork().then((heValues: any) => {\n                    handleHEValues(heValues);\n                });\n            }, timeoutDelay);\n        });\n    }\n\n    private checkUserAgentVersion(): Promise<void> {\n        return new Promise(resolve => {\n            // TODO: Try to combine the two RegExp checks into one, still keeping it safe for all platforms.\n            const chromeRe = /Chrome\\/(([0-9]+\\.)*[0-9]+)/;\n            const uaString = navigator.userAgent;\n            if (uaString) {\n                const matches = uaString.match(chromeRe);\n                this.chromeUaVersion = matches?.[1];\n                if (this.chromeUaVersion) {\n                    const majorVer = /Chrome\\/([0-9]+)/;\n                    const majorMatches = uaString.match(majorVer);\n                    this.chromeUaMajorVer = majorMatches?.[1];\n                }\n            }\n\n            resolve();\n        });\n    }\n    private compareBrowserVersions(simpleVer: string, fullVer: string): boolean {\n        if (simpleVer == fullVer) {\n            // Simple version should be simpler than full version\n            return false;\n        }\n\n        let re = /^(\\d+)[.]?(.*)/;\n        let simpleResult = re.exec(simpleVer);\n        let fullResult = re.exec(fullVer);\n\n        // The simple result should be the first part of the full result, or the same as the full result.\n        // Discrepancies are an indication of spoofing.\n\n        // RegExp.exec() can return null if the match fails.\n        // Perform due-diligence checks for incompatibility.\n        if (simpleResult == null) {\n            if (fullResult == null) {\n                // Assume both have non-numeric versions.\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            if (fullResult == null) {\n                return false;\n            } else {\n                // Have both results, can compare them.\n\n                if (simpleResult[1] == fullResult[1]) {\n                    if (simpleResult[2] == \"\") {\n                        // Normally-true case - simple version is just the major number.\n                        return true;\n                    } else {\n                        // Full version information in the simple version is another indication of spoofing.\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    private validateChecks() {\n        if (!this.hasUaData) {\n            // Can't check against UserAgentData if it doesn't exist.\n            return;\n        }\n\n        // Check for platform inconsistencies and indicate that spoofing has happened\n\n        if (\n            this.isPlatformMacIntel != this.isHEPlatformMac ||\n            this.isPlatformWin != this.isHEPlatformWindows\n        ) {\n            this.isUaDataSpoofed = true;\n        }\n\n        // Many systems are based on Linux, but report a more specific platform through high entropy data\n        // prettier-ignore\n        if (\n            (this.isHEPlatformChromeOS ||\n             this.isHEPlatformChromiumOS ||\n             this.isHEPlatformAndroid ||\n             this.isHEPlatformLinux) &&\n            !this.isPlatformLinux\n        ) {\n            this.isUaDataSpoofed = true;\n        }\n\n        if (\n            this.browserVersion &&\n            this.browserFullVer &&\n            !this.compareBrowserVersions(this.browserVersion, this.browserFullVer)\n        ) {\n            if (this.isBrandOpera) {\n                // Opera reports the Opera version with its brand.\n                // Compare the Chromium version to see if there is spoofing.\n                if (\n                    this.chromiumVersion &&\n                    !this.compareBrowserVersions(this.chromiumVersion, this.browserFullVer)\n                ) {\n                    this.isUaDataSpoofed = true;\n                }\n            } else {\n                this.isUaDataSpoofed = true;\n            }\n        }\n\n        if (\n            (this.isHEPlatformChromeOS && !this.isBrandChrome) ||\n            (this.isHEPlatformChromiumOS && !this.isBrandChromium)\n        ) {\n            // ChromeOS and ChromiumOS only have one browser each.\n            // If the high-entropy data indicates the OS, the brand data should indicate the browser as well.\n\n            this.isUaDataSpoofed = true;\n        }\n\n        // Check voice inconsistencies with high-entropy data.\n\n        if (this.voiceIsChrome) {\n            if (this.voiceIsMicrosoft && !this.isHEPlatformWindows) {\n                // Chrome only has Microsoft voices on Windows.\n                // Edge never has Chrome voices.\n                this.isUaDataSpoofed = true;\n            } else if (this.voiceIsApple && !this.isHEPlatformMac) {\n                // Only get Apple voices on Mac or iOS/iPadOS - but don't get\n                // UserAgentData on iOS/iPadOS.\n                this.isUaDataSpoofed = true;\n            }\n        } else if (this.voiceIsChromeOS) {\n            // Chrome OS voices must be from a Chrome OS platform.\n            if (!this.isHEPlatformChromeOS) {\n                this.isUaDataSpoofed = true;\n            }\n        } else if (this.voiceIsFirefox) {\n            // Firefox doesn't support UserAgentData\n            this.isUaDataSpoofed = true;\n        } else if (this.voiceIsMicrosoft) {\n            // Could be Edge on many different platforms\n        } else if (this.voiceIsApple) {\n            if (!this.isHEPlatformMac) {\n                // Only get Apple voices on Mac or iOS/iPadOS - but don't get\n                // UserAgentData on iOS/iPadOS.\n                this.isUaDataSpoofed = true;\n            }\n        }\n\n        this.useUaData = this.hasUaData && !this.isUaDataSpoofed;\n        this.ignoreUaData = this.hasUaData && this.isUaDataSpoofed;\n    }\n\n    private createPlatformDetails() {\n        this.determineResult();\n        this.finish = performance.now();\n\n        this.platformDetails.os = this.osName ?? PlatformName.UNKNOWN;\n        this.platformDetails.browser = this.browserName ?? BrowserName.UNKNOWN;\n        this.platformDetails.osRawVer = this.osRawVersion ?? UNKNOWN_VERSION;\n        this.platformDetails.osVer = this.osVersion ?? UNKNOWN_VERSION;\n        this.platformDetails.browserVer =\n            this.browserVersion ??\n            (this.osName === PlatformName.WEBOS ? this.chromeUaMajorVer : undefined) ??\n            UNKNOWN_VERSION;\n        this.platformDetails.browserFullVer =\n            this.browserFullVer ??\n            (this.osName === PlatformName.WEBOS ? this.chromeUaVersion : undefined) ??\n            UNKNOWN_VERSION;\n        this.platformDetails.confidence =\n            this.confidenceLevel ??\n            (this.osName === PlatformName.UNKNOWN ? 0 : undefined) ??\n            (this.browserName === BrowserName.UNKNOWN ? 5 : undefined) ??\n            (this.wereHeChecksLate ? 6 : undefined) ??\n            (this.ignoreUaData ? 8 : undefined) ??\n            10;\n        this.platformDetails.forging = this.isForged ?? false;\n        this.platformDetails.spoofing = this.ignoreUaData ?? false;\n\n        this.platformDetails.vendor = this.deviceVendor ?? DeviceVendor.UNKNOWN;\n        this.platformDetails.vendorFull = this.deviceVendorFull ?? this.platformDetails.vendor;\n\n        this.platformDetails.deviceOS = getDeviceOS(this.platformDetails.os);\n        if (this.isGLSteamDeck) {\n            this.platformDetails.deviceModel = DeviceModel.STEAMDECK;\n        } else if (this.devModel) {\n            this.platformDetails.deviceModel = this.devModel;\n        }\n        this.platformDetails.deviceType =\n            this.devType ??\n            getDeviceType(this.platformDetails.os, this.platformDetails.deviceModel);\n\n        this.platformDetails.totalTime = this.finish - this.start;\n    }\n\n    private determineResult() {\n        if (!this.hasGL && this.isBrowserChrome) {\n            // No GL and Chromium-based -> Either spoofed, or a really poor platform.\n            // Specifically, Edge on Xbox can spoof like this sometimes.\n            this.osName = PlatformName.UNKNOWN;\n            this.browserName = BrowserName.UNKNOWN;\n            this.isForged = true;\n            this.confidenceLevel = 3;\n            this.osVersion = UNKNOWN_VERSION;\n            this.browserVersion = UNKNOWN_VERSION;\n            this.browserFullVer = UNKNOWN_VERSION;\n            Log.d(\"{3c72abb}\", \"{049d298}\");\n        } else if (this.voiceIsChromeOS) {\n            // Assume Chrome on ChromeOS, using Chrome Browser\n            this.osName = PlatformName.CHROME_OS;\n            this.setChromeDetails();\n        } else if (this.voiceIsChrome) {\n            // No Chrome voices except in Chrome browser, and not on Chrome OS\n            this.setChromeDetails();\n            if (this.voiceIsMicrosoft) {\n                this.osName = PlatformName.WINDOWS;\n            } else if (this.voiceIsApple) {\n                this.osName = PlatformName.MAC;\n                this.deviceVendor = DeviceVendor.APPLE;\n            } else if (this.useUaData) {\n                if (this.isHEPlatformWindows) {\n                    this.osName = PlatformName.WINDOWS;\n                } else if (this.isHEPlatformMac) {\n                    this.osName = PlatformName.MAC;\n                    this.deviceVendor = DeviceVendor.APPLE;\n                } else if (this.isHEPlatformChromeOS || this.isHEPlatformChromiumOS) {\n                    // Very unusual; ChromeOS should not have Chrome voices.\n                    this.osName = PlatformName.CHROME_OS;\n                    this.isForged = true;\n                    this.confidenceLevel = 7;\n                } else if (this.isHEPlatformLinux) {\n                    // Chrome voices are not present on Android, therefore must be Linux.\n                    this.osName = this.getCurrentLinuxOsName();\n                }\n            } else if (this.isPlatformWin) {\n                this.osName = PlatformName.WINDOWS;\n            } else if (this.isPlatformMacIntel) {\n                this.osName = PlatformName.MAC;\n                this.deviceVendor = DeviceVendor.APPLE;\n            } else if (this.isPlatformLinux) {\n                // Chrome voices are not present on Android, therefore must be Linux.\n                this.osName = this.getCurrentLinuxOsName();\n            } else if (this.isPlatformFreeBsdX86) {\n                this.osName = PlatformName.FREEBSD;\n            } else {\n                // navigator.platform is not set correctly.\n                this.osName = PlatformName.UNKNOWN;\n                this.confidenceLevel = 5;\n                Log.d(\"{3c72abb}\", \"{101497c}\");\n            }\n        } else if (this.voiceIsFirefox) {\n            // No Firefox voices except in Firefox browser\n            this.setFirefoxDetails();\n            if (this.voiceIsMicrosoft) {\n                this.osName = PlatformName.WINDOWS;\n            } else if (this.voiceIsApple) {\n                // Firefox and Apple voices == macOS\n                // Firefox on iOS uses Apple voices exclusively\n                this.osName = PlatformName.MAC;\n                this.deviceVendor = DeviceVendor.APPLE;\n            } else if (this.voiceIsFirefoxAndroid) {\n                this.osName = PlatformName.ANDROID;\n                this.determineAndroidDeviceType();\n            } else if (this.isPlatformLinux) {\n                this.osName = this.getCurrentLinuxOsName();\n            } else if (this.isPlatformFreeBsdX86) {\n                this.osName = PlatformName.FREEBSD;\n            } else {\n                // Not Windows, macOS or Android, so unknown OS\n                this.osName = PlatformName.UNKNOWN;\n                this.confidenceLevel = 5;\n                Log.d(\"{3c72abb}\", \"{49fcccb}\");\n            }\n        } else if (this.voiceIsEdge) {\n            this.browserName = BrowserName.EDGE;\n            if (this.voiceIsWindows) {\n                // Edge on Xbox has same voices as on Windows, so add Xbox-specific checks here.\n                if ((this.useUaData && this.isHEModelXbox) || this.isGLXbox) {\n                    this.osName = PlatformName.XBOX;\n                    this.deviceVendor = DeviceVendor.MICROSOFT;\n                    if (this.isGLXboxSeries) {\n                        this.devModel = DeviceModel.XBOX_SERIES;\n                    } else if (this.isGLXbox) {\n                        this.devModel = DeviceModel.XBOX_ONE;\n                    }\n                } else {\n                    this.osName = PlatformName.WINDOWS;\n                }\n            } else if (this.voiceIsApple) {\n                // Edge and Apple voices == macOS\n                // Edge on iOS uses Apple voices exclusively\n                this.osName = PlatformName.MAC;\n                this.deviceVendor = DeviceVendor.APPLE;\n            } else if (this.voiceIsAndroid) {\n                // Newer Edge on Android versions provide Edge voices.\n                this.osName = PlatformName.ANDROID;\n                this.determineAndroidDeviceType();\n            } else if (this.useUaData) {\n                if (this.isHEModelXbox) {\n                    this.osName = PlatformName.XBOX;\n                    this.deviceVendor = DeviceVendor.MICROSOFT;\n                    if (this.isGLXboxSeries) {\n                        this.devModel = DeviceModel.XBOX_SERIES;\n                    } else if (this.isGLXbox) {\n                        this.devModel = DeviceModel.XBOX_ONE;\n                    }\n                } else if (this.isHEPlatformWindows) {\n                    this.osName = PlatformName.WINDOWS;\n                } else if (this.isHEPlatformMac) {\n                    this.osName = PlatformName.MAC;\n                    this.deviceVendor = DeviceVendor.APPLE;\n                } else if (this.isHEPlatformChromeOS || this.isHEPlatformChromiumOS) {\n                    // Very unusual; ChromeOS should not have Edge voices.\n                    this.osName = PlatformName.CHROME_OS;\n                    this.isForged = true;\n                    this.confidenceLevel = 7;\n                } else if (this.isHEPlatformAndroid) {\n                    // Newer Edge on Android versions provide Edge voices, so check for Android before Linux.\n                    this.osName = PlatformName.ANDROID;\n                    this.determineAndroidDeviceType();\n                } else if (this.isHEPlatformLinux) {\n                    this.osName = this.getCurrentLinuxOsName();\n                }\n            } else if (this.isPlatformWin) {\n                this.osName = PlatformName.WINDOWS;\n            } else if (this.isPlatformMacIntel) {\n                this.osName = PlatformName.MAC;\n                this.deviceVendor = DeviceVendor.APPLE;\n            } else if (this.isPlatAndroid) {\n                // Newer Edge on Android versions provide Edge voices, so check for Android before Linux.\n                this.osName = PlatformName.ANDROID;\n                this.determineAndroidDeviceType();\n            } else if (this.isPlatformLinux) {\n                this.osName = this.getCurrentLinuxOsName();\n            } else if (this.isPlatformFreeBsdX86) {\n                this.osName = PlatformName.FREEBSD;\n            } else {\n                // navigator.platform is not set correctly.\n                this.osName = PlatformName.UNKNOWN;\n                this.confidenceLevel = 5;\n            }\n        } else if (this.voiceIsMicrosoft) {\n            // Not ChromeOS, Chrome, Edge or Firefox\n            // Microsoft voices require a Microsoft product\n            if (this.voiceIsWindows) {\n                this.determineWindowsBrowser();\n            } else {\n                // Neither Windows nor Edge, so something's not right.\n                // Assume Windows, and indicate forging.\n                this.determineWindowsBrowser();\n                this.isForged = true;\n                this.confidenceLevel = 5;\n            }\n        } else if (this.voiceIsApple) {\n            this.determineAppleBrowser();\n        } else if (this.voiceIsAndroid) {\n            this.determineAndroidBrowser();\n        } else {\n            // Try to detect without voice information\n            if (\n                (this.useUaData && (this.isHEModelXbox || this.isHEPlatformWindows)) ||\n                this.isPlatformWin ||\n                this.isGLXbox\n            ) {\n                this.determineWindowsBrowser();\n            } else if (\n                (this.useUaData && this.isHEPlatformMac) ||\n                this.isPlatformiPad ||\n                this.isPlatformiPhone ||\n                this.isPlatformMacIntel\n            ) {\n                this.determineAppleBrowser();\n            } else if (\n                this.useUaData &&\n                (this.isHEPlatformChromeOS || this.isHEPlatformChromiumOS)\n            ) {\n                this.osName = PlatformName.CHROME_OS;\n                this.setChromeDetails();\n            } else if (this.isPlatCcOS) {\n                this.osName = PlatformName.CCOS;\n                this.deviceVendor = DeviceVendor.HKMC;\n                this.browserName = BrowserName.CHROMIUM;\n            } else if ((this.useUaData && this.isHEPlatformAndroid) || this.isPlatAndroid) {\n                this.determineAndroidBrowser();\n            } else if (this.useUaData && this.isHEPlatformLinux) {\n                this.determineLinuxBrowser();\n            } else if (this.isPlatWebOS) {\n                this.osName = PlatformName.WEBOS;\n                this.deviceVendor = DeviceVendor.LG;\n                // webOS TV uses the Blink-based LG browser engine, Chromium based\n                // https://webostv.developer.lge.com/discover/specifications/web-engine/\n                this.browserName = BrowserName.CHROMIUM;\n            } else if (this.isPlatTizen) {\n                this.osName = PlatformName.TIZEN;\n                this.browserName = BrowserName.SAMSUNG;\n                if (window.webapis?.productinfo) {\n                    try {\n                        this.osVersion = window.webapis.productinfo.getFirmware();\n                        this.deviceName = window.webapis.productinfo.getRealModel();\n                        this.deviceVendorFull = window.webapis.productinfo.getLicensedVendor();\n                    } catch {\n                        Log.e(\"{3c72abb}\", \"{bc7dd9b}\");\n                    }\n                } else {\n                    Log.e(\"{3c72abb}\", \"{844af47}\");\n                    this.osVersion = UNKNOWN_VERSION;\n                    this.deviceName = \"\";\n                }\n                // Any result other than 'Samsung' from getLicensedVendor is from a Tizen licensed vendor\n                this.deviceVendor =\n                    this.deviceVendorFull === \"Samsung\" || !this.deviceVendorFull\n                        ? DeviceVendor.SAMSUNG\n                        : DeviceVendor.TIZEN_LICENSED;\n\n                this.determineTizenUAInfo();\n            } else if (this.isPlatformLinux) {\n                // Linux or Linux-derived, based on navigator.platform.\n                // More specific tests must come earlier than this.\n                this.determineLinuxOrAndroidBrowser();\n            } else if (this.isPlatformFreeBsdX86) {\n                this.determineFreeBsdBrowser();\n            } else {\n                if (this.isBrowserChromeiOS || this.isBrowserFirefoxiOS || this.isBrowserEdgeiOS) {\n                    // iOS browser, so iOS platform.\n                    // Assume iPhone for detection.\n                    this.isPlatformiPhone = true;\n                    this.determineAppleBrowser();\n                    this.confidenceLevel = 7;\n                } else if (this.isBrowserSamsungChromium) {\n                    // Samsung browser, so Android platform\n                    this.determineAndroidBrowser();\n                    this.confidenceLevel = 7;\n                } else {\n                    // TODO Map more browsers to their specific platforms (Opera Touch?)\n\n                    // navigator.platform isn't set correctly (or is unknown).\n                    this.osName = PlatformName.UNKNOWN;\n                    this.browserName = BrowserName.UNKNOWN;\n                    this.confidenceLevel = 0;\n                    Log.d(\"{3c72abb}\", \"{f2eecc9}\");\n                }\n            }\n        }\n\n        if (this.ignoreUaData) {\n            // Clean up values when we know them to be invalid:.\n            // If UserAgentData is present, then version information comes from it.\n            // If, however, that data has been spoofed, re-write the versions to be unknown.\n            this.osVersion = UNKNOWN_VERSION;\n            this.browserVersion = UNKNOWN_VERSION;\n            this.browserFullVer = UNKNOWN_VERSION;\n        }\n    }\n\n    private determineLinuxOrAndroidBrowser() {\n        if (this.isBrowserFirefoxTV) {\n            // Don't use FIRETV until all callers understand it.\n            //this.osName = PlatformName.FIRETV;\n            this.osName = PlatformName.ANDROID;\n            this.deviceVendor = DeviceVendor.AMAZON;\n            this.setFirefoxDetails();\n            this.devType = DeviceType.TV;\n        } else if (this.isBrowserSamsungChromium) {\n            // First-time detection after starting Samsung browser doesn't load voices correctly,\n            // meaning we just know the platform is Linux or Linux-derived and hence come through\n            // this code path.\n            // However, we *do* detect Samsung browser, so can derive OS, vendor and browser.\n            this.osName = PlatformName.ANDROID;\n            this.deviceVendor = DeviceVendor.SAMSUNG;\n            this.browserName = BrowserName.SAMSUNG;\n            this.determineAndroidDeviceType();\n        } else {\n            if (!this.determineDesktopBrowser()) {\n                // TODO Check for platform-specific browsers, and set accordingly, to cope with\n                //      additional spoofing of navigator.platform\n                // TODO More and better Android and (esp.) Linux browsers\n                this.osName = PlatformName.UNKNOWN;\n                this.browserName = BrowserName.UNKNOWN;\n                this.confidenceLevel = 0;\n                Log.d(\"{3c72abb}\", \"{be86380}\");\n            } else if (this.ignoreUaData) {\n                // Found a browser, but the UserAgentData is spoofed.\n                // Either the browser has implicitly spooofed, or the user has chosen to spoof the user agent.\n                // If UserAgentData spoofing doesn't happen, we won't be entering this function at all\n                // on modern browsers.\n                // If we've successfully found a browser and there's spoofing, assume the platform is Linux.\n                // Non-Linux platforms (that are derived from Linux) are detected prior to entering this code path.\n                this.osName = this.getCurrentLinuxOsName();\n            } else if (\n                this.isPluginChromiumPDF &&\n                !(this.isPluginChromePDF || this.isPluginEdgePDF)\n            ) {\n                // Likely an Electron-based app on Linux.\n                // Real (older) Chromium will have been detected earlier, using brands.\n                // Even older Chromium won't have brands, but will match this path as well.\n                this.osName = this.getCurrentLinuxOsName();\n                this.browserName = BrowserName.CHROMIUM;\n                this.confidenceLevel = 7;\n            } else if (this.isPlatformLinux) {\n                // Should have checked Linux-derived OS before calling this function, so assume Linux.\n                this.osName = PlatformName.LINUX;\n            }\n        }\n    }\n\n    private determineTizenUAInfo() {\n        //UA: Mozilla/5.0 (SMART-TV; LINUX; Tizen 6.5) AppleWebKit/537.36 (KHTML, like Gecko) 85.0.4183.93/6.5 TV Safari/537.36\n        const browserTizenRe = /(([0-9]+\\.)*[0-9]+)\\/(([0-9]+\\.)*[0-9]+)/;\n        const uaString = navigator.userAgent;\n        if (uaString) {\n            // find first \" DD.DD.../DD.DD... \"\n            const btMatch = uaString.match(browserTizenRe);\n            // Match: [\"85.0.4183.93/6.5\", \"85.0.4183.93\", \"4183.\", \"6.5\", \"6.\"]\n            this.browserFullVer = btMatch?.[0];\n            this.chromeUaVersion = btMatch?.[1];\n            if (this.chromeUaVersion) {\n                const majorVer = this.chromeUaVersion.split(\".\");\n                this.chromeUaMajorVer = majorVer?.[0];\n                this.browserVersion = this.chromeUaMajorVer;\n            }\n        }\n    }\n\n    private determineLinuxBrowser() {\n        this.osName = this.getCurrentLinuxOsName();\n        if (this.isMobileUAD || this.isMobileNavigator) {\n            // Do not understand mobile Linux platforms well - that are not Android\n            this.browserName = BrowserName.UNKNOWN;\n            this.confidenceLevel = 3;\n        } else if (!this.determineDesktopBrowser()) {\n            this.browserName = BrowserName.UNKNOWN;\n            this.confidenceLevel = 5;\n            Log.d(\"{3c72abb}\", \"{54c6569}\");\n        }\n    }\n\n    private determineFreeBsdBrowser() {\n        this.osName = PlatformName.FREEBSD;\n\n        if (this.isBrowserChrome) {\n            // Detect all Chromium-based browsers as Chrome for now\n            this.browserName = BrowserName.CHROME;\n        } else if (this.isBrowserNetscape) {\n            this.setFirefoxDetails();\n        } else {\n            // TODO Check for platform-specific browsers, and set accordingly, to cope with\n            //      additional spoofing of navigator.platform\n            this.browserName = BrowserName.UNKNOWN;\n            this.confidenceLevel = 3;\n            Log.d(\"{3c72abb}\", \"{a2c16e4}\");\n        }\n    }\n\n    private setTvDeviceVendorDetails() {\n        if (this.isHEModelFireTV) {\n            // Don't use FIRETV until all callers understand it.\n            //this.osName = PlatformName.FIRETV;\n            this.deviceVendor = DeviceVendor.AMAZON;\n            if (this.isBrandChromium) {\n                this.browserName = BrowserName.SILK;\n            }\n        } else if (this.isHEModelBraviaTV) {\n            this.deviceVendor = DeviceVendor.SONY;\n        } else if (this.isHEModelChromecastTV) {\n            this.deviceVendor = DeviceVendor.GOOGLE;\n        } else if (this.isHEModelShieldTV) {\n            this.deviceVendor = DeviceVendor.NVIDIA;\n        } else if (this.isHEModelMiTV) {\n            this.deviceVendor = DeviceVendor.XIAOMI;\n        } else if (this.isHEModelTVision) {\n            this.deviceVendor = DeviceVendor.TVISION;\n        }\n    }\n\n    private determineAndroidBrowser() {\n        this.osName = PlatformName.ANDROID;\n        if (this.isBrowserNetscape) {\n            this.setFirefoxDetails();\n        } else if (this.isBrowserSamsungChromium) {\n            this.browserName = BrowserName.SAMSUNG;\n            this.deviceVendor = DeviceVendor.SAMSUNG;\n        } else if (this.isBrowserBrave) {\n            this.browserName = BrowserName.BRAVE;\n        } else if (this.isBrowserYandex) {\n            this.browserName = BrowserName.YANDEX;\n        } else if (this.isBrowserOperaTouch) {\n            this.browserName = BrowserName.OPERA;\n        } else if (this.useUaData) {\n            // Trust the UserAgentData brand information\n            if (this.isBrandEdge) {\n                this.browserName = BrowserName.EDGE;\n            } else if (this.isBrandOpera) {\n                this.browserName = BrowserName.OPERA;\n            } else if (this.isBrandYandex) {\n                this.browserName = BrowserName.YANDEX;\n            } else if (this.isBrandChrome) {\n                this.setChromeDetails();\n                this.setTvDeviceVendorDetails();\n            } else if (this.isBrandChromium) {\n                this.browserName = BrowserName.CHROMIUM;\n                this.setTvDeviceVendorDetails();\n            }\n        } else if (this.isBrowserChrome) {\n            if (!this.supportsAvif) {\n                // Microsoft Edge or Amazon Silk\n                if (this.isMobileNavigator) {\n                    this.browserName = BrowserName.EDGE;\n                } else {\n                    this.browserName = BrowserName.SILK;\n                }\n            } else {\n                // Detect all Chromium-based browsers as Chrome, since we don't have a specific\n                // test for Chrome that excludes Chromium-based browsers\n                this.setChromeDetails();\n            }\n        } else {\n            // Detect as Chrome (since WebView is based on and provided by Chrome/Chromium)\n            this.setChromeDetails();\n            this.confidenceLevel = 7;\n        }\n\n        this.determineAndroidDeviceType();\n    }\n\n    private determineAndroidDeviceType() {\n        if (this.useUaData && this.isHEKnownTVDevice) {\n            this.devType = DeviceType.TV;\n        } else if (!(this.isMobileUAD || this.isMobileNavigator) && this.isKnownTVDeviceUA) {\n            // Use user agent string for TV detection only if we are reasonably confident this is not a mobile device\n            this.devType = DeviceType.TV;\n            this.deviceVendor = this.deviceVendor ?? this.UADeviceVendor ?? DeviceVendor.UNKNOWN;\n            this.deviceName = this.deviceName ?? this.UADeviceModel ?? \"UNKNOWN\";\n            this.confidenceLevel = 7;\n        } else if (!(this.mediaPrimaryHover && !this.mediaPrimaryFinePointer)) {\n            // 'true' Android DESKTOP situations\n            if (this.isHEPlatformAndroid) {\n                // Can use User Agent Client Hints checks for more detailed detection.\n\n                if (this.isHEPlatformOverridden) {\n                    // Android browser with desktop site.\n                    if (!(this.mediaPrimaryNonHover && this.mediaPrimaryCoarsePointer)) {\n                        // ChromeOS or other desktop-like system.  Not docked.\n                        this.devType = DeviceType.DESKTOP;\n                    }\n                } else {\n                    if (this.mediaPrimaryHover && this.mediaPrimaryFinePointer) {\n                        // Likely mouse as primary controller, so probably real desktop/laptop, not docked.\n                        this.devType = DeviceType.DESKTOP;\n                    }\n                }\n            } else {\n                // Firefox and other browsers that don't support User Agent Client Hints.\n\n                if (!(this.mediaPrimaryNonHover && this.mediaPrimaryCoarsePointer)) {\n                    this.devType = DeviceType.DESKTOP;\n                }\n            }\n        } else {\n            // Hovering but no fine control, so not mouse controlled.\n            // Assume mobile device.\n        }\n\n        // Make sure to use a default of PHONE for Android systems.\n        if (!this.devType) {\n            // Detect Android tablets by those devices with a \"smallest width\" of 600 dp units.\n            // For browsers on Android, the screen.width and screen.height are in dp units.\n            const shortest = screen.width < screen.height ? screen.width : screen.height;\n            this.devType = shortest >= 600 ? DeviceType.TABLET : DeviceType.PHONE;\n        }\n    }\n\n    private determineWindowsBrowser() {\n        this.osName = PlatformName.WINDOWS;\n        if (!this.determineDesktopBrowser()) {\n            // TODO Check for platform-specific browsers, and set accordingly, to cope with\n            //      additional spoofing of navigator.platform\n            this.browserName = BrowserName.UNKNOWN;\n            this.confidenceLevel = 5;\n            Log.d(\"{3c72abb}\", \"{44ce1e0}\");\n        }\n    }\n\n    private determineAppleBrowser() {\n        // The three Apple platform names (iPad, iPhone and MacIntel) can be used on different devices\n        // iPad -     used on iPad   devices when requesting Mobile sites (in Chrome, Safari, Edge)\n        // iPhone -   used on iPhone devices when requesting Mobile sites (in Safar)i\n        //            used on iPhone devices in all cases (Firefox, Brave, Opera Touch, Chrome)\n        // MacIntel - used on macOS  devices always\n        //          - used on iPad   devices when requesting Desktop sites (in Safari, Chrome, Edge)\n        //          - used on iPad   devices always (in Brave, Firefox, Opera Touch)\n        //\n        // The default user agent is more accurate, but could be spoofed (including from another platform)\n\n        // TODO Check for platform-specific browsers, and set accordingly, to cope with\n        //      additional spoofing of navigator.platform\n\n        this.deviceVendor = DeviceVendor.APPLE;\n\n        if (this.useUaData && this.isHEPlatformMac) {\n            // So far, only macOS browsers have the high-entropy user agent data.\n            this.osName = PlatformName.MAC;\n            if (!this.determineDesktopBrowser()) {\n                this.browserName = BrowserName.UNKNOWN;\n                this.confidenceLevel = 5;\n                Log.d(\"{3c72abb}\", \"{b80b712}\");\n            }\n        } else if (this.isPlatformMacIntel) {\n            if (this.isMobileNavigator) {\n                this.osName = PlatformName.IPADOS;\n                this.determineIOSBrowser();\n            } else {\n                this.osName = PlatformName.MAC;\n                if (!this.determineDesktopBrowser()) {\n                    this.browserName = BrowserName.UNKNOWN;\n                    this.confidenceLevel = 5;\n                    Log.d(\"{3c72abb}\", \"{0f3296f}\");\n                }\n            }\n        } else if (this.isPlatformiPhone) {\n            this.osName = PlatformName.IOS;\n            this.determineIOSBrowser();\n        } else if (this.isPlatformiPad) {\n            this.osName = PlatformName.IPADOS;\n            this.determineIOSBrowser();\n        } else {\n            // Apple, so iOS/iPadOS/macOS.\n            // But not normal navigator.platform, so assume forging.\n            this.isForged = true;\n            this.confidenceLevel = 5;\n            if (this.isMobileNavigator) {\n                // Guess at iOS (not iPadOS)\n                this.osName = PlatformName.IOS;\n                this.determineIOSBrowser();\n                Log.d(\"{3c72abb}\", \"{cf1c572}\");\n            } else {\n                this.osName = PlatformName.MAC;\n                this.browserName = BrowserName.UNKNOWN;\n                Log.d(\"{3c72abb}\", \"{1eb1815}\");\n            }\n        }\n    }\n\n    private getCurrentLinuxOsName(): PlatformName {\n        // Steam deck appears almost exactly the same as Linux. The only real difference is he GL renderer,\n        // which is a Steam Deck-specific AMD Ryzen SKU\n        if (this.isGLSteamDeck) {\n            return PlatformName.STEAMOS;\n        } else {\n            return PlatformName.LINUX;\n        }\n    }\n\n    private setIOSVersion() {\n        if (this.supportsBigInt) {\n            if (this.supportsIntlDisplayNames) {\n                if (this.supportsBigInt64Array) {\n                    if (this.supportsCSSCounterStyleRule) {\n                        this.osVersion = \"17+\";\n                    } else if (this.supportsSharedWorker) {\n                        this.osVersion = \"16+\";\n                    } else if (this.supportsGpuBuffer) {\n                        // The Ellen voice was reemoved in 15.4 and is still missing in 15.5\n                        // It was restored in 15.6\n                        // Use the presence of that voice to distinguish between 15.5 and 15.6\n                        if (this.voiceIsAppleEllen) {\n                            this.osVersion = \"15.6+\";\n                        } else {\n                            this.osVersion = \"15.5+\";\n                        }\n                    } else if (this.supportsBroadcastChannel) {\n                        this.osVersion = \"15.4+\";\n                    } else if (this.supportsWebAssemblyExceptions) {\n                        this.osVersion = \"15.2+\";\n                    } else if (this.supportsPerformanceNavigationTiming) {\n                        this.osVersion = \"15.1+\";\n                    } else {\n                        this.osVersion = \"15+\";\n                    }\n                } else {\n                    this.osVersion = \"14.5+\";\n                }\n            } else {\n                if (this.supportsMediaRecorder) {\n                    this.osVersion = \"14.3+\";\n                } else {\n                    this.osVersion = \"14+\";\n                }\n            }\n        } else {\n            // Don't really support pre-14 versions, so only minimal check here.\n            if (this.supportsDecodingInfo) {\n                this.osVersion = \"13+\";\n            } else {\n                this.osVersion = \"12-\";\n            }\n        }\n    }\n\n    private determineIOSBrowser() {\n        this.setIOSVersion();\n\n        const osVersion = this.osVersion!;\n\n        // iOS versions that we support (14+) should support the Credential object in their WebKit engines.\n        // Browsers that don't have this object are not Safari (possibly Stadium, Cloudy, iCab, Lunascape, etc.).\n        const missingCredential =\n            !this.supportsCredential && !(osVersion.startsWith(\"12\") || osVersion.startsWith(\"13\"));\n\n        // iOS versions 16 and up should support the window.browser.runtime object in the WebKit engines.\n        // Browsers missing this object are not Safari.\n        const missingSafariExtension =\n            !this.supportsBrowserRuntime &&\n            !(\n                osVersion.startsWith(\"12\") ||\n                osVersion.startsWith(\"13\") ||\n                osVersion.startsWith(\"14\") ||\n                osVersion.startsWith(\"15\")\n            );\n\n        if (this.isBrowserFirefoxiOS) {\n            this.browserName = BrowserName.FIREFOX;\n        } else if (this.isBrowserOperaiOS) {\n            this.browserName = BrowserName.OPERA;\n        } else if (this.isBrowserBrave) {\n            this.browserName = BrowserName.BRAVE;\n        } else if (this.isBrowserYandex) {\n            this.browserName = BrowserName.YANDEX;\n        } else if (this.isBrowserEdgeiOS) {\n            this.browserName = BrowserName.EDGE;\n        } else if (this.isBrowserChromeiOS) {\n            this.browserName = BrowserName.CHROME;\n        } else if (this.supportsApplePay && !missingCredential && !missingSafariExtension) {\n            this.browserName = BrowserName.SAFARI;\n        } else if (this.isBrowserReactBased) {\n            // Lunascape is one browser like this\n            this.browserName = BrowserName.REACT;\n        } else {\n            if (missingCredential) {\n                // Not known, but with more confidence than just generically Unknown.\n                // Possibly someone using a browser to spoof the user agent for access to\n                // non-iOS games.\n                this.browserName = BrowserName.UNKNOWN;\n                this.confidenceLevel = 7;\n                Log.d(\"{3c72abb}\", \"{5a39f60}\");\n            } else {\n                // WebKit-based browser (since MacIntel and mobile).\n                // Detect as Safari?  Or as Unknown?\n                this.browserName = BrowserName.UNKNOWN;\n                this.confidenceLevel = 5;\n                Log.d(\"{3c72abb}\", \"{147d6b4}\");\n            }\n        }\n    }\n\n    private setFirefoxDetails() {\n        this.browserName = BrowserName.FIREFOX;\n        if (this.supportsIntlCollationOptions) {\n            if (this.supportsIntlDisplayNames) {\n                if (this.supportsBeforeInputEvent) {\n                    if (this.supportsAbortSignalAbort) {\n                        if (!this.supportsDeviceLightEvent) {\n                            this.browserVersion = \"89+\";\n                        } else {\n                            this.browserVersion = \"88\";\n                        }\n                    } else {\n                        this.browserVersion = \"87\";\n                    }\n                } else {\n                    this.browserVersion = \"86\";\n                }\n            } else {\n                this.browserVersion = \"85\";\n            }\n        } else {\n            this.browserVersion = \"84-\";\n        }\n    }\n\n    private setChromeDetails() {\n        this.browserName = BrowserName.CHROME;\n        if (this.browserVersion) {\n            return;\n        }\n\n        // Set browser version from feature detection.\n        if (this.supportsLargestContentfulPaint) {\n            if (this.supportsCSSregisterProperty) {\n                if (this.supportsXR) {\n                    if (this.supportsGetInstalledRelatedApps) {\n                        if (this.supportsIntlDisplayNames) {\n                            if (this.supportsBarcodeDetector) {\n                                if (this.supportsWakeLock) {\n                                    if (this.supportsPromiseAny) {\n                                        if (this.supportsFileSystemHandle) {\n                                            if (this.supportsAtomicsWaitAsync) {\n                                                if (this.supportsCSSaspectRatio) {\n                                                    if (this.supportsWebHID) {\n                                                        if (this.supportsOverflowClip) {\n                                                            // From Chrome 90, we should be able to use\n                                                            // User Agent Client Hints instead of feature detection.\n                                                            this.browserVersion = \"90+\";\n                                                        } else {\n                                                            this.browserVersion = \"89\";\n                                                        }\n                                                    } else {\n                                                        this.browserVersion = \"88\";\n                                                    }\n                                                } else {\n                                                    this.browserVersion = \"87\";\n                                                }\n                                            } else {\n                                                this.browserVersion = \"86\";\n                                            }\n                                        } else {\n                                            this.browserVersion = \"85\";\n                                        }\n                                    } else {\n                                        this.browserVersion = \"84\";\n                                    }\n                                } else {\n                                    this.browserVersion = \"83\";\n                                }\n                            } else {\n                                // NB - there's no Chrome 82 to detect.\n                                this.browserVersion = \"81\";\n                            }\n                        } else {\n                            this.browserVersion = \"80\";\n                        }\n                    } else {\n                        this.browserVersion = \"79\";\n                    }\n                } else {\n                    this.browserVersion = \"78\";\n                }\n            } else {\n                this.browserVersion = \"77\";\n            }\n        }\n    }\n\n    private determineDesktopBrowser(): boolean {\n        if (this.isBrowserNetscape) {\n            this.setFirefoxDetails();\n        } else if (this.isBrowserOpera) {\n            this.browserName = BrowserName.OPERA;\n        } else if (this.isBrowserBrave) {\n            this.browserName = BrowserName.BRAVE;\n        } else if (this.isBrowserYandex) {\n            this.browserName = BrowserName.YANDEX;\n        } else if (this.isBrowserChrome) {\n            // Check easy derivations of Chrome before these deeper checks.\n            if (this.isGLXbox) {\n                this.osName = PlatformName.XBOX;\n                this.deviceVendor = DeviceVendor.MICROSOFT;\n                this.browserName = BrowserName.EDGE;\n                if (this.isGLXboxSeries) {\n                    this.devModel = DeviceModel.XBOX_SERIES;\n                } else if (this.isGLXbox) {\n                    this.devModel = DeviceModel.XBOX_ONE;\n                }\n            } else if (this.useUaData) {\n                if (this.isHEModelXbox) {\n                    this.osName = PlatformName.XBOX;\n                    this.deviceVendor = DeviceVendor.MICROSOFT;\n                    this.browserName = BrowserName.EDGE;\n                } else if (this.isBrandEdge) {\n                    this.browserName = BrowserName.EDGE;\n                } else if (this.isBrandOpera) {\n                    this.browserName = BrowserName.OPERA;\n                } else if (this.isBrandYandex) {\n                    this.browserName = BrowserName.YANDEX;\n                } else if (this.isBrandChrome) {\n                    this.setChromeDetails();\n                } else if (this.isBrandChromium && !this.isBrandUnknown) {\n                    // Chromium is often the basis of other browsers, so don't be confident that we have Chromium\n                    // if there are other brands as well.\n                    this.browserName = BrowserName.CHROMIUM;\n                }\n            } else if (!this.supportsAvif) {\n                // Edge currently does not support AVIF images, but otherwise looks like Chrome.\n                // Note: Old versions of Chrome also do not support AVIF, nor does old Chromium.\n\n                // All modern Chrome, Edge and Chromium (at least) support\n                // all PDF plugins (Microsoft Edge PDF Viewer, Chrome PDF Viewer and\n                // Chromium PDF Viewer).  Therefore, cannot distinguish so assume\n                // current worst-case of Edge.\n                this.browserName = BrowserName.EDGE;\n\n                // Could be Linux, macOS, Windows, or Xbox Series S/X (early alpha skip-ahead builds of Edge on Xbox).\n                // If we already know the OS, use that, else report Unknown.\n                this.osName = this.osName ?? PlatformName.UNKNOWN;\n                this.confidenceLevel = 7;\n            } else {\n                // Potentially reduced confidence if we go through this code path.\n                if (this.useUaData && this.isBrandChromium) {\n                    // Chromium-based, possibly some other brand as well.\n                    // Definitely not Chrome or well-known derivative of Chromium, however.\n                    this.browserName = BrowserName.CHROMIUM;\n                    // Also, not spoofed so safe to set confidence level.\n                    this.confidenceLevel = 9;\n                } else if (this.voiceWasKnown) {\n                    // Voice was known, but not Chrome or Edge.\n                    // Not a known Chromium-derivative, such as Brave or Opera.\n                    // High confidence that this is actual Chromium.\n                    this.browserName = BrowserName.CHROMIUM;\n                } else {\n                    // Detect all Chrome-based browsers as Chromium, since we don't have a specific\n                    // test for Chrome that excludes Chromium-based browsers (other than by brand\n                    // which has already been checked or is spoofed, or by voice).\n                    this.browserName = BrowserName.CHROMIUM;\n                    this.confidenceLevel = 7;\n                }\n            }\n        } else if (this.isBrowserSafari || this.supportsApplePay) {\n            this.browserName = BrowserName.SAFARI;\n        } else if (this.isBrowserEdgeLegacy) {\n            if (this.isGLXbox) {\n                this.osName = PlatformName.XBOX;\n                this.deviceVendor = DeviceVendor.MICROSOFT;\n                this.browserName = BrowserName.EDGE_LEGACY;\n            } else {\n                this.browserName = BrowserName.EDGE_LEGACY;\n            }\n        } else {\n            // Not detected.\n            return false;\n        }\n\n        return true;\n    }\n\n    // Run a callback after the initial batch of startup code has run.\n    private runAfterStartup(callback: Function) {\n        window.setTimeout(callback, INSTANT_TIMEOUT);\n    }\n\n    public setTelemetryHandler(telemetry: TelemetryHandler) {\n        this.telemetry?.emitDebugEvent(\"TelemetryHandlerChanged\");\n        this.telemetry = telemetry;\n        for (const queuedEvent of this.queuedTelemetry) {\n            const name = queuedEvent.name;\n            const data = queuedEvent.data;\n            const type = queuedEvent.type;\n            switch (type) {\n                case WorkerTelemetryType.ERROR_EVENT:\n                    this.emitWorkerErrorTelemetry(name, data);\n                    break;\n                case WorkerTelemetryType.MESSAGE_EVENT:\n                    this.emitWorkerMessageErrorTelemetry(name, data);\n                    break;\n                case WorkerTelemetryType.UNUSED:\n                    this.emitWorkerUnusedTelemetry(name);\n                    break;\n                case WorkerTelemetryType.TIMEOUT:\n                    this.emitWorkerTimeoutTelemetry(name);\n                    break;\n                case WorkerTelemetryType.CREATE_FAILURE:\n                    this.emitWorkerCreationErrorTelemetry(name, data);\n                    break;\n                case WorkerTelemetryType.ERROR_STRING:\n                    this.emitWorkerErrorStringTelemetry(name, data);\n                    break;\n                case WorkerTelemetryType.OVERLONG_DELAY:\n                    this.emitWorkerOverlongTelemetry(name, data);\n                    break;\n            }\n        }\n        this.queuedTelemetry = [];\n    }\n\n    // Emit telemetry events, or queue until a listener has been registerd.\n    private emitWorkerErrorTelemetry(name: string, data: ErrorEvent) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\n                \"WorkerProblem\",\n                name,\n                `${data.message} in ${data.filename}@${data.lineno}:${data.colno}`,\n                JSON.stringify(data.error)\n            );\n        } else {\n            this.queuedTelemetry.push({\n                type: WorkerTelemetryType.ERROR_EVENT,\n                name: name,\n                data: data\n            });\n        }\n    }\n\n    private emitWorkerErrorStringTelemetry(name: string, data: string) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\"WebWorkerProblem\", name, data);\n        } else {\n            this.queuedTelemetry.push({\n                type: WorkerTelemetryType.ERROR_STRING,\n                name: name,\n                data: data\n            });\n        }\n    }\n\n    private emitWorkerMessageErrorTelemetry(name: string, data: MessageEvent) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\"WorkerMessageProblem\", JSON.stringify(data));\n        } else {\n            this.queuedTelemetry.push({\n                type: WorkerTelemetryType.MESSAGE_EVENT,\n                name: name,\n                data: data\n            });\n        }\n    }\n\n    private emitWorkerUnusedTelemetry(name: string) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\"WorkerUnused\", name);\n        } else {\n            this.queuedTelemetry.push({ type: WorkerTelemetryType.UNUSED, name: name });\n        }\n    }\n\n    private emitWorkerTimeoutTelemetry(name: string) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\"WorkerTimeout\", name);\n        } else {\n            this.queuedTelemetry.push({ type: WorkerTelemetryType.TIMEOUT, name: name });\n        }\n    }\n\n    private emitWorkerCreationErrorTelemetry(name: string, exception: any) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\n                \"WorkerCreateFailure\",\n                name,\n                exception?.stack ?? \"\",\n                JSON.stringify(exception)\n            );\n        } else {\n            this.queuedTelemetry.push({\n                type: WorkerTelemetryType.CREATE_FAILURE,\n                name: name,\n                data: exception\n            });\n        }\n    }\n\n    private emitWorkerOverlongTelemetry(name: string, delay: number) {\n        if (this.telemetry) {\n            this.telemetry.emitDebugEvent(\"WorkerOverlongDelay\", name, delay.toString());\n        } else {\n            this.queuedTelemetry.push({\n                type: WorkerTelemetryType.OVERLONG_DELAY,\n                name: name,\n                data: delay\n            });\n        }\n    }\n}\n\nclass GLWorker implements DoWork<GlDebugInfo> {\n    constructor() {}\n\n    private getGLDebugInfo(): GlDebugInfo {\n        return this.glDebugInfo(this.createCanvas());\n    }\n\n    private createCanvas(): OffscreenCanvas | HTMLCanvasElement {\n        const offscreenCanvasConstructor = self[\"OffscreenCanvas\"];\n        if (offscreenCanvasConstructor) {\n            return new OffscreenCanvas(1, 1);\n        } else {\n            return document.createElement(\"canvas\");\n        }\n    }\n\n    private glDebugInfo(canvas: OffscreenCanvas | HTMLCanvasElement): GlDebugInfo {\n        const glCtx = canvas.getContext(\"webgl\");\n        const glDbgExt = glCtx && (glCtx as any)[\"getExtension\"](\"WEBGL_debug_renderer_info\");\n        return glDbgExt\n            ? {\n                  vendorName:\n                      glCtx && (glCtx as any)[\"getParameter\"](glDbgExt.UNMASKED_VENDOR_WEBGL),\n                  rendererName:\n                      glCtx && (glCtx as any)[\"getParameter\"](glDbgExt.UNMASKED_RENDERER_WEBGL),\n                  present: true\n              }\n            : {\n                  vendorName: \"\",\n                  rendererName: \"\",\n                  present: false\n              };\n    }\n\n    doWork(): GlDebugInfo {\n        return this.getGLDebugInfo();\n    }\n}\n\nclass HighEntropyWorker implements DoWork<UADataHEValues> {\n    constructor() {}\n\n    doWork(): Promise<UADataHEValues> {\n        const uad: UserAgentData | undefined = (navigator as Navigator).userAgentData;\n\n        if (!uad) {\n            return Promise.resolve(undefined);\n        }\n\n        return uad\n            .getHighEntropyValues([\n                \"platform\",\n                \"architecture\",\n                \"uaFullVersion\",\n                \"platformVersion\",\n                \"model\",\n                \"bitness\"\n            ])\n            .then((heValues: UADataHEValues) => {\n                if (!heValues) {\n                    heValues = {};\n                }\n\n                if (!heValues.brands) {\n                    heValues.brands = uad.brands;\n                }\n\n                if (!heValues.mobile) {\n                    heValues.mobile = uad.mobile;\n                }\n\n                return heValues;\n            });\n    }\n}\n\nclass SmartTVWorker implements DoWork<SmartTVUAInfo> {\n    constructor() {}\n\n    doWork(): Promise<SmartTVUAInfo> {\n        let smartTvInfo: SmartTVUAInfo = {\n            isKnownTVDevice: false,\n            modelName: \"\",\n            vendorName: DeviceVendor.UNKNOWN\n        };\n        if (navigator.userAgent) {\n            const uaString = navigator.userAgent.toUpperCase();\n\n            //UA: Mozilla/5.0 (Linux; Android 9; BRAVIA 4K UR2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Mobile Safari/537.36\n            //UA: Mozilla/5.0 (SMART-TV; LINUX; Tizen 6.5) AppleWebKit/537.36 (KHTML, like Gecko) 85.0.4183.93/6.5 TV Safari/537.36\n            //UA: Mozilla/5.0 (Linux; Android 11; SHIELD Android TV) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Mobile Safari/537.36\n\n            //https://deviceatlas.com/blog/list-smart-tv-user-agent-strings\n            //https://developer.samsung.com/smarttv/develop/guides/fundamentals/retrieving-platform-information.html\n            //https://developers.whatismybrowser.com/useragents/explore/operating_platform/chromecast/\n\n            // Check for known strings associated with TV devices in the UA string. This functionality is currently used only for\n            // Android based TVs. If at all we need to use this for other platforms, care should be taken not to override values\n            // that were detected from a more reliable source than user agent string. Some of the below fields like SMARTTV are\n            // associated with Samsung (Tizen-OS) and LG (Web-OS) TVs. However, if there are android based TVs that have this string,\n            // we will benefit. For Samsung and LG TVs we would not use the results of this worker anyway.\n            const knownTvUAFields = [\n                \"BRAVIA\",\n                \"SMARTTV\",\n                \"SMART-TV\",\n                \"PHILIPSTV\",\n                \"GOOGLETV\",\n                \"CRKEY\",\n                \"CHROMECAST\",\n                \"SHIELD Android TV\"\n            ];\n\n            // Keep both the below arrays in sync to map the known model and vendor details\n            const knownTvUAModels = [\n                \"BRAVIA\",\n                \"TIZEN\",\n                \"PHILIPSTV\",\n                \"GOOGLETV\",\n                \"CRKEY\",\n                \"CHROMECAST\",\n                \"SHIELDTV\"\n            ];\n            const knownTvVendors = [\n                DeviceVendor.SONY,\n                DeviceVendor.SAMSUNG,\n                DeviceVendor.PHILIPS,\n                DeviceVendor.GOOGLE,\n                DeviceVendor.GOOGLE,\n                DeviceVendor.GOOGLE,\n                DeviceVendor.NVIDIA\n            ];\n            const tvFieldsRegex = new RegExp(knownTvUAFields.join(\"|\"), \"i\");\n            if (tvFieldsRegex.test(uaString)) {\n                smartTvInfo.isKnownTVDevice = true;\n                const matches = uaString.match(knownTvUAModels.join(\"|\"));\n                if (matches) {\n                    for (let i = 0; i < knownTvUAModels.length; i++) {\n                        if (matches[0] == knownTvUAModels[i]) {\n                            smartTvInfo.modelName = knownTvUAModels[i];\n                            smartTvInfo.vendorName = knownTvVendors[i];\n                            if (matches[0] == \"CRKEY\") {\n                                smartTvInfo.modelName = \"CHROMECAST\"; // CRKEY->CHROMECAST\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return Promise.resolve(smartTvInfo);\n    }\n}\n\nclass NavigatorPlatformWorker implements DoWork<NavigatorPlatform> {\n    constructor() {}\n\n    doWork(): NavigatorPlatform {\n        return { platform: navigator.platform };\n    }\n}\n\n// External API\n\nconst platformImplSingleton = new Platform();\n\n// Callers can cache the result of this API to re-use after calling it once on page load\nexport function GetPlatformDetails(): Promise<PlatformDetails> {\n    performance.mark(\"platformBegin\");\n    return platformImplSingleton.detectPlatformDetails();\n}\n\n// TODO: Remove this alias once clients stop using it.\nexport const getPlatformDetails = GetPlatformDetails;\n\nexport function AddPlatformTelemetry(telemetry: TelemetryHandler) {\n    platformImplSingleton.setTelemetryHandler(telemetry);\n}\n","import { EventEmitter } from \"./eventemitter\";\nimport { LogEvent } from \"./interfaces\";\n\nexport class LogQueueingEventEmitter extends EventEmitter {\n    private logEventName: string;\n    private logQueue: LogEvent[] = [];\n\n    constructor(logEventName: string, emitSynchronously?: boolean) {\n        super(emitSynchronously);\n        this.logEventName = logEventName;\n    }\n\n    protected onLogEvent(logEvent: LogEvent) {\n        if (this.hasListener(this.logEventName)) {\n            this.emit(this.logEventName, logEvent);\n        } else {\n            this.logQueue.push(logEvent);\n        }\n    }\n\n    public addListener(eventname: string, handler: Function) {\n        super.addListener(eventname, handler);\n        if (eventname == this.logEventName && this.logQueue.length > 0) {\n            for (const logevent of this.logQueue) {\n                this.emit(this.logEventName, logevent);\n            }\n            this.logQueue = [];\n        }\n    }\n}\n","import {\r\n    GsInitParams,\r\n    SessionParams,\r\n    ActiveSessionInfo,\r\n    ActiveSessionResultEvent,\r\n    SessionProgressUpdateEvent,\r\n    SessionState,\r\n    AppLaunchMode,\r\n    GS_EVENTS,\r\n    SessionProgressState,\r\n    ServerInfo,\r\n    GridSession,\r\n    ServerError,\r\n    SESSIONMODIFY_ACTION,\r\n    Usage,\r\n    AppLevelProtocol,\r\n    ConnectionInfo,\r\n    MonitorSettings,\r\n    SdrHdrMode,\r\n    TelemetryEventIds,\r\n    SessionUpdateEvent,\r\n    TelemetryHttpEvent\r\n} from \"./interfaces\";\r\nimport {\r\n    AuthType,\r\n    AuthInfo,\r\n    UtilsErrorCode,\r\n    DefaultHttpRequestOptions,\r\n    ErrorDetails,\r\n    performHttpRequest,\r\n    RequestHttpOptions,\r\n    Response,\r\n    GetHexString,\r\n    HttpRequestHeaders,\r\n    getNewGuid,\r\n    UTIL_EVENTS,\r\n    LogQueueingEventEmitter,\r\n    PlatformDetails,\r\n    IsChromeBrowser,\r\n    IsChromeVersionAtLeast,\r\n    PackageVersion,\r\n    IEventEmitter,\r\n    TracingManager,\r\n    CancellableWait\r\n} from \"./dependencies\";\r\nimport { GridServerSettings } from \"./settings\";\r\nimport { GsErrorCode } from \"./gserrorcode\";\r\nimport { Log } from \"./logger\";\r\nimport { GsTelemetryHandler } from \"./gstelemetryhandler\";\r\nimport { GridServer_GameLaunch_Request, NetworkTypeEnum } from \"./gstelemetryinterfaces\";\r\nimport { TracingComponent, TracingOperation } from \"./tracing\";\r\nimport { trace } from \"@opentelemetry/api\";\r\n\r\nconst LOGTAG = \"gridserver\";\r\n\r\n/**\r\n * The interface defines the protocol to connect to PM.\r\n *\r\n * GridServer is the proxy class which implements the protocol and provides the actual ability to communicate with PM for session setup and teardown.\r\n * And it could be instantiated as: const gridServer: GridServer = new GridServer(platformDetails, emitEventsSynchronously);\r\n *\r\n * Client needs to register listners for GS_EVENTS as described in interface.ts file for the events it emits.\r\n *\r\n * Sample Usage:\r\n * const gridServer = new GridServer(platformDetails, emitEventsSynchronously);\r\n * gridServer.initialize({\r\n *     deviceOs: \"WINDOWS\",\r\n *     deviceOsVer: \"11.0.22000.0\",\r\n *     deviceType: \"DESKTOP\",\r\n *     clientIdentification: \"GFN-PC\",\r\n *     clientVersion: \"24.0\",\r\n *     clientAppVersion: \"2.0.50.104\",\r\n *     clientStreamer: \"WEBRTC\",\r\n *     browserType: \"CHROME\",\r\n *     deviceHashId: \"1234567890\",\r\n *     serverAddress: \"server-address.nvidiagrid.net\",\r\n *     autoTokenCallback: <callback function>,\r\n *     clientHeaders: {\r\n *         \"nv-browser-version\": \"123.0.1234.12\"\r\n *     },\r\n *     ...\r\n * });\r\n * gridServer.setAuthInfo(AuthInfo.JARVIS, \"some token\");\r\n *\r\n * gridServer.addListener(GS_EVENTS.ACTIVE_SESSIONS_RESULT, (eventData: ActiveSessionResultEvent) => {});\r\n * gridServer.addListener(GS_EVENTS.PROGRESS_UPDATE, (eventData: SessionProgressUpdateEvent) => {});\r\n * gridServer.addListener(GS_EVENTS.GET_SESSION_RESULT, (eventData: GetSessionResult) => {});\r\n *\r\n * gridServer.putOrPostSession({\r\n *     streamParams: [...],\r\n *     appId: 100000000,\r\n *     shortName: \"Fortnite (Epic)\",\r\n *     ...\r\n * }, SESSIONMODIFY_ACTION.UNKNOWN); // Start a session\r\n * gridServer.getSession(some_session_id, true); // Queue progress detail will be emitted through the GS_EVENTS.PROGRESS_UPDATE event\r\n * gridServer.getAllActiveSessions(); // Retrieve current session of the user, session detail will be emitted through the GS_EVENTS.GET_SESSION_RESULT\r\n * gridServer.sendDeleteRequest(some_session_id); // Delete the existing session\r\n *\r\n * gridServer.uninitialize(); // Release all resources\r\n */\r\ndeclare interface IGridServer extends IEventEmitter {\r\n    /**\r\n     * Initialize the grid server.\r\n     * NOTE: should be called before any network operations:\r\n     *         - getAllActiveSessions\r\n     *         - putOrPostSession\r\n     *         - getSession\r\n     *         - sendDeleteRequest\r\n     * @param initParams - interface: GsInitParams\r\n     */\r\n    initialize(initParams: GsInitParams): void;\r\n\r\n    /**\r\n     * This method should be called before recreating gridserver object\r\n     **/\r\n    uninitialize(): void;\r\n\r\n    /**\r\n     * Update telemetry event ids. Without calling the function results in\r\n     * telemetry ID field to be blank.\r\n     * NOTE: should be called before putOrPostSession.\r\n     * @param telemetryEventIds - interface: TelemetryEventIds\r\n     */\r\n    updateTelemetryEventIds(telemetryEventIds: TelemetryEventIds): void;\r\n\r\n    /**\r\n     * Gets the current active sessions for the user.\r\n     * This is an asynchronous API, upon completion ACTIVE_SESSIONS_RESULT is emitted for results.\r\n     **/\r\n    getAllActiveSessions(): void;\r\n\r\n    /**\r\n     * This method returns the current sessionId.\r\n     * NOTE: the session id is set/reset on putOrPostSession calls and will be empty until one is executed.\r\n     * Ideally the session ID is the current one, but it will not be expired if the current session expires.\r\n     **/\r\n    getSessionId(): string;\r\n\r\n    /**\r\n     * This method returns the current subSessionId.\r\n     * NOTE: the subsession ID is set/reset on putOrPostSession calls and will be empty until one is executed.\r\n     *       Ideally the subsession ID is the current one, but it will not be expired if the current subsession expires.\r\n     **/\r\n    getSubSessionId(): string;\r\n\r\n    /**\r\n     * This method can be used to resume (PUT) or start (POST) a session.\r\n     * Result is returned in promise with GridSession object.\r\n     * @param startParams - object of SessionParams object.\r\n     * @param action - value from SESSIONMODIFY_ACTION for resume or starting session.\r\n     * @param sessionId - sessionId in case of resume\r\n     **/\r\n    putOrPostSession(\r\n        startParams: SessionParams,\r\n        action: SESSIONMODIFY_ACTION,\r\n        sessionId: string | undefined\r\n    ): Promise<GridSession | undefined>;\r\n\r\n    /**\r\n     * This method can be used to get a session details belonging to a session id for resume scenario or during polling.\r\n     * Pass isPoll flag true when post request is made for session setup.\r\n     * Result is returned in promise with GridSession object.\r\n     * @param sessionId - sessionId in case of resume.\r\n     * @param isPoll - used in post request.\r\n     **/\r\n    getSession(_sessionId: string, isPoll: boolean): Promise<GridSession | undefined>;\r\n\r\n    /**\r\n     * This method can be used to send a delete request for a given session id.\r\n     * Pass isPoll flag true when post request is made for session setup.\r\n     * Result is returned in promise of type void.\r\n     * @param sessionId - sessionId to delete\r\n     * @note Will not cancel active operations.\r\n     * @note If putOrPostSession or getSession is in progress, should first call cancelSessionSetup\r\n     **/\r\n    sendDeleteRequest(sessionId: string): Promise<void>;\r\n\r\n    /**\r\n     * Set the client's authorization information.\r\n     * NOTE: initialize must be called before using this API.\r\n     *       Should be called before the first use of APIs that require authentication with the server.\r\n     *         - getAllActiveSessions\r\n     *         - putOrPostSession\r\n     *         - getSession\r\n     *         - sendDeleteRequest\r\n     *       If not called, Jarvis authentication will be assumed.\r\n     *       In the event of authentication related errors, can be called again to update the existing authentication information.\r\n     * @param authInfo - object\r\n                     { type: enum<auth method for server communication>\r\n                       token: string<token to authenticate server communication>}\r\n     **/\r\n    setAuthInfo(authInfo: AuthInfo): void;\r\n\r\n    /**\r\n     * This method can be used to cancel in progress session setup.\r\n     * Should be called only after putOrPostSession or getSession with isPoll = true, before they resolve.\r\n     * Ongoing APIs will throw with either SessionSetupCancelled or SessionSetupCancelledDuringQueuing.\r\n     * @note Will not send DELETE request for the session.\r\n     * @note Should call sendDeleteRequest following putOrPostSession or getSession resolution if the session should be deleted.\r\n     **/\r\n    cancelSessionSetup(): void;\r\n\r\n    /**\r\n     * Get zone name.\r\n     * NOTE: will be empty until getSession or putOrPostSession gets called.\r\n     */\r\n    getZoneName(): string;\r\n\r\n    /**\r\n     * Get zone address.\r\n     * NOTE: will be empty until getSession or putOrPostSession gets called.\r\n     */\r\n    getZoneAddress(): string;\r\n\r\n    /**\r\n     * Get GPU type.\r\n     * NOTE: will be empty until getSession or putOrPostSession gets called.\r\n     */\r\n    getGpuType(): string;\r\n\r\n    /**\r\n     * Update telemetry network status. Default: NetworkTypeEnum.UNKNOWN\r\n     * @param network - interface: NetworkTypeEnum\r\n     */\r\n    setNetworkType(network: NetworkTypeEnum): void;\r\n}\r\n\r\ninterface PollingOptions {\r\n    minInterval: number;\r\n    maxInterval: number;\r\n    step: number;\r\n    queueSizePerStep: number;\r\n}\r\n\r\ninterface ServerResponse {\r\n    result: GsErrorCode; // Result code of the server request\r\n    session?: GridSession; // Session provided in the server response\r\n    serverId?: string; // Name of the zone that handled the request\r\n    sessionList?: ActiveSessionInfo[]; // Session list provided in the server response\r\n    jsonResponse?: any; // JSON object of the full server response\r\n}\r\n\r\nenum SessionRequestType {\r\n    CREATE_SESSION,\r\n    RESUME_SESSION,\r\n    DELETE_SESSION,\r\n    GET_SESSIONINFO,\r\n    AD_UPDATE,\r\n    GET_ACTIVE_SESSIONS\r\n}\r\n\r\nexport class GridServer extends LogQueueingEventEmitter implements IGridServer {\r\n    private sessionControlServerMap: Map<string, ServerInfo> = new Map();\r\n    private httpRequestOptions: RequestHttpOptions = DefaultHttpRequestOptions;\r\n    protected initParams?: GsInitParams;\r\n    protected protocol: string = \"https://\";\r\n    protected overrideSignallingInfo: boolean = true;\r\n    protected subSessionId: string = \"\";\r\n    private queuePosition: number = Number.MAX_VALUE;\r\n    private pollingOptions: PollingOptions;\r\n    private authInfo: AuthInfo = { type: AuthType.JWT_GFN };\r\n    private zoneName?: string;\r\n    private zoneAddress?: string;\r\n    private subSessionsIdMap: Map<string, string> = new Map();\r\n    private logHandler: Function = this.onLogEvent.bind(this);\r\n    private putOrPostRequestController?: AbortController;\r\n    private getSessionRequestController?: AbortController;\r\n    private gpuType?: string;\r\n    private gsTelemetryHandler: GsTelemetryHandler;\r\n    private clientLocale?: string;\r\n    private launchRequestInfoMap: Map<string, GridServer_GameLaunch_Request> = new Map();\r\n    private platformDetails?: PlatformDetails;\r\n\r\n    constructor(platformDetails?: PlatformDetails, emitEventsSynchronously?: boolean) {\r\n        super(GS_EVENTS.LOG_EVENT, emitEventsSynchronously);\r\n\r\n        // When run from GridApp, Log will already have had a listener attached, so don't\r\n        // add a second one (it causes duplicate logging).\r\n        // When run from the client SDK, Log will not yet have a listener, so add one\r\n        // here.\r\n        if (!Log.hasListener(UTIL_EVENTS.LOG_EVENT)) {\r\n            Log.addListener(UTIL_EVENTS.LOG_EVENT, this.logHandler);\r\n        }\r\n        this.platformDetails = platformDetails;\r\n        let remoteConfigTimeout = 0; // in seconds\r\n        if (GridServerSettings.commonConfig.pmCommunication?.httpConnectionTimeout !== undefined) {\r\n            remoteConfigTimeout +=\r\n                GridServerSettings.commonConfig.pmCommunication.httpConnectionTimeout;\r\n        }\r\n        if (GridServerSettings.commonConfig.pmCommunication?.httpDataReceiveTimeout !== undefined) {\r\n            remoteConfigTimeout +=\r\n                GridServerSettings.commonConfig.pmCommunication.httpDataReceiveTimeout;\r\n        }\r\n        this.httpRequestOptions.timeout = remoteConfigTimeout ? remoteConfigTimeout * 1000 : 13000;\r\n        this.httpRequestOptions.retryCount =\r\n            GridServerSettings.commonConfig.pmCommunication?.httpRetryCount ?? 3;\r\n        this.httpRequestOptions.backOffDelay =\r\n            GridServerSettings.commonConfig.pmCommunication?.httpBackOffDelay ?? 500;\r\n\r\n        if (window.location.protocol === \"http:\") {\r\n            this.overrideSignallingInfo = false;\r\n        }\r\n\r\n        this.pollingOptions = {\r\n            minInterval:\r\n                GridServerSettings.commonConfig.pmCommunication?.pollingIntervalMin ?? 1000,\r\n            maxInterval:\r\n                GridServerSettings.commonConfig.pmCommunication?.pollingIntervalMax ?? 10000,\r\n            step: GridServerSettings.commonConfig.pmCommunication?.pollingIntervalStep ?? 1000,\r\n            queueSizePerStep:\r\n                GridServerSettings.commonConfig.pmCommunication?.pollingQueueSizePerStep ?? 50\r\n        };\r\n        this.gsTelemetryHandler = new GsTelemetryHandler(this);\r\n    }\r\n\r\n    public initialize(initParams: GsInitParams) {\r\n        Log.i(\"{6bae601}\", \"{6802390}\", PackageVersion);\r\n        this.initParams = initParams;\r\n        GridServer.addClientHeaders(this.httpRequestOptions.headers, this.initParams);\r\n        this.gsTelemetryHandler.resetCache();\r\n        Log.d(\"{6bae601}\", \"{5af3344}\");\r\n    }\r\n\r\n    /**\r\n     * This method should be called before recreating gridserver object\r\n     **/\r\n    public uninitialize() {\r\n        this.cancelSessionSetup();\r\n        Log.removeListener(UTIL_EVENTS.LOG_EVENT, this.logHandler);\r\n        this.removeAllListeners();\r\n    }\r\n\r\n    public updateTelemetryEventIds(telemetryEventIds: TelemetryEventIds) {\r\n        this.gsTelemetryHandler.updateTelemetryEventIds(telemetryEventIds);\r\n    }\r\n\r\n    //@todo Better way is to have generated defs from json schema instead of any\r\n    private extractSessionInformation(jsonSession: any): GridSession {\r\n        let gridSession: GridSession = {\r\n            sessionId: jsonSession[\"sessionId\"],\r\n            subSessionId:\r\n                jsonSession[\"sessionId\"] === this.getSessionId() ? this.getSubSessionId() : \"\",\r\n            signalConnectionInfo: { ip: \"\", port: 0, protocol: \"\" },\r\n            mediaConnectionInfo: [],\r\n            streamInfo: [],\r\n            appId: 0,\r\n            state: GridServer.convertSessionStateToString(jsonSession[\"status\"]),\r\n            appLaunchMode: AppLaunchMode.Default,\r\n            zoneName: \"\",\r\n            zoneAddress: \"\",\r\n            gpuType: \"\",\r\n            clientLocale: this.clientLocale ?? \"\"\r\n        };\r\n        gridSession.appId = jsonSession[\"sessionRequestData\"]\r\n            ? jsonSession[\"sessionRequestData\"][\"appId\"]\r\n            : 0;\r\n\r\n        if (jsonSession[\"connectionInfo\"]) {\r\n            gridSession.mediaConnectionInfo = jsonSession[\"connectionInfo\"] as ConnectionInfo[];\r\n            for (let i = 0; i < gridSession.mediaConnectionInfo.length; i++) {\r\n                let jconnInfo = gridSession.mediaConnectionInfo[i];\r\n                if (jconnInfo.usage == Usage.SIGNALING && jconnInfo.ip) {\r\n                    //backward compatibility with MockPM, to be removed in follow up\r\n                    gridSession.signalConnectionInfo.ip = jconnInfo.ip;\r\n                    gridSession.signalConnectionInfo.port = jconnInfo.port;\r\n                    gridSession.signalConnectionInfo.protocol =\r\n                        jconnInfo.appLevelProtocol === AppLevelProtocol.HTTPS ? \"https\" : \"http\";\r\n                    // Until PM is updated to return the https port of reverse proxy, hard code the signal connection info.\r\n                    // Changes to support https are deployed in ZIAR but PM change to return correct port is not ready.\r\n                    // Hence this will work without the need for PM change right now.\r\n                    // In each zone there can be multiple Reverse proxy and we should connect to the one where https port mapping to\r\n                    // gameseat is set. Each of ReverseProxy within a zone will have seperate zone.\r\n                    if (\r\n                        jconnInfo.appLevelProtocol != AppLevelProtocol.HTTPS &&\r\n                        this.overrideSignallingInfo\r\n                    ) {\r\n                        //override http to https\r\n                        gridSession.signalConnectionInfo.port = 49100;\r\n                        gridSession.signalConnectionInfo.protocol = \"https\";\r\n                        if (jconnInfo.ip.includes(\".com\") || jconnInfo.ip.includes(\".net\")) {\r\n                            gridSession.signalConnectionInfo.ip = jconnInfo.ip;\r\n                        } else {\r\n                            let addressParts = jconnInfo.ip.split(\".\");\r\n                            gridSession.signalConnectionInfo.ip =\r\n                                addressParts[0] +\r\n                                \"-\" +\r\n                                addressParts[1] +\r\n                                \"-\" +\r\n                                addressParts[2] +\r\n                                \"-\" +\r\n                                addressParts[3];\r\n                            let domainUrlIndex =\r\n                                jsonSession[\"sessionControlInfo\"][\"ip\"].indexOf(\".\");\r\n                            gridSession.signalConnectionInfo.ip +=\r\n                                jsonSession[\"sessionControlInfo\"][\"ip\"].substring(domainUrlIndex);\r\n                            Log.d(\"{6bae601}\", \"{7d16374}\", gridSession.signalConnectionInfo.ip);\r\n                        }\r\n                    }\r\n                } else if (jconnInfo.usage == Usage.VIDEO) {\r\n                    gridSession.signalConnectionInfo.port = 49100;\r\n                    gridSession.signalConnectionInfo.protocol = \"https\";\r\n                    let addressParts = jconnInfo.ip.split(\".\");\r\n                    gridSession.signalConnectionInfo.ip =\r\n                        addressParts[0] +\r\n                        \"-\" +\r\n                        addressParts[1] +\r\n                        \"-\" +\r\n                        addressParts[2] +\r\n                        \"-\" +\r\n                        addressParts[3];\r\n                    let domainUrlIndex = jsonSession[\"sessionControlInfo\"][\"ip\"].indexOf(\".\");\r\n                    gridSession.signalConnectionInfo.ip +=\r\n                        jsonSession[\"sessionControlInfo\"][\"ip\"].substring(domainUrlIndex);\r\n                    Log.d(\"{6bae601}\", \"{cf7d7ea}\", gridSession.signalConnectionInfo.ip);\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonSession[\"monitorSettings\"]) {\r\n            let monitorSettings: MonitorSettings[] = jsonSession[\r\n                \"monitorSettings\"\r\n            ] as MonitorSettings[];\r\n            for (const monitor of monitorSettings) {\r\n                gridSession.streamInfo.push({\r\n                    width: monitor.widthInPixels,\r\n                    height: monitor.heightInPixels,\r\n                    fps: monitor.framesPerSecond,\r\n                    sdrHdrMode: monitor.sdrHdrMode\r\n                });\r\n            }\r\n        }\r\n\r\n        if (jsonSession[\"gpuType\"]) {\r\n            gridSession.gpuType = jsonSession[\"gpuType\"];\r\n        }\r\n\r\n        if (jsonSession[\"sessionRequestData\"]) {\r\n            switch (jsonSession[\"sessionRequestData\"][\"appLaunchMode\"]) {\r\n                case 3:\r\n                    gridSession.appLaunchMode = AppLaunchMode.TouchFriendly;\r\n                    break;\r\n                case 2:\r\n                    gridSession.appLaunchMode = AppLaunchMode.GamepadFriendly;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (jsonSession[\"sessionControlInfo\"]) {\r\n            const newServerIp = jsonSession[\"sessionControlInfo\"][\"ip\"];\r\n            const newServerPort = jsonSession[\"sessionControlInfo\"][\"port\"];\r\n            if (newServerIp && newServerPort) {\r\n                if (this.sessionControlServerMap.has(gridSession.sessionId)) {\r\n                    const currentServer = this.sessionControlServerMap.get(gridSession.sessionId);\r\n\r\n                    if (\r\n                        currentServer?.server !== newServerIp ||\r\n                        currentServer?.port !== newServerPort\r\n                    ) {\r\n                        Log.i(\"{6bae601}\", \"{f09f5be}\", gridSession.sessionId, currentServer?.server, currentServer?.port, newServerIp, newServerPort);\r\n                    }\r\n                }\r\n\r\n                this.sessionControlServerMap.set(gridSession.sessionId, {\r\n                    \"server\": newServerIp,\r\n                    \"port\": newServerPort\r\n                });\r\n            }\r\n\r\n            gridSession.zoneAddress = newServerIp;\r\n            gridSession.zoneName = newServerIp.split(\".\")[0].toUpperCase();\r\n        }\r\n\r\n        return gridSession;\r\n    }\r\n\r\n    private extractSessionList(jsonSessions: any): ActiveSessionInfo[] {\r\n        let sessionList: ActiveSessionInfo[] = [];\r\n        jsonSessions.forEach((item: any) => {\r\n            let gridSession: GridSession = this.extractSessionInformation(item);\r\n            let activeSession: ActiveSessionInfo = {\r\n                sessionId: gridSession.sessionId,\r\n                appId: gridSession.appId,\r\n                state: gridSession.state,\r\n                appLaunchMode: gridSession.appLaunchMode\r\n            };\r\n            sessionList.push(activeSession);\r\n            if (item.sessionControlInfo) {\r\n                this.sessionControlServerMap.set(item.sessionId, {\r\n                    \"server\": item.sessionControlInfo.ip,\r\n                    \"port\": item.sessionControlInfo.port\r\n                });\r\n            }\r\n        });\r\n        return sessionList;\r\n    }\r\n\r\n    /**\r\n     * This method can be used to get all active sessions for current logged in user.\r\n     * Expect ACTIVE_SESSIONS_RESULT event for results.\r\n     **/\r\n    public getAllActiveSessions(): void {\r\n        const request = () => {\r\n            this.addServerOperationAttributes();\r\n            return this.getAllActiveSessionsImpl();\r\n        };\r\n        TracingManager.getInstance().createSpan(TracingOperation.GetSessionList, request);\r\n    }\r\n\r\n    private async getAllActiveSessionsImpl(): Promise<void> {\r\n        Log.d(\"{6bae601}\", \"{1aef200}\");\r\n        if (this.initParams == null) {\r\n            let result: ActiveSessionResultEvent = {\r\n                sessionList: [],\r\n                error: {\r\n                    code: GsErrorCode.GridServerNotInitialized,\r\n                    description: \"Gridserver not initialized\"\r\n                }\r\n            };\r\n            this.emit(GS_EVENTS.ACTIVE_SESSIONS_RESULT, result);\r\n            this.addErrorAttributes(result.error!);\r\n            return;\r\n        }\r\n        let url = this.protocol + this.initParams.serverAddress + \"/v2/session\";\r\n\r\n        await this.performSessionRequest(SessionRequestType.GET_ACTIVE_SESSIONS, url, \"\")\r\n            .then((response: ServerResponse) => {\r\n                let result: ActiveSessionResultEvent = {\r\n                    sessionList: response.sessionList ?? []\r\n                };\r\n                if (response.result != GsErrorCode.Success) {\r\n                    let err: ErrorDetails = {\r\n                        code: response.result,\r\n                        description: GridServer.getResultCodeDescription(response.result)\r\n                    };\r\n                    result.error = err;\r\n                    Log.e(\"{6bae601}\", \"{9d2bb75}\", GetHexString(err.code));\r\n                } else {\r\n                    Log.d(\"{6bae601}\", \"{081857f}\");\r\n                }\r\n                this.emit(GS_EVENTS.ACTIVE_SESSIONS_RESULT, result);\r\n            })\r\n            .catch(error => {\r\n                Log.e(\"{6bae601}\", \"{63f9b57}\", error.message);\r\n                Log.e(\"{6bae601}\", \"{94d55bb}\", error, error.stack);\r\n                this.gsTelemetryHandler.emitExceptionEvent(error,\r\n                    \"getAllActiveSessions\",\r\n                    LOGTAG + \".ts\",\r\n                    0,\r\n                    0,\r\n                    true);\r\n\r\n                let result: ActiveSessionResultEvent = {\r\n                    sessionList: [],\r\n                    error: {\r\n                        code: GsErrorCode.DOMExceptionInGridServer,\r\n                        description: GridServer.getResultCodeDescription(\r\n                            GsErrorCode.DOMExceptionInGridServer\r\n                        )\r\n                    }\r\n                };\r\n                this.emit(GS_EVENTS.ACTIVE_SESSIONS_RESULT, result);\r\n            });\r\n\r\n        Log.d(\"{6bae601}\", \"{a9e5439}\");\r\n    }\r\n\r\n    protected resetSubSessionId(subSessionId: string, sessionId: string = \"\") {\r\n        Log.d(\"{6bae601}\", \"{1e04fe6}\", sessionId, subSessionId);\r\n        this.subSessionId = subSessionId;\r\n        this.gsTelemetryHandler.setSessionId(sessionId);\r\n        this.gsTelemetryHandler.setSubSessionId(subSessionId);\r\n        const value = this.subSessionsIdMap.get(subSessionId);\r\n        if (value === undefined || value === \"\") {\r\n            this.subSessionsIdMap.set(subSessionId, sessionId);\r\n        } else {\r\n            Log.w(\"{6bae601}\", \"{7dd264b}\", sessionId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method returns the current sessionId.\r\n     **/\r\n    public getSessionId(): string {\r\n        return this.subSessionsIdMap.get(this.subSessionId) ?? \"\";\r\n    }\r\n\r\n    /**\r\n     * This method returns the current subSessionId.\r\n     **/\r\n    public getSubSessionId(): string {\r\n        return this.subSessionId;\r\n    }\r\n\r\n    /**\r\n     * This method can be used to resume (PUT) or start (POST) a session.\r\n     * Result is returned in promise with GridSession object.\r\n     * @param startParams - object of SessionParams object.\r\n     * @param action - value from SESSIONMODIFY_ACTION for resume or starting session.\r\n     * @param sessionId - sessionId in case of resume\r\n     **/\r\n    public putOrPostSession(\r\n        startParams: SessionParams,\r\n        action: SESSIONMODIFY_ACTION,\r\n        sessionId: string | undefined\r\n    ): Promise<GridSession | undefined> {\r\n        const request = () => {\r\n            this.addServerOperationAttributes();\r\n            return this.putOrPostSessionImpl(startParams, action, sessionId);\r\n        };\r\n        return TracingManager.getInstance().createSpan<GridSession | undefined>(\r\n            sessionId ? TracingOperation.PutSession : TracingOperation.PostSession,\r\n            request\r\n        );\r\n    }\r\n\r\n    private putOrPostSessionImpl(\r\n        startParams: SessionParams,\r\n        action: SESSIONMODIFY_ACTION,\r\n        sessionId: string | undefined\r\n    ): Promise<GridSession | undefined> {\r\n        const isResume = !!sessionId;\r\n        // todo: the resetSubsessionIs is a messed up function, fix it in future CLs.\r\n        this.resetSubSessionId(getNewGuid(), sessionId);\r\n        if (this.initParams == null) {\r\n            const err = {\r\n                code: GsErrorCode.GridServerNotInitialized,\r\n                description: \"Gridserver not initialized\"\r\n            };\r\n            return this.addErrorAttributesAndReject(err);\r\n        }\r\n        if (this.putOrPostRequestController) {\r\n            const err = {\r\n                code: GsErrorCode.PutOrPostInProgress,\r\n                description: \"Previous PutOrPost call is still in progress\"\r\n            };\r\n            return this.addErrorAttributesAndReject(err);\r\n        }\r\n\r\n        this.gsTelemetryHandler.setCmsId(startParams.appId);\r\n\r\n        // todo: The cache for these zone variables should be directly tied to the lifetime of a session, not global in GridServer\r\n        this.zoneName = undefined;\r\n        this.zoneAddress = undefined;\r\n        this.gpuType = undefined;\r\n\r\n        const launchRequestInfo = this.gsTelemetryHandler.getGameLaunchRequestEvent(\r\n            this.initParams.serverAddress,\r\n            isResume,\r\n            startParams.networkSessionId,\r\n            sessionId\r\n        );\r\n\r\n        let url = this.createSessionRequestURL(startParams, sessionId);\r\n        let body = this.getSessionRequestData(startParams, isResume);\r\n        let startTime = performance.now();\r\n\r\n        return new Promise<GridSession | undefined>((resolve, reject) => {\r\n            const abortController = new AbortController();\r\n            this.putOrPostRequestController = abortController;\r\n\r\n            this.performSessionRequest(\r\n                isResume ? SessionRequestType.RESUME_SESSION : SessionRequestType.CREATE_SESSION,\r\n                url,\r\n                body,\r\n                abortController,\r\n                sessionId\r\n            )\r\n                .then((response: ServerResponse) => {\r\n                    launchRequestInfo.launchDuration = Math.round(performance.now() - startTime);\r\n\r\n                    // needed to update launchRequestInfo in case of post session.\r\n                    if (response.session?.sessionId) {\r\n                        launchRequestInfo.sessionId = response.session?.sessionId;\r\n                        sessionId = response.session?.sessionId;\r\n                    }\r\n                    // Use response.serverId in case there was an error, since this is our only communication with the PM during this session\r\n                    this.zoneName = response.serverId || this.zoneName;\r\n                    if (response.session) {\r\n                        this.updateSessionZoneInfo(response.session);\r\n                    }\r\n                    launchRequestInfo.zoneName = this.zoneName ?? \"\";\r\n\r\n                    // After a putOrPostSession call, clients can inovke cancelSessionSetup() to terminate this request which invokes abort on the abortcontroller.\r\n                    // If fetch request is in progress or we are waiting between retries the performSessionRequest and performHttpRequest handles it gracefully.\r\n                    // However if the request was completed and JS is waiting for the next resolve/reject execution the abort singal will not be caught in current execution.\r\n                    // The below check will prevent us from providing the wrong update to clients.\r\n                    if (\r\n                        abortController.signal.aborted &&\r\n                        response.result != GsErrorCode.SessionSetupCancelled\r\n                    ) {\r\n                        response.result = GsErrorCode.SessionSetupCancelled;\r\n                        Log.d(\"{6bae601}\", \"{3ec0e11}\");\r\n                        // todo: BifrostClientSDK sends delete request in this case, gridserver doesnt.\r\n                        // evaluate how addition of delete request affects android client.\r\n                    }\r\n\r\n                    if (response.result == GsErrorCode.Success) {\r\n                        Log.d(\"{6bae601}\", \"{30536f4}\", sessionId);\r\n                        this.resetSubSessionId(this.getSubSessionId(), sessionId);\r\n                        if (response.session?.state == SessionState.READY_FOR_CONNECTION) {\r\n                            launchRequestInfo.result = GetHexString(GsErrorCode.Success);\r\n                            this.gsTelemetryHandler.emitGameLaunchRequestEvent(launchRequestInfo);\r\n                        } else {\r\n                            // Else, we would get into getSession() polling. Add to the cache\r\n                            this.launchRequestInfoMap.set(\r\n                                launchRequestInfo.sessionId,\r\n                                launchRequestInfo\r\n                            );\r\n                        }\r\n\r\n                        resolve(response.session);\r\n                    } else {\r\n                        const err: ServerError = {\r\n                            code: response.result,\r\n                            sessionId: sessionId,\r\n                            description: GridServer.getResultCodeDescription(response.result),\r\n                            sessionList: response.sessionList\r\n                        };\r\n\r\n                        Log.e(\"{6bae601}\", \"{17f93f3}\", GetHexString(err.code));\r\n                        // Send the telemetry for the failing cases as well\r\n                        launchRequestInfo.result = GetHexString(err.code);\r\n                        this.gsTelemetryHandler.emitGameLaunchRequestEvent(launchRequestInfo);\r\n\r\n                        reject(err);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    // performSessionRequest always resolves, catch here should be an exception in catch block of performSessionRequest or above response handling.\r\n                    let err: ServerError = {\r\n                        code: GsErrorCode.DOMExceptionInGridServer,\r\n                        sessionId: sessionId,\r\n                        description: GridServer.getResultCodeDescription(\r\n                            GsErrorCode.DOMExceptionInGridServer\r\n                        )\r\n                    };\r\n                    Log.e(\"{6bae601}\", \"{4318505}\", error.message);\r\n                    Log.e(\"{6bae601}\", \"{94d55bb}\", error, error.stack);\r\n                    this.gsTelemetryHandler.emitExceptionEvent(error,\r\n                        \"putOrPostSession\",\r\n                        LOGTAG + \".ts\",\r\n                        0,\r\n                        0,\r\n                        true);\r\n\r\n                    // The code flow should be generally structured as\r\n                    //     1. perform all operations\r\n                    //     2. send the required telemetry event\r\n                    //     3. resolve or reject.\r\n                    // If we add more code block between telemetry collection and resolve/reject and it throws an exception then we will end up collecting multiple telemetry events.\r\n                    // The problem in this case would be not the duplicate telemetry but the code implementation.\r\n                    launchRequestInfo.result = GetHexString(err.code);\r\n                    this.gsTelemetryHandler.emitGameLaunchRequestEvent(launchRequestInfo);\r\n\r\n                    reject(err);\r\n                });\r\n        }).finally(() => {\r\n            this.putOrPostRequestController = undefined;\r\n        });\r\n    }\r\n\r\n    // sends session update event and progress update events to client.\r\n    // return: Number of ads provided to the client.\r\n    private sendSessionUpdateEvent(session: any): number {\r\n        let _state = SessionProgressState.CONFIGURING;\r\n        switch (session[\"seatSetupInfo\"][\"seatSetupStep\"]) {\r\n            case 0:\r\n                _state = SessionProgressState.CONNECTING;\r\n                break;\r\n            case 1:\r\n                _state = SessionProgressState.IN_QUEUE;\r\n                if (session[\"seatSetupInfo\"][\"queuePosition\"] < this.queuePosition) {\r\n                    this.queuePosition = session[\"seatSetupInfo\"][\"queuePosition\"];\r\n                }\r\n                break;\r\n            case 5:\r\n                _state = SessionProgressState.PREVIOUS_SESSION_CLEANUP;\r\n                break;\r\n            default:\r\n                this.queuePosition = 0;\r\n        }\r\n\r\n        const sessionUpdateEventData: SessionUpdateEvent = {\r\n            sessionId: session[\"sessionId\"],\r\n            subSessionId: this.subSessionId,\r\n            queuePosition: _state === SessionProgressState.IN_QUEUE ? this.queuePosition : 0,\r\n            eta: session[\"seatSetupInfo\"][\"seatSetupEta\"],\r\n            progressState: _state\r\n        };\r\n\r\n        const eventData: SessionProgressUpdateEvent = {\r\n            sessionId: sessionUpdateEventData.sessionId,\r\n            subSessionId: sessionUpdateEventData.subSessionId,\r\n            queuePosition: sessionUpdateEventData.queuePosition,\r\n            eta: sessionUpdateEventData.eta,\r\n            state: sessionUpdateEventData.progressState\r\n        };\r\n\r\n        this.emit(GS_EVENTS.PROGRESS_UPDATE, eventData);\r\n        this.emit(GS_EVENTS.SESSION_UPDATE, sessionUpdateEventData);\r\n\r\n        return 0;\r\n    }\r\n\r\n    private getPollingInterval(session: any) {\r\n        let pollingInterval = this.pollingOptions.minInterval;\r\n        if (\r\n            session[\"seatSetupInfo\"][\"seatSetupStep\"] == 1 &&\r\n            this.pollingOptions.queueSizePerStep != 0\r\n        ) {\r\n            pollingInterval +=\r\n                Math.floor(\r\n                    session[\"seatSetupInfo\"][\"queuePosition\"] / this.pollingOptions.queueSizePerStep\r\n                ) * this.pollingOptions.step;\r\n        }\r\n\r\n        return Math.min(pollingInterval, this.pollingOptions.maxInterval);\r\n    }\r\n\r\n    /**\r\n     * This method can be used to get a session details belonging to a session id for resume scenario or during polling.\r\n     * Pass isPoll flag true when post request is made for session setup.\r\n     * Result is returned in promise with GridSession object.\r\n     * @param sessionId - sessionId in case of resume.\r\n     * @param isPoll - used in post request.\r\n     **/\r\n    public getSession(_sessionId: string, isPoll: boolean): Promise<GridSession | undefined> {\r\n        const request = () => {\r\n            this.addServerOperationAttributes();\r\n            return this.getSessionImpl(_sessionId, isPoll);\r\n        };\r\n        return TracingManager.getInstance().createSpan<GridSession | undefined>(\r\n            TracingOperation.GetSession,\r\n            request\r\n        );\r\n    }\r\n\r\n    private getSessionImpl(_sessionId: string, isPoll: boolean): Promise<GridSession | undefined> {\r\n        if (this.initParams == null) {\r\n            const err = {\r\n                code: GsErrorCode.GridServerNotInitialized,\r\n                description: \"Gridserver not initialized\"\r\n            };\r\n            return this.addErrorAttributesAndReject(err);\r\n        }\r\n\r\n        let seatSetupStep = 0;\r\n\r\n        let launchRequestInfo = this.launchRequestInfoMap.get(_sessionId);\r\n        if (isPoll && !launchRequestInfo) {\r\n            Log.e(\"{6bae601}\", \"{bb9b2e3}\", _sessionId);\r\n            // Create a new object for telemetry dispatching, but this code should never be hit in real use cases\r\n            let serverAddress: string;\r\n            if (this.sessionControlServerMap.has(_sessionId)) {\r\n                let sessionControlInfo = this.sessionControlServerMap.get(_sessionId);\r\n                serverAddress = sessionControlInfo?.server ?? \"\";\r\n            } else {\r\n                serverAddress = this.initParams!.serverAddress;\r\n            }\r\n            launchRequestInfo = this.gsTelemetryHandler.getGameLaunchRequestEvent(\r\n                serverAddress,\r\n                false,\r\n                this.launchRequestInfoMap.size.toString(), // to identify this error cases from telemetry\r\n                _sessionId\r\n            );\r\n        }\r\n\r\n        const abortController = new AbortController();\r\n        this.getSessionRequestController = abortController;\r\n        let startTime = performance.now();\r\n\r\n        return new Promise<GridSession | undefined>((resolve, reject) => {\r\n            const sendLaunchRequestInfo = (code: number) => {\r\n                launchRequestInfo!.result = GetHexString(code);\r\n                launchRequestInfo!.launchDuration += Math.round(performance.now() - startTime);\r\n                this.gsTelemetryHandler.emitGameLaunchRequestEvent(launchRequestInfo!);\r\n            };\r\n\r\n            const onSessionSetupCancelled = () => {\r\n                const err: ErrorDetails = {\r\n                    code:\r\n                        seatSetupStep == 1\r\n                            ? GsErrorCode.SessionSetupCancelledDuringQueuing\r\n                            : GsErrorCode.SessionSetupCancelled\r\n                };\r\n                err.description = GridServer.getResultCodeDescription(err.code);\r\n                this.addErrorAttributes(err);\r\n\r\n                sendLaunchRequestInfo(err.code);\r\n                reject(err);\r\n            };\r\n\r\n            const onException = (error: any) => {\r\n                const err: ErrorDetails = {\r\n                    code: GsErrorCode.DOMExceptionInGridServer,\r\n                    description: GridServer.getResultCodeDescription(\r\n                        GsErrorCode.DOMExceptionInGridServer\r\n                    )\r\n                };\r\n                Log.e(\"{6bae601}\", \"{90d85cb}\", error.message);\r\n                Log.e(\"{6bae601}\", \"{94d55bb}\", error, error.stack);\r\n                this.gsTelemetryHandler.emitExceptionEvent(error,\r\n                    \"performGetSessionRequest\",\r\n                    LOGTAG + \".ts\",\r\n                    0,\r\n                    0,\r\n                    true);\r\n                if (isPoll) {\r\n                    sendLaunchRequestInfo(err.code);\r\n                }\r\n                reject(err);\r\n            };\r\n\r\n            const onServerResponse = (response: ServerResponse) => {\r\n                if (\r\n                    response.jsonResponse &&\r\n                    response.jsonResponse[\"session\"][\"seatSetupInfo\"][\"seatSetupStep\"]\r\n                ) {\r\n                    seatSetupStep =\r\n                        response.jsonResponse[\"session\"][\"seatSetupInfo\"][\"seatSetupStep\"];\r\n                }\r\n\r\n                if (response.session) {\r\n                    this.updateSessionZoneInfo(response.session);\r\n                }\r\n\r\n                if (response.result == GsErrorCode.Success) {\r\n                    launchRequestInfo!.zoneName =\r\n                        response.session?.zoneName ?? launchRequestInfo!.zoneName;\r\n                    if (\r\n                        response.session?.state == SessionState.READY_FOR_CONNECTION ||\r\n                        response.session?.state == SessionState.STREAMING\r\n                    ) {\r\n                        // todo: evaluate if this hack is still required.\r\n                        // hack, GS server is sending fake notifications to NGS about stream connected.\r\n                        // we are facing race case while getSession, until thats fixed, consider\r\n                        // playing state as ready for connection.\r\n                        if (response.session.state == SessionState.STREAMING) {\r\n                            this.gsTelemetryHandler.emitDebugEvent(\r\n                                \"InvalidSessionStateTransition\",\r\n                                \"Streaming\"\r\n                            );\r\n                        }\r\n\r\n                        sendLaunchRequestInfo(GsErrorCode.Success);\r\n                        resolve(response.session);\r\n                    } else if (\r\n                        response.session?.state == SessionState.INITIALIZING ||\r\n                        response.session?.state == SessionState.RESUMING\r\n                    ) {\r\n                        this.sendSessionUpdateEvent(response.jsonResponse[\"session\"]);\r\n\r\n                        const wait = new CancellableWait(\r\n                            this.getPollingInterval(response.jsonResponse[\"session\"]),\r\n                            abortController?.signal\r\n                        );\r\n                        wait.getPromise()\r\n                            .then(performGetSessionRequest)\r\n                            .catch(onSessionSetupCancelled);\r\n                    } else {\r\n                        Log.e(\"{6bae601}\", \"{ce47cd1}\", Log.sanitize(JSON.stringify(response.jsonResponse)));\r\n                        const err = {\r\n                            code: GsErrorCode.SessionFinishedState,\r\n                            description: \"unexpected session state\"\r\n                        };\r\n                        sendLaunchRequestInfo(err.code);\r\n                        reject(err);\r\n                    }\r\n                } else if (response.result == GsErrorCode.SessionSetupCancelled) {\r\n                    onSessionSetupCancelled();\r\n                } else {\r\n                    // failed\r\n                    let err: ServerError = {\r\n                        code: response.result,\r\n                        sessionId: _sessionId,\r\n                        description: GridServer.getResultCodeDescription(response.result)\r\n                    };\r\n\r\n                    sendLaunchRequestInfo(err.code);\r\n                    reject(err);\r\n                }\r\n            };\r\n            const performGetSessionRequest = () => {\r\n                // keep updating the URl as session might be forwarded to another zone.\r\n                let url = this.getUrlForSession(_sessionId);\r\n                this.performSessionRequest(\r\n                    SessionRequestType.GET_SESSIONINFO,\r\n                    url,\r\n                    \"\",\r\n                    abortController,\r\n                    _sessionId\r\n                )\r\n                    .then((response: ServerResponse) => {\r\n                        if (isPoll) {\r\n                            onServerResponse(response);\r\n                        } else {\r\n                            // This is a one time getSessionRequest.\r\n                            if (response.result == GsErrorCode.Success) {\r\n                                resolve(response.session);\r\n                            } else {\r\n                                let err: ErrorDetails = {\r\n                                    code: response.result,\r\n                                    description: GridServer.getResultCodeDescription(\r\n                                        response.result\r\n                                    )\r\n                                };\r\n                                reject(err);\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        onException(error);\r\n                    });\r\n            };\r\n            performGetSessionRequest();\r\n        }).finally(() => {\r\n            this.getSessionRequestController = undefined;\r\n            if (isPoll) {\r\n                Log.d(\"{6bae601}\", \"{4ac0ec5}\", _sessionId);\r\n                this.launchRequestInfoMap.delete(_sessionId);\r\n                this.queuePosition = Number.MAX_VALUE;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method can be used to send a delete request for a given session id.\r\n     * Pass isPoll flag true when post request is made for session setup.\r\n     * Result is returned in promise of type void.\r\n     * @param sessionId - sessionId to delete\r\n     * @note Will not cancel active operations.\r\n     * @note If putOrPostSession or getSession is in progress, should first call cancelSessionSetup\r\n     **/\r\n\r\n    public sendDeleteRequest(sessionId: string): Promise<void> {\r\n        const request = () => {\r\n            this.addServerOperationAttributes();\r\n            return this.sendDeleteRequestImpl(sessionId);\r\n        };\r\n        return TracingManager.getInstance().createSpan(TracingOperation.DeleteSession, request);\r\n    }\r\n\r\n    private sendDeleteRequestImpl(sessionId: string): Promise<void> {\r\n        if (this.initParams == null) {\r\n            const err = {\r\n                code: GsErrorCode.GridServerNotInitialized,\r\n                description: \"Gridserver not initialized\"\r\n            };\r\n            return this.addErrorAttributesAndReject(err);\r\n        }\r\n        let url = this.getUrlForSession(sessionId);\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            Log.d(\"{6bae601}\", \"{bbad3ce}\", sessionId);\r\n            this.performSessionRequest(\r\n                SessionRequestType.DELETE_SESSION,\r\n                url,\r\n                \"\",\r\n                undefined,\r\n                sessionId\r\n            )\r\n                .then((response: ServerResponse) => {\r\n                    if (response.result == GsErrorCode.Success) {\r\n                        Log.d(\"{6bae601}\", \"{6206c13}\", sessionId);\r\n                        resolve();\r\n                    } else {\r\n                        let err: ServerError = {\r\n                            code: response.result,\r\n                            description: GridServer.getResultCodeDescription(response.result),\r\n                            sessionId: sessionId\r\n                        };\r\n                        Log.e(\"{6bae601}\", \"{4de47e3}\", sessionId, GetHexString(response.result));\r\n                        reject(err);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    const err: ErrorDetails = {\r\n                        code: GsErrorCode.DOMExceptionInGridServer,\r\n                        description: GridServer.getResultCodeDescription(\r\n                            GsErrorCode.DOMExceptionInGridServer\r\n                        )\r\n                    };\r\n                    Log.e(\"{6bae601}\", \"{c4f620c}\", error.message);\r\n                    Log.e(\"{6bae601}\", \"{94d55bb}\", error, error.stack);\r\n                    this.gsTelemetryHandler.emitExceptionEvent(error,\r\n                        \"sendDeleteRequestImpl\",\r\n                        LOGTAG + \".ts\",\r\n                        0,\r\n                        0,\r\n                        true);\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    public setAuthInfo(authInfo: AuthInfo) {\r\n        this.authInfo = authInfo;\r\n    }\r\n\r\n    /**\r\n     * This method can be used to cancel in progress session setup.\r\n     * Should be called only after putOrPostSession or getSession with isPoll = true, before they resolve.\r\n     * Ongoing APIs will throw with either SessionSetupCancelled or SessionSetupCancelledDuringQueuing.\r\n     * @note Will not send DELETE request for the session.\r\n     * @note Should call sendDeleteRequest following putOrPostSession or getSession resolution if the session should be deleted.\r\n     * @note If the putOrPostSession or getSession promise-resolve/reject is already invoked but the then/catch block in application is not executed then this API is a no-op.\r\n     *       Applications must handle the session result or non cancellation error and take appropriate action.\r\n     **/\r\n    public cancelSessionSetup() {\r\n        Log.i(\"{6bae601}\", \"{c73e640}\");\r\n\r\n        // cancel in progress session operations\r\n        this.putOrPostRequestController?.abort();\r\n        this.getSessionRequestController?.abort();\r\n        // clear in progress session operations\r\n        this.putOrPostRequestController = undefined;\r\n        this.getSessionRequestController = undefined;\r\n    }\r\n\r\n    public getZoneName(): string {\r\n        return this.zoneName ?? \"\";\r\n    }\r\n\r\n    public getZoneAddress(): string {\r\n        return this.zoneAddress ?? \"\";\r\n    }\r\n\r\n    public getGpuType(): string {\r\n        return this.gpuType ?? \"\";\r\n    }\r\n\r\n    public setNetworkType(network: NetworkTypeEnum) {\r\n        this.gsTelemetryHandler.setNetworkType(network);\r\n    }\r\n\r\n    private addServerOperationAttributes() {\r\n        const span = trace.getActiveSpan();\r\n        if (!span) {\r\n            return;\r\n        }\r\n\r\n        const serverOperationAttributes: Map<string, string> = new Map([\r\n            [\"component\", TracingComponent.name],\r\n            [\"component.version\", TracingComponent.version],\r\n            [\"client.name\", this.initParams!.clientIdentification],\r\n            [\"client.version\", this.initParams!.clientVersion],\r\n            [\"client.os\", this.initParams!.deviceOs ?? \"\"],\r\n            [\"client.os.version\", this.initParams!.deviceOsVer ?? \"\"]\r\n        ]);\r\n\r\n        for (const [key, value] of serverOperationAttributes) {\r\n            span.setAttribute(key, value);\r\n        }\r\n    }\r\n\r\n    private addErrorAttributes(error: ErrorDetails) {\r\n        const span = trace.getActiveSpan();\r\n        span?.setAttribute(\"error\", \"true\");\r\n        span?.setAttribute(\"error.description\", error.description ?? \"\");\r\n    }\r\n\r\n    private addResultSuccessAttribute() {\r\n        const span = trace.getActiveSpan();\r\n        span?.setAttribute(\"error\", \"false\");\r\n    }\r\n\r\n    private addSessionInfoAttributes(jsonSession: any) {\r\n        const span = trace.getActiveSpan();\r\n        span?.setAttribute(\"session.status\", jsonSession[\"status\"] ?? \"\");\r\n    }\r\n\r\n    private addRequestStatusAttributes(jsonRequestStatus: any) {\r\n        const span = trace.getActiveSpan();\r\n        if (!span) {\r\n            return;\r\n        }\r\n\r\n        const requestStatusAttributes: Map<string, string> = new Map([\r\n            [\"host.dc\", jsonRequestStatus[\"serverId\"] ?? \"\"],\r\n            [\"request.id\", jsonRequestStatus[\"requestId\"] ?? \"\"],\r\n            [\"request.status\", jsonRequestStatus[\"statusDescription\"] ?? \"\"]\r\n        ]);\r\n        for (const [key, value] of requestStatusAttributes) {\r\n            span.setAttribute(key, value);\r\n        }\r\n    }\r\n\r\n    private addErrorAttributesAndReject(err: ErrorDetails) {\r\n        this.addErrorAttributes(err);\r\n        return Promise.reject(err);\r\n    }\r\n\r\n    static convertSessionStateToString(status: number): SessionState {\r\n        switch (status) {\r\n            case 1:\r\n                return SessionState.INITIALIZING;\r\n            case 2:\r\n                return SessionState.READY_FOR_CONNECTION;\r\n            case 3:\r\n                return SessionState.STREAMING;\r\n            case 4:\r\n            case 5:\r\n                return SessionState.PAUSED;\r\n            case 6:\r\n                return SessionState.RESUMING;\r\n            case 7:\r\n                return SessionState.FINISHED;\r\n            default:\r\n                return SessionState.UNKNOWN;\r\n        }\r\n    }\r\n\r\n    private getUrlForSession(sessionId: string | undefined): string {\r\n        let sessionUrl = this.protocol;\r\n        if (sessionId && this.sessionControlServerMap.has(sessionId)) {\r\n            let sessionControlInfo = this.sessionControlServerMap.get(sessionId);\r\n            if (sessionControlInfo !== undefined) {\r\n                sessionUrl += sessionControlInfo.server;\r\n                if (sessionControlInfo.port != 0) {\r\n                    sessionUrl += \":\" + sessionControlInfo.port;\r\n                }\r\n            }\r\n        } else {\r\n            sessionUrl += this.initParams!.serverAddress; //use default\r\n        }\r\n        sessionUrl += \"/v2/session\";\r\n        if (sessionId) {\r\n            sessionUrl += \"/\" + sessionId;\r\n        }\r\n        return sessionUrl;\r\n    }\r\n\r\n    private createSessionRequestURL(\r\n        startParams: SessionParams,\r\n        sessionId?: string | undefined\r\n    ): string {\r\n        let url = this.getUrlForSession(sessionId);\r\n        this.clientLocale = startParams.clientLocale ?? \"en_US\";\r\n        url += \"?keyboardLayout=\" + (startParams.keyboardLayout ?? \"en_US\");\r\n        url += \"&languageCode=\" + this.clientLocale;\r\n        return url;\r\n    }\r\n\r\n    private getSessionRequestData(startParams: SessionParams, resume: boolean): string {\r\n        let appLaunchMode = 1; // Default\r\n        switch (startParams.appLaunchMode) {\r\n            case AppLaunchMode.TouchFriendly:\r\n                Log.d(\"{6bae601}\", \"{6d5cf87}\");\r\n                appLaunchMode = 3;\r\n                break;\r\n            case AppLaunchMode.GamepadFriendly:\r\n                appLaunchMode = 2;\r\n                break;\r\n            default:\r\n                appLaunchMode = 1;\r\n        }\r\n\r\n        let sdrHdrMode = startParams.monitorSettings?.[0]?.sdrHdrMode ?? SdrHdrMode.SDR;\r\n\r\n        let monitorSettings = [];\r\n        if (startParams.monitorSettings) {\r\n            monitorSettings = startParams.monitorSettings;\r\n        } else {\r\n            for (const stream of startParams.streamParams!) {\r\n                monitorSettings.push({\r\n                    \"heightInPixels\": stream.height,\r\n                    \"framesPerSecond\": stream.fps,\r\n                    \"widthInPixels\": stream.width\r\n                });\r\n            }\r\n        }\r\n\r\n        if (GridServerSettings.hdr) {\r\n            sdrHdrMode = SdrHdrMode.HDR;\r\n            for (const monitorSetting of monitorSettings) {\r\n                monitorSetting.sdrHdrMode = SdrHdrMode.HDR;\r\n            }\r\n        }\r\n\r\n        // todo: many session request object needs to be deprecated/cleanedup from protocol:\r\n        //     StreamerVersion, SDKVersion, internalTitle, ClientPlatformName,\r\n\r\n        let srd: any = {\r\n            // Ideally all these values need not be sent to server, but our PM considers missing data as invalid.\r\n            \"audioMode\": 2,\r\n            \"remoteControllersBitmap\": startParams.remoteControllersBitmap ?? 0,\r\n            \"sdrHdrMode\": sdrHdrMode,\r\n            \"networkTestSessionId\": null,\r\n            \"availableSupportedControllers\": [],\r\n            \"clientVersion\": this.initParams?.clientVersion ?? \"0\",\r\n            \"deviceHashId\": this.initParams?.deviceHashId ?? \"unknown\",\r\n            \"internalTitle\": null,\r\n            \"clientPlatformName\": this.initParams?.clientPlatformName ?? \"unknown\", // long term plan is to get rid of this field\r\n            \"metaData\": [\r\n                { \"key\": \"SubSessionId\", \"value\": this.getSubSessionId() },\r\n                {\r\n                    \"key\": \"wssignaling\",\r\n                    \"value\": GridServerSettings.webSocketSignaling ? \"1\" : \"0\"\r\n                }\r\n            ],\r\n            \"surroundAudioInfo\": 0,\r\n            \"clientTimezoneOffset\":\r\n                startParams.clientTimeZoneOffset ?? new Date().getTimezoneOffset() * 60 * 1000 * -1,\r\n            \"clientIdentification\": this.initParams?.clientIdentification ?? \"unknown\",\r\n            \"parentSessionId\": null,\r\n            \"appId\": startParams.appId,\r\n            \"streamerVersion\": 1,\r\n            \"clientRequestMonitorSettings\": monitorSettings,\r\n            \"appLaunchMode\": appLaunchMode,\r\n            \"sdkVersion\": \"1.0\",\r\n            \"enchancedStreamMode\": 1,\r\n            \"useOps\": true,\r\n            \"clientDisplayHdrCapabilities\": null,\r\n            \"accountLinked\": startParams.accountLinked ?? false,\r\n            \"partnerCustomData\": startParams.partnerCustomData ?? \"\",\r\n            \"enablePersistingInGameSettings\": startParams.enablePersistingInGameSettings ?? false,\r\n            \"secureRTSPSupported\": false,\r\n            \"userAge\": startParams.userAge ?? 0\r\n        };\r\n        if (startParams.requestedAudioFormat !== undefined) {\r\n            srd[\"requestedAudioFormat\"] = startParams.requestedAudioFormat;\r\n        }\r\n\r\n        // todo: GS server is still relying on the \"GSStreamerType\", need to cleanup GS server code and then delete this.\r\n        if (\r\n            GridServerSettings.webRtcStreamer ||\r\n            this.initParams?.clientPlatformName === \"browser\"\r\n        ) {\r\n            srd[\"metaData\"].push({ \"key\": \"GSStreamerType\", \"value\": \"WebRTC\" });\r\n        } else {\r\n            // For non WebRTC client currently client must inform server of secureRTSP support. The \"wssignaling\" : \"1\" in metadata informs the server to be ready for websocket connection but without secureRTSPSupported, the connection doesnt work.\r\n            // The above combination is broken, however we dont want any clients to perfom non secure request to our server so hard code secureRTSPSupported to true.\r\n            // WebRTC client hardcodes the Signaling port to 49100(secure) in GridServer. PM currently sends all the port for native client, this will be cleaned up in seperate initiative soon.\r\n            // if secureRTSPSupported is set to true in webclient, PM will provide one more port to client which is not needed, hence restrict this to only non web client.\r\n            srd[\"secureRTSPSupported\"] = true;\r\n        }\r\n\r\n        for (const key in startParams.metaData) {\r\n            let x: any = {\r\n                key: key,\r\n                value: startParams.metaData[key]\r\n            };\r\n            srd.metaData.push(x);\r\n        }\r\n\r\n        let sessionRequestObj = { \"sessionRequestData\": srd };\r\n\r\n        let body: string;\r\n        if (resume) {\r\n            //PUT request should have sessionId\r\n            const metaData: any[] = [];\r\n            let sessionModifyObj = {\r\n                \"action\": SESSIONMODIFY_ACTION.RESUME,\r\n                \"data\": \"RESUME\",\r\n                \"sessionRequestData\": srd,\r\n                \"metaData\": metaData\r\n            };\r\n            body = JSON.stringify(sessionModifyObj);\r\n        } else {\r\n            //it's a POST\r\n            body = JSON.stringify(sessionRequestObj);\r\n        }\r\n\r\n        Log.i(\"{6bae601}\", \"{c6c3ed4}\", (resume ? \"PUT\" : \"POST\"), Log.sanitize(body));\r\n\r\n        return body;\r\n    }\r\n\r\n    // Perform a session related request, parse the response, convert to appropriate GsErrorCode.\r\n    // This function also handles the request cancellation cases, response parsing failures and returns appropriate GsErrorCode.\r\n    // Unless there is an exception in the catch block handling this function always resolves with ServerResponse object.\r\n    // Return:\r\n    // ServerResponse.result - result of this call, could be GsErrorCode.Success in successfull cases.\r\n    //                                   - GsErrorCode.SessionSetupCancelled if request was cancelled.\r\n    //                                   - GsErrorCode.NetworkError or NoInternetDuringSessionSetup if there was a network issue.\r\n    //                                   - GsErrorCode.InvalidServerResponse if server response is not valid.\r\n    // ServerResponse.session - GridSession object if server provided a session.\r\n    // ServerResponse.jsonResponse - the actual JSON response provided by the server.\r\n    // ServerResponse.sessionList - active sessions.\r\n    private performSessionRequest(\r\n        requestType: SessionRequestType,\r\n        url: string,\r\n        body: string,\r\n        abortController?: AbortController,\r\n        sessionId?: string\r\n    ): Promise<ServerResponse> {\r\n        // Http analytics events are required in failure cases for any request.\r\n        // If requests are cancelled then we should not send any telemetry event.\r\n        // The GetSession request (Polling requests) doesnt need telemetry in success cases.\r\n        const shouldSendAnalyticsEvent = (result: GsErrorCode): boolean => {\r\n            if (result === GsErrorCode.SessionSetupCancelled) {\r\n                // dont send any event during intentional cancel.\r\n                return false;\r\n            } else if (result !== GsErrorCode.Success) {\r\n                // always send on failure.\r\n                return true;\r\n            }\r\n\r\n            // success cases, send for all but not for GetSessionInfo\r\n            switch (requestType) {\r\n                case SessionRequestType.GET_SESSIONINFO:\r\n                    return false;\r\n                default:\r\n                    return true;\r\n            }\r\n        };\r\n\r\n        const getHttpMethodForRequestType = (): string => {\r\n            switch (requestType) {\r\n                case SessionRequestType.CREATE_SESSION:\r\n                    return \"POST\";\r\n                case SessionRequestType.DELETE_SESSION:\r\n                    return \"DELETE\";\r\n                case SessionRequestType.RESUME_SESSION:\r\n                case SessionRequestType.AD_UPDATE:\r\n                    return \"PUT\";\r\n                default:\r\n                    return \"GET\";\r\n            }\r\n        };\r\n\r\n        let options: RequestHttpOptions = {\r\n            method: getHttpMethodForRequestType(),\r\n            headers: this.httpRequestOptions.headers,\r\n            body: body,\r\n            retryCount: this.httpRequestOptions.retryCount,\r\n            timeout: this.httpRequestOptions.timeout\r\n        };\r\n\r\n        // We have been setting keepalive only for delete request as this happens generally during the tab close.\r\n        // setting keepalive will allow the request to outlive the page.\r\n        // Ads Cancel request will also benefit from keepAlive = true.\r\n        // There is not much use for any other requests to be kept alive, infact not keeping the request alive for post/resumse requests would be better.\r\n        if (\r\n            requestType === SessionRequestType.DELETE_SESSION ||\r\n            requestType === SessionRequestType.AD_UPDATE\r\n        ) {\r\n            options.keepalive = true;\r\n            if (\r\n                this.platformDetails &&\r\n                IsChromeBrowser(this.platformDetails) &&\r\n                !IsChromeVersionAtLeast(this.platformDetails, 81)\r\n            ) {\r\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=835821\r\n                // Bug 3923439: Not supported in Chrome versions 80 and below\r\n                options.keepalive = false;\r\n            }\r\n        }\r\n\r\n        const startTime = performance.now();\r\n        // Should we create telemetry event and send it in all failure cases ?\r\n        let httpAnalyticsEvent: TelemetryHttpEvent | undefined =\r\n            this.gsTelemetryHandler.getTelemetryHttpEvent(url, options.method ?? \"\", sessionId);\r\n        httpAnalyticsEvent!.statusCode = \"0\";\r\n\r\n        return performHttpRequest(url, options, this.authInfo, abortController)\r\n            .then((response: Response) => {\r\n                const endTime = performance.now();\r\n                httpAnalyticsEvent!.statusCode = String(response.status ?? \"0\");\r\n                httpAnalyticsEvent!.callDuration = Math.round(endTime - startTime);\r\n\r\n                if (!response.data) {\r\n                    // Ideally this block should not get executed.\r\n                    Log.e(\"{6bae601}\", \"{ea40865}\");\r\n                    throw new SyntaxError(\"The response from server does not contain any data\");\r\n                }\r\n\r\n                const responseJSON = JSON.parse(response.data);\r\n                if (!responseJSON[\"requestStatus\"]) {\r\n                    // todo: verify if this block can be reached.\r\n                    // For the 503 error from Haproxy, the client gets an xml content, the performHttpRequest seems to be checking for no data, but thats not right.\r\n                    Log.e(\"{6bae601}\", \"{862f264}\", Log.sanitize(\r\n                            response.data\r\n                        ));\r\n                    throw new SyntaxError(\"RequestStatus missing in response\");\r\n                }\r\n\r\n                const serverId = responseJSON[\"requestStatus\"][\"serverId\"].toUpperCase();\r\n\r\n                httpAnalyticsEvent!.requestId = responseJSON[\"requestStatus\"][\"requestId\"];\r\n                httpAnalyticsEvent!.serverId = serverId;\r\n                httpAnalyticsEvent!.requestStatusCode = String(\r\n                    responseJSON[\"requestStatus\"][\"statusDescription\"]\r\n                );\r\n\r\n                const sessionResponse: ServerResponse = {\r\n                    result: GridServer.getResultFromRequestStatus(responseJSON[\"requestStatus\"]),\r\n                    jsonResponse: responseJSON,\r\n                    serverId: serverId\r\n                };\r\n\r\n                if (requestType === SessionRequestType.GET_ACTIVE_SESSIONS) {\r\n                    sessionResponse.sessionList = this.extractSessionList(responseJSON[\"sessions\"]);\r\n                } else if (requestType !== SessionRequestType.DELETE_SESSION) {\r\n                    // PM doesnt provide any session response for Delete request.\r\n                    // todo: we will miss setting sessionId in the http analytics event for delete session.\r\n                    // extract from URL ? or accept as a parameter in this function.\r\n                    let gridSession = this.extractSessionInformation(responseJSON[\"session\"]);\r\n                    gridSession.subSessionId = this.subSessionId;\r\n                    // For POST request this just overrides the sessionId, rest all requests will have same sessionid.\r\n                    httpAnalyticsEvent!.sessionId = gridSession.sessionId;\r\n                    sessionResponse.session = gridSession;\r\n\r\n                    if (responseJSON[\"otherUserSessions\"]) {\r\n                        sessionResponse.sessionList = this.extractSessionList(\r\n                            responseJSON[\"otherUserSessions\"]\r\n                        );\r\n                        if (sessionResponse.sessionList.length) {\r\n                            Log.d(\"{6bae601}\", \"{ba4be1c}\", sessionResponse.sessionList.length);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (httpAnalyticsEvent && shouldSendAnalyticsEvent(sessionResponse.result)) {\r\n                    this.gsTelemetryHandler.emitHttpEvent(httpAnalyticsEvent);\r\n                    httpAnalyticsEvent = undefined;\r\n                }\r\n\r\n                return sessionResponse;\r\n            })\r\n            .catch(err => {\r\n                // Request did not complete, aborted/timeout/networkerror. or an exception from above then block.\r\n                let sessionResponse: ServerResponse = {\r\n                    result: GsErrorCode.NetworkError\r\n                };\r\n\r\n                const endTime = performance.now();\r\n                if (err.code) {\r\n                    // Failure of the httpRequest, covert the Utils cod to sessionResponse.result.\r\n                    sessionResponse.result = GridServer.getGsErrorCode(err.code);\r\n                } else if (GridServer.isParseError(err)) {\r\n                    sessionResponse.result = GsErrorCode.ResponseParseFailure;\r\n                } else {\r\n                    sessionResponse.result = GsErrorCode.DOMExceptionInGridServer;\r\n                    Log.e(\"{6bae601}\", \"{94d55bb}\", err, err.stack);\r\n                    this.gsTelemetryHandler.emitExceptionEvent(err,\r\n                        \"performSessionRequest\",\r\n                        LOGTAG + \".ts\",\r\n                        0,\r\n                        0,\r\n                        true);\r\n                }\r\n\r\n                if (httpAnalyticsEvent && shouldSendAnalyticsEvent(sessionResponse.result)) {\r\n                    httpAnalyticsEvent.callDuration = Math.round(endTime - startTime);\r\n                    this.gsTelemetryHandler.emitHttpEvent(httpAnalyticsEvent);\r\n                }\r\n\r\n                Log.e(\"{6bae601}\", \"{c29dc20}\", options.method, url);\r\n                Log.e(\"{6bae601}\", \"{200d7ba}\", \r\n                        sessionResponse.result\r\n                    , GridServer.getResultCodeDescription(sessionResponse.result));\r\n                return sessionResponse;\r\n            });\r\n    }\r\n\r\n    private updateSessionZoneInfo(session: GridSession) {\r\n        this.zoneAddress = session.zoneAddress || this.zoneAddress;\r\n        this.zoneName = session.zoneName || this.zoneName;\r\n        this.gpuType = session.gpuType || this.gpuType;\r\n    }\r\n\r\n    private static getResultFromRequestStatus(requestStatus: any): number {\r\n        let result: number = GsErrorCode.SessionServerErrorBegin;\r\n        if (requestStatus && requestStatus[\"statusCode\"] !== undefined) {\r\n            let statusCode = requestStatus[\"statusCode\"];\r\n            if (statusCode == 1) {\r\n                result = GsErrorCode.Success;\r\n            } else if (statusCode > 0 && statusCode < 0xff) {\r\n                result = GsErrorCode.SessionServerErrorBegin + statusCode;\r\n            }\r\n\r\n            if (\r\n                (result == GsErrorCode.ServerInternalError ||\r\n                    result == GsErrorCode.InvalidServiceReponse) &&\r\n                requestStatus[\"unifiedErrorCode\"]\r\n            ) {\r\n                result = requestStatus[\"unifiedErrorCode\"];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static getGsErrorCode(code: number): number {\r\n        let gsCode = GsErrorCode.DOMExceptionInGridServer; // https://developer.mozilla.org/en-US/docs/Web/API/DOMException#error_names\r\n        if (code === UtilsErrorCode.NoNetwork) {\r\n            gsCode = GsErrorCode.NoInternetDuringSessionSetup;\r\n        } else if (code === UtilsErrorCode.NetworkError) {\r\n            gsCode = GsErrorCode.NetworkError;\r\n        } else if (code === UtilsErrorCode.AuthTokenNotUpdated) {\r\n            gsCode = GsErrorCode.AuthTokenNotUpdated;\r\n        } else if (code === UtilsErrorCode.ResponseParseFailure) {\r\n            gsCode = GsErrorCode.ResponseParseFailure;\r\n        } else if (code === GsErrorCode.GetActiveSessionServerError) {\r\n            // We throw this gsError from getSessions and hence need this\r\n            gsCode = GsErrorCode.GetActiveSessionServerError;\r\n        } else if (code == UtilsErrorCode.UserAborted) {\r\n            gsCode = GsErrorCode.SessionSetupCancelled;\r\n        }\r\n        return gsCode;\r\n    }\r\n\r\n    private static isParseError(err: any): boolean {\r\n        let result = false;\r\n        if (\r\n            err instanceof SyntaxError ||\r\n            (err instanceof TypeError &&\r\n                err.message &&\r\n                err.message.includes(\"Cannot read property\"))\r\n        ) {\r\n            result = true;\r\n            Log.e(\"{6bae601}\", \"{d8979bb}\", err.name, err.message);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static getResultCodeDescription(code: number): string {\r\n        switch (code) {\r\n            case GsErrorCode.Success:\r\n                return \"success\";\r\n            case GsErrorCode.ResponseParseFailure:\r\n            case GsErrorCode.InvalidServerResponse:\r\n                return \"Invalid server response\";\r\n            case GsErrorCode.DOMExceptionInGridServer:\r\n                return \"Exception\";\r\n            case GsErrorCode.SessionSetupCancelled:\r\n            case GsErrorCode.SessionSetupCancelledDuringQueuing:\r\n                return \"cancelled\";\r\n            case GsErrorCode.NoInternetDuringSessionSetup:\r\n                return \"no network\";\r\n            case GsErrorCode.NetworkError:\r\n                return \"network error\";\r\n            default:\r\n                return \"server error\";\r\n        }\r\n    }\r\n\r\n    // https://docs.google.com/document/d/1MGe199idCH1jbFns0NrIBVayJTqE2QxOS69uFBVQKyI/edit?usp=sharing\r\n    private static addClientHeaders(httpHeaders: HttpRequestHeaders, initParams: GsInitParams) {\r\n        httpHeaders[\"content-type\"] = \"application/json\";\r\n        if (initParams.deviceOs !== undefined) {\r\n            httpHeaders[\"nv-device-os\"] = initParams.deviceOs;\r\n        }\r\n        if (initParams.deviceType !== undefined) {\r\n            httpHeaders[\"nv-device-type\"] = initParams.deviceType;\r\n        }\r\n        if (initParams.deviceMake !== undefined) {\r\n            httpHeaders[\"nv-device-make\"] = initParams.deviceMake;\r\n        }\r\n        if (initParams.deviceModel !== undefined) {\r\n            httpHeaders[\"nv-device-model\"] = initParams.deviceModel;\r\n        }\r\n        if (initParams.clientType !== undefined) {\r\n            httpHeaders[\"nv-client-type\"] = initParams.clientType;\r\n        }\r\n        if (initParams.clientAppVersion !== undefined) {\r\n            httpHeaders[\"nv-client-version\"] = initParams.clientAppVersion;\r\n        }\r\n        if (initParams.clientStreamer !== undefined) {\r\n            httpHeaders[\"nv-client-streamer\"] = initParams.clientStreamer;\r\n        }\r\n        if (initParams.clientId !== undefined) {\r\n            httpHeaders[\"nv-client-id\"] = initParams.clientId;\r\n        }\r\n        if (initParams.ecomEnabled !== undefined) {\r\n            httpHeaders[\"nv-ecom-enabled\"] = initParams.ecomEnabled;\r\n        }\r\n        if (initParams.acceptLanguage !== undefined) {\r\n            httpHeaders[\"accept-language\"] = initParams.acceptLanguage;\r\n        }\r\n        if (initParams.deviceHashId !== undefined) {\r\n            httpHeaders[\"x-device-id\"] = initParams.deviceHashId;\r\n        }\r\n        if (initParams.browserType !== undefined) {\r\n            httpHeaders[\"nv-browser-type\"] = initParams.browserType;\r\n        }\r\n\r\n        if (initParams.clientHeaders) {\r\n            for (const [key, value] of initParams.clientHeaders) {\r\n                // Ignore deprecated header\r\n                if (key.toLowerCase() === \"x-nv-client-identity\") {\r\n                    continue;\r\n                }\r\n                httpHeaders[key.toLowerCase()] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class PassThruServer extends GridServer {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllActiveSessions() {\r\n        let sendEmptySessionlist = () => {\r\n            Log.d(\"{6bae601}\", \"{b575263}\");\r\n            let result: ActiveSessionResultEvent = {\r\n                sessionList: []\r\n            };\r\n            this.emit(GS_EVENTS.ACTIVE_SESSIONS_RESULT, result);\r\n        };\r\n        window.setTimeout(sendEmptySessionlist, 1);\r\n    }\r\n\r\n    putOrPostSession(\r\n        startParams: SessionParams,\r\n        action: number,\r\n        sessionId: string | undefined\r\n    ): Promise<GridSession | undefined> {\r\n        Log.d(\"{6bae601}\", \"{71c010f}\");\r\n        // todo: we should remove the resetSubSessionId map, no one clears the subsessionId after a session completion.\r\n        // the map just continues to grow!\r\n        this.resetSubSessionId(getNewGuid(), startParams.sessionId ?? \"PassThruSessionId\");\r\n        return new Promise((resolve, reject) => {\r\n            window.setTimeout(() => {\r\n                let session: GridSession = {\r\n                    sessionId: this.getSessionId(),\r\n                    subSessionId: this.getSubSessionId(),\r\n                    accessToken: startParams.accessToken || \"\",\r\n                    appId: parseInt(startParams.appId),\r\n                    state: SessionState.READY_FOR_CONNECTION,\r\n                    signalConnectionInfo: { ip: \"\", port: 49100, protocol: \"http\" },\r\n                    mediaConnectionInfo: [],\r\n                    streamInfo: [],\r\n                    appLaunchMode: startParams.appLaunchMode\r\n                        ? startParams.appLaunchMode\r\n                        : AppLaunchMode.Default,\r\n                    zoneName: this.getZoneName(),\r\n                    zoneAddress: this.getZoneAddress(),\r\n                    gpuType: this.getGpuType(),\r\n                    clientLocale: \"\"\r\n                };\r\n                if (this.initParams) {\r\n                    session.signalConnectionInfo.ip = this.initParams.serverAddress;\r\n\r\n                    if (startParams.connectionInfo) {\r\n                        session.mediaConnectionInfo = startParams.connectionInfo;\r\n                        for (const connectionInfo of session.mediaConnectionInfo) {\r\n                            if (connectionInfo.usage === Usage.SIGNALING) {\r\n                                session.signalConnectionInfo.ip = connectionInfo.ip;\r\n                                session.signalConnectionInfo.port = connectionInfo.port;\r\n                                session.signalConnectionInfo.protocol =\r\n                                    connectionInfo.appLevelProtocol === AppLevelProtocol.HTTPS\r\n                                        ? \"https\"\r\n                                        : \"http\";\r\n                                Log.d(\"{6bae601}\", \"{c6b8e0f}\", connectionInfo.ip, connectionInfo.port);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    Log.e(\"{6bae601}\", \"{a43f57e}\");\r\n                }\r\n\r\n                if (startParams.monitorSettings) {\r\n                    for (const monitor of startParams.monitorSettings) {\r\n                        session.streamInfo.push({\r\n                            width: monitor.widthInPixels,\r\n                            height: monitor.heightInPixels,\r\n                            fps: monitor.framesPerSecond,\r\n                            sdrHdrMode: monitor.sdrHdrMode\r\n                        });\r\n                    }\r\n                } else {\r\n                    for (const stream of startParams.streamParams!) {\r\n                        session.streamInfo.push({\r\n                            width: stream.width,\r\n                            height: stream.height,\r\n                            fps: stream.fps\r\n                        });\r\n                    }\r\n                }\r\n                Log.d(\"{6bae601}\", \"{07dc276}\", session.sessionId);\r\n                resolve(session);\r\n            }, 1); // modify this value to show a longer loading screen.\r\n        });\r\n    }\r\n\r\n    getSession(_sessionId: string, isPoll: boolean): Promise<GridSession | undefined> {\r\n        return new Promise((resolve, reject) => {\r\n            //its a bug if code reaches here.\r\n            let err: ErrorDetails = { code: -1, description: \"PassthruPollingNotSupported\" };\r\n            reject(err);\r\n        });\r\n    }\r\n\r\n    sendDeleteRequest(sessionId: string): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n","import { BrowserName, DeviceType, PlatformName } from \"./enumnames\";\nimport { PlatformDetails } from \"./platform\";\n\n// Rename to CommonDeviceType to avoid duplicate identifer from PlatformAPI.DeviceType\nexport const enum PayloadDeviceType {\n    DESKTOP = \"Desktop\",\n    LAPTOP = \"Laptop\",\n    TV = \"TV\",\n    PHONE = \"Phone\",\n    TABLET = \"Tablet\",\n    SERVER = \"Server\",\n    CONSOLE = \"Console\",\n    UNDEFINED = \"undefined\"\n}\n\nexport const enum PayloadBrowserType {\n    CHROME = \"Chrome\",\n    SAFARI = \"Safari\",\n    YANDEX = \"Yandex\",\n    EDGE = \"Edge\",\n    EDGE_LEGACY = \"Edge_legacy\",\n    FIREFOX = \"Firefox\",\n    SAMSUNG = \"Samsung\",\n    CHROMIUM = \"Chromium\",\n    OPERA = \"Opera\",\n    BRAVE = \"Brave\",\n    SILK = \"Silk\",\n    UNDEFINED = \"undefined\"\n}\n\nexport const enum PayloadOSType {\n    WINDOWS = \"Windows\",\n    MACOS = \"MacOS\",\n    SHIELD = \"Shield\",\n    ANDROID = \"Android\",\n    IOS = \"iOS\",\n    IPADOS = \"iPadOS\",\n    CHROMEOS = \"ChromeOS\",\n    LINUX = \"Linux\",\n    TIZEN = \"Tizen\",\n    WEBOS = \"WebOS\",\n    TVOS = \"tvOS\",\n    XBOX = \"Xbox\",\n    STEAMOS = \"SteamOS\",\n    UNDEFINED = \"undefined\"\n}\n\nexport const enum ClientHeaderOSType {\n    WINDOWS = \"WINDOWS\",\n    MACOS = \"MACOS\",\n    SHIELD = \"SHIELD\",\n    ANDROID = \"ANDROID\",\n    IOS = \"IOS\",\n    IPADOS = \"IPADOS\",\n    CHROMEOS = \"CHROMEOS\",\n    LINUX = \"LINUX\",\n    TIZEN = \"TIZEN\",\n    WEBOS = \"WEBOS\",\n    XBOX = \"XBOX\",\n    STEAMOS = \"STEAMOS\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\nexport const enum ClientHeaderBrowserType {\n    CHROME = \"CHROME\",\n    SAFARI = \"SAFARI\",\n    YANDEX = \"YANDEX\",\n    EDGE = \"EDGE\",\n    EDGE_LEGACY = \"EDGE_LEGACY\",\n    FIREFOX = \"FIREFOX\",\n    SAMSUNG = \"SAMSUNG\",\n    CHROMIUM = \"CHROMIUM\",\n    OPERA = \"OPERA\",\n    BRAVE = \"BRAVE\",\n    SILK = \"SILK\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\nexport const enum ClientHeaderDeviceType {\n    DESKTOP = \"DESKTOP\",\n    LAPTOP = \"LAPTOP\",\n    TV = \"TV\",\n    PHONE = \"PHONE\",\n    TABLET = \"TABLET\",\n    CONSOLE = \"CONSOLE\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\nexport declare interface PayloadPlatformDetails {\n    // Name of the detected OS/Platform\n    readonly os: PayloadOSType;\n    // Name of the detected browser\n    readonly browser: PayloadBrowserType;\n    // deviceType in the format Nvidia backend services expects\n    readonly deviceType: PayloadDeviceType;\n}\n\nexport declare interface ClientHeaderPlatformDetails {\n    // Name of the detected OS/Platform\n    readonly os: ClientHeaderOSType;\n    // Name of the detected browser\n    readonly browser: ClientHeaderBrowserType;\n    // deviceType in the format Nvidia backend services expects\n    readonly deviceType?: ClientHeaderDeviceType;\n}\n\nclass TranslatedPlatformDetails {\n    // -----------------------------\n    // GXT / telemetry style values\n    // -----------------------------\n\n    private static getMappedDeviceType(platformDeviceType?: DeviceType): PayloadDeviceType {\n        // Mapping the PlatformDetails.DeviceType to GXT common fields.\n        // If no mapped value, should return Undefined string.\n        switch (platformDeviceType) {\n            case DeviceType.CONSOLE:\n                return PayloadDeviceType.CONSOLE;\n            case DeviceType.TABLET:\n                return PayloadDeviceType.TABLET;\n            case DeviceType.PHONE:\n                return PayloadDeviceType.PHONE;\n            case DeviceType.TV:\n                return PayloadDeviceType.TV;\n            case DeviceType.LAPTOP:\n                return PayloadDeviceType.LAPTOP;\n            case DeviceType.DESKTOP:\n                return PayloadDeviceType.DESKTOP;\n            default:\n                return PayloadDeviceType.UNDEFINED;\n        }\n    }\n\n    private static getMappedBrowserName(browserName: BrowserName): PayloadBrowserType {\n        switch (browserName) {\n            case BrowserName.CHROME:\n                return PayloadBrowserType.CHROME;\n            case BrowserName.SAFARI:\n                return PayloadBrowserType.SAFARI;\n            case BrowserName.YANDEX:\n                return PayloadBrowserType.YANDEX;\n            case BrowserName.EDGE:\n                return PayloadBrowserType.EDGE;\n            case BrowserName.EDGE_LEGACY:\n                return PayloadBrowserType.EDGE_LEGACY;\n            case BrowserName.FIREFOX:\n                return PayloadBrowserType.FIREFOX;\n            case BrowserName.SAMSUNG:\n                return PayloadBrowserType.SAMSUNG;\n            case BrowserName.CHROMIUM:\n                return PayloadBrowserType.CHROMIUM;\n            case BrowserName.OPERA:\n                return PayloadBrowserType.OPERA;\n            case BrowserName.BRAVE:\n                return PayloadBrowserType.BRAVE;\n            case BrowserName.SILK:\n                return PayloadBrowserType.SILK;\n            case BrowserName.UNKNOWN:\n            // As per comment https://nvbugswb.nvidia.com/NVBugs5/redir.aspx?url=/3434141/6 ReactNative browser\n            // is not supported and is mapped to undefined.\n            case BrowserName.REACT:\n            default:\n                return PayloadBrowserType.UNDEFINED;\n        }\n    }\n\n    private static getMappedDeviceOS(platformOS: PlatformName): PayloadOSType {\n        switch (platformOS) {\n            case PlatformName.WINDOWS:\n                return PayloadOSType.WINDOWS;\n            case PlatformName.MAC:\n                return PayloadOSType.MACOS;\n            case PlatformName.CHROME_OS:\n                return PayloadOSType.CHROMEOS;\n            case PlatformName.LINUX:\n                return PayloadOSType.LINUX;\n            case PlatformName.IOS:\n                return PayloadOSType.IOS;\n            case PlatformName.IPADOS:\n                return PayloadOSType.IPADOS;\n            case PlatformName.TIZEN:\n                return PayloadOSType.TIZEN;\n            case PlatformName.WEBOS:\n                return PayloadOSType.WEBOS;\n            case PlatformName.XBOX:\n                return PayloadOSType.XBOX;\n            case PlatformName.ANDROID:\n                return PayloadOSType.ANDROID;\n            case PlatformName.STEAMOS:\n                return PayloadOSType.STEAMOS;\n            case PlatformName.FIRETV:\n            case PlatformName.FREEBSD:\n            case PlatformName.CCOS:\n            case PlatformName.UNKNOWN:\n            default:\n                return PayloadOSType.UNDEFINED;\n        }\n    }\n\n    // --------------------\n    // LCARS style values\n    // --------------------\n\n    private static mapOSPlatformNameToSupportedDeviceOs = (\n        osPlatformName: PayloadOSType\n    ): ClientHeaderOSType => {\n        switch (osPlatformName) {\n            case PayloadOSType.WINDOWS:\n                return ClientHeaderOSType.WINDOWS;\n            case PayloadOSType.MACOS:\n                return ClientHeaderOSType.MACOS;\n            case PayloadOSType.LINUX:\n                return ClientHeaderOSType.LINUX;\n            case PayloadOSType.CHROMEOS:\n                return ClientHeaderOSType.CHROMEOS;\n            case PayloadOSType.IOS:\n                return ClientHeaderOSType.IOS;\n            case PayloadOSType.IPADOS:\n                return ClientHeaderOSType.IPADOS;\n            case PayloadOSType.WEBOS:\n                return ClientHeaderOSType.WEBOS;\n            case PayloadOSType.TIZEN:\n                return ClientHeaderOSType.TIZEN;\n            case PayloadOSType.XBOX:\n                return ClientHeaderOSType.XBOX;\n            case PayloadOSType.ANDROID:\n                return ClientHeaderOSType.ANDROID;\n            case PayloadOSType.STEAMOS:\n                return ClientHeaderOSType.STEAMOS;\n            case PayloadOSType.SHIELD:\n                return ClientHeaderOSType.SHIELD;\n            default:\n                return ClientHeaderOSType.UNKNOWN;\n        }\n    };\n\n    private static extractDeviceTypeForBrowserClient = (\n        deviceTypeFromPlatfromAPI: string\n    ): ClientHeaderDeviceType => {\n        switch (deviceTypeFromPlatfromAPI) {\n            case PayloadDeviceType.DESKTOP:\n                return ClientHeaderDeviceType.DESKTOP;\n            case PayloadDeviceType.LAPTOP:\n                return ClientHeaderDeviceType.LAPTOP;\n            case PayloadDeviceType.TV:\n                return ClientHeaderDeviceType.TV;\n            case PayloadDeviceType.PHONE:\n                return ClientHeaderDeviceType.PHONE;\n            case PayloadDeviceType.TABLET:\n                return ClientHeaderDeviceType.TABLET;\n            case PayloadDeviceType.CONSOLE:\n                return ClientHeaderDeviceType.CONSOLE;\n            default:\n                return ClientHeaderDeviceType.DESKTOP;\n        }\n    };\n\n    /*\n      Common Headers expect UNKNOWN in place of UNDEFINED. 'Undefined' is required by Telemetry and\n      is being used all over the codebase, so making the endpoint specific changes here.\n      Refer to: https://confluence.nvidia.com/display/DCPC/LCARS+Documentation\n    */\n    private static extractBrowserTypeForBrowserClient = (\n        browserName: PayloadBrowserType\n    ): ClientHeaderBrowserType => {\n        switch (browserName) {\n            case PayloadBrowserType.CHROME:\n                return ClientHeaderBrowserType.CHROME;\n            case PayloadBrowserType.SAFARI:\n                return ClientHeaderBrowserType.SAFARI;\n            case PayloadBrowserType.YANDEX:\n                return ClientHeaderBrowserType.YANDEX;\n            case PayloadBrowserType.EDGE:\n                return ClientHeaderBrowserType.EDGE;\n            case PayloadBrowserType.EDGE_LEGACY:\n                return ClientHeaderBrowserType.EDGE_LEGACY;\n            case PayloadBrowserType.FIREFOX:\n                return ClientHeaderBrowserType.FIREFOX;\n            case PayloadBrowserType.SAMSUNG:\n                return ClientHeaderBrowserType.SAMSUNG;\n            case PayloadBrowserType.CHROMIUM:\n                return ClientHeaderBrowserType.CHROMIUM;\n            case PayloadBrowserType.OPERA:\n                return ClientHeaderBrowserType.OPERA;\n            case PayloadBrowserType.BRAVE:\n                return ClientHeaderBrowserType.BRAVE;\n            case PayloadBrowserType.SILK:\n                return ClientHeaderBrowserType.SILK;\n            case PayloadBrowserType.UNDEFINED:\n                return ClientHeaderBrowserType.UNKNOWN;\n            default:\n                return ClientHeaderBrowserType.UNKNOWN;\n        }\n    };\n\n    private readonly _platformDetails: PlatformDetails;\n    private readonly _gxtDetails: PayloadPlatformDetails;\n    private readonly _lcarsDetails: ClientHeaderPlatformDetails;\n\n    constructor(details: PlatformDetails) {\n        this._platformDetails = details;\n        this._gxtDetails = this.translateForPayload();\n        this._lcarsDetails = this.translateForClientHeaders();\n    }\n\n    private translateForPayload(): PayloadPlatformDetails {\n        const details = this._platformDetails;\n        const devType: PayloadDeviceType = TranslatedPlatformDetails.getMappedDeviceType(\n            details.deviceType\n        );\n        const browser: PayloadBrowserType = TranslatedPlatformDetails.getMappedBrowserName(\n            details.browser\n        );\n        const os: PayloadOSType = TranslatedPlatformDetails.getMappedDeviceOS(details.os);\n\n        return {\n            os: os,\n            browser: browser,\n            deviceType: devType\n        };\n    }\n\n    private translateForClientHeaders(): ClientHeaderPlatformDetails {\n        const details = this._platformDetails;\n        // TODO: Make these use more direct lookups!\n        const devType: ClientHeaderDeviceType =\n            TranslatedPlatformDetails.extractDeviceTypeForBrowserClient(\n                TranslatedPlatformDetails.getMappedDeviceType(details.deviceType)\n            );\n        const browser: ClientHeaderBrowserType =\n            TranslatedPlatformDetails.extractBrowserTypeForBrowserClient(\n                TranslatedPlatformDetails.getMappedBrowserName(details.browser)\n            );\n        const os: ClientHeaderOSType =\n            TranslatedPlatformDetails.mapOSPlatformNameToSupportedDeviceOs(\n                TranslatedPlatformDetails.getMappedDeviceOS(details.os)\n            );\n\n        return {\n            os: os,\n            browser: browser,\n            deviceType: devType\n        };\n    }\n\n    public get gxtDetails() {\n        return this._gxtDetails;\n    }\n\n    public get lcarsDetails() {\n        return this._lcarsDetails;\n    }\n\n    public get details() {\n        return this._platformDetails;\n    }\n}\n\nlet lastTranslatedDetails: TranslatedPlatformDetails | undefined;\n\nexport function translatePlatformDetailsForPayload(\n    details: PlatformDetails\n): PayloadPlatformDetails {\n    if (lastTranslatedDetails?.details != details) {\n        lastTranslatedDetails = new TranslatedPlatformDetails(details);\n    }\n\n    return lastTranslatedDetails!.gxtDetails;\n}\n\nexport function translatePlatformDetailsForClientHeader(\n    details: PlatformDetails\n): ClientHeaderPlatformDetails {\n    if (lastTranslatedDetails?.details != details) {\n        lastTranslatedDetails = new TranslatedPlatformDetails(details);\n    }\n\n    return lastTranslatedDetails!.lcarsDetails;\n}\n","(window as any)[\"RtcUtils\"] = (window as any)[\"RtcUtils\"] || {};\n\n/* Typings to be exposed to library user */\nexport * from \"./output/interfaces\";\nexport * from \"./output/version\";\nexport { version as PackageVersion } from \"./output/genversion\";\nexport * from \"./output/utils\";\nexport * from \"./output/settings\";\nexport * from \"./output/eventemitter\";\nexport * from \"./output/logger\";\nexport * from \"./output/platform\";\nexport * from \"./output/enumnames\";\nexport * from \"./output/logqueueingeventemitter\";\nexport * from \"./output/workerutils\";\nexport * from \"./output/translateplatform\";\nexport * from \"./output/extensions\";\nexport { TracingManager } from \"./output/tracingmanager\";\nexport * from \"./output/observablearray\";\nexport * from \"./output/cancellablewait\";\n","import { ConfigureRtcUtilsSettings, toBool } from \"./dependencies\";\nimport { Log } from \"./logger\";\nimport { OverrideConfigTypeEnum } from \"./gstelemetryinterfaces\";\n/* Note: For public client usage, please skip to RemoteConfigData interface definition. */\n\nconst LOGTAG = \"gridserversettings\";\n\ninterface _GridServerSettings {\n    commonConfig: CommonConfig; // parameters for communication with the PM\n    remoteOverrideInfo: RemoteOverrideInfo; // remote override config details for telemetry\n    loggingEnabled: boolean; // Disable log events to client.\n    consoleLoggingEnabled: boolean; // Enable log events to UA console. Requires loggingEnabled.\n    webSocketSignaling: boolean; // Use WebSockets for signaling communication.\n    webRtcStreamer: boolean; // Set GSStreamer metadata to WebRTC, no matter the platform name\n    hdr?: boolean; // Whether or not to request an HDR stream\n}\n\ndeclare interface PmCommunication {\n    httpBackOffDelay?: number;\n    httpRetryCount?: number;\n    httpDataReceiveTimeout?: number;\n    httpConnectionTimeout?: number;\n    pollingIntervalMin?: number;\n    pollingIntervalMax?: number;\n    pollingIntervalStep?: number;\n    pollingQueueSizePerStep?: number;\n}\n\nexport declare interface CommonConfig {\n    pmCommunication?: PmCommunication;\n}\n\n/* Note: This variable is not meant to be used by public Clients.\n */\nexport let GridServerSettings: _GridServerSettings = {\n    commonConfig: {},\n    remoteOverrideInfo: {\n        type: OverrideConfigTypeEnum.UNKNOWN,\n        version: \"\"\n    },\n    loggingEnabled: true,\n    consoleLoggingEnabled: false,\n    webSocketSignaling: true,\n    webRtcStreamer: false\n};\n\nexport declare interface RemoteOverrideInfo {\n    type: OverrideConfigTypeEnum;\n    version: string;\n}\n\n/** The GFN specific remote config data fetched from RemoteConfig server */\ndeclare interface RemoteConfigData {\n    /**  common fields for all clients, contains PM communication params etc*/\n    common?: string;\n    /**  remote config file version */\n    version?: string;\n}\n\n/** Interfaces for GXT override config data fetched from GXT server */\ndeclare interface GxtConfigDebugInfo {\n    revision: string;\n}\n\ndeclare interface GxtConfigParams {\n    name: string;\n    value: Object;\n    version: string;\n}\nexport declare interface GxtRemoteConfigData {\n    debugInfo: GxtConfigDebugInfo;\n    params: GxtConfigParams[];\n}\n\n/** Free form GridServer library configuration parameter.\n    To be used only by GFN client and internal dev clients. */\nexport declare interface GridServerConfigData {\n    remoteConfigData?: RemoteConfigData;\n    /* Will be set to a JSON formatted string when the override config is fetched from GXT. Should be mutually exclusive to remoteConfigData*/\n    gxtOverrideData?: string;\n    /* Free form string containing internal override configurations */\n    overrideData?: string;\n}\n\n/**\n * This function allows GFN/dev clients to configure the GridServer library to toggle various features from override tools or from remote config server.\n * This should be invoked before initializing other components of GridServer library.\n *\n * The GridServerConfigData's remoteConfigData and gxtOverrideData are all GFN specific settings, exposed as a string to prevent dependency on\n * GFN client from configuring values to it. The json data received from the RemoteConfig/GxtConfig server is stringified as it is and passed\n * into the library without interpretation.\n *\n * The GridServerConfigData.overrideData is a string of feature toggle/options separated by '&' character.\n * The options exposed exposed are:\n *\n *      mode=lean|dev|default           -- Lean mode of GridServer put the library into minimal functionality mode.\n *                                         Most features will be disabled and users configure enabling of selected features.\n *                                         Dev mode of GridServer enables dev internal tools for the library (by default enabled for Lean mode)\n *      log=enable|disable              -- Enable log generation from the library.\n *      console=enable|disable          -- Enable console log from the library if log generation is enabled.\n *      hdr=on|off                      -- Whether or not to request an HDR stream.\n *\n *  Ex: In order to put the ragnarok in Lean mode yet support logging, the settings string would be\n *      \"mode=lean&log=enable\"\n *  Instead of enable/disable,  on/off or 0/1 can be used as well.\n */\n\nexport function ConfigureGridServerSettings(data: GridServerConfigData) {\n    Log.i(\"{27b0dc4}\", \"{539b3db}\", JSON.stringify(data));\n    ConfigureRtcUtilsSettings(data);\n    // Note: This function is at app start, let the exception bubble up and fail.\n    //       The remote config data can be handled within try catch as it will be part of prod.\n    if (data.gxtOverrideData) {\n        const configData = <GxtRemoteConfigData>JSON.parse(data.gxtOverrideData);\n        // Parse the 'pmCommunication' config block\n        if (configData.params) {\n            for (const element of configData.params) {\n                if (element.name === \"pmCommunication\") {\n                    GridServerSettings.commonConfig.pmCommunication = <PmCommunication>(\n                        element.value\n                    );\n                    // Set the override config details for telemetry, only when we have some override settings\n                    GridServerSettings.remoteOverrideInfo = {\n                        type: OverrideConfigTypeEnum.GXT,\n                        version: element.version\n                    };\n                }\n            }\n        }\n    } else if (data.remoteConfigData) {\n        if (data.remoteConfigData.common) {\n            GridServerSettings.commonConfig = <CommonConfig>(\n                JSON.parse(data.remoteConfigData.common)\n            );\n            // Set the override config details for telemetry, only when we have some override settings\n            GridServerSettings.remoteOverrideInfo = {\n                type: OverrideConfigTypeEnum.RCONFIG,\n                version: data.remoteConfigData.version ?? \"\"\n            };\n        }\n    }\n\n    if (data.overrideData) {\n        /* The below code logic is to disable all features when user has selected lean mode.\n          However each feature can be individually controlled\n          so that performance can be analyzed by turning on one feature at a time. */\n\n        const settings = data.overrideData.toLowerCase();\n\n        /* Using URLSearchParams is simpler even when UI clients give a text option in Override tools to configure ragnarok.\n           It splits on '&' and '=', which is what we would need when configured through UI Clients. */\n        const settingsMap = new URLSearchParams(settings);\n        if (settingsMap.get(\"mode\") === \"lean\") {\n            GridServerSettings.loggingEnabled = false;\n        }\n        const getSettingBool = (key: string): boolean | undefined => {\n            const value: any = settingsMap.get(key);\n            return toBool(value);\n        };\n\n        GridServerSettings.loggingEnabled =\n            getSettingBool(\"log\") ?? GridServerSettings.loggingEnabled;\n        GridServerSettings.consoleLoggingEnabled =\n            GridServerSettings.loggingEnabled &&\n            (getSettingBool(\"console\") ?? GridServerSettings.consoleLoggingEnabled);\n\n        GridServerSettings.webSocketSignaling =\n            getSettingBool(\"websocketsignaling\") ?? GridServerSettings.webSocketSignaling;\n        GridServerSettings.webRtcStreamer =\n            getSettingBool(\"webrtcstreamer\") ?? GridServerSettings.webRtcStreamer;\n        GridServerSettings.hdr = getSettingBool(\"hdr\") ?? GridServerSettings.hdr;\n    }\n}\n","/////// Enum Declarations ////////\nexport declare const enum GdprLevel {\n    Functional = \"functional\",\n    Technical = \"technical\",\n    Behavioral = \"behavioral\"\n}\n\nexport declare const enum BooleanType {\n    UNDEFINED = \"UNDEFINED\",\n    TRUE = \"TRUE\",\n    FALSE = \"FALSE\"\n}\n\nexport declare const enum OverrideConfigTypeEnum {\n    UNKNOWN = \"UNKNOWN\",\n    RCONFIG = \"RCONFIG\",\n    GXT = \"GXT\",\n    LOCAL = \"LOCAL\",\n    OTHER = \"OTHER\"\n}\n\nexport declare const enum HTTPVerb {\n    OTHER = \"OTHER\",\n    HEAD = \"HEAD\",\n    DELETE = \"DELETE\",\n    POST = \"POST\",\n    GET = \"GET\",\n    CONNECT = \"CONNECT\",\n    OPTIONS = \"OPTIONS\",\n    PUT = \"PUT\",\n    WS = \"WS\"\n}\n\nexport declare const enum IPVersion {\n    UNKNOWN = \"UNKNOWN\",\n    IPV6 = \"IPV6\",\n    IPV4 = \"IPV4\"\n}\n\nexport declare const enum NetworkTypeEnum {\n    OTHER = \"OTHER\",\n    ETHERNET = \"ETHERNET\",\n    UNKNOWN = \"UNKNOWN\",\n    WIFI_2_4 = \"WIFI_2_4\",\n    WIFI_5_0 = \"WIFI_5_0\",\n    MOBILE = \"MOBILE\",\n    MOBILE_2G = \"MOBILE_2G\",\n    MOBILE_3G = \"MOBILE_3G\",\n    MOBILE_4G = \"MOBILE_4G\",\n    MOBILE_5G = \"MOBILE_5G\"\n}\n\nexport declare const enum GSModuleName {\n    UNKNOWN = \"UNKNOWN\",\n    NVST = \"NVST\",\n    GRID_SERVER = \"GRID_SERVER\",\n    BIFROST_CLIENT_SDK = \"BIFROST_CLIENT_SDK\",\n    RAGNAROK = \"RAGNAROK\",\n    GERONIMO = \"GERONIMO\",\n    STREAM_PLAYER_SDK = \"STREAM_PLAYER_SDK\"\n}\n\nexport declare const enum FeatureSupportStatus {\n    UNKNWON = \"UNKNWON\",\n    SUPPORTED = \"SUPPORTED\",\n    UNSUPPORTED = \"UNSUPPORTED\"\n}\n\nexport declare const enum ResumeType {\n    NONE = \"NONE\",\n    MANUAL = \"MANUAL\",\n    AUTO = \"AUTO\"\n}\n\nexport declare const enum CodecFrameworkType {\n    UNKNOWN = \"UNKNOWN\",\n    DXVA = \"DXVA\",\n    MediaCodec = \"MediaCodec\",\n    MFT = \"MFT\",\n    SoftwareDecoder = \"SoftwareDecoder\",\n    VTDecoder = \"VTDecoder\"\n}\n\nexport declare const enum CodecType {\n    UNKNOWN = \"UNKNOWN\",\n    H263 = \"H263\",\n    H264 = \"H264\",\n    HEVC = \"HEVC\",\n    MPEG_4_SP = \"MPEG_4_SP\",\n    VP8 = \"VP8\",\n    VP9 = \"VP9\",\n    AV1 = \"AV1\"\n}\n\n/////// Event interface Declarations ////////\n\nexport declare interface GridServer_GameLaunch_Request {\n    requestedZoneAddress: string;\n    zoneName: string;\n    networkSessionId: string;\n    sessionId: string;\n    subSessionId: string;\n    resumeType: ResumeType;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    result: string;\n    codec: CodecType;\n    ipVersion: IPVersion;\n    launchDuration: number;\n    networkType: NetworkTypeEnum;\n    streamingProfileGuid: string;\n    systemInfoGuid: string;\n    cmsId: string;\n}\n\nexport declare interface GS_Feature {\n    featureName: string;\n    supported: FeatureSupportStatus;\n    defaultEnabled: BooleanType;\n    enabled: BooleanType;\n    reason: string;\n    moduleName: GSModuleName;\n    networkType: NetworkTypeEnum;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_SystemAPICallResult {\n    action: string;\n    label: string;\n    duration: number;\n    callOutput: string;\n    data: number;\n    moduleName: GSModuleName;\n    networkType: NetworkTypeEnum;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_DebugInfo {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    moduleName: GSModuleName;\n    networkType: NetworkTypeEnum;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    cmsId: string;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_ExceptionInfo {\n    filename: string;\n    lineno: number;\n    stacktrace: string;\n    colno: number;\n    handled: BooleanType;\n    category: string;\n    message: string;\n    moduleName: GSModuleName;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_ClientMetricEvent {\n    metricName: string;\n    moduleName: GSModuleName;\n    valueInt1: number;\n    valueInt2: number;\n    valueInt3: number;\n    valueString: string;\n    valueDouble: number;\n    networkType: NetworkTypeEnum;\n    cmsId: string;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_ConnectivityCheck {\n    zone1: string;\n    zone2: string;\n    zone1Status: number;\n    zone2Status: number;\n    traceRouteIP: string;\n    traceRouteDestinationReached: BooleanType;\n    traceRouteOutput: string;\n    result: string;\n    connectivityFlags: string;\n    sessionId: string;\n    subSessionId: string;\n    resumeType: ResumeType;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    moduleName: GSModuleName;\n}\n\nexport declare interface GS_Sleep_Event {\n    eventSequence: string;\n    sleepTime: number;\n    error: string;\n    timeToSleep: number;\n    moduleName: GSModuleName;\n    cmsId: string;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface GS_HttpCallResult {\n    callDuration: number;\n    verb: HTTPVerb;\n    sessionId: string;\n    subSessionId: string;\n    serverId: string;\n    url: string;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    requestStatusCode: string;\n    requestId: string;\n    networkType: NetworkTypeEnum;\n    statusCode: string;\n    cmsId: string;\n    moduleName: GSModuleName;\n}\n\nexport declare interface GS_PropertyChange_Event {\n    propertyName: String;\n    moduleName: GSModuleName;\n    oldValue: String;\n    newValue: String;\n    frameCount: number;\n    sessionId: String;\n    subSessionId: String;\n    cmsId: String;\n}\n\nexport declare interface GS_CodecError_Event {\n    isHardwareDecoding: BooleanType;\n    codecFrameworkType: CodecFrameworkType;\n    codecType: CodecType;\n    reason: String;\n    systemInfoGuid: String;\n}\n\n/////// Event Type Declarations ////////\nconst GSEventTypes = {\n    GridServer_GameLaunch_Request: {\n        name: \"GridServer_GameLaunch_Request\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_Feature: {\n        name: \"GS_Feature\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_SystemAPICallResult: {\n        name: \"GS_SystemAPICallResult\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_DebugInfo: {\n        name: \"GS_DebugInfo\",\n        gdprLevel: GdprLevel.Technical\n    },\n    GS_ExceptionInfo: {\n        name: \"GS_ExceptionInfo\",\n        gdprLevel: GdprLevel.Technical\n    },\n    GS_ClientMetricEvent: {\n        name: \"GS_ClientMetricEvent\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_ConnectivityCheck: {\n        name: \"GS_ConnectivityCheck\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_Sleep_Event: {\n        name: \"GS_Sleep_Event\",\n        gdprLevel: GdprLevel.Technical\n    },\n    GS_HttpCallResult: {\n        name: \"GS_HttpCallResult\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_PropertyChange_Event: {\n        name: \"GS_PropertyChange_Event\",\n        gdprLevel: GdprLevel.Functional\n    },\n    GS_CodecError_Event: {\n        name: \"GS_CodecError_Event\",\n        gdprLevel: GdprLevel.Functional\n    }\n};\n\n/////// Event Class Declarations ////////\nexport class TelemetryEventBase<T> {\n    readonly name: string = \"\";\n    readonly gdprLevel: GdprLevel = GdprLevel.Behavioral;\n    readonly ts: string;\n    parameters: T;\n    constructor(info: T) {\n        this.parameters = info;\n        this.ts = new Date().toISOString();\n    }\n}\n\nexport class GridServer_GameLaunch_RequestDef extends TelemetryEventBase<GridServer_GameLaunch_Request> {\n    readonly name: string = GSEventTypes.GridServer_GameLaunch_Request.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GridServer_GameLaunch_Request.gdprLevel;\n    constructor(info: GridServer_GameLaunch_Request) {\n        super(info);\n    }\n}\n\nexport class GS_FeatureDef extends TelemetryEventBase<GS_Feature> {\n    readonly name: string = GSEventTypes.GS_Feature.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_Feature.gdprLevel;\n    constructor(info: GS_Feature) {\n        super(info);\n    }\n}\n\nexport class GS_SystemAPICallResultDef extends TelemetryEventBase<GS_SystemAPICallResult> {\n    readonly name: string = GSEventTypes.GS_SystemAPICallResult.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_SystemAPICallResult.gdprLevel;\n    constructor(info: GS_SystemAPICallResult) {\n        super(info);\n    }\n}\n\nexport class GS_DebugInfoDef extends TelemetryEventBase<GS_DebugInfo> {\n    readonly name: string = GSEventTypes.GS_DebugInfo.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_DebugInfo.gdprLevel;\n    constructor(info: GS_DebugInfo) {\n        super(info);\n    }\n}\n\nexport class GS_ExceptionInfoDef extends TelemetryEventBase<GS_ExceptionInfo> {\n    readonly name: string = GSEventTypes.GS_ExceptionInfo.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_ExceptionInfo.gdprLevel;\n    constructor(info: GS_ExceptionInfo) {\n        super(info);\n    }\n}\n\nexport class GS_ClientMetricEventDef extends TelemetryEventBase<GS_ClientMetricEvent> {\n    readonly name: string = GSEventTypes.GS_ClientMetricEvent.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_ClientMetricEvent.gdprLevel;\n    constructor(info: GS_ClientMetricEvent) {\n        super(info);\n    }\n}\n\nexport class GS_ConnectivityCheckDef extends TelemetryEventBase<GS_ConnectivityCheck> {\n    readonly name: string = GSEventTypes.GS_ConnectivityCheck.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_ConnectivityCheck.gdprLevel;\n    constructor(info: GS_ConnectivityCheck) {\n        super(info);\n    }\n}\n\nexport class GS_Sleep_EventDef extends TelemetryEventBase<GS_Sleep_Event> {\n    readonly name: string = GSEventTypes.GS_Sleep_Event.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_Sleep_Event.gdprLevel;\n    constructor(info: GS_Sleep_Event) {\n        super(info);\n    }\n}\n\nexport class GS_HttpCallResultDef extends TelemetryEventBase<GS_HttpCallResult> {\n    readonly name: string = GSEventTypes.GS_HttpCallResult.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_HttpCallResult.gdprLevel;\n    constructor(info: GS_HttpCallResult) {\n        super(info);\n    }\n}\n\nexport class GS_PropertyChange_EventDef extends TelemetryEventBase<GS_PropertyChange_Event> {\n    readonly name: string = GSEventTypes.GS_PropertyChange_Event.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_PropertyChange_Event.gdprLevel;\n    constructor(info: GS_PropertyChange_Event) {\n        super(info);\n    }\n}\n\nexport class GS_CodecError_EventDef extends TelemetryEventBase<GS_CodecError_Event> {\n    readonly name: string = GSEventTypes.GS_CodecError_Event.name;\n    readonly gdprLevel: GdprLevel = GSEventTypes.GS_CodecError_Event.gdprLevel;\n    constructor(info: GS_CodecError_Event) {\n        super(info);\n    }\n}\n","import {\n    GS_EVENTS,\n    TelemetryEventIds,\n    TelemetryHttpEvent,\n    ClientTelemetryConfig\n} from \"./interfaces\";\nimport { GridServerSettings } from \"./settings\";\nimport { IEventEmitter } from \"./dependencies\";\nimport {\n    GSModuleName,\n    HTTPVerb,\n    ResumeType,\n    CodecType,\n    IPVersion,\n    GS_HttpCallResultDef,\n    GridServer_GameLaunch_Request,\n    GridServer_GameLaunch_RequestDef,\n    GS_DebugInfoDef,\n    GS_ExceptionInfoDef,\n    BooleanType,\n    NetworkTypeEnum\n} from \"./gstelemetryinterfaces\";\n//import GsAnalyticsSchema from \"./EventsSchema-GridServer.json\";\n\nexport class GsTelemetryHandler {\n    private eventEmitter: IEventEmitter;\n\n    private networkType: NetworkTypeEnum = NetworkTypeEnum.UNKNOWN;\n    private cmsId: string = \"\";\n    private sessionId: string = \"\";\n    private subSessionId: string = \"\";\n    private telemetryEventIds: TelemetryEventIds = {};\n    private exceptionCounts: Map<string, number> = new Map<string, number>();\n    private totalExceptionCount: number = 0;\n\n    /// TODO: Need to fetch the schema details from the JSON schema file\n    /// Importing json file works, but the build fails as the json file is not getting copied into output\n    private readonly telemetryConfig: ClientTelemetryConfig = {\n        clientId: \"93289439828086895\",\n        clientName: \"GFN_GridServer\",\n        eventSchemaVer: \"2.0\"\n    };\n\n    constructor(_eventEmitter: IEventEmitter) {\n        this.eventEmitter = _eventEmitter;\n    }\n\n    public updateTelemetryEventIds(telemetryIds: TelemetryEventIds) {\n        this.telemetryEventIds = telemetryIds;\n    }\n\n    private emitEvent(\n        event:\n            | GS_HttpCallResultDef\n            | GridServer_GameLaunch_RequestDef\n            | GS_DebugInfoDef\n            | GS_ExceptionInfoDef\n    ) {\n        this.eventEmitter.emit(GS_EVENTS.TELEMETRY_EVENT, {\n            name: event.name,\n            parameters: event.parameters,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            clientConfig: this.telemetryConfig\n        });\n    }\n\n    public getTelemetryHttpEvent(\n        url: string,\n        verb: string,\n        sessionId?: string\n    ): TelemetryHttpEvent {\n        return {\n            url,\n            verb,\n            statusCode: \"0\",\n            requestStatusCode: \"\",\n            sessionId: sessionId ?? \"\",\n            subSessionId: this.subSessionId,\n            requestId: \"\",\n            serverId: \"\",\n            callDuration: 0\n        };\n    }\n\n    public getGameLaunchRequestEvent(\n        serverAddress: string,\n        isResume: boolean,\n        networkSessionId?: string,\n        sessionId?: string\n    ): GridServer_GameLaunch_Request {\n        return {\n            requestedZoneAddress: serverAddress,\n            zoneName: \"\",\n            networkSessionId: networkSessionId ?? \"\",\n            sessionId: sessionId ?? \"\",\n            subSessionId: \"\",\n            resumeType: isResume ? ResumeType.MANUAL : ResumeType.NONE,\n            overrideConfigType: GridServerSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: GridServerSettings.remoteOverrideInfo.version,\n            result: \"\",\n            codec: CodecType.UNKNOWN,\n            ipVersion: IPVersion.UNKNOWN,\n            launchDuration: 0,\n            networkType: this.networkType,\n            streamingProfileGuid: \"\",\n            systemInfoGuid: \"\",\n            cmsId: String(this.cmsId)\n        };\n    }\n\n    public emitHttpEvent(event: TelemetryHttpEvent) {\n        if (this.eventEmitter.hasListener(GS_EVENTS.TELEMETRY_EVENT)) {\n            const httpEvent: GS_HttpCallResultDef = new GS_HttpCallResultDef({\n                callDuration: event.callDuration,\n                verb: event.verb as HTTPVerb,\n                sessionId: event.sessionId,\n                subSessionId: event.subSessionId,\n                serverId: event.serverId,\n                url: event.url,\n                overrideConfigType: GridServerSettings.remoteOverrideInfo.type,\n                overrideConfigVersion: GridServerSettings.remoteOverrideInfo.version,\n                requestStatusCode: event.requestStatusCode,\n                requestId: event.requestId,\n                networkType: this.networkType,\n                statusCode: event.statusCode,\n                cmsId: String(this.cmsId),\n                moduleName: GSModuleName.GRID_SERVER\n            });\n            this.emitEvent(httpEvent);\n        }\n    }\n\n    public emitGameLaunchRequestEvent(eventData: GridServer_GameLaunch_Request) {\n        if (this.eventEmitter.hasListener(GS_EVENTS.TELEMETRY_EVENT)) {\n            const event: GridServer_GameLaunch_RequestDef = new GridServer_GameLaunch_RequestDef(\n                eventData\n            );\n            event.parameters.sessionId = this.sessionId;\n            event.parameters.subSessionId = this.subSessionId;\n            event.parameters.systemInfoGuid = this.telemetryEventIds.systemInfoGuid ?? \"\";\n            event.parameters.streamingProfileGuid =\n                this.telemetryEventIds.streamingProfileGuid ?? \"\";\n            this.emitEvent(event);\n        }\n    }\n\n    public emitDebugEvent(\n        key1?: string,\n        key2?: string,\n        key3?: string,\n        key4?: string,\n        key5?: string\n    ) {\n        if (this.eventEmitter.hasListener(GS_EVENTS.TELEMETRY_EVENT)) {\n            const event: GS_DebugInfoDef = new GS_DebugInfoDef({\n                key1: key1 ?? \"\",\n                key2: key2 ?? \"\",\n                key3: key3 ?? \"\",\n                key4: key4 ?? \"\",\n                key5: key5 ?? \"\",\n                moduleName: GSModuleName.GRID_SERVER,\n                networkType: this.networkType,\n                overrideConfigType: GridServerSettings.remoteOverrideInfo.type,\n                overrideConfigVersion: GridServerSettings.remoteOverrideInfo.version,\n                cmsId: String(this.cmsId),\n                sessionId: this.sessionId,\n                subSessionId: this.subSessionId\n            });\n            this.emitEvent(event);\n        }\n    }\n\n    public emitExceptionEvent(\n        error: Error | DOMException | undefined,\n        msg: string,\n        file: string,\n        lineno: number,\n        colno: number,\n        handled: boolean,\n        category?: string\n    ) {\n        if (!this.canSendExceptionEvent(msg)) {\n            return;\n        }\n        if (!category && error) {\n            // If there is no explit category supplied, construct one from error name and msg.\n            // We should extend the schema to include these additional details, should we start\n            // passing the category. Right now, category is not used.\n            category = error.name + \": \" + error.message;\n        }\n\n        const event = new GS_ExceptionInfoDef({\n            filename: file,\n            lineno: lineno,\n            stacktrace: error?.stack ?? \"\",\n            colno: colno,\n            handled: handled ? BooleanType.TRUE : BooleanType.FALSE,\n            category: category ?? \"\",\n            message: msg,\n            moduleName: GSModuleName.GRID_SERVER,\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId\n        });\n        this.emitEvent(event);\n    }\n\n    public setSessionId(sessionId: string) {\n        this.sessionId = sessionId;\n    }\n\n    public setSubSessionId(subSessionId: string) {\n        this.subSessionId = subSessionId;\n        this.exceptionCounts.clear();\n        this.totalExceptionCount = 0;\n    }\n\n    public setCmsId(cmsId: string) {\n        this.cmsId = cmsId;\n    }\n\n    public setNetworkType(network: NetworkTypeEnum) {\n        this.networkType = network;\n    }\n\n    public resetCache() {\n        this.telemetryEventIds = {};\n        this.sessionId = \"\";\n        this.subSessionId = \"\";\n        this.cmsId = \"\";\n    }\n\n    private canSendExceptionEvent(message: string) {\n        const MAX_EXCEPTIONS_PER_MSG: number = 10;\n        const MAX_EXCEPTIONS_TOTAL: number = 50;\n\n        if (this.totalExceptionCount >= MAX_EXCEPTIONS_TOTAL) {\n            return false;\n        }\n        const count = this.exceptionCounts.get(message) ?? 0;\n        if (count >= MAX_EXCEPTIONS_PER_MSG) {\n            return false;\n        }\n        this.totalExceptionCount++;\n        this.exceptionCounts.set(message, count + 1);\n        return true;\n    }\n}\n","export const TracingComponent = {\n    name: \"gridserver-core\",\n    version: \"2.0\"\n};\n\nexport const enum TracingOperation {\n    PostSession = \"PostSession\",\n    PutSession = \"PutSession\",\n    DeleteSession = \"DeleteSession\",\n    GetSession = \"GetSession\",\n    GetSessionList = \"GetSessionList\",\n    AdUpdate = \"AdUpdateRequest\"\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: rtcutils-core/index-output.ts\n * @suppress {checkTypes,const,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode}\n */\ngoog.module('rtcutils_core.index_output');\nvar module = module || { id: 'index-output.ts' };\ngoog.require('tslib');\nconst tsickle_interfaces_1 = goog.requireType(\"rtcutils_core.output.interfaces\");\nconst tsickle_version_2 = goog.requireType(\"rtcutils_core.output.version\");\nconst tsickle_genversion_3 = goog.requireType(\"rtcutils_core.output.genversion\");\nconst tsickle_utils_4 = goog.requireType(\"rtcutils_core.output.utils\");\nconst tsickle_settings_5 = goog.requireType(\"rtcutils_core.output.settings\");\nconst tsickle_eventemitter_6 = goog.requireType(\"rtcutils_core.output.eventemitter\");\nconst tsickle_logger_7 = goog.requireType(\"rtcutils_core.output.logger\");\nconst tsickle_platform_8 = goog.requireType(\"rtcutils_core.output.platform\");\nconst tsickle_enumnames_9 = goog.requireType(\"rtcutils_core.output.enumnames\");\nconst tsickle_logqueueingeventemitter_10 = goog.requireType(\"rtcutils_core.output.logqueueingeventemitter\");\nconst tsickle_workerutils_11 = goog.requireType(\"rtcutils_core.output.workerutils\");\nconst tsickle_translateplatform_12 = goog.requireType(\"rtcutils_core.output.translateplatform\");\nconst tsickle_extensions_13 = goog.requireType(\"rtcutils_core.output.extensions\");\nconst tsickle_tracingmanager_14 = goog.requireType(\"rtcutils_core.output.tracingmanager\");\nconst tsickle_observablearray_15 = goog.requireType(\"rtcutils_core.output.observablearray\");\nconst tsickle_cancellablewait_16 = goog.requireType(\"rtcutils_core.output.cancellablewait\");\n((/** @type {?} */ (window)))[\"RtcUtils\"] = ((/** @type {?} */ (window)))[\"RtcUtils\"] || {};\n/* Typings to be exposed to library user */\nconst interfaces_1 = goog.require('rtcutils_core.output.interfaces');\n/** @typedef {!tsickle_interfaces_1.LogEvent} */\nexports.LogEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.authTokenCallbackType} */\nexports.authTokenCallbackType; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.AuthInfo} */\nexports.AuthInfo; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ErrorDetails} */\nexports.ErrorDetails; // re-export typedef\nconst version_1 = goog.require('rtcutils_core.output.version');\nexports.CHANGELIST = version_1.CHANGELIST;\nconst genversion_1 = goog.require('rtcutils_core.output.genversion');\nexports.PackageVersion = genversion_1.version;\nconst utils_1 = goog.require('rtcutils_core.output.utils');\nexports.IsXbox = utils_1.IsXbox;\nexports.IsEdge = utils_1.IsEdge;\nexports.IsXboxEdge = utils_1.IsXboxEdge;\nexports.IsiOS = utils_1.IsiOS;\nexports.IsiPadOS = utils_1.IsiPadOS;\nexports.IsiDevice = utils_1.IsiDevice;\nexports.IsValidIPv4 = utils_1.IsValidIPv4;\nexports.GetRandNumericString = utils_1.GetRandNumericString;\nexports.convertToUnsignedInt = utils_1.convertToUnsignedInt;\nexports.GetHexString = utils_1.GetHexString;\nexports.isUnifiedErrorCode = utils_1.isUnifiedErrorCode;\nexports.IsChromium = utils_1.IsChromium;\nexports.IsSafari = utils_1.IsSafari;\nexports.IsiPhone = utils_1.IsiPhone;\nexports.IsiPad = utils_1.IsiPad;\nexports.IsWebOS = utils_1.IsWebOS;\nexports.IsChromeOS = utils_1.IsChromeOS;\nexports.IsWindowsOS = utils_1.IsWindowsOS;\nexports.IsMacOS = utils_1.IsMacOS;\nexports.IsTizenOS = utils_1.IsTizenOS;\nexports.IsLinuxOS = utils_1.IsLinuxOS;\nexports.IsAndroidOS = utils_1.IsAndroidOS;\nexports.IsSteamDeck = utils_1.IsSteamDeck;\nexports.IsFirefox = utils_1.IsFirefox;\nexports.performHttpRequest = utils_1.performHttpRequest;\nexports.IsTouchDevice = utils_1.IsTouchDevice;\nexports.IsTouchCapable = utils_1.IsTouchCapable;\nexports.IsTV = utils_1.IsTV;\nexports.isMobile = utils_1.isMobile;\nexports.getNewGuid = utils_1.getNewGuid;\nexports.IsChromeBrowser = utils_1.IsChromeBrowser;\nexports.IsChromeVersionAtLeast = utils_1.IsChromeVersionAtLeast;\nexports.IsSafariVersionAtLeast = utils_1.IsSafariVersionAtLeast;\nexports.IsiOSVersion = utils_1.IsiOSVersion;\nexports.IsiOSVersionAtLeast = utils_1.IsiOSVersionAtLeast;\nexports.customFetch = utils_1.customFetch;\nexports.getRErrorDetails = utils_1.getRErrorDetails;\nexports.DefaultHttpRequestOptions = utils_1.DefaultHttpRequestOptions;\nexports.CLIENT_VERSION = utils_1.CLIENT_VERSION;\nexports.CLIENT_IDENTIFICATION = utils_1.CLIENT_IDENTIFICATION;\nexports.SDPUtils = utils_1.SDPUtils;\n/** @typedef {!tsickle_utils_4.HttpRequestHeaders} */\nexports.HttpRequestHeaders; // re-export typedef\n/** @typedef {!tsickle_utils_4.RequestHttpOptions} */\nexports.RequestHttpOptions; // re-export typedef\n/** @typedef {!tsickle_utils_4.Response} */\nexports.Response; // re-export typedef\n/** @typedef {!tsickle_utils_4.FetchResponse} */\nexports.FetchResponse; // re-export typedef\n/** @typedef {!tsickle_utils_4.SDPBlob} */\nexports.SDPBlob; // re-export typedef\n/** @typedef {!tsickle_utils_4.SDPLine} */\nexports.SDPLine; // re-export typedef\n/** @typedef {!tsickle_utils_4.SDPSection} */\nexports.SDPSection; // re-export typedef\n/** @typedef {!tsickle_utils_4.ISDPIceParameters} */\nexports.ISDPIceParameters; // re-export typedef\n/** @typedef {!tsickle_utils_4.ISDPFingerprint} */\nexports.ISDPFingerprint; // re-export typedef\n/** @typedef {!tsickle_utils_4.ISDPDtlsParameters} */\nexports.ISDPDtlsParameters; // re-export typedef\nconst settings_1 = goog.require('rtcutils_core.output.settings');\nexports.toBool = settings_1.toBool;\nexports.ConfigureRtcUtilsSettings = settings_1.ConfigureRtcUtilsSettings;\nexports.RtcUtilsSettings = settings_1.RtcUtilsSettings;\n/** @typedef {!tsickle_settings_5.RtcUtilConfigData} */\nexports.RtcUtilConfigData; // re-export typedef\nconst eventemitter_1 = goog.require('rtcutils_core.output.eventemitter');\nexports.EventEmitter = eventemitter_1.EventEmitter;\n/** @typedef {!tsickle_eventemitter_6.IEventEmitter} */\nexports.IEventEmitter; // re-export typedef\nconst logger_1 = goog.require('rtcutils_core.output.logger');\nexports.LogImpl = logger_1.LogImpl;\nexports.Log = logger_1.Log;\nconst platform_1 = goog.require('rtcutils_core.output.platform');\nexports.GetPlatformDetails = platform_1.GetPlatformDetails;\nexports.AddPlatformTelemetry = platform_1.AddPlatformTelemetry;\nexports.getPlatformDetails = platform_1.getPlatformDetails;\n/** @typedef {!tsickle_platform_8.PlatformDetails} */\nexports.PlatformDetails; // re-export typedef\nconst enumnames_1 = goog.require('rtcutils_core.output.enumnames');\nconst logqueueingeventemitter_1 = goog.require('rtcutils_core.output.logqueueingeventemitter');\nexports.LogQueueingEventEmitter = logqueueingeventemitter_1.LogQueueingEventEmitter;\nconst workerutils_1 = goog.require('rtcutils_core.output.workerutils');\nexports.makeWorkerFromInterface = workerutils_1.makeWorkerFromInterface;\nexports.makeSharedWorkerFromInterface = workerutils_1.makeSharedWorkerFromInterface;\nexports.stopWorker = workerutils_1.stopWorker;\n/** @typedef {!tsickle_workerutils_11.CmdMsg} */\nexports.CmdMsg; // re-export typedef\n/** @typedef {!tsickle_workerutils_11.DoWork} */\nexports.DoWork; // re-export typedef\n/** @typedef {!tsickle_workerutils_11.WorkerResultCallback} */\nexports.WorkerResultCallback; // re-export typedef\n/** @typedef {!tsickle_workerutils_11.SharedWorker} */\nexports.SharedWorker; // re-export typedef\nconst translateplatform_1 = goog.require('rtcutils_core.output.translateplatform');\nexports.translatePlatformDetailsForPayload = translateplatform_1.translatePlatformDetailsForPayload;\nexports.translatePlatformDetailsForClientHeader = translateplatform_1.translatePlatformDetailsForClientHeader;\n/** @typedef {!tsickle_translateplatform_12.PayloadPlatformDetails} */\nexports.PayloadPlatformDetails; // re-export typedef\n/** @typedef {!tsickle_translateplatform_12.ClientHeaderPlatformDetails} */\nexports.ClientHeaderPlatformDetails; // re-export typedef\nconst extensions_1 = goog.require('rtcutils_core.output.extensions');\nconst tracingmanager_1 = goog.require('rtcutils_core.output.tracingmanager');\nexports.TracingManager = tracingmanager_1.TracingManager;\nconst observablearray_1 = goog.require('rtcutils_core.output.observablearray');\nexports.ObservableArray = observablearray_1.ObservableArray;\nconst cancellablewait_1 = goog.require('rtcutils_core.output.cancellablewait');\nexports.CancellableWait = cancellablewait_1.CancellableWait;\n","// generated by genversion\nexport const version = \"Local\";\n","(window as any)[\"GridServer\"] = (window as any)[\"GridServer\"] || {};\n\n/* Typings to be exposed to library user */\nexport * from \"./output/interfaces\";\nexport { GridServer, PassThruServer } from \"./output/gridserver\";\nexport * from \"./output/settings\";\nexport * from \"./output/gserrorcode\";\nexport {\n    BrowserName,\n    PlatformName,\n    getPlatformDetails,\n    PlatformDetails,\n    DeviceModel,\n    DeviceType,\n    DeviceOS,\n    DeviceVendor\n} from \"./output/dependencies\";\nexport * from \"./output/gstelemetryinterfaces\";\nexport * from \"./output/gstelemetryhandler\";\n","import {\n    AppLaunchMode,\n    ActiveSessionInfo,\n    ErrorDetails,\n    authTokenCallbackType,\n    TelemetryEventPayload,\n    ClientType,\n    StreamInfo\n} from \"./dependencies\";\n\nexport const enum EVENTS {\n    /** Indicates session has started, failed if error field is there\n     * Format is {sessionId?: string, subSessionId?: string, error?: { code: RErrorCode} }\n     * Note: in all of these events sessionId may only be there if possible.\n     */\n    SESSION_START_RESULT = \"SessionStartResult\",\n\n    /** Indicates session has stopped with succesfull delete request to PM,\n     * error field indicates delete request was not sent\n     * Format is {sessionId?: string, subSessionId?: string, error?: { code: RErrorCode} }\n     */\n    SESSION_STOP_RESULT = \"SessionStopResult\",\n\n    /** Indicates session has started, failed if error field is there,\n     * In success case result will contain list of sessions with sessionId.\n     * Format is { error?: { code: RErrorCode}, sessionList: [ { sessionId: X, appId: X, state: X}] }\n     */\n    ACTIVE_SESSIONS_RESULT = \"ActiveSessionsResult\",\n\n    /** Deprecated - Use SessionUpdate event\n     * This event is used to give progress updates like eta, queue size,\n     * these updates will only come before SESSION_START_RESULT event.\n     * Format is {\n        sessionId: string,\n        subSessionId: string,\n        queuePosition: number,\n        eta: number (milliseconds),\n        state: SessionProgressState\n        };\n    */\n    PROGRESS_UPDATE = \"ProgressUpdate\",\n\n    /** This event provides the state of the session setup/resume process. Refer SessionUpdateEvent for event data */\n    SESSION_UPDATE = \"SessionUpdate\",\n\n    /** Indicates streaming termination, can only come after SESSION_START_RESULT, error field indicates\n     * abnormal termination else intentional disconnect.\n     * Format is {sessionId?: string, subSessionId?: string, error?: { code: RErrorCode} }\n     */\n    STREAM_STOPPED = \"StreamStopped\",\n\n    /**\n     *Indicates an Event sent by library during streaming like temporary disconnect or warnings.\n     */\n    STREAMING_EVENT = \"StreamingEvent\",\n\n    /**\n     *Deprecated\n     */\n    GETSESSIONRESULT = \"GetSessionResult\",\n\n    /**\n     *Indicates Event sent by library when getSession() request completes. Only used in resume scenarios.\n     */\n    GET_SESSION_RESULT = \"GetSessionResult\",\n\n    /**\n     *Indicates a log sent by the library\n     */\n    LOG_EVENT = \"Log\",\n\n    /*\n     * Sends streamingQuality struct per 100ms.used to draw network bar in UI\n     */\n    STREAMING_QUALITY = \"StreamingQuality\",\n\n    /** This event is used for updates in mic recorder state\n     * Format is {\n             state: MicState\n       };\n    */\n    MIC_CAPTURE = \"MicCapture\",\n\n    /**\n     * This event is used for fowarding Extended Commands\n     */\n    CUSTOM_MESSAGE = \"CustomMessage\",\n\n    /**\n     * Indicates that text composition is in progress\n     * An event where compositionText is empty will be sent when composition has ended\n     */\n    TEXT_COMPOSITION = \"TextComposition\",\n\n    /**\n     * Indicates streaming stats are updated\n     */\n    STREAM_STATS_UPDATE = \"StreamStatsUpdate\",\n\n    /**\n     * This event is used for forwarding the Analytics Events generated by library. Clients should expect TelemetryEventPayload object.\n     *\n     * Clients should dispatch the received events using the ClientTelemetryConfig in the TelemetryEventPayload object.\n     * Events can have different telemetry configurations based on how the library is configured.\n     *\n     * If clients do not register for this, Ragnarok library will dispatch the telemetry events from within.\n     *\n     * Note: For handling Stream Exit events, client should pass a clientShutDownCallback in the initParams.\n     * Care should be taken to dispactch the exit events reliably as streaming yield metrics are based on these telemetry events.\n     */\n    TELEMETRY_EVENT = \"TelemetryEvent\"\n}\n\n/**\n * Type of cursor to display\n */\nexport const enum CursorType {\n    /** Render the cursor in software, matching cursor with the server */\n    SOFTWARE,\n    /** Render the cursor in hardware, matching cursor with the server */\n    HARDWARE,\n    /** Allow the browser to handle cursor on its own, without matching the server cursor */\n    FREE\n}\n\n/**\n * Input configuration flags.\n * Intended for debugging purposes; leave at defaults.\n */\nexport declare interface InputConfigFlags {\n    cursorType?: CursorType;\n    allowUnconfined: boolean;\n    preventNavigation?: boolean;\n}\n\nexport const defaultInputConfigFlags: InputConfigFlags = {\n    allowUnconfined: false,\n    preventNavigation: false\n};\n\nexport declare interface clientShutDownCallbackType {\n    (exitEventPayload: TelemetryEventPayload): boolean;\n}\n\nexport declare interface Resolution {\n    width: number;\n    height: number;\n}\n\nexport declare interface StreamingResolution extends Resolution {}\n\n/**\n * Interface representing video streaming settings\n */\nexport declare interface StreamingSettings {\n    resolution: StreamingResolution;\n    frameRate: number;\n}\n\nexport const enum StreamingProfilePreset {\n    BALANCED,\n    DATASAVER,\n    COMPETITIVE\n}\n\nexport const enum TrackType {\n    VIDEO = \"video\",\n    AUDIO = \"audio\"\n}\n\nexport declare interface Track {\n    kind: TrackType;\n    trackId?: string; // only being used internally as of now\n}\n\n/** This is passed in StartSessionResult for client to call play on appropriate media element.\n * Client may need to show a bridge state to get user gesture for successful play call and hence get\n * around browser play policies. Client should also handle all success/fail cases with correct screens/UX and telemetry.\n */\nexport declare interface Stream {\n    streamId: string; // eg. [single stream -> \"app_media_stream\"], [seperate stream -> \"app_video_stream\", \"app_audio_stream\"] as of now\n    tracks: Track[];\n}\n\n/** Event generated for EVENTS.SESSION_START_RESULT*/\nexport declare interface StartSessionResultEvent {\n    sessionId: string;\n    subSessionId: string;\n    error?: ErrorDetails;\n    sessionList?: ActiveSessionInfo[];\n    streams?: Stream[];\n    streamInfo?: StreamInfo[];\n    zoneName: string;\n    zoneAddress: string;\n    gpuType: string;\n    isResume: boolean;\n}\n\n/** Event generated for EVENTS.SESSION_STOP_RESULT*/\nexport declare interface StopSessionResultEvent {\n    sessionId: string;\n    subSessionId: string;\n    error?: ErrorDetails;\n    framesDecoded?: number;\n}\n\n/** Event generated for EVENTS.GET_SESSION_RESULT*/\nexport declare interface GetSessionResult {\n    sessionId: string;\n    subSessionId: string;\n    appId?: number;\n    status?: string; // deprecated\n    state?: string;\n    error?: ErrorDetails;\n    appLaunchMode?: AppLaunchMode;\n}\n\n/** Event generated for EVENTS.STREAM_STOPPED*/\nexport declare interface StreamingTerminatedEvent {\n    sessionId: string;\n    subSessionId: string;\n    exitcode?: number; //deprecated\n    error: ErrorDetails;\n    isResumable?: boolean; // client should resume session if this flag is true\n    zoneName: string;\n    zoneAddress: string;\n}\n\n/** Interface for handling the Gamepad packet updates */\nexport interface GamepadDataHandler {\n    // Handles the resulting update of the gamepad bitmap\n    gamepadBitmapUpdateHandler(gamepadBitmap: number): void;\n    // Handles the resulting update of the gamepad state\n    gamepadStateUpdateHandler(\n        count: number,\n        index: number,\n        buttons: number,\n        trigger: number,\n        axes: readonly number[],\n        ts: number,\n        gamepadBitmap: number,\n        name: string\n    ): void;\n    // Sends gamepad packets to the packet handler\n    finalizeGamepadData(count: number): void;\n    // Creates and sends the virtual gamepad packets to the packet handler\n    virtualGamepadUpdateHandler(\n        buttons: number,\n        trigger: number,\n        index: number,\n        axes: readonly number[],\n        gamepadBitmap: number\n    ): void;\n    // Handles unsupported gamepad connected events\n    connectUnsupportedGamepad(gamepad: Gamepad): void;\n    // Handles unsupported gamepad disconnected events\n    disconnectUnsupportedGamepad(index: number): void;\n    // Control haptics support\n    sendGamepadHapticsControl?(enable: boolean): void;\n}\n\nexport interface VibrationHandler {\n    handleSimpleVibration(index: number, leftMotorSpeed: number, rightMotorSpeed: number): void;\n}\n\nexport declare interface Zoneless {\n    windowAddEventListener?: Function;\n    windowRemoveEventListener?: Function;\n    documentAddEventListener?: Function;\n    documentRemoveEventListener?: Function;\n    videoAddEventListener?: Function;\n    videoRemoveEventListener?: Function;\n}\n\nexport const enum STREAMING_STATE {\n    RECONNECTING = \"reconnecting\",\n    RECONNECTED = \"reconnected\"\n}\n\nexport const enum RNotificationCode {\n    Unknown = 0,\n    ApproachingEntitlementTimeout = 1,\n    ApproachingIdleTimeout = 2,\n    ApproachingSessionMaxTimeLimit = 3,\n    ClearUserIdleTimeOut = 4\n}\n\nexport declare interface StreamingState {\n    state: string;\n}\n\nexport declare interface StreamingWarnings {\n    code: number; //RNotificationCode\n    secondsLeft?: number;\n}\n\n/** Event generated for EVENTS.STREAMING_EVENT*/\nexport declare interface StreamingEvent {\n    streamingState?: StreamingState;\n    streamingWarnings?: StreamingWarnings;\n}\n\n/**\n * In-stream stat overlay event\n */\nexport declare interface StreamUpdateEvent {\n    /** Average game FPS */\n    avgGameFps: number;\n    /** Streaming FPS */\n    fps: number;\n    /** Round trip delay (ms) */\n    rtd: number;\n    /** Average decode cost (ms) */\n    avgDecodeTime: number;\n    /** Total frame loss */\n    frameLoss: number;\n    /** Total packet loss */\n    packetLoss: number;\n    /** Available bandwidth (Mbps) */\n    totalBandwidth: number;\n    /** Utilized bandwidth (%) */\n    utilizedBandwidth: number;\n    /** Streaming resolution */\n    streamingResolution: StreamingResolution;\n}\n\n/** InitParams object structure used to initialize GridApp class object for streaming purpose\n * Consider all fields mandatory for production.\n */\nexport declare interface InitParams {\n    /** clientIdentification like GFN-PC will probably change in future*/\n    clientIdentification?: string;\n    /**Version of this client */\n    clientVersion?: string;\n    /**Version of the client application */\n    clientAppVersion?: string;\n    /**indicates the deviceHashId */\n    deviceHashId?: string;\n    /**indicates the zone to connect to */\n    serverAddress: string;\n    /**  This function should return a promise and should be resolved when the client gets the auth/delegate token.\n         resolve(authtoken) else reject().*/\n    authTokenCallback?: authTokenCallbackType;\n    /** Used to give callback to client in case tab is closed during streaming */\n    clientShutDownCallback?: clientShutDownCallbackType;\n    /** Tag of an input field that should be listened to for input, main use case is for TVs' software keyboards */\n    textInputElement?: HTMLInputElement;\n    /** Map representing application provided client headers.  If key is one of the default headers, value of header is overriden.\n     * New headers are added as new headers. */\n    clientHeaders?: Map<string, string>;\n    /** Indicates client type.\n     * See gridserver-core/src/interfaces.ts for definition.\n     * If none is provided, ClientType.BROWSER will be used */\n    clientType?: ClientType;\n    /** Registered client ID for this client */\n    clientId?: string;\n}\n\nexport declare interface StreamingQuality {\n    qualityScore: number;\n    bandwidthScore: number;\n    networkLossScore: number;\n    latencyScore: number;\n}\n\n/**\n * State of mic\n */\nexport const enum MicState {\n    /** Not initialized yet, call startMicCaptureOnDefaultDevice() */\n    UNINITIALIZED,\n    /** Permission is not granted yet by user (may be in progress) */\n    PERMISSION_PENDING,\n    /** User denied permission from popup (requires page refresh, browser side limitation) */\n    PERMISSION_DENIED,\n    /** Mic capture has started */\n    STARTED,\n    /** No suitable devices present (eg, all mics are unplugged).\n        Note: This currently adds an handler which will start mic if a new\n        device is seen, hence start should not be called */\n    NO_SUITABLE_DEVICE,\n    /** Permission has been granted by user, but mic capture is not active (not started/stopped) */\n    STOPPED,\n    /** Not supported (eg, on http) */\n    UNSUPPORTED,\n    /** Generic error condition */\n    ERROR\n}\n\n/**\n * Event data returned by mic\n */\nexport declare interface MicStateEvent {\n    state: MicState;\n}\n\n/**\n *This is the base interface for any custom message sent.\n *Based on messageType, processor will know what to do with the data payload\n */\nexport declare interface CustomMessage {\n    messageType: string; // Type of this message\n    messageRecipient?: string; // Recipient module\n    data?: string; // Optional data associated with this message\n}\n\n/** Event generated for EVENTS.TEXT_COMPOSITION */\nexport declare interface TextCompositionEvent {\n    compositionText: string; // The updated text while the compisition is underway\n    imeRecommendation?: boolean; // Set to true when non-ascii input is detected. Clients should bring up an IME editior and handle the inputs\n}\n\n/**\n * Types of user inputs\n */\nexport declare const enum InputType {\n    None = 0,\n    Mouse = 1,\n    Keyboard = 2,\n    Gamepad = 4,\n    Touch = 8,\n    All = Mouse | Keyboard | Gamepad | Touch\n}\n\n/**\n * Browser features used during gamestreaming that may not be supported on all devices\n */\nexport declare const enum BrowserFeature {\n    /** minimal feature set for gamestreaming */\n    Streaming\n}\n","// Interfaces in this file are only used by ragnarok library.\nimport { AppLaunchMode, IEventEmitter, StreamInfo } from \"./dependencies\";\nimport { MicState, StartSessionResultEvent, StreamingTerminatedEvent } from \"./interfaces\";\nimport { RErrorCode } from \"./rerrorcode\";\n\nexport class AckIdGenerator {\n    private ackId: number = 1;\n    constructor() {}\n    public getNextAckId(): number {\n        return this.ackId++;\n    }\n}\n\nexport declare interface WebSocketMsg {\n    peer_info?: { id: number; name: string };\n    peer_msg?: { from: number; to: number; msg: string };\n    ackid?: number; // id of msg which needs acknowledgement. Its presence indicates it needs acknowledgement\n    ack?: number; // acknowledgement of received msg\n    hb?: number; // heartbeat msg from server to client\n    stats?: ArrayBuffer;\n    error?: string;\n}\n\nexport interface BoundaryPair {\n    horizontal: number;\n    vertical: number;\n}\n\nexport interface ExtendedDebugStats {\n    isVideoElementPaused: boolean;\n    isAudioElementPaused: boolean;\n    isUserInputEnabled: boolean;\n    isVirtualKeyboardVisible: boolean;\n    micState: MicState;\n    isRsdmmActive: boolean;\n    keyboardLayout: string;\n    appLaunchMode: AppLaunchMode;\n    inputMode: string;\n}\n\nexport declare interface StatsHeader {\n    stats: { from: number; to: number };\n    ackid?: number;\n}\n\n// @todo https://github.com/angular/tsickle/issues/1067 IStreamCallbacks interface (extends) is WAR for\n// broken & in tsickle closure. We should rather have used (IStreamCallbacks & IEventEmitter) in constructor for parent\nexport interface IStreamCallbacks extends IEventEmitter {\n    onSessionStart(data: StartSessionResultEvent): void;\n    onStreamStop(data: StreamingTerminatedEvent): void;\n    onUserIdleClear(): void;\n}\n\nexport declare interface WebSocketClose {\n    error: boolean;\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\nexport declare interface WorkerResponse {\n    statsStarted?: boolean;\n    log?: string;\n    exception?: string;\n    wsClose?: WebSocketClose;\n    wsMessage?: WebSocketMsg;\n    wsOpening?: boolean;\n    wsOpen?: boolean;\n}\n\nexport interface LogCallbackType {\n    (msg: string): void;\n}\n\nexport interface WebSocketHandler {\n    messageHandler: (data: WebSocketMsg) => void;\n    closeHandler: (data: WebSocketClose) => void;\n    openingHandler: () => void;\n    openHandler: () => void;\n}\n\nexport interface LogCallbacks {\n    info: LogCallbackType;\n    exception: LogCallbackType;\n}\n\nexport interface WebSocketImplCallbacks {\n    wsHandler: WebSocketHandler;\n    logCallback: LogCallbacks;\n}\n\n/**\n * Video Stream progress reported by server on the control channel.\n * Provides the client with more granular details when reporting exit codes.\n */\nexport const enum VideoStreamProgress {\n    NO_INFO = 0x00,\n    SETUP_BEGIN = 0x01,\n    SETUP_END = 0x02,\n    ADAPTER_INIT_BEGIN = 0x03,\n    ADAPTER_INIT_END = 0x04,\n    FRAMEPROVIDER_INIT_BEGIN = 0x05,\n    FRAMERPROVIDER_INIT_END = 0x06,\n    ENCODER_INIT_BEGIN = 0x07,\n    ENCODER_INIT_END = 0x08\n}\n\nexport const enum LowAudioVolumeType {\n    PERMISSION_DENIED = \"permissionDenied\",\n    VISIBILITY_CHANGE = \"visibilityChange\",\n    DEVICE_CHANGE = \"deviceChange\"\n}\n\nexport interface StaticStreamStats {\n    zoneName: string;\n    clientAppVersion: string;\n    appId: number;\n    requestedRegion: string;\n    gpuType: string;\n    streamInfo: StreamInfo;\n    clientLocale: string;\n}\n\nexport interface VideoState {\n    displayVideoWidth: number; // Width of video on display, in CSS pixels\n    displayVideoHeight: number; // Height of video on display, in CSS pixels\n    scalingFactor: number;\n    topPadding: number;\n    leftPadding: number;\n    videoWidth: number; // Width of video sent\n    videoHeight: number; // Height of video sent\n    viewportHeight: number;\n    offsetX: number;\n    offsetY: number;\n    zoomFactor: number;\n}\n\nexport interface DataChannelParams {\n    // If specified, the error code to report when the channel closes with an error.\n    // Also determines whether streaming will wait to start until this channel is open and stop if this channel closes\n    errorCode?: RErrorCode;\n    // Custom open handler\n    open?: () => void;\n    // Custom close handler\n    close?: () => void;\n}\n","import { GetHexString, Log } from \"../dependencies\";\nimport { RErrorCode } from \"../rerrorcode\";\nimport { RNotificationCode } from \"../interfaces\";\n\nconst LOGTAG = \"serverclienterrormap\";\n\nexport declare interface ExitMessage {\n    code?: number;\n    nvstResult?: number;\n    stopData?: string;\n}\n\n//We should find a way to auto generate this. We might have a new set in future for NvRtc not same as nvstreamer.\nconst TerminationReason = {\n    SERVER_TERMINATED_INTENDED: 0x0100,\n    SERVER_TERMINATED_HOTKEY: 0x0101,\n    SERVER_TERMINATED_USER_LOGGED_IN_DIFFERENT_ACCOUNT: 0x0102,\n    SERVER_TERMINATED_WINDOWED_MODE: 0x0103,\n    SERVER_TERMINATED_USER_IDLE: 0x0104,\n    SERVER_TERMINATED_UNAUTHORIZED_PROCESS_DETECTED: 0x0105,\n    SERVER_TERMINATED_MALICIOUS_PROCESS_DETECTED: 0x0106,\n    SERVER_TERMINATED_UNKNOWN_PROCESS_DETECTED: 0x0107,\n    SERVER_TERMINATED_MINER_PROCESS_DETECTED: 0x0108,\n    SERVER_TERMINATED_STREAMING_UNSUPPORTED: 0x0109,\n    SERVER_TERMINATED_ANOTHER_CLIENT: 0x010a,\n    SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION: 0x010b,\n    SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED: 0x010c,\n    PM_TERMINATED_UNKNOWN_FROM_PM: 0x0200,\n    PM_TERMINATED_USER_ENTITLED_MINUTES_EXCEEDED: 0x0201,\n    PM_TERMINATED_CLIENT_RECONNECT_TIME_LIMIT_EXCEEDED: 0x0202,\n    PM_TERMINATED_OPERATOR_COMMANDED_TERMINATION: 0x0203,\n    PM_TERMINATED_CONCURRENT_SESSION_LIMIT_EXCEEDED: 0x0204,\n    PM_TERMINATED_MAX_SESSION_TIME_LIMIT_EXCEEDED: 0x0205,\n    PM_TERMINATED_BIFROST_INITIATED_SESSION_PAUSE: 0x0206,\n    PM_TERMINATED_SYSTEM_COMMANDED_TERMINATION: 0x0207,\n    PM_TERMINATED_MULTIPLE_LOGIN: 0x0208,\n    PM_TERMINATED_MAINTENANCE_MODE: 0x0209,\n    CTMT_TERMINATED_USER_OWNERSHIP_ERROR: 0x0300,\n    SERVER_TERMINATED_NO_RESPONSE: 0x8101,\n    SERVER_TERMINATED_REMOTE_INPUT_ERROR: 0x8102,\n    SERVER_TERMINATED_FRAME_GRAB_FAILED: 0x8103,\n    SERVER_TERMINATED_CONFIG_UNAVAILABLE: 0x8104,\n    SERVER_TERMINATED_INVALID_COMMAND: 0x8105,\n    SERVER_TERMINATED_INVALID_MOUSE_STATE: 0x8106,\n    SERVER_TERMINATED_NETWORK_ERROR: 0x8107,\n    SERVER_TERMINATED_GAME_LAUNCH_FAILED: 0x8108,\n    SERVER_TERMINATED_VIDEO_FIRST_FRAME_SEND_FAILED: 0x810a,\n    SERVER_TERMINATED_VIDEO_NEXT_FRAME_SEND_FAILED: 0x810b,\n    SERVER_TERMINATED_FRAME_GRAB_TIMEOUT: 0x8110,\n    SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT: 0x8111,\n    SERVER_TERMINATED_FRAME_SEND_TIMEOUT: 0x8112,\n    SERVER_TERMINATED_VFP_PROTECTED_CONTENT: 0x9302,\n\n    CLIENT_DISCONNECT_END_SESSION: 0x0000,\n    CLIENT_DISCONNECT_KEEP_SESSION_ALIVE: 0x0001,\n    SESSION_TRU_CLIENT_FIRST: 0x8000,\n    CLIENT_TIMED_OUT: 0x8000,\n    CLIENT_DISCONNECT_UNINTENDED: 0x8001,\n    CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_FRAMES_LOSSY_NETWORK: 0x8002,\n    CLIENT_DISCONNECT_UNINTENDED_NO_SERVER_HEART_BEAT: 0x8003,\n    CLIENT_DISCONNECT_UNINTENDED_CONTROL_SOCKET_ERROR: 0x8004,\n    CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_PACKETS_EVER: 0x8005,\n    CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_PACKETS_RECENTLY: 0x8006,\n    CLIENT_DISCONNECT_UNINTENDED_NO_RTP_PING: 0x8007,\n    CLIENT_DISCONNECT_UNINTENDED_STUN_FAILED: 0x8008\n};\n\n// This list is the intersection of codes used on the server and codes that have corresponding RErrorCodes\nconst NvstResult = {\n    NVST_DISCONN_INTENDED: 0x80030000,\n    NVST_DISCONN_HOTKEY: 0x80030001,\n    NVST_DISCONN_TIMEOUT: 0x80030002,\n    NVST_DISCONN_LAUNCH_FAILED: 0x80030003,\n    NVST_DISCONN_USER_CHANGED: 0x80030004,\n    NVST_DISCONN_WINDOWED_MODE: 0x80030006,\n    NVST_DISCONN_USER_IDLE: 0x80030007,\n    NVST_DISCONN_UNKNOWN_FROM_PM: 0x80030008,\n    NVST_DISCONN_USER_ENTITLEMENT_TIMEOUT: 0x80030009,\n    NVST_DISCONN_CLIENT_RECONNECT_TIMEOUT: 0x8003000a,\n    NVST_DISCONN_OPERATOR_COMMANDED_TERMINATION: 0x8003000b,\n    NVST_DISCONN_MAX_SESSION_TIME_LIMIT: 0x8003000c,\n    NVST_DISCONN_MAX_CONCURRENT_SESSION_LIMIT: 0x8003000d,\n    NVST_DISCONN_BIFROST_INITIATED_SESSION_PAUSE: 0x8003000e,\n    NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_FAILED: 0x8003000f,\n    NVST_DISCONN_PM_COMMANDED_TERMINATION: 0x80030013,\n    NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNAUTHORIZED_PROCESS: 0x80030015,\n    NVST_DISCONN_SERVER_TERMINATED_MULTIPLE_LOGIN: 0x80030016,\n    NVST_DISCONN_SERVER_TERMINATED_INTENDED_MALICIOUS_PROCESS: 0x80030017,\n    NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNKNOWN_PROCESS: 0x80030018,\n    NVST_DISCONN_SERVER_TERMINATED_INTENDED_MINER_PROCESS: 0x80030019,\n    NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_TIMEOUT: 0x8003001b,\n    NVST_DISCONN_SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT: 0x8003001c,\n    NVST_DISCONN_SERVER_TERMINATED_FRAME_SEND_TIMEOUT: 0x8003001d,\n    NVST_DISCONN_SERVER_TERMINATED_ANOTHER_CLIENT: 0x8003001e,\n    NVST_DISCONN_SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION: 0x8003001f,\n    NVST_DISCONN_SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED: 0x80030020,\n    NVST_DISCONN_SERVER_VFP_PROTECTED_CONTENT: 0x800e9302,\n    NVST_DISCONN_SERVER_TERMINATED_CLOSED: 0x80030023,\n    NVST_NETERR_CONNLOST: 0x80040002,\n    NVST_NETERR_CLIENT_TIMED_OUT: 0x80040004,\n    NVST_NETERR_CLIENT_DISCONNECT_UNINTENDED: 0x80040005,\n    NVST_NETERR_SERVER_TERMINATED_UNINTENDED: 0x8004000b,\n    NVST_NETERR_SERVER_TERMINATED_REMOTE_INPUT_ERROR: 0x8004000c,\n    NVST_NETERR_SERVER_TERMINATED_CONFIG_UNAVAILABLE: 0x8004000d,\n    NVST_NETERR_SERVER_TERMINATED_INVALID_COMMAND: 0x8004000e,\n    NVST_NETERR_SERVER_TERMINATED_INVALID_MOUSE_STATE: 0x8004000f\n};\n\nconst TimerNotificationServerCode = {\n    UNKNOWN: 0x0000,\n    ENTITLEMENT_WARNING_1: 0x0001,\n    ENTITLEMENT_WARNING_2: 0x0002,\n    ENTITLEMENT_FINAL: 0x0003,\n    USER_INPUT_IDLE_WARNING: 0x0004,\n    USER_INPUT_IDLE_FINAL: 0x0005,\n    MAX_USAGE_LIMIT_WARNING: 0x0006,\n    MAX_USAGE_LIMIT_FINAL: 0x0007,\n    MAX_CONCURRENT_SESSION_LIMIT: 0x0008\n};\n\nexport function getRNotificationCode(serverCode: number) {\n    let clientTimerNotificationCode = RNotificationCode.Unknown;\n    //Ignore final events as they are terminal and client will get stopevent\n    Log.d(\"{c00be32}\", \"{44bd2b6}\", serverCode);\n    switch (serverCode) {\n        case TimerNotificationServerCode.ENTITLEMENT_WARNING_1:\n        case TimerNotificationServerCode.ENTITLEMENT_WARNING_2:\n            clientTimerNotificationCode = RNotificationCode.ApproachingEntitlementTimeout;\n            break;\n        case TimerNotificationServerCode.ENTITLEMENT_FINAL: //ignore\n            break;\n        case TimerNotificationServerCode.USER_INPUT_IDLE_WARNING:\n            clientTimerNotificationCode = RNotificationCode.ApproachingIdleTimeout;\n            break;\n        case TimerNotificationServerCode.USER_INPUT_IDLE_FINAL: //ignore\n            break;\n        case TimerNotificationServerCode.MAX_USAGE_LIMIT_WARNING:\n            clientTimerNotificationCode = RNotificationCode.ApproachingSessionMaxTimeLimit;\n            break;\n        case TimerNotificationServerCode.MAX_USAGE_LIMIT_FINAL: //ignore\n        case TimerNotificationServerCode.MAX_CONCURRENT_SESSION_LIMIT: //ignore\n            break;\n    }\n    return clientTimerNotificationCode;\n}\n\nexport function getClientTerminationReason(err: number) {\n    if ((err ^ RErrorCode.StreamDisconnectedFromServer) >> 8 == 0) {\n        return TerminationReason.SERVER_TERMINATED_INTENDED;\n    }\n    let clientTerminationReason = TerminationReason.CLIENT_DISCONNECT_UNINTENDED;\n    switch (err) {\n        case RErrorCode.Success:\n        case RErrorCode.SystemSleepDuringStreaming:\n        case RErrorCode.NoInternetDuringStreaming:\n            clientTerminationReason = TerminationReason.CLIENT_DISCONNECT_END_SESSION;\n            break;\n        case RErrorCode.StreamerIceConnectionFailed:\n        case RErrorCode.StreamerReConnectionFailed:\n            clientTerminationReason = TerminationReason.CLIENT_DISCONNECT_UNINTENDED_STUN_FAILED;\n            break;\n        case RErrorCode.StreamControlChannelError:\n            clientTerminationReason =\n                TerminationReason.CLIENT_DISCONNECT_UNINTENDED_CONTROL_SOCKET_ERROR;\n            break;\n        case RErrorCode.StreamerNoVideoPacketsReceivedEver:\n            clientTerminationReason =\n                TerminationReason.CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_PACKETS_EVER;\n            break;\n        case RErrorCode.StreamerNoVideoFramesLossyNetwork:\n            clientTerminationReason =\n                TerminationReason.CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_FRAMES_LOSSY_NETWORK;\n            break;\n        case RErrorCode.PauseSession:\n            clientTerminationReason = TerminationReason.CLIENT_DISCONNECT_KEEP_SESSION_ALIVE;\n            break;\n        default:\n            Log.d(\"{c00be32}\", \"{233ad08}\", GetHexString(err));\n    }\n    return clientTerminationReason;\n}\n\nexport function getRErrorCodeForExitMessage(exitMessage: ExitMessage): number {\n    if (exitMessage.stopData) {\n        const reason = getStopDataReason(exitMessage.stopData);\n        if (reason) {\n            Log.d(\"{c00be32}\", \"{921626d}\", reason);\n            return getRErrorCode(reason);\n        }\n    }\n\n    if (exitMessage.nvstResult) {\n        Log.d(\"{c00be32}\", \"{f30bc33}\", exitMessage.nvstResult);\n        return getRErrorCodeForNvstResult(exitMessage.nvstResult);\n    } else if (exitMessage.code) {\n        Log.d(\"{c00be32}\", \"{6210ab0}\", exitMessage.code);\n        return getRErrorCode(exitMessage.code);\n    }\n    return RErrorCode.StreamDisconnectedFromServer;\n}\n\nexport function getRErrorCode(serverErr: number): number {\n    let clientErr = RErrorCode.StreamDisconnectedFromServer;\n    switch (serverErr) {\n        case TerminationReason.SERVER_TERMINATED_INTENDED:\n            clientErr = RErrorCode.ServerDisconnectedIntended;\n            break;\n        case TerminationReason.SERVER_TERMINATED_HOTKEY:\n            clientErr = RErrorCode.ServerDisconnectedHotKey;\n            break;\n        case TerminationReason.SERVER_TERMINATED_USER_LOGGED_IN_DIFFERENT_ACCOUNT:\n            clientErr = RErrorCode.ServerDisconnecteduserLoggedinDifferenAccount;\n            break;\n        case TerminationReason.SERVER_TERMINATED_WINDOWED_MODE:\n            clientErr = RErrorCode.ServerDisconnectedWindowedMode;\n            break;\n        case TerminationReason.SERVER_TERMINATED_USER_IDLE:\n            clientErr = RErrorCode.ServerDisconnectedUserIdle;\n            break;\n        case TerminationReason.SERVER_TERMINATED_UNAUTHORIZED_PROCESS_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedUnAuthorizedProcessDetected;\n            break;\n        case TerminationReason.SERVER_TERMINATED_MALICIOUS_PROCESS_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedMaliciousProcessDetected;\n            break;\n        case TerminationReason.SERVER_TERMINATED_UNKNOWN_PROCESS_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedUnKnownProcessDetected;\n            break;\n        case TerminationReason.SERVER_TERMINATED_MINER_PROCESS_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedMinerProcessDetected;\n            break;\n        case TerminationReason.SERVER_TERMINATED_STREAMING_UNSUPPORTED:\n            clientErr = RErrorCode.ServerDisconnectedStreamingUnsupported;\n            break;\n        case TerminationReason.SERVER_TERMINATED_ANOTHER_CLIENT:\n            clientErr = RErrorCode.ServerDisconnectedAnotherClient;\n            break;\n        case TerminationReason.SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION:\n            clientErr = RErrorCode.ServerDisconnectedCodeIntegrityViolation;\n            break;\n        case TerminationReason.SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedUnauthorizedActivityDetected;\n            break;\n        case TerminationReason.PM_TERMINATED_UNKNOWN_FROM_PM:\n            clientErr = RErrorCode.ServerDisconnectedUnknownFromPm;\n            break;\n        case TerminationReason.PM_TERMINATED_USER_ENTITLED_MINUTES_EXCEEDED:\n            clientErr = RErrorCode.ServerDisconnectedUserEntitledMinutesExceeded;\n            break;\n        case TerminationReason.PM_TERMINATED_CLIENT_RECONNECT_TIME_LIMIT_EXCEEDED:\n            clientErr = RErrorCode.ServerDisconnectedClientReconnectTimeLimitExceeded;\n            break;\n        case TerminationReason.PM_TERMINATED_OPERATOR_COMMANDED_TERMINATION:\n            clientErr = RErrorCode.ServerDisconnectedOperatorCommandedTermination;\n            break;\n        case TerminationReason.PM_TERMINATED_CONCURRENT_SESSION_LIMIT_EXCEEDED:\n            clientErr = RErrorCode.ServerDisconnectedConcurrentSessionLimitExceeded;\n            break;\n        case TerminationReason.PM_TERMINATED_MAX_SESSION_TIME_LIMIT_EXCEEDED:\n            clientErr = RErrorCode.ServerDisconnectedMaxSessionTimeLimitExceeded;\n            break;\n        case TerminationReason.PM_TERMINATED_BIFROST_INITIATED_SESSION_PAUSE:\n            clientErr = RErrorCode.ServerDisconnectedBifrostInitiatedSessionPause;\n            break;\n        case TerminationReason.PM_TERMINATED_SYSTEM_COMMANDED_TERMINATION:\n            clientErr = RErrorCode.ServerDisconnectedSystemCommandTermination;\n            break;\n        case TerminationReason.PM_TERMINATED_MULTIPLE_LOGIN:\n            clientErr = RErrorCode.ServerDisconnectedMultipleLogin;\n            break;\n        case TerminationReason.PM_TERMINATED_MAINTENANCE_MODE:\n            clientErr = RErrorCode.ServerDisconnectedMaintenanceMode;\n            break;\n        case TerminationReason.SERVER_TERMINATED_NO_RESPONSE:\n            clientErr = RErrorCode.ServerDisconnectedNoResponce;\n            break;\n        case TerminationReason.SERVER_TERMINATED_REMOTE_INPUT_ERROR:\n            clientErr = RErrorCode.ServerDisconnectedRemoteInputError;\n            break;\n        case TerminationReason.SERVER_TERMINATED_FRAME_GRAB_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedFrameGrabFailed;\n            break;\n        case TerminationReason.SERVER_TERMINATED_CONFIG_UNAVAILABLE:\n            clientErr = RErrorCode.ServerDisconnectedConfigUnAvailable;\n            break;\n        case TerminationReason.SERVER_TERMINATED_INVALID_COMMAND:\n            clientErr = RErrorCode.ServerDisconnectedInvalidCommand;\n            break;\n        case TerminationReason.SERVER_TERMINATED_INVALID_MOUSE_STATE:\n            clientErr = RErrorCode.ServerDisconnectedInvalidMouseState;\n            break;\n        case TerminationReason.SERVER_TERMINATED_NETWORK_ERROR:\n            clientErr = RErrorCode.ServerDisconnectedNetworkError;\n            break;\n        case TerminationReason.SERVER_TERMINATED_GAME_LAUNCH_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedGameLaunchFailed;\n            break;\n        case TerminationReason.SERVER_TERMINATED_VIDEO_FIRST_FRAME_SEND_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedVideoFirstFrameSendFailed;\n            break;\n        case TerminationReason.SERVER_TERMINATED_VIDEO_NEXT_FRAME_SEND_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedVideoNextFrameSendFailed;\n            break;\n        case TerminationReason.SERVER_TERMINATED_FRAME_GRAB_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameGrabTimedOut;\n            break;\n        case TerminationReason.SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameEncodeTimedOut;\n            break;\n        case TerminationReason.SERVER_TERMINATED_FRAME_SEND_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameSendTimedOut;\n            break;\n        case TerminationReason.SERVER_TERMINATED_VFP_PROTECTED_CONTENT:\n            clientErr = RErrorCode.ServerDisconnectedProtectedContent;\n            break;\n        case TerminationReason.CLIENT_TIMED_OUT:\n            clientErr = RErrorCode.ServerDisconnectedNetworkTimedOut;\n            break;\n        case TerminationReason.CTMT_TERMINATED_USER_OWNERSHIP_ERROR:\n            clientErr = RErrorCode.ServerDisconnectedGameNotOwnedByUser;\n            break;\n        default:\n            Log.d(\"{c00be32}\", \"{1be40ed}\", GetHexString(serverErr));\n            break;\n    }\n    return clientErr;\n}\n\nexport function getRErrorCodeForNvstResult(nvstResult: number): number {\n    let clientErr = RErrorCode.StreamDisconnectedFromServer;\n    switch (nvstResult) {\n        case NvstResult.NVST_DISCONN_INTENDED:\n            clientErr = RErrorCode.ServerDisconnectedIntended;\n            break;\n        case NvstResult.NVST_DISCONN_HOTKEY:\n            clientErr = RErrorCode.ServerDisconnectedHotKey;\n            break;\n        case NvstResult.NVST_DISCONN_TIMEOUT:\n            clientErr = RErrorCode.ServerInternalTimeout;\n            break;\n        case NvstResult.NVST_DISCONN_LAUNCH_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedGameLaunchFailed;\n            break;\n        case NvstResult.NVST_DISCONN_USER_CHANGED:\n            clientErr = RErrorCode.ServerDisconnecteduserLoggedinDifferenAccount;\n            break;\n        case NvstResult.NVST_DISCONN_WINDOWED_MODE:\n            clientErr = RErrorCode.ServerDisconnectedWindowedMode;\n            break;\n        case NvstResult.NVST_DISCONN_USER_IDLE:\n            clientErr = RErrorCode.ServerDisconnectedUserIdle;\n            break;\n        case NvstResult.NVST_DISCONN_UNKNOWN_FROM_PM:\n            clientErr = RErrorCode.ServerDisconnectedUnknownFromPm;\n            break;\n        case NvstResult.NVST_DISCONN_USER_ENTITLEMENT_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedUserEntitledMinutesExceeded;\n            break;\n        case NvstResult.NVST_DISCONN_CLIENT_RECONNECT_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedClientReconnectTimeLimitExceeded;\n            break;\n        case NvstResult.NVST_DISCONN_OPERATOR_COMMANDED_TERMINATION:\n            clientErr = RErrorCode.ServerDisconnectedOperatorCommandedTermination;\n            break;\n        case NvstResult.NVST_DISCONN_MAX_SESSION_TIME_LIMIT:\n            clientErr = RErrorCode.ServerDisconnectedMaxSessionTimeLimitExceeded;\n            break;\n        case NvstResult.NVST_DISCONN_MAX_CONCURRENT_SESSION_LIMIT:\n            clientErr = RErrorCode.ServerDisconnectedConcurrentSessionLimitExceeded;\n            break;\n        case NvstResult.NVST_DISCONN_BIFROST_INITIATED_SESSION_PAUSE:\n            clientErr = RErrorCode.ServerDisconnectedBifrostInitiatedSessionPause;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_FAILED:\n            clientErr = RErrorCode.ServerDisconnectedFrameGrabFailed;\n            break;\n        case NvstResult.NVST_DISCONN_PM_COMMANDED_TERMINATION:\n            clientErr = RErrorCode.ServerDisconnectedSystemCommandTermination;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNAUTHORIZED_PROCESS:\n            clientErr = RErrorCode.ServerDisconnectedUnAuthorizedProcessDetected;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_MULTIPLE_LOGIN:\n            clientErr = RErrorCode.ServerDisconnectedMultipleLogin;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_INTENDED_MALICIOUS_PROCESS:\n            clientErr = RErrorCode.ServerDisconnectedMaliciousProcessDetected;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNKNOWN_PROCESS:\n            clientErr = RErrorCode.ServerDisconnectedUnKnownProcessDetected;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_INTENDED_MINER_PROCESS:\n            clientErr = RErrorCode.ServerDisconnectedMinerProcessDetected;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameGrabTimedOut;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameEncodeTimedOut;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_FRAME_SEND_TIMEOUT:\n            clientErr = RErrorCode.ServerDisconnectedFrameSendTimedOut;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_ANOTHER_CLIENT:\n            clientErr = RErrorCode.SessionTerminatedByAnotherClient;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION:\n            clientErr = RErrorCode.ServerDisconnectedCodeIntegrityViolation;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED:\n            clientErr = RErrorCode.ServerDisconnectedUnauthorizedActivityDetected;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_TERMINATED_CLOSED:\n            clientErr = RErrorCode.ServerDisconnectedIntended;\n            break;\n        case NvstResult.NVST_NETERR_CONNLOST:\n            clientErr = RErrorCode.StreamerNetworkError;\n            break;\n        case NvstResult.NVST_NETERR_CLIENT_TIMED_OUT:\n            clientErr = RErrorCode.ServerDisconnectedNetworkTimedOut;\n            break;\n        case NvstResult.NVST_NETERR_CLIENT_DISCONNECT_UNINTENDED:\n            clientErr = RErrorCode.StreamerNetworkError;\n            break;\n        case NvstResult.NVST_NETERR_SERVER_TERMINATED_UNINTENDED:\n            clientErr = RErrorCode.StreamerNetworkError;\n            break;\n        case NvstResult.NVST_NETERR_SERVER_TERMINATED_REMOTE_INPUT_ERROR:\n            clientErr = RErrorCode.ServerDisconnectedRemoteInputError;\n            break;\n        case NvstResult.NVST_NETERR_SERVER_TERMINATED_CONFIG_UNAVAILABLE:\n            clientErr = RErrorCode.ServerDisconnectedConfigUnAvailable;\n            break;\n        case NvstResult.NVST_NETERR_SERVER_TERMINATED_INVALID_COMMAND:\n            clientErr = RErrorCode.ServerDisconnectedInvalidCommand;\n            break;\n        case NvstResult.NVST_NETERR_SERVER_TERMINATED_INVALID_MOUSE_STATE:\n            clientErr = RErrorCode.ServerDisconnectedInvalidMouseState;\n            break;\n        case NvstResult.NVST_DISCONN_SERVER_VFP_PROTECTED_CONTENT:\n            clientErr = RErrorCode.ServerDisconnectedProtectedContent;\n            break;\n        default:\n            Log.d(\"{c00be32}\", \"{094c45e}\", GetHexString(nvstResult));\n            break;\n    }\n    return clientErr;\n}\n\nfunction getStopDataReason(b64StopData: string): number | null {\n    // See P4 for a description of how this is serialized:\n    // Mjolnir/StreamSdk/helpers/shutdown/StreamerShutdownData.h\n    const enum SsdType {\n        SESSION_TERMINATION_REASON = 0,\n        BLOB = 1 // Currently unused\n    }\n\n    if (b64StopData.length < 2) {\n        return null;\n    }\n    const stopData = atob(b64StopData);\n    let offset = 0;\n    // Reads a 16-bit big-endian integer from stopData, incrementing the offset by 2 bytes.\n    const read16 = (): number => {\n        const result = stopData.charCodeAt(offset) * 0x100 + stopData.charCodeAt(offset + 1);\n        offset += 2;\n        return result;\n    };\n    // First 2 bytes is a type. We only care about SESSION_TERMINATION_REASON\n    // because that's the only one actually sent.\n    const type = read16();\n    if (type == SsdType.SESSION_TERMINATION_REASON) {\n        // For SESSION_TERMINATION_REASON, the next 2 bytes are the termination reason.\n        if (b64StopData.length < offset + 2) {\n            return null;\n        }\n        return read16();\n    }\n    return null;\n}\n","import { IsiDevice, PlatformDetails } from \"../dependencies\";\nimport { InputMediaElement } from \"../input/inputinterfaces\";\n\nconst LATENCY_INDICATOR_ID = \"ragnarok-latency-indicator\";\n\nexport class LatencyIndicator {\n    private indicatorElement?: HTMLCanvasElement;\n    private indicatorContext: WebGLRenderingContext | null = null;\n    private currentColor: string = \"\";\n    private platformDetails: PlatformDetails | undefined;\n\n    private static singleton: LatencyIndicator;\n\n    private constructor() {}\n\n    public static getInstance(): LatencyIndicator {\n        if (!LatencyIndicator.singleton) {\n            LatencyIndicator.singleton = new LatencyIndicator();\n        }\n\n        return LatencyIndicator.singleton;\n    }\n\n    public initialize(videoElement: InputMediaElement, platformDetails: PlatformDetails) {\n        this.platformDetails = platformDetails;\n        this.indicatorElement = this.createLatencyIndicator(videoElement);\n        this.indicatorElement.style.display = \"block\";\n        this.indicatorContext = this.indicatorElement.getContext(\"webgl\");\n        this.toggleIndicator();\n    }\n\n    public toggleIndicator() {\n        if (this.currentColor === \"white\") {\n            this.renderRed();\n        } else {\n            this.renderWhite();\n        }\n    }\n\n    private createLatencyIndicator(videoElement: InputMediaElement): HTMLCanvasElement {\n        let indicatorId = LATENCY_INDICATOR_ID;\n        let indicator = document.getElementById(indicatorId);\n        if (\n            indicator &&\n            indicator instanceof HTMLCanvasElement &&\n            indicator.parentElement === videoElement.parentElement\n        ) {\n            return indicator;\n        } else {\n            if (indicator) {\n                // Choose new indicator ID\n                do {\n                    indicatorId = LATENCY_INDICATOR_ID + Math.round(Math.random() * 10000);\n                    indicator = document.getElementById(indicatorId);\n                } while (indicator);\n            }\n\n            let newIndicator: HTMLCanvasElement = document.createElement(\"canvas\");\n            newIndicator.id = indicatorId;\n            newIndicator.style.position = \"fixed\";\n            if (IsiDevice(this.platformDetails!)) {\n                newIndicator.style.bottom = \"env(safe-area-inset-bottom, 0)\";\n                newIndicator.style.right = \"max(24px, env(safe-area-inset-right, 0))\";\n            } else {\n                newIndicator.style.bottom = \"0\";\n                newIndicator.style.right = \"0\";\n            }\n            newIndicator.style.width = \"40px\";\n            newIndicator.style.height = \"40px\";\n            newIndicator.style.zIndex = \"300\";\n            newIndicator.style.pointerEvents = \"none\";\n\n            videoElement.insertAdjacentElement(\"afterend\", newIndicator);\n\n            return newIndicator;\n        }\n    }\n\n    private renderWhite() {\n        if (this.indicatorContext) {\n            this.indicatorContext.clearColor(1, 1, 1, 1); // white\n            this.indicatorContext.clear(this.indicatorContext.COLOR_BUFFER_BIT);\n            this.currentColor = \"white\";\n        }\n    }\n\n    private renderRed() {\n        if (this.indicatorContext) {\n            this.indicatorContext.clearColor(1, 0, 0, 1); // red\n            this.indicatorContext.clear(this.indicatorContext.COLOR_BUFFER_BIT);\n            this.currentColor = \"red\";\n        }\n    }\n}\n","/* Note: For public client usage, please skip to RemoteConfigData interface definition. */\nimport {\n    ConfigureGridServerSettings,\n    CommonConfig,\n    AppLaunchMode,\n    RemoteOverrideInfo,\n    OverrideConfigTypeEnum,\n    MetaData,\n    GxtRemoteConfigData,\n    ClientType,\n    Log,\n    DeviceOS,\n    DeviceType,\n    ClientStreamer\n} from \"../dependencies\";\n\nconst LOGTAG = \"ragnaroksettings\";\n\ninterface _RagnarokSettings {\n    ragnarokConfig: RagnarokConfig; // Ragnarok-specific remote config\n    clientConfigOverride: string; // nvscClientConfig override string\n    remoteOverrideInfo: RemoteOverrideInfo; // remote override config details for telemetry\n    leanMode: boolean; // Run ragnarok in limited mode. All the below functionality will be disabled.\n    loggingEnabled: boolean; // Disable log events to client.\n    consoleLoggingEnabled: boolean; // Enable log events to UA console. Requires loggingEnabled.\n    gamepadEnabled: boolean; // Full Gamepad functionality.\n    webrtcStatsEnabled: boolean; // ChromeWebRTC  getStats call.\n    statsUploadEnabled: boolean; // Upload client metrics form worker thread.\n    micEnabled?: boolean; // Mic support during streaming.\n    mouseFilter?: boolean; // Filter mouse events.\n    unadjustedMovement?: boolean; // Force unadjusted movement on or off.\n    maxBitrate: number; // Max bitrate to request. 0 means default.\n    resWidth: number; // Resolution width\n    resHeight: number; // Resolution height\n    gamepadRaf: boolean; // Use requestAnimationFrame() for gamepad update tick.\n    gamepadPollInterval?: number; // Interval between non-rAF ticks for gamepad updates.\n    advancedGestures: boolean; // Enable support for additional gestures, such as scroll, drag, and hold.\n    forceTouchCapable: boolean; // Force detection of the device as touch-capable.\n    touchWarp: boolean; // Warp touches near the top and bottom of the screen to workaround WebKit touch dead zones.\n    storeTouch: boolean; // Store 30 seconds worth of touches for logging whenever input stops.\n    storeTouchGesture: boolean; // Whether to use a gesture to trigger logging of stored touches.\n    latencyTest: boolean; // Show input indicator for latency test.\n    gamepadTesterEnabled: boolean; // Show the Gamepad Tester page from the Query Parameters\n    deviceOs?: DeviceOS; // Device OS for session request. See gridserver-core/interfaces.ts for valid values\n    deviceType?: DeviceType; // Device type for session request. See gridserver-core/interfaces.ts for valid values\n    deviceModel?: string; // Device model for session request\n    clientStreamer?: ClientStreamer; // Client streamer for session request. See gridserver-core/interfaces.ts for valid values\n    clientId?: string; // Client ID for session request. Refers to Client ID registered in LCARS/Chroma for this client.\n    clientPlatformName?: string; // Client platform name for session request. See gridserver-core/interfaces.ts for valid values\n    clientType?: ClientType; // Client type for session request. See gridserver-core/interfaces.ts for valid values\n    appLaunchMode?: number; // App launch mode for session request. See gridserver-core/interfaces.ts for valid values\n    rsdmm: boolean; // Use Right-stick Dynamic Mouse Mode.  Default on.\n    rsdmmThumbstickToggle: boolean; // Allow toggling RSDMM with double-click of right thumbstick\n    allowSourceReset: boolean; // Allow iOS 15.1 blank video on background WAR\n    allowAudioReset: boolean; // Allow iOS 15 audio latency WAR\n    allowAutoplayChange: boolean; // Allow iOS 15 blank video on launch WAR\n    allowEnableMic: boolean; // Allow iOS 15.4 enable mic WAR\n    allowMutingVideo: boolean; // Allow iOS 15.4 mute video element WAR\n    bitsPerPixel?: number; // Coefficient for 1080p and lower bitrate calculation\n    allowSendingTelemetry: boolean; // In test client stream test we disable sending telemetry to stage server.\n    fps: number; // Stream FPS to request.\n    isInternalUser?: boolean; // Whether user is internal user.  Enables all dev feature toggles for internal users.\n    bitsPerPixel1440p?: number; // Coefficient for 1440p and higher bitrate calculation\n    sessionMetaData?: MetaData; // Metadata to send in session request\n    is1440pSupported?: boolean; // Whether or not ragnarok should claim 1440p is supported\n    stutterIndicator?: boolean; // Whether or not to allow toggling the stutter indicators\n    combineStreams?: boolean; // Whether or not to combine separate streams into one media stream\n    allowHaptics?: boolean; // Whether to allow controller haptics.\n    enableAv1Support?: boolean; // Whether to allow AV1 support\n    codecList?: string[]; // list of supported codecs in descending order according to priority\n    hdr?: boolean; // Whether or not to request an HDR stream\n}\n\ndeclare interface RagnarokConfig {\n    mouseCoalesceInterval?: number;\n    connectivityCheckTimeout?: number;\n    signInTimeout?: number;\n    offlineErrorsStreaming?: string[];\n    offlineErrorsSessionSetup?: string[];\n    sleepErrorsStreaming?: string[];\n    sleepErrorsSessionSetup?: string[];\n    nvscClientConfigFields?: string[];\n    gamepadPollInterval?: number;\n    getStatsInterval?: number;\n    getDeprecatedStatsInterval?: number;\n    enableCpm?: boolean;\n    bitsPerPixel?: number;\n    userTerminatedMicRecorderThreshold?: number; // See ragnarok-core/gridapp.ts visibilitychange function for definition\n    bitsPerPixel1440p?: number;\n    combineStreams?: boolean;\n    allowHaptics?: boolean; // Permit controller haptics; allowed by default.\n    codecList?: string[]; // list of supported codecs in descending order according to priority\n    /** Bitwise setting to enable Av1 for specific streaming resolutions and frame rates.  See EnableAv1Config in devicecapabilities.ts.  Note that enableAv1Support takes precedence over this field if specified.*/\n    enableAv1ByResolutionAndFps?: number;\n    enableAv1Support?: boolean; // Allow AV1 for all resolutions.\n    terminateUnhandledException?: boolean; // Whether to terminate stream when encountering unhandled exception; terminates by default\n    sendInsetValueUpdateEvents?: boolean; // Whether to send safe zone InsetValueUpdate client metric events; allowed by default.\n    sendNonEssentialMetricEvents?: boolean; // Whether to send metric events that are considered as non-essential.\n    usePerfNowCaptureTimestamp?: boolean; // Whether to use performance.now() for input capture timestamp; enabled by default on non-Chromium platforms.  If false, use device timestamp.\n}\n\n/* Note: This variable is not meant to be used by public Clients.\n */\nexport let RagnarokSettings: _RagnarokSettings = {\n    ragnarokConfig: {},\n    clientConfigOverride: \"\",\n    remoteOverrideInfo: {\n        type: OverrideConfigTypeEnum.UNKNOWN,\n        version: \"\"\n    },\n    leanMode: false,\n    loggingEnabled: true,\n    consoleLoggingEnabled: false,\n    gamepadEnabled: true,\n    webrtcStatsEnabled: true,\n    statsUploadEnabled: true,\n    maxBitrate: 0,\n    resWidth: 0,\n    resHeight: 0,\n    gamepadRaf: false,\n    advancedGestures: true,\n    forceTouchCapable: false,\n    touchWarp: true,\n    storeTouch: false,\n    storeTouchGesture: false,\n    latencyTest: false,\n    gamepadTesterEnabled: false,\n    rsdmm: true,\n    rsdmmThumbstickToggle: false,\n    allowSourceReset: true,\n    allowAudioReset: true,\n    allowAutoplayChange: true,\n    allowEnableMic: true,\n    allowMutingVideo: true,\n    allowSendingTelemetry: true,\n    fps: 0\n};\n\n/** The GFN specific remote config data fetched from RemoteConfig server */\nexport declare interface RemoteConfigData {\n    /**  common fields for all clients, contains PM communication params etc*/\n    common?: string;\n    /**  ragnarok specific fields */\n    ragnarok?: string;\n    /**  remote config file version */\n    version?: string;\n}\n\n/** Free form Ragnarok library configuration parameter.\n    To be used only by GFN client and internal dev clients. */\nexport declare interface RagnarokConfigData {\n    remoteConfigData?: RemoteConfigData;\n    /* Will be set to a JSON formatted string when the override config is fetched from GXT. Should be mutually exclusive to remoteConfigData*/\n    gxtOverrideData?: string;\n    /* Free form string containing internal override configurations */\n    overrideData?: string;\n    clientConfigOverride?: string;\n    isInternalUser?: boolean;\n}\n\n/** Returns the boolean representation of the associated string */\nfunction toBool(value: string): boolean | undefined {\n    if (value) {\n        switch (value.toLowerCase()) {\n            case \"enable\":\n            case \"on\":\n            case \"1\":\n            case \"true\":\n                return true;\n            case \"disable\":\n            case \"off\":\n            case \"0\":\n            case \"false\":\n                return false;\n        }\n    }\n    return undefined;\n}\n\n/** Returns the integer representation of the associated string */\nfunction toInt(value: string): number | undefined {\n    if (value) {\n        const num = Number.parseInt(value);\n        if (!Number.isNaN(num)) {\n            return num;\n        }\n    }\n    return undefined;\n}\n\n/** Returns the numerical representation of the associated string */\nfunction toNum(value: string): number | undefined {\n    if (value) {\n        const num = Number.parseFloat(value);\n        if (!Number.isNaN(num)) {\n            return num;\n        }\n    }\n    return undefined;\n}\n\n/** Returns the array representation of the associated string */\nfunction toArray(value: string): string[] | undefined {\n    if (value) {\n        return value.split(\",\");\n    }\n    return undefined;\n}\n\n/**\n * This function allows GFN/dev clients to configure the ragnarok library to toggle various features from override tools or from remote config server.\n * This should be invoked before initializing other components of ragnarok library.\n *\n * The RagnarokConfigData's remoteConfigData and gxtOverrideData are all GFN specific settings, exposed as a string to prevent dependency on\n * GFN client from configuring values to it. The json data received from the RemoteConfig/GxtConfig server is stringified as it is and passed\n * into the library without interpretation.\n *\n *\n * The RagnarokConfigData.overrideData is a string of feature toggle/options separated by '&' character.\n * The options exposed exposed are:\n *\n *      mode=lean|dev|default           -- Lean mode of ragnarok put the library into minimal functionality mode.\n *                                         Most features will be disabled and users configure enabling of selected features.\n *                                         Dev mode of ragnarok enables dev internal tools for the library (by default enabled for Lean mode)\n *      log=enable|disable              -- Enable log generation from the library.\n *      console=enable|disable          -- Enable console log from the library if log generation is enabled.\n *      gamepad=enable|disable          -- Enable/disable gamepad functionality.\n *      webrtcstats=enable|disable      -- Enable/disable calling GetStats of WebRTC library.\n *                                         Note: This is equivalent of Ctrl+Alt+F5 toggle.\n *      statsupload=enable|disable      -- Enable/disable uploading of client metrics/perf metrics to server.\n *                                         Note: statsupload=disable&webrtcstats=disable is equivalent to Ctrl+Alt+F4 toggle.\n *      mic=enable|disable              -- Enable/disable client mic capture during streaming.\n *      mousefilter=enable|disable      -- Enable/disable mouse event filtering. Intended for automated testing.\n *      bitrate=<number>|0              -- Sets the max bitrate. 0 will use the default. If value is above 100 treat as Kbps else Mbps.\n *      advancedgestures=enable|disable -- Enable/disable drag, mouse scroll, and video pan/zoom gestures.\n *      touch=enable|disable            -- Enable/disable sending of touch events.\n *                                         Note: Enabling this disables touch-as-mouse.\n *      latency=enable|disable          -- Enable/disable input indicator. Intended for input latency testing.\n *      audioreset=enable|disable       -- Enable/disable iOS 15 WAR for high audio latency.\n *      sourcereset=enable|disable      -- Enable/disable iOS 15.1 WAR for blank video on app background.\n *      autoplaychange=enable|disable   -- Enable/disable iOS 15 WAR for blank video on game launch\n *      ioswars=enable|disable          -- Enable/disable all iOS 15 WARs.\n *      bitsperpixel=<number>           -- 1080p and lower bits per pixel coefficient in max bitrate calculation.\n *      client id=<string>              -- Client ID for session request. Refers to Client ID registered in LCARS/Chroma for this client.\n *      fps=<number>                    -- Stream FPS to request. 0 will use normal requested.\n *      resolution=<number>x<number>    -- Resolution width and height to request, e.g. 1920x1080.\n *      bitsperpixel1440p=<number>      -- 1440p and up bits per pixel coefficient in max bitrate calculation.\n *      meta=<string>~<string>          -- Metadata to send in session set up request, of the form key~value.\n *      1440p=true|false                -- Whether or not ragnarok should claim 1440p is supported.\n *      stutter=enable|disable          -- Enable/disable toggling stutter indicators.\n *      combinestreams=enable|disable   -- Whether or not ragnarok should combine separate streams\n *      av1=enable|disable              -- Enable/disable AV1 support\n *      codeclist=<codec>,<codec>,...   -- Comma-separated list of supported codecs in descending order according to priority, e.g \"AV1,H264\"\n *      internaluser=true|false         -- Whether user is internal user\n *      hdr=on|off                      -- Whether or not to request an HDR stream.\n *\n *  Ex: In order to put the ragnarok in Lean mode yet support logging, the settings string would be\n *      \"mode=lean&log=enable\"\n *  Instead of enable/disable,  on/off or 0/1 can be used as well.\n */\n\nexport function ConfigureRagnarokSettings(data: RagnarokConfigData) {\n    Log.i(\"{fbd6ce8}\", \"{4acfb3a}\", JSON.stringify(data));\n    if (data.clientConfigOverride) {\n        RagnarokSettings.clientConfigOverride = data.clientConfigOverride;\n    }\n    // Note: This function is at app start, let the exception bubble up and fail.\n    //       The remote config data can be handled within try catch as it will be part of prod.\n    if (data.gxtOverrideData) {\n        const configData = <GxtRemoteConfigData>JSON.parse(data.gxtOverrideData);\n        // Parse the 'ragnarok' config block\n        if (configData.params) {\n            for (const element of configData.params) {\n                if (element.name === \"ragnarok\") {\n                    RagnarokSettings.ragnarokConfig = <RagnarokConfig>element.value;\n                    // Set the override config details for telemetry, only when we have some override settings\n                    RagnarokSettings.remoteOverrideInfo = {\n                        type: OverrideConfigTypeEnum.GXT,\n                        version: element.version\n                    };\n                }\n            }\n        }\n    } else if (data.remoteConfigData) {\n        if (data.remoteConfigData.ragnarok) {\n            RagnarokSettings.ragnarokConfig = <RagnarokConfig>(\n                JSON.parse(data.remoteConfigData.ragnarok)\n            );\n            // Set the override config details for telemetry, only when we have some override settings\n            RagnarokSettings.remoteOverrideInfo = {\n                type: OverrideConfigTypeEnum.RCONFIG,\n                version: data.remoteConfigData.version ?? \"\"\n            };\n        }\n    }\n\n    if (data.isInternalUser) {\n        RagnarokSettings.isInternalUser = data.isInternalUser;\n    }\n    if (data.overrideData) {\n        /* Using URLSearchParams is simpler even when UI clients give a text option in Override tools to configure ragnarok.\n           It splits on '&' and '=', which is what we would need when configured through UI Clients. */\n        const casedSettingsMap = new URLSearchParams(data.overrideData);\n        let settingsMap = new URLSearchParams();\n        for (const [key, value] of casedSettingsMap.entries()) {\n            settingsMap.append(key.toLowerCase(), value);\n        }\n        /* The below code logic is to disable all features when user has selected lean mode.\n          However each feature can be individually controlled\n          so that performance can be analyzed by turning on one feature at a time. */\n        if (settingsMap.get(\"mode\")?.toLowerCase() === \"lean\") {\n            RagnarokSettings.leanMode = true;\n            RagnarokSettings.loggingEnabled = false;\n            RagnarokSettings.gamepadEnabled = false;\n            RagnarokSettings.webrtcStatsEnabled = false;\n            RagnarokSettings.statsUploadEnabled = false;\n            RagnarokSettings.micEnabled = false;\n            // Enable internal user features\n            RagnarokSettings.stutterIndicator = true;\n            RagnarokSettings.isInternalUser = true;\n        } else if (settingsMap.get(\"mode\")?.toLowerCase() === \"dev\") {\n            RagnarokSettings.stutterIndicator = true;\n            RagnarokSettings.isInternalUser = true;\n        }\n        const getSettingBool = (key: string): boolean | undefined => {\n            const value: any = settingsMap.get(key);\n            return toBool(value);\n        };\n\n        const getSettingInt = (key: string): number | undefined => {\n            const value: any = settingsMap.get(key);\n            return toInt(value);\n        };\n\n        const getSettingNum = (key: string): number | undefined => {\n            const value: any = settingsMap.get(key);\n            return toNum(value);\n        };\n\n        const getSettingArray = (key: string): string[] | undefined => {\n            const value: any = settingsMap.get(key);\n            return toArray(value);\n        };\n\n        RagnarokSettings.loggingEnabled = getSettingBool(\"log\") ?? RagnarokSettings.loggingEnabled;\n        RagnarokSettings.consoleLoggingEnabled =\n            RagnarokSettings.loggingEnabled &&\n            (getSettingBool(\"console\") ?? RagnarokSettings.consoleLoggingEnabled);\n        RagnarokSettings.gamepadEnabled =\n            getSettingBool(\"gamepad\") ?? RagnarokSettings.gamepadEnabled;\n        RagnarokSettings.webrtcStatsEnabled =\n            getSettingBool(\"webrtcstats\") ?? RagnarokSettings.webrtcStatsEnabled;\n        RagnarokSettings.statsUploadEnabled =\n            getSettingBool(\"statsupload\") ?? RagnarokSettings.statsUploadEnabled;\n        RagnarokSettings.micEnabled = getSettingBool(\"mic\") ?? RagnarokSettings.micEnabled;\n        RagnarokSettings.mouseFilter =\n            getSettingBool(\"mousefilter\") ?? RagnarokSettings.mouseFilter;\n        RagnarokSettings.unadjustedMovement =\n            getSettingBool(\"unadjustedmovement\") ?? RagnarokSettings.unadjustedMovement;\n        RagnarokSettings.maxBitrate = getSettingInt(\"bitrate\") ?? RagnarokSettings.maxBitrate;\n        if (RagnarokSettings.maxBitrate > 0 && RagnarokSettings.maxBitrate <= 100) {\n            RagnarokSettings.maxBitrate *= 1000; // Convert Mbps to Kbps.\n        }\n        RagnarokSettings.gamepadTesterEnabled =\n            getSettingBool(\"gamepadtest\") ?? RagnarokSettings.gamepadTesterEnabled;\n        RagnarokSettings.allowSendingTelemetry =\n            getSettingBool(\"allowtelemetry\") ?? RagnarokSettings.allowSendingTelemetry;\n\n        const requestRes = settingsMap.get(\"resolution\");\n        if (requestRes) {\n            const resInfo = requestRes.toLowerCase().split(\"x\");\n            if (resInfo.length == 2) {\n                const width = parseInt(resInfo[0]);\n                const height = parseInt(resInfo[1]);\n                if (width && height) {\n                    // not doing anymore check, values are passed by dev/qa users.\n                    RagnarokSettings.resWidth = width;\n                    RagnarokSettings.resHeight = height;\n                } else {\n                    Log.e(\"{fbd6ce8}\", \"{c87835d}\", requestRes);\n                }\n            } else {\n                Log.e(\"{fbd6ce8}\", \"{c87835d}\", requestRes);\n            }\n        }\n        RagnarokSettings.fps = getSettingInt(\"fps\") ?? RagnarokSettings.fps;\n\n        RagnarokSettings.gamepadRaf = getSettingBool(\"gamepadraf\") ?? RagnarokSettings.gamepadRaf;\n        RagnarokSettings.gamepadPollInterval =\n            getSettingInt(\"gamepadpoll\") ?? RagnarokSettings.gamepadPollInterval;\n        RagnarokSettings.advancedGestures =\n            getSettingBool(\"advancedgestures\") ?? RagnarokSettings.advancedGestures;\n        RagnarokSettings.forceTouchCapable =\n            getSettingBool(\"forcetouchdevice\") ?? RagnarokSettings.forceTouchCapable;\n        let touchSetting = getSettingBool(\"touch\");\n        if (touchSetting !== undefined) {\n            RagnarokSettings.appLaunchMode = touchSetting\n                ? AppLaunchMode.TouchFriendly\n                : AppLaunchMode.Default;\n            RagnarokSettings.forceTouchCapable = touchSetting;\n        }\n\n        RagnarokSettings.storeTouch = getSettingBool(\"storetouch\") ?? RagnarokSettings.storeTouch;\n        RagnarokSettings.storeTouchGesture =\n            getSettingBool(\"storetouchgesture\") ?? RagnarokSettings.storeTouchGesture;\n        RagnarokSettings.touchWarp = getSettingBool(\"touchwarp\") ?? RagnarokSettings.touchWarp;\n        RagnarokSettings.latencyTest = getSettingBool(\"latency\") ?? RagnarokSettings.latencyTest;\n\n        RagnarokSettings.deviceOs = (settingsMap.get(\"deviceos\") ??\n            RagnarokSettings.deviceOs) as DeviceOS;\n        RagnarokSettings.deviceType = (settingsMap.get(\"devicetype\") ??\n            RagnarokSettings.deviceType) as DeviceType;\n        RagnarokSettings.clientStreamer = (settingsMap.get(\"clientstreamer\") ??\n            RagnarokSettings.clientStreamer) as ClientStreamer;\n        RagnarokSettings.clientId = settingsMap.get(\"clientid\") ?? RagnarokSettings.clientId;\n        RagnarokSettings.clientPlatformName =\n            settingsMap.get(\"clientplatformname\") ?? RagnarokSettings.clientPlatformName;\n        RagnarokSettings.clientType = (settingsMap.get(\"clienttype\") ??\n            RagnarokSettings.clientType) as ClientType;\n        RagnarokSettings.appLaunchMode =\n            getSettingInt(\"applaunchmode\") ?? RagnarokSettings.appLaunchMode;\n\n        RagnarokSettings.rsdmm = getSettingBool(\"rsdmm\") ?? RagnarokSettings.rsdmm;\n        RagnarokSettings.rsdmmThumbstickToggle =\n            getSettingBool(\"rsdmmtoggle\") ?? RagnarokSettings.rsdmmThumbstickToggle;\n\n        if (!(getSettingBool(\"ioswars\") ?? true)) {\n            RagnarokSettings.allowAudioReset = false;\n            RagnarokSettings.allowAutoplayChange = false;\n            RagnarokSettings.allowSourceReset = false;\n            RagnarokSettings.allowEnableMic = false;\n            RagnarokSettings.allowMutingVideo = false;\n        }\n        RagnarokSettings.allowAudioReset =\n            getSettingBool(\"audioreset\") ?? RagnarokSettings.allowAudioReset;\n        RagnarokSettings.allowSourceReset =\n            getSettingBool(\"sourcereset\") ?? RagnarokSettings.allowSourceReset;\n        RagnarokSettings.allowAutoplayChange =\n            getSettingBool(\"autoplaychange\") ?? RagnarokSettings.allowAutoplayChange;\n\n        RagnarokSettings.bitsPerPixel =\n            getSettingNum(\"bitsperpixel\") ?? RagnarokSettings.bitsPerPixel;\n        RagnarokSettings.bitsPerPixel1440p =\n            getSettingNum(\"bitsperpixel1440p\") ?? RagnarokSettings.bitsPerPixel1440p;\n\n        RagnarokSettings.is1440pSupported =\n            getSettingBool(\"1440p\") ?? RagnarokSettings.is1440pSupported;\n\n        RagnarokSettings.stutterIndicator =\n            getSettingBool(\"stutter\") ?? RagnarokSettings.stutterIndicator;\n\n        RagnarokSettings.combineStreams =\n            getSettingBool(\"combinestreams\") ?? RagnarokSettings.combineStreams;\n\n        if (settingsMap.has(\"meta\")) {\n            RagnarokSettings.sessionMetaData = {};\n            for (const metaValue of settingsMap.getAll(\"meta\")) {\n                const metaParts = metaValue.split(\"~\");\n                if (metaParts.length === 2) {\n                    RagnarokSettings.sessionMetaData[metaParts[0]] = metaParts[1];\n                }\n            }\n        }\n\n        RagnarokSettings.allowHaptics = getSettingBool(\"haptics\") ?? RagnarokSettings.allowHaptics;\n        RagnarokSettings.enableAv1Support =\n            getSettingBool(\"av1\") ?? RagnarokSettings.enableAv1Support;\n        RagnarokSettings.codecList = getSettingArray(\"codeclist\") ?? RagnarokSettings.codecList;\n        RagnarokSettings.isInternalUser =\n            getSettingBool(\"internaluser\") ?? RagnarokSettings.isInternalUser;\n        RagnarokSettings.hdr = getSettingBool(\"hdr\") ?? RagnarokSettings.hdr;\n    }\n    /**\n     * rtcUtils only consumes the local overrides and its better to keep it that way.\n     * If there exists a rConfig that needs to be passed down to rtcUtils, we will add it to the\n     * overrides string in the URLSearchParams format before calling ConfigureGridServerSettings.\n     *\n     * let overrideString = data.overrideData ?? \"\";\n     * // Add all required flags and then assign it back to the data.overrideData\n     * overrideString += \"&delayBetweenHttpRetries=100\";\n     * data.overrideData = overrideString;\n     *\n     **/\n\n    ConfigureGridServerSettings(data);\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: ragnarok-core/output/ragnarokprofiler.ts\n * @suppress {checkTypes,const,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode}\n */\ngoog.module('output.ragnarokprofiler');\nvar module = module || { id: 'ragnarokprofiler.ts' };\ngoog.require('tslib');\nconst tsickle_interfaces_1 = goog.requireType(\"output.interfaces\");\nconst tsickle_rinterfaces_2 = goog.requireType(\"output.rinterfaces\");\nconst tsickle_statsinterfaces_3 = goog.requireType(\"output.stats.statsinterfaces\");\nconst tsickle_dependencies_4 = goog.requireType(\"output.dependencies\");\nconst tsickle_telemetryhandler_5 = goog.requireType(\"output.telemetry.telemetryhandler\");\nconst dependencies_1 = goog.require('output.dependencies');\n/** @type {string} */\nconst LOGTAG = \"RProfiler\";\n/** @typedef {!output$ragnarokprofiler.Perf} */\nexports.Perf;\n/** @typedef {!output$ragnarokprofiler.ClientEvent} */\nexports.ClientEvent;\n/** @typedef {!output$ragnarokprofiler.WorkerInit} */\nexports.WorkerInit;\n/** @typedef {!output$ragnarokprofiler.StartStats} */\nexports.StartStats;\n/** @typedef {!output$ragnarokprofiler.StreamingQualityWithTs} */\nexports.StreamingQualityWithTs;\n/** @typedef {!output$ragnarokprofiler.StartWebSocket} */\nexports.StartWebSocket;\n/** @typedef {!output$ragnarokprofiler.MtbDuration} */\nexports.MtbDuration;\n/** @typedef {!output$ragnarokprofiler.InputChannelStats} */\nexports.InputChannelStats;\n/** @typedef {!output$ragnarokprofiler.GarbageCollectionStats} */\nexports.GarbageCollectionStats;\n/** @typedef {!output$ragnarokprofiler.WorkerMessage} */\nexports.WorkerMessage;\n// In retail builds, the build system will replace the value of this constant with the actual\n// source code for the Ragnarok Worker.\n// Use a template literal with embedded newline to start the preprocessor directive on a newline,\n// and thus not have an indent - the preprocessor would otherwise replicate that indent after\n// every newline in the source code, unnecessarily bulking the shipped product.\n/** @type {string} */\nconst WORKER_SRC = `\nvar $module$exports$output$stats$webrtcbinarystats$statsConfig$depr$$ = {size:70, version:1, name:\"DEPR\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$rtpv$$ = {size:80, version:3, name:\"RTPV\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$rtpa$$ = {size:48, version:1, name:\"RTPA\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$traa$$ = {size:88, version:1, name:\"TRAA\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$trav$$ = {size:44, version:1, \nname:\"TRAV\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$vfmd$$ = {size:12, version:1, name:\"VFMD\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$pfda$$ = {size:20, version:1, name:\"PFDA\"}, $module$exports$output$stats$webrtcbinarystats$statsConfig$none$$ = {size:0, version:1, name:\"\"};\nfunction $JSCompiler_StaticMethods_createWebSocket$$($JSCompiler_StaticMethods_createWebSocket$self$$, $reconnect$jscomp$1$$ = !1) {\n  try {\n    let $header$jscomp$2$$;\n    $JSCompiler_StaticMethods_createWebSocket$self$$.url.includes(\"wss\") && ($header$jscomp$2$$ = \"x-nv-sessionid.\" + $JSCompiler_StaticMethods_createWebSocket$self$$.sessionId, $JSCompiler_StaticMethods_createWebSocket$self$$.accessToken && ($header$jscomp$2$$ += \"-Authorization.Bearer-\" + $JSCompiler_StaticMethods_createWebSocket$self$$.accessToken));\n    let $websocketUrl$$ = $JSCompiler_StaticMethods_createWebSocket$self$$.url;\n    $reconnect$jscomp$1$$ && ($websocketUrl$$ += \"&reconnect=1\");\n    let $localWs$$ = new WebSocket($websocketUrl$$, $header$jscomp$2$$);\n    $localWs$$.onopen = () => {\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$h$(\"{aaf44dc}\");\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$l$.$openHandler$();\n      if ($localWs$$ === $JSCompiler_StaticMethods_createWebSocket$self$$.$g$) {\n        for (const $pendingMessage$$ of $JSCompiler_StaticMethods_createWebSocket$self$$.$j$) {\n          $pendingMessage$$.stats ? $localWs$$.send($pendingMessage$$.stats) : $localWs$$.send(JSON.stringify($pendingMessage$$));\n        }\n        for (const $pendingMessage$jscomp$1$$ of $JSCompiler_StaticMethods_createWebSocket$self$$.$o$) {\n          $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$$($JSCompiler_StaticMethods_createWebSocket$self$$, $pendingMessage$jscomp$1$$);\n        }\n        $JSCompiler_StaticMethods_createWebSocket$self$$.$o$ = [];\n      }\n    };\n    $localWs$$.onclose = $event$jscomp$8$$ => {\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$h$(\"{7a09ad8}\");\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$l$.$closeHandler$({error:$JSCompiler_StaticMethods_createWebSocket$self$$.$s$, code:$event$jscomp$8$$.code, reason:$event$jscomp$8$$.reason, wasClean:$event$jscomp$8$$.wasClean});\n      $localWs$$ === $JSCompiler_StaticMethods_createWebSocket$self$$.$g$ && ($JSCompiler_StaticMethods_createWebSocket$self$$.$g$ = void 0);\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$s$ = !1;\n    };\n    $localWs$$.onerror = () => {\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$h$(\"{418a180}\");\n      $JSCompiler_StaticMethods_createWebSocket$self$$.$s$ = !0;\n    };\n    $localWs$$.onmessage = $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$ => {\n      $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$ = JSON.parse($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.data);\n      $JSCompiler_StaticMethods_createWebSocket$self$$.serverSupportsAck && $JSCompiler_StaticMethods_setHeartBeatTimeout$$($JSCompiler_StaticMethods_createWebSocket$self$$);\n      void 0 === $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ackid || $JSCompiler_StaticMethods_createWebSocket$self$$.serverSupportsAck || ($JSCompiler_StaticMethods_createWebSocket$self$$.serverSupportsAck = !0, $JSCompiler_StaticMethods_createWebSocket$self$$.$h$(\"{523f5b9}\"), $JSCompiler_StaticMethods_setHeartBeatTimeout$$($JSCompiler_StaticMethods_createWebSocket$self$$));\n      if (!$ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.hb) {\n        if ($JSCompiler_StaticMethods_createWebSocket$self$$.serverSupportsAck) {\n          if (void 0 !== $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ack) {\n            var $ack$jscomp$inline_8$$ = $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ack;\n            for (let $i$jscomp$inline_9$$ = $JSCompiler_StaticMethods_createWebSocket$self$$.$j$.length - 1; 0 <= $i$jscomp$inline_9$$; $i$jscomp$inline_9$$--) {\n              $JSCompiler_StaticMethods_createWebSocket$self$$.$j$[$i$jscomp$inline_9$$].ackid <= $ack$jscomp$inline_8$$ && $JSCompiler_StaticMethods_createWebSocket$self$$.$j$.splice($i$jscomp$inline_9$$, 1);\n            }\n          }\n          void 0 !== $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ackid ? ($JSCompiler_StaticMethods_createWebSocket$self$$.maxReceivedAckId < $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ackid && ($JSCompiler_StaticMethods_createWebSocket$self$$.$l$.$messageHandler$($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$), $JSCompiler_StaticMethods_createWebSocket$self$$.maxReceivedAckId = $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ackid), $JSCompiler_StaticMethods_createWebSocket$self$$.$g$ && ($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$ = \n          JSON.stringify({ack:$JSCompiler_StaticMethods_createWebSocket$self$$.maxReceivedAckId}), $JSCompiler_StaticMethods_createWebSocket$self$$.$h$(\"{903be10}\" + $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$), $JSCompiler_StaticMethods_createWebSocket$self$$.$g$.send($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$))) : void 0 === $ack$jscomp$inline_12_event$jscomp$10_wsMsg$$.ack && $JSCompiler_StaticMethods_createWebSocket$self$$.$l$.$messageHandler$($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$);\n        } else {\n          $JSCompiler_StaticMethods_createWebSocket$self$$.$l$.$messageHandler$($ack$jscomp$inline_12_event$jscomp$10_wsMsg$$);\n        }\n      }\n    };\n    $JSCompiler_StaticMethods_createWebSocket$self$$.$g$ = $localWs$$;\n  } catch ($exp$$) {\n    $JSCompiler_StaticMethods_createWebSocket$self$$.$g$ = void 0, $JSCompiler_StaticMethods_createWebSocket$self$$.$u$(\"WebSocket creation exception: \" + $exp$$);\n  }\n}\nfunction $JSCompiler_StaticMethods_clearHeartBeatTimeout$$($JSCompiler_StaticMethods_clearHeartBeatTimeout$self$$) {\n  0 !== $JSCompiler_StaticMethods_clearHeartBeatTimeout$self$$.$m$ && (self.clearTimeout($JSCompiler_StaticMethods_clearHeartBeatTimeout$self$$.$m$), $JSCompiler_StaticMethods_clearHeartBeatTimeout$self$$.$m$ = 0);\n}\nfunction $JSCompiler_StaticMethods_setHeartBeatTimeout$$($JSCompiler_StaticMethods_setHeartBeatTimeout$self$$) {\n  $JSCompiler_StaticMethods_clearHeartBeatTimeout$$($JSCompiler_StaticMethods_setHeartBeatTimeout$self$$);\n  $JSCompiler_StaticMethods_setHeartBeatTimeout$self$$.$m$ = self.setTimeout(() => {\n    var $_a$jscomp$inline_15$$;\n    $JSCompiler_StaticMethods_setHeartBeatTimeout$self$$.$h$(\"{6c3505a}\" + (null === ($_a$jscomp$inline_15$$ = $JSCompiler_StaticMethods_setHeartBeatTimeout$self$$.$g$) || void 0 === $_a$jscomp$inline_15$$ ? void 0 : $_a$jscomp$inline_15$$.readyState));\n    $JSCompiler_StaticMethods_setHeartBeatTimeout$self$$.$g$ || $JSCompiler_StaticMethods_createWebSocket$$($JSCompiler_StaticMethods_setHeartBeatTimeout$self$$, !0);\n    $JSCompiler_StaticMethods_setHeartBeatTimeout$$($JSCompiler_StaticMethods_setHeartBeatTimeout$self$$);\n  }, 3000);\n}\nfunction $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$$($JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$, $data$jscomp$81$$) {\n  void 0 !== $data$jscomp$81$$.ackid && $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$.serverSupportsAck && void 0 !== $data$jscomp$81$$.ackid && $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$.$j$.push($data$jscomp$81$$);\n  $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$.$g$ && ($data$jscomp$81$$.stats ? $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$.$g$.send($data$jscomp$81$$.stats) : $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$self$$.$g$.send(JSON.stringify($data$jscomp$81$$)));\n}\nvar $module$exports$output$websocketimpl$WebSocketImpl$$ = class {\n  constructor() {\n    var $JSCompiler_object_inline_wsHandler_68$$ = {$messageHandler$:$module$contents$output$ragnarokworker_wsMessageHandler$$, $openHandler$:$module$contents$output$ragnarokworker_wsOpenHandler$$, $closeHandler$:$module$contents$output$ragnarokworker_wsCloseHandler$$, $openingHandler$:$module$contents$output$ragnarokworker_wsOpeningHandler$$}, $JSCompiler_object_inline_info_70$$ = $module$contents$output$ragnarokworker_workerLogger$$, $JSCompiler_object_inline_exception_71$$ = $module$contents$output$ragnarokworker_workerException$$;\n    this.sessionId = $module$contents$output$ragnarokworker_sessionId$$;\n    this.accessToken = \"\";\n    this.serverSupportsAck = this.$s$ = !1;\n    this.$j$ = [];\n    this.$o$ = [];\n    this.maxReceivedAckId = this.$m$ = 0;\n    this.url = \"\";\n    this.$h$ = $JSCompiler_object_inline_info_70$$;\n    this.$u$ = $JSCompiler_object_inline_exception_71$$;\n    this.$l$ = $JSCompiler_object_inline_wsHandler_68$$;\n  }\n  initialize($url$jscomp$22$$, $maxReceivedAckId$$, $serverSupportsAck$$, $reconnect$$ = !1) {\n    this.url = $url$jscomp$22$$;\n    this.maxReceivedAckId = $maxReceivedAckId$$;\n    this.serverSupportsAck = $serverSupportsAck$$;\n    $JSCompiler_StaticMethods_createWebSocket$$(this, $reconnect$$);\n    this.$h$(\"{f4b05a4}\");\n  }\n  uninitialize($closeCode$$) {\n    var $_a$$;\n    this.maxReceivedAckId = 0;\n    this.serverSupportsAck = !1;\n    this.$j$ = [];\n    this.$o$ = [];\n    $JSCompiler_StaticMethods_clearHeartBeatTimeout$$(this);\n    null === ($_a$$ = this.$g$) || void 0 === $_a$$ ? void 0 : $_a$$.close($closeCode$$);\n    this.$h$(\"{986b258}\" + $closeCode$$);\n  }\n  reconnect() {\n    $JSCompiler_StaticMethods_createWebSocket$$(this, !0);\n  }\n  send($data$jscomp$82$$) {\n    this.serverSupportsAck || this.$g$ || $JSCompiler_StaticMethods_createWebSocket$$(this, !0);\n    this.$g$ && this.$g$.readyState === WebSocket.OPEN ? $JSCompiler_StaticMethods_sendOnWsReliablyIfNeeded$$(this, $data$jscomp$82$$) : this.$o$.push($data$jscomp$82$$);\n  }\n};\nconst $module$contents$output$ragnarokworker_ctx$$ = self;\nlet $module$contents$output$ragnarokworker_perfs$$ = [], $module$contents$output$ragnarokworker_clientEvents$$ = [];\nfunction $JSCompiler_StaticMethods_addReport$$($report$$) {\n  var $JSCompiler_StaticMethods_addReport$self$$ = $module$contents$output$ragnarokworker_webrtcBinaryStats$$;\n  let $buffer$jscomp$16$$ = $JSCompiler_StaticMethods_addReport$self$$.$g$.get($report$$.type);\n  $buffer$jscomp$16$$ || ($buffer$jscomp$16$$ = [], $JSCompiler_StaticMethods_addReport$self$$.$g$.set($report$$.type, $buffer$jscomp$16$$));\n  for (const $element$jscomp$8$$ of $report$$.stats) {\n    $buffer$jscomp$16$$.push($element$jscomp$8$$);\n  }\n}\nfunction $JSCompiler_StaticMethods_getStatsConfig$$($type$jscomp$158$$) {\n  switch($type$jscomp$158$$) {\n    case 0:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$depr$$;\n    case 1:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$rtpv$$;\n    case 2:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$rtpa$$;\n    case 3:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$trav$$;\n    case 4:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$traa$$;\n    case 5:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$vfmd$$;\n    case 6:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$pfda$$;\n    default:\n      return $module$exports$output$stats$webrtcbinarystats$statsConfig$none$$;\n  }\n}\nlet $module$contents$output$ragnarokworker_webrtcBinaryStats$$ = new class {\n  constructor() {\n    this.$g$ = new Map();\n    this.$g$.clear();\n  }\n  size() {\n    let $totalSize$$ = 0;\n    for (let [, $array__tsickle_destructured_2$$] of this.$g$) {\n      let $array$jscomp$6$$ = $array__tsickle_destructured_2$$;\n      for (let $value$jscomp$91$$ of $array$jscomp$6$$) {\n        $totalSize$$ += $value$jscomp$91$$.byteLength;\n      }\n    }\n    return $totalSize$$ += 9 * this.$g$.size;\n  }\n  write($dest$jscomp$1$$, $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$) {\n    var $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$ = $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$;\n    for (let [$key__tsickle_destructured_3$$, $arrayBuffer__tsickle_destructured_4$$] of this.$g$) {\n      $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$ = $arrayBuffer__tsickle_destructured_4$$;\n      var $JSCompiler_temp_const$jscomp$3_JSCompiler_temp_const$jscomp$5$$ = $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$, $dest$jscomp$inline_33_offset$jscomp$inline_24$$ = $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$;\n      $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$ = $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$.length;\n      var $byteCount$jscomp$inline_36_config$jscomp$inline_27$$ = $JSCompiler_StaticMethods_getStatsConfig$$($key__tsickle_destructured_3$$);\n      let $chunkType$jscomp$inline_28$$ = $byteCount$jscomp$inline_36_config$jscomp$inline_27$$.name, $dataBufferView$jscomp$inline_29$$ = new DataView($dest$jscomp$1$$.buffer);\n      for (let $i$jscomp$inline_30$$ = 0; 4 > $i$jscomp$inline_30$$; $i$jscomp$inline_30$$++) {\n        $dataBufferView$jscomp$inline_29$$.setUint8($dest$jscomp$inline_33_offset$jscomp$inline_24$$ + $i$jscomp$inline_30$$, $chunkType$jscomp$inline_28$$.charCodeAt($i$jscomp$inline_30$$));\n      }\n      $dataBufferView$jscomp$inline_29$$.setUint8($dest$jscomp$inline_33_offset$jscomp$inline_24$$ + 4, $byteCount$jscomp$inline_36_config$jscomp$inline_27$$.version);\n      $dataBufferView$jscomp$inline_29$$.setUint16($dest$jscomp$inline_33_offset$jscomp$inline_24$$ + 5, $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$, !0);\n      $dataBufferView$jscomp$inline_29$$.setUint16($dest$jscomp$inline_33_offset$jscomp$inline_24$$ + 7, $byteCount$jscomp$inline_36_config$jscomp$inline_27$$.size, !0);\n      $JSCompiler_temp_const$jscomp$3_JSCompiler_temp_const$jscomp$5$$ = $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$ = $JSCompiler_temp_const$jscomp$3_JSCompiler_temp_const$jscomp$5$$ + 9;\n      $dest$jscomp$inline_33_offset$jscomp$inline_24$$ = $dest$jscomp$1$$;\n      $byteCount$jscomp$inline_36_config$jscomp$inline_27$$ = 0;\n      for (let $value$jscomp$inline_37$$ of $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$) {\n        $arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$ = new Uint8Array($value$jscomp$inline_37$$), $dest$jscomp$inline_33_offset$jscomp$inline_24$$.set($arr$jscomp$inline_38_arrayBuffer_source$jscomp$inline_34_startOffset$$, $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$ + $byteCount$jscomp$inline_36_config$jscomp$inline_27$$), $byteCount$jscomp$inline_36_config$jscomp$inline_27$$ += $value$jscomp$inline_37$$.byteLength;\n      }\n      $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$ = $JSCompiler_temp_const$jscomp$3_JSCompiler_temp_const$jscomp$5$$ + $byteCount$jscomp$inline_36_config$jscomp$inline_27$$;\n    }\n    return $elementCount$jscomp$inline_26_offset$jscomp$26_offset$jscomp$inline_35$$;\n  }\n}(), $module$contents$output$ragnarokworker_sessionId$$ = \"\", $module$contents$output$ragnarokworker_url$$ = \"\", $module$contents$output$ragnarokworker_statsHeaderObj$$ = null, $module$contents$output$ragnarokworker_webSocket$$ = void 0, $module$contents$output$ragnarokworker_uploadIntervalId$$ = 0, $module$contents$output$ragnarokworker_streamingQuality$$ = [], $module$contents$output$ragnarokworker_mtbDurations$$ = [], $module$contents$output$ragnarokworker_inputChannelStats$$ = [], $module$contents$output$ragnarokworker_garbageCollectionStats$$ = \n[], $module$contents$output$ragnarokworker_serverSupportsAck$$ = !1, $module$contents$output$ragnarokworker_nextAckIdToSendForStats$$ = 0;\nfunction $module$contents$output$ragnarokworker_workerLogger$$($logmsg$$) {\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({log:$logmsg$$});\n}\nfunction $module$contents$output$ragnarokworker_workerException$$($expmsg$$) {\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({exception:$expmsg$$});\n}\nfunction $module$contents$output$ragnarokworker_clearCachedData$$() {\n  $module$contents$output$ragnarokworker_perfs$$ = [];\n  $module$contents$output$ragnarokworker_clientEvents$$ = [];\n  $module$contents$output$ragnarokworker_webrtcBinaryStats$$.$g$.clear();\n  $module$contents$output$ragnarokworker_streamingQuality$$ = [];\n  $module$contents$output$ragnarokworker_mtbDurations$$ = [];\n  $module$contents$output$ragnarokworker_inputChannelStats$$ = [];\n  $module$contents$output$ragnarokworker_garbageCollectionStats$$ = [];\n}\nfunction $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$1$$, $offset$jscomp$29$$, $chunkType$jscomp$1$$, $version$jscomp$4$$, $elementCount$jscomp$1$$, $sizeOfElement$$) {\n  for (let $i$jscomp$5$$ = 0; 4 > $i$jscomp$5$$; $i$jscomp$5$$++) {\n    $dataBufferView$jscomp$1$$.setUint8($offset$jscomp$29$$ + $i$jscomp$5$$, $chunkType$jscomp$1$$.charCodeAt($i$jscomp$5$$));\n  }\n  $dataBufferView$jscomp$1$$.setUint8($offset$jscomp$29$$ + 4, $version$jscomp$4$$);\n  $dataBufferView$jscomp$1$$.setUint16($offset$jscomp$29$$ + 5, $elementCount$jscomp$1$$, !0);\n  $dataBufferView$jscomp$1$$.setUint16($offset$jscomp$29$$ + 7, $sizeOfElement$$, !0);\n}\nfunction $module$contents$output$ragnarokworker_asInt32$$($num$jscomp$6$$) {\n  return 0 > $num$jscomp$6$$ ? Math.max($num$jscomp$6$$, -2147483648) : Math.min($num$jscomp$6$$, 4294967295);\n}\nfunction $module$contents$output$ragnarokworker_uploadData$$() {\n  if (($module$contents$output$ragnarokworker_perfs$$.length || $module$contents$output$ragnarokworker_clientEvents$$.length) && $module$contents$output$ragnarokworker_statsHeaderObj$$) {\n    try {\n      $module$contents$output$ragnarokworker_statsHeaderObj$$.ackid = $module$contents$output$ragnarokworker_serverSupportsAck$$ ? $module$contents$output$ragnarokworker_nextAckIdToSendForStats$$ : void 0;\n      var $header$jscomp$3_offset$jscomp$36$$ = JSON.stringify($module$contents$output$ragnarokworker_statsHeaderObj$$);\n      $i$jscomp$12_len$$ = $header$jscomp$3_offset$jscomp$36$$.length;\n      $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ = $i$jscomp$12_len$$ + 2;\n      var $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$ = new ArrayBuffer($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$);\n      const $headerView$$ = new DataView($headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$);\n      $headerView$$.setUint16(0, $i$jscomp$12_len$$);\n      for (var $i$jscomp$12_len$$ = 2; $i$jscomp$12_len$$ < $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$; ++$i$jscomp$12_len$$) {\n        $headerView$$.setUint8($i$jscomp$12_len$$, $header$jscomp$3_offset$jscomp$36$$.charCodeAt($i$jscomp$12_len$$ - 2));\n      }\n      $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ = new Uint8Array($headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$);\n      $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$ = 13 * $module$contents$output$ragnarokworker_perfs$$.length;\n      $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ = 72 * $module$contents$output$ragnarokworker_clientEvents$$.length;\n      $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ = 12 * $module$contents$output$ragnarokworker_streamingQuality$$.length;\n      $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$ = 10 * $module$contents$output$ragnarokworker_mtbDurations$$.length;\n      $dataBufferView$jscomp$inline_64_inputChannelDataSize$$ = 12 * $module$contents$output$ragnarokworker_inputChannelStats$$.length;\n      const $garbageCollectionDataSize$$ = 16 * $module$contents$output$ragnarokworker_garbageCollectionStats$$.length;\n      let $totalSize$jscomp$1$$ = 9 + $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.length;\n      $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$ && ($totalSize$jscomp$1$$ += 9 + $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$);\n      $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ && ($totalSize$jscomp$1$$ += 9 + $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$);\n      $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ && ($totalSize$jscomp$1$$ += 9 + $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$);\n      $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$ && ($totalSize$jscomp$1$$ += 9 + $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$);\n      $dataBufferView$jscomp$inline_64_inputChannelDataSize$$ && ($totalSize$jscomp$1$$ += 9 + $dataBufferView$jscomp$inline_64_inputChannelDataSize$$);\n      $garbageCollectionDataSize$$ && ($totalSize$jscomp$1$$ += 9 + $garbageCollectionDataSize$$);\n      $totalSize$jscomp$1$$ += $module$contents$output$ragnarokworker_webrtcBinaryStats$$.size();\n      const $dataBuffer$$ = new ArrayBuffer($totalSize$jscomp$1$$);\n      $dataBufferView$jscomp$8_offset$jscomp$inline_65$$ = new DataView($dataBuffer$$);\n      $header$jscomp$3_offset$jscomp$36$$ = 0;\n      (new Uint8Array($dataBuffer$$)).set($dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$);\n      $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.length;\n      $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"BPRF\", 1, 0, 0);\n      $header$jscomp$3_offset$jscomp$36$$ += 9;\n      if ($dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"PERF\", 2, $module$contents$output$ragnarokworker_perfs$$.length, 13);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$ = 0; $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$ < $module$contents$output$ragnarokworker_perfs$$.length; $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$++) {\n          $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.setFloat64($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$, $module$contents$output$ragnarokworker_perfs$$[$headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$].RAFTS, !0), $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.setUint16($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ + 8, Math.min(1000 * $module$contents$output$ragnarokworker_perfs$$[$headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$].DCSend, \n          65535), !0), $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.setUint16($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ + 10, Math.min(1000 * $module$contents$output$ragnarokworker_perfs$$[$headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$].GetStats, 65535), !0), $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$.setUint8($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ + 12, $module$contents$output$ragnarokworker_perfs$$[$headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$].FrameInfo), \n          $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ += 13;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$;\n      }\n      if ($dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"EVNT\", 1, $module$contents$output$ragnarokworker_clientEvents$$.length, 72);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$;\n        $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ = 0; $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$ < $module$contents$output$ragnarokworker_clientEvents$$.length; $i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$++) {\n          $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$.setFloat64($dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$, $module$contents$output$ragnarokworker_clientEvents$$[$i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$].TS, !0);\n          $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ += 8;\n          $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ = $module$contents$output$ragnarokworker_clientEvents$$[$i$jscomp$inline_48_offset$jscomp$inline_43_totalLen$$].eventtype;\n          for ($headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$ = 0; $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$ < $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$.length && 63 > $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$; $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$++) {\n            $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$.setUint8($dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ + $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$, $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$.charCodeAt($headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$));\n          }\n          $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$.setUint8($dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ + $headerBytesBuffer_i$jscomp$inline_44_j$jscomp$inline_50$$, 0);\n          $dataBufferView$jscomp$inline_42_headerBufferBytes_offset$jscomp$inline_47$$ += 64;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$;\n      }\n      if ($dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"SQEV\", 1, $module$contents$output$ragnarokworker_streamingQuality$$.length, 12);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$ = 0; $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$ < $module$contents$output$ragnarokworker_streamingQuality$$.length; $dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$++) {\n          $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$.setUint8($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$, $module$contents$output$ragnarokworker_streamingQuality$$[$dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$].qualityScore), $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$.setUint8($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ + \n          1, $module$contents$output$ragnarokworker_streamingQuality$$[$dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$].bandwidthScore), $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$.setUint8($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ + 2, $module$contents$output$ragnarokworker_streamingQuality$$[$dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$].latencyScore), $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$.setUint8($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ + \n          3, $module$contents$output$ragnarokworker_streamingQuality$$[$dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$].networkLossScore), $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$.setFloat64($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ + 4, $module$contents$output$ragnarokworker_streamingQuality$$[$dataBufferView$jscomp$inline_46_i$jscomp$inline_54_perfDataSize$$].timestamp, !0), $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ += \n          12;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$;\n      }\n      if ($dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"MTBD\", 1, $module$contents$output$ragnarokworker_mtbDurations$$.length, 10);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$;\n        $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ = 0; $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$ < $module$contents$output$ragnarokworker_mtbDurations$$.length; $eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$++) {\n          $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$.setFloat64($dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$, $module$contents$output$ragnarokworker_mtbDurations$$[$eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$].timestamp, !0), $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$.setUint16($dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ + \n          8, Math.min($module$contents$output$ragnarokworker_mtbDurations$$[$eventstr$jscomp$inline_49_i$jscomp$inline_58_offset$jscomp$inline_53$$].duration, 65535), !0), $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ += 10;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$;\n      }\n      if ($dataBufferView$jscomp$inline_64_inputChannelDataSize$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"INPT\", 1, $module$contents$output$ragnarokworker_inputChannelStats$$.length, 12);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$;\n        $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ = 0; $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$ < $module$contents$output$ragnarokworker_inputChannelStats$$.length; $dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$++) {\n          $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$.setFloat64($dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$, $module$contents$output$ragnarokworker_inputChannelStats$$[$dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$].timestamp, !0), $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$.setUint16($dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ + 8, Math.min($module$contents$output$ragnarokworker_inputChannelStats$$[$dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$].bufferedAmount, \n          65535), !0), $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$.setUint16($dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ + 10, Math.min($module$contents$output$ragnarokworker_inputChannelStats$$[$dataBufferView$jscomp$inline_52_eventsDataSize_i$jscomp$inline_62_offset$jscomp$inline_57$$].maxSchedulingDelay, 65535), !0), $dataBufferView$jscomp$inline_56_offset$jscomp$inline_61_sqEventsDataSize$$ += 12;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $dataBufferView$jscomp$inline_64_inputChannelDataSize$$;\n      }\n      if ($garbageCollectionDataSize$$) {\n        $module$contents$output$ragnarokworker_writeChunkHeader$$($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $header$jscomp$3_offset$jscomp$36$$, \"GRBG\", 1, $module$contents$output$ragnarokworker_garbageCollectionStats$$.length, 16);\n        $header$jscomp$3_offset$jscomp$36$$ += 9;\n        var $dataBufferView$jscomp$inline_64_inputChannelDataSize$$ = $dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $dataBufferView$jscomp$8_offset$jscomp$inline_65$$ = $header$jscomp$3_offset$jscomp$36$$;\n        for ($dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$ = 0; $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$ < $module$contents$output$ragnarokworker_garbageCollectionStats$$.length; $dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$++) {\n          $dataBufferView$jscomp$inline_64_inputChannelDataSize$$.setFloat64($dataBufferView$jscomp$8_offset$jscomp$inline_65$$, $module$contents$output$ragnarokworker_garbageCollectionStats$$[$dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$].timestamp, !0), $dataBufferView$jscomp$inline_64_inputChannelDataSize$$.setInt32($dataBufferView$jscomp$8_offset$jscomp$inline_65$$ + 8, $module$contents$output$ragnarokworker_asInt32$$($module$contents$output$ragnarokworker_garbageCollectionStats$$[$dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$].deltaUsedHeapSize), \n          !0), $dataBufferView$jscomp$inline_64_inputChannelDataSize$$.setInt32($dataBufferView$jscomp$8_offset$jscomp$inline_65$$ + 12, $module$contents$output$ragnarokworker_asInt32$$($module$contents$output$ragnarokworker_garbageCollectionStats$$[$dataBufferView$jscomp$inline_60_durationDataSize_i$jscomp$inline_66$$].deltaTotalHeapSize), !0), $dataBufferView$jscomp$8_offset$jscomp$inline_65$$ += 16;\n        }\n        $header$jscomp$3_offset$jscomp$36$$ += $garbageCollectionDataSize$$;\n      }\n      let $buffer$jscomp$17$$ = new Uint8Array($dataBuffer$$);\n      $module$contents$output$ragnarokworker_webrtcBinaryStats$$.write($buffer$jscomp$17$$, $header$jscomp$3_offset$jscomp$36$$);\n      null === $module$contents$output$ragnarokworker_webSocket$$ || void 0 === $module$contents$output$ragnarokworker_webSocket$$ ? void 0 : $module$contents$output$ragnarokworker_webSocket$$.send({stats:$dataBuffer$$, ackid:$module$contents$output$ragnarokworker_serverSupportsAck$$ ? $module$contents$output$ragnarokworker_nextAckIdToSendForStats$$ : void 0});\n    } catch ($err$jscomp$3$$) {\n      $module$contents$output$ragnarokworker_workerException$$(\"Exception in perf/stats upload. Error : \" + $err$jscomp$3$$.message + \" stack: \" + $err$jscomp$3$$.stack);\n    }\n  }\n  $module$contents$output$ragnarokworker_clearCachedData$$();\n}\nfunction $module$contents$output$ragnarokworker_wsMessageHandler$$($data$jscomp$83$$) {\n  $module$contents$output$ragnarokworker_serverSupportsAck$$ || void 0 === $data$jscomp$83$$.ackid || ($module$contents$output$ragnarokworker_serverSupportsAck$$ = !0);\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({wsMessage:$data$jscomp$83$$});\n}\nfunction $module$contents$output$ragnarokworker_wsCloseHandler$$($data$jscomp$84$$) {\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({wsClose:$data$jscomp$84$$});\n}\nfunction $module$contents$output$ragnarokworker_wsOpenHandler$$() {\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({wsOpen:!0});\n}\nfunction $module$contents$output$ragnarokworker_wsOpeningHandler$$() {\n  $module$contents$output$ragnarokworker_ctx$$.postMessage({wsOpening:!0});\n}\nfunction $module$contents$output$ragnarokworker_createWebSocket$$($maxReceivedAckId$jscomp$1$$, $reconnect$jscomp$2$$) {\n  $module$contents$output$ragnarokworker_webSocket$$ = new $module$exports$output$websocketimpl$WebSocketImpl$$();\n  $module$contents$output$ragnarokworker_webSocket$$.initialize($module$contents$output$ragnarokworker_url$$, $maxReceivedAckId$jscomp$1$$, $module$contents$output$ragnarokworker_serverSupportsAck$$, $reconnect$jscomp$2$$);\n  $module$contents$output$ragnarokworker_wsOpeningHandler$$();\n}\n$module$contents$output$ragnarokworker_ctx$$.onmessage = function($message$jscomp$34$$) {\n  try {\n    const $data$jscomp$85$$ = $message$jscomp$34$$.data;\n    $data$jscomp$85$$.initMessage ? ($module$contents$output$ragnarokworker_sessionId$$ = $data$jscomp$85$$.initMessage.sessionId, $module$contents$output$ragnarokworker_workerLogger$$(\"{6ccab8d}\")) : $data$jscomp$85$$.perf ? $module$contents$output$ragnarokworker_perfs$$.push($data$jscomp$85$$.perf) : $data$jscomp$85$$.clientEvent ? $module$contents$output$ragnarokworker_clientEvents$$.push($data$jscomp$85$$.clientEvent) : $data$jscomp$85$$.startStats ? ($module$contents$output$ragnarokworker_statsHeaderObj$$ = \n    $data$jscomp$85$$.startStats.statsHeader, $module$contents$output$ragnarokworker_uploadIntervalId$$ = self.setInterval(() => $module$contents$output$ragnarokworker_uploadData$$(), 5000), $module$contents$output$ragnarokworker_ctx$$.postMessage({statsStarted:!0}), $module$contents$output$ragnarokworker_workerLogger$$(\"{5209d98}\")) : $data$jscomp$85$$.stopStats ? (self.clearInterval($module$contents$output$ragnarokworker_uploadIntervalId$$), $module$contents$output$ragnarokworker_uploadData$$(), \n    $module$contents$output$ragnarokworker_clearCachedData$$(), $module$contents$output$ragnarokworker_workerLogger$$(\"{b58b6ad}\")) : $data$jscomp$85$$.webrtcStats ? ($data$jscomp$85$$.ackid && ($module$contents$output$ragnarokworker_nextAckIdToSendForStats$$ = $data$jscomp$85$$.ackid), $data$jscomp$85$$.webrtcStats.stats && $JSCompiler_StaticMethods_addReport$$($data$jscomp$85$$.webrtcStats)) : $data$jscomp$85$$.sq ? $module$contents$output$ragnarokworker_streamingQuality$$.push($data$jscomp$85$$.sq) : \n    $data$jscomp$85$$.startWebSocket ? ($module$contents$output$ragnarokworker_url$$ = $data$jscomp$85$$.startWebSocket.signInURL, $module$contents$output$ragnarokworker_serverSupportsAck$$ = $data$jscomp$85$$.startWebSocket.serverSupportsAck, $module$contents$output$ragnarokworker_createWebSocket$$($data$jscomp$85$$.startWebSocket.maxReceivedAckId, $data$jscomp$85$$.startWebSocket.reconnect)) : $data$jscomp$85$$.stopWebSocket ? (null === $module$contents$output$ragnarokworker_webSocket$$ || void 0 === \n    $module$contents$output$ragnarokworker_webSocket$$ ? void 0 : $module$contents$output$ragnarokworker_webSocket$$.uninitialize(), $module$contents$output$ragnarokworker_serverSupportsAck$$ = !1) : $data$jscomp$85$$.send ? null === $module$contents$output$ragnarokworker_webSocket$$ || void 0 === $module$contents$output$ragnarokworker_webSocket$$ ? void 0 : $module$contents$output$ragnarokworker_webSocket$$.send($data$jscomp$85$$.send) : $data$jscomp$85$$.duration ? $module$contents$output$ragnarokworker_mtbDurations$$.push($data$jscomp$85$$.duration) : \n    $data$jscomp$85$$.inputChannelStats ? $module$contents$output$ragnarokworker_inputChannelStats$$.push($data$jscomp$85$$.inputChannelStats) : $data$jscomp$85$$.garbageCollectionStats && $module$contents$output$ragnarokworker_garbageCollectionStats$$.push($data$jscomp$85$$.garbageCollectionStats);\n  } catch ($exp$jscomp$1$$) {\n    $module$contents$output$ragnarokworker_workerException$$(\"Worker onmessage exception: \" + $exp$jscomp$1$$);\n  }\n};\n\n\n\n`;\n/* Messages for the main thread *(/\n\n/* This class creates a worker thread and controls it through the life time of the webpage.\n   The worker thread is not terminated and is removed by browser during page unload.\n   Between every stream session the worker is asked to do background work and is stopped at the\n   end of the stream session. */\nclass RagnarokProfilerImpl {\n    /**\n     * @public\n     */\n    constructor() {\n        this.profiling = false;\n        this.rworker = null;\n        this.streamBeginTs = 0;\n        this.wsHandler = null;\n        this.pendingErrors = [];\n        this.pendingTelemetry = [];\n        this.perf = {\n            RAFTS: 0,\n            DCSend: 0,\n            GetStats: 0,\n            FrameInfo: 0\n        };\n        /*@todo: Logging to console directly. At this point Logger class is not initialized and\n                  it doesnt even log to console if eventEmitter is not set. Figure out how to set to redesign\n                  eventEmitter so that all logs during initialization is collected */\n        dependencies_1.Log.i(\"{1f5ec29}\", \"{139da36}\");\n        try {\n            /** @type {string} */\n            let blobContent;\n            // If WORKER_SRC's content is replaced by the build system, it'll be larger than the\n            // preprocessor directive (which has current length of 40 characters).\n            if (WORKER_SRC.length > 40) {\n                blobContent = WORKER_SRC;\n            }\n            else {\n                /** @type {string} */\n                let workerFile = \"\";\n                /** @type {(null|!HTMLScriptElement)} */\n                const currentScript = (/** @type {(null|!HTMLScriptElement)} */ (document.currentScript));\n                if (currentScript) {\n                    // use absolute path for worker, in case page and scripts are in different locations\n                    /** @type {number} */\n                    const pathEnd = currentScript.src.lastIndexOf(\"/\");\n                    if (pathEnd !== -1) {\n                        workerFile += currentScript.src.substring(0, pathEnd + 1);\n                    }\n                }\n                workerFile += \"ragnarokworker.js\";\n                // use import scripts and blob URL to allow cross origin loading of worker\n                blobContent = \"importScripts('\" + workerFile + \"');\";\n            }\n            /** @type {!Blob} */\n            const blob = new Blob([blobContent], { type: \"text/javascript\" });\n            /** @type {string} */\n            const blobUrl = URL.createObjectURL(blob);\n            this.rworker = new Worker(blobUrl);\n            URL.revokeObjectURL(blobUrl);\n            this.rworker.onmessage = this.onWorkerMessage.bind(this);\n            this.rworker.onerror = this.onWorkerError.bind(this);\n            dependencies_1.Log.i(\"{1f5ec29}\", \"{62dee75}\");\n        }\n        catch (err) {\n            dependencies_1.Log.e(\"{1f5ec29}\", \"{50fa2e5}\", err.message);\n            this.pendingTelemetry.push({\n                name: \"RagnarokWorkerProblem\",\n                error: JSON.stringify(err)\n            });\n        }\n    }\n    /**\n     * @public\n     * @param {string} signInURL\n     * @param {number} maxReceivedAckId\n     * @param {boolean} serverSupportsAck\n     * @param {!tsickle_rinterfaces_2.WebSocketHandler} wsHandler\n     * @param {(undefined|boolean)=} reconnect\n     * @return {void}\n     */\n    startWebSocket(signInURL, maxReceivedAckId, serverSupportsAck, wsHandler, reconnect) {\n        this.wsHandler = wsHandler;\n        /** @type {!output$ragnarokprofiler.WorkerMessage} */\n        let msg = {\n            startWebSocket: {\n                signInURL,\n                maxReceivedAckId,\n                serverSupportsAck,\n                reconnect\n            }\n        };\n        if (this.rworker) {\n            this.rworker.postMessage(msg);\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{b3f6faa}\");\n        }\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    stopWebSocket() {\n        /** @type {!output$ragnarokprofiler.WorkerMessage} */\n        const workerMessage = {\n            stopWebSocket: true\n        };\n        if (this.rworker) {\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{7ac815d}\");\n            this.rworker.postMessage(workerMessage);\n        }\n        this.wsHandler = null;\n    }\n    /**\n     * @public\n     * @param {string} sessionId\n     * @param {!tsickle_telemetryhandler_5.TelemetryHandler} telemetry\n     * @param {!tsickle_rinterfaces_2.AckIdGenerator} ackIdGenerator\n     * @return {void}\n     */\n    initialize(sessionId, telemetry, ackIdGenerator) {\n        this.telemetry = telemetry;\n        this.ackIdGenerator = ackIdGenerator;\n        if (this.pendingTelemetry.length > 0) {\n            for (const obj of this.pendingTelemetry) {\n                telemetry.emitDebugEvent(obj.name, obj.error);\n            }\n            this.pendingTelemetry = [];\n        }\n        if (this.pendingErrors.length > 0) {\n            for (const error of this.pendingErrors) {\n                this.emitError(error);\n            }\n            this.pendingErrors = [];\n        }\n        this.profiling = false;\n        this.resetPerf();\n        // If needed, updateStreamTime should be called with a better stream begin time.\n        if (this.streamBeginTs === 0) {\n            this.updateStreamTime();\n        }\n        if (this.rworker) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                initMessage: {\n                    sessionId\n                }\n            };\n            this.rworker.postMessage(workerMessage);\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{404f264}\");\n        }\n        else {\n            dependencies_1.Log.e(\"{1f5ec29}\", \"{c62bf29}\");\n        }\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    deinitialize() {\n        this.telemetry = undefined;\n    }\n    /**\n     * @public\n     * @param {!tsickle_rinterfaces_2.StatsHeader} statsHeader\n     * @return {void}\n     */\n    startProfiling(statsHeader) {\n        this.profiling = false;\n        /** @type {!output$ragnarokprofiler.WorkerMessage} */\n        const workerMessage = {\n            startStats: {\n                statsHeader\n            }\n        };\n        if (this.rworker) {\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{6897d5e}\");\n            this.rworker.postMessage(workerMessage);\n        }\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    stopProfiling() {\n        this.profiling = false;\n        /** @type {!output$ragnarokprofiler.WorkerMessage} */\n        const workerMessage = {\n            stopStats: true\n        };\n        if (this.rworker) {\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{76b05dd}\");\n            this.rworker.postMessage(workerMessage);\n        }\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    updateStreamTime() {\n        // Every timestamp collected and uploaded to server will be relative to below timestamp.\n        this.streamBeginTs = performance.now();\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    resetPerf() {\n        this.perf.RAFTS = 0;\n        this.perf.DCSend = 0;\n        this.perf.GetStats = 0;\n        this.perf.FrameInfo = 0;\n    }\n    /**\n     * @public\n     * @param {!tsickle_rinterfaces_2.WebSocketMsg} _send\n     * @return {void}\n     */\n    sendOverWs(_send) {\n        if (this.rworker) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            let msg = {\n                send: _send\n            };\n            this.rworker.postMessage(msg);\n        }\n    }\n    /**\n     * @public\n     * @param {!MessageEvent<?>} ev\n     * @return {void}\n     */\n    onWorkerMessage(ev) {\n        /** @type {!tsickle_rinterfaces_2.WorkerResponse} */\n        let response = ev.data;\n        if (response.statsStarted) {\n            this.profiling = true;\n            dependencies_1.Log.d(\"{1f5ec29}\", \"{0f8a41a}\");\n        }\n        else if (response.log) {\n            dependencies_1.Log.i(\"{cbf9f59}\", \"{0b0c6f9}\", response.log);\n        }\n        else if (response.exception) {\n            dependencies_1.Log.i(\"{cbf9f59}\", \"{0b0c6f9}\", response.exception);\n        }\n        else if (response.wsClose) {\n            if (this.wsHandler) {\n                this.wsHandler.closeHandler(response.wsClose);\n            }\n            else {\n                dependencies_1.Log.e(\"{1f5ec29}\", \"{900a6f2}\");\n            }\n        }\n        else if (response.wsMessage) {\n            if (this.wsHandler) {\n                this.wsHandler.messageHandler(response.wsMessage);\n            }\n            else {\n                dependencies_1.Log.e(\"{1f5ec29}\", \"{900a6f2}\");\n            }\n        }\n        else if (response.wsOpening) {\n            if (this.wsHandler) {\n                this.wsHandler.openingHandler();\n            }\n            else {\n                dependencies_1.Log.e(\"{1f5ec29}\", \"{900a6f2}\");\n            }\n        }\n        else if (response.wsOpen) {\n            if (this.wsHandler) {\n                this.wsHandler.openHandler();\n            }\n            else {\n                dependencies_1.Log.e(\"{1f5ec29}\", \"{900a6f2}\");\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {!ErrorEvent} ev\n     * @return {void}\n     */\n    onWorkerError(ev) {\n        if (this.telemetry) {\n            this.emitError(ev);\n        }\n        else {\n            this.pendingErrors.push(ev);\n        }\n    }\n    /**\n     * @private\n     * @param {!ErrorEvent} ev\n     * @return {void}\n     */\n    emitError(ev) {\n        var _a, _b, _c, _d;\n        // We are seeing that the ErrorEvent object doesn't contain any useful\n        // information. Fill defaults to avoid parsing errors.\n        (/** @type {!tsickle_telemetryhandler_5.TelemetryHandler} */ (this.telemetry)).emitExceptionEvent(undefined, (_a = ev === null || ev === void 0 ? void 0 : ev.message) !== null && _a !== void 0 ? _a : \"\", (_b = ev === null || ev === void 0 ? void 0 : ev.filename) !== null && _b !== void 0 ? _b : \"\", (_c = ev === null || ev === void 0 ? void 0 : ev.lineno) !== null && _c !== void 0 ? _c : 0, (_d = ev === null || ev === void 0 ? void 0 : ev.colno) !== null && _d !== void 0 ? _d : 0, true, \"WorkerError\");\n    }\n    /**\n     * @public\n     * @return {void}\n     */\n    onPreRender() {\n        if (this.profiling) {\n            if (this.perf.RAFTS != 0) {\n                /** @type {!output$ragnarokprofiler.WorkerMessage} */\n                const workerMessage = {\n                    perf: this.perf\n                };\n                if (this.rworker) {\n                    this.rworker.postMessage(workerMessage);\n                }\n                this.resetPerf();\n            }\n            this.perf.RAFTS = this.getStreamTime();\n        }\n    }\n    /**\n     * @public\n     * @param {number} _time\n     * @return {void}\n     */\n    addDataChannelSendTime(_time) {\n        if (this.profiling) {\n            this.perf.DCSend += _time;\n        }\n    }\n    /**\n     * @public\n     * @param {number} _time\n     * @return {void}\n     */\n    addGetStatsTime(_time) {\n        if (this.profiling) {\n            this.perf.GetStats += _time;\n        }\n    }\n    /**\n     * @public\n     * @param {!Array<!ArrayBuffer>} report\n     * @param {tsickle_statsinterfaces_3.StatsType} type\n     * @return {void}\n     */\n    addStatsReport(report, type) {\n        var _a;\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                webrtcStats: { type: type, stats: report },\n                ackid: (_a = this.ackIdGenerator) === null || _a === void 0 ? void 0 : _a.getNextAckId()\n            };\n            if (this.rworker) {\n                //   console.log(\"report to  \" + typeof report);\n                this.rworker.postMessage(workerMessage, report);\n            }\n        }\n    }\n    /**\n     * @public\n     * @param {!tsickle_interfaces_1.StreamingQuality} streamingQuality\n     * @return {void}\n     */\n    addQualityScore(streamingQuality) {\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                sq: {\n                    latencyScore: streamingQuality.latencyScore,\n                    bandwidthScore: streamingQuality.bandwidthScore,\n                    qualityScore: streamingQuality.qualityScore,\n                    networkLossScore: streamingQuality.networkLossScore,\n                    timestamp: this.getStreamTime()\n                }\n            };\n            if (this.rworker) {\n                this.rworker.postMessage(workerMessage);\n            }\n        }\n    }\n    /**\n     * @public\n     * @param {number} duration\n     * @param {number} startTime\n     * @return {void}\n     */\n    addMainThreadBlockDuration(duration, startTime) {\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                duration: {\n                    timestamp: startTime - this.streamBeginTs,\n                    duration: duration\n                }\n            };\n            if (this.rworker) {\n                this.rworker.postMessage(workerMessage);\n            }\n        }\n    }\n    /**\n     * @public\n     * @param {number} bufferedAmount\n     * @param {number} schedulingDelay\n     * @return {void}\n     */\n    addInputChannelStats(bufferedAmount, schedulingDelay) {\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                inputChannelStats: {\n                    timestamp: this.getStreamTime(),\n                    bufferedAmount: bufferedAmount,\n                    maxSchedulingDelay: schedulingDelay\n                }\n            };\n            if (this.rworker) {\n                this.rworker.postMessage(workerMessage);\n            }\n        }\n    }\n    /**\n     * @public\n     * @param {number} deltaUsedHeapSize\n     * @param {number} deltaTotalHeapSize\n     * @return {void}\n     */\n    addGarbageCollectionStats(deltaUsedHeapSize, deltaTotalHeapSize) {\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                garbageCollectionStats: {\n                    timestamp: this.getStreamTime(),\n                    deltaUsedHeapSize: deltaUsedHeapSize,\n                    deltaTotalHeapSize: deltaTotalHeapSize\n                }\n            };\n            if (this.rworker) {\n                this.rworker.postMessage(workerMessage);\n            }\n        }\n    }\n    /**\n     * @public\n     * @param {number} framesDecoded\n     * @param {number} framesDropped\n     * @return {void}\n     */\n    onFrameInfo(framesDecoded, framesDropped) {\n        if (this.profiling) {\n            /* Frame Render Info of the video tag element.\n                           This is not related to decode.\n                           1 byte value:  Upper nibble - FramesDecoded\n                                          Lower nibble - FramesDropped.\n                           In case either framesDecoded/Dropped is above 15,\n                           upload 15(0xF) as the value so that its contained in nibble*/\n            /** @type {number} */\n            let x = Math.min(framesDecoded, 15) << 4;\n            /** @type {number} */\n            let y = Math.min(framesDropped, 15);\n            this.perf.FrameInfo = x | y;\n        }\n    }\n    /**\n     * @public\n     * @param {string} type\n     * @return {void}\n     */\n    onEvent(type) {\n        if (this.profiling) {\n            /** @type {!output$ragnarokprofiler.WorkerMessage} */\n            const workerMessage = {\n                clientEvent: {\n                    TS: this.getStreamTime(),\n                    eventtype: type\n                }\n            };\n            if (this.rworker) {\n                this.rworker.postMessage(workerMessage);\n            }\n        }\n    }\n    /* Get the current time relative to the stream start time. */\n    /**\n     * @public\n     * @return {number}\n     */\n    getStreamTime() {\n        return performance.now() - this.streamBeginTs;\n    }\n    /**\n     * @public\n     * @return {number}\n     */\n    getStreamBeginTime() {\n        return this.streamBeginTs;\n    }\n}\nexports.RagnarokProfilerImpl = RagnarokProfilerImpl;\n/* istanbul ignore if */\nif (false) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.profiling;\n    /**\n     * @type {!output$ragnarokprofiler.Perf}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.perf;\n    /**\n     * @type {(null|!Worker)}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.rworker;\n    /**\n     * @type {number}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.streamBeginTs;\n    /**\n     * @type {(null|!tsickle_rinterfaces_2.WebSocketHandler)}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.wsHandler;\n    /**\n     * @type {(undefined|!tsickle_telemetryhandler_5.TelemetryHandler)}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.telemetry;\n    /**\n     * @type {(undefined|!tsickle_rinterfaces_2.AckIdGenerator)}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.ackIdGenerator;\n    /**\n     * @type {!Array<!ErrorEvent>}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.pendingErrors;\n    /**\n     * @type {!Array<{name: string, error: string}>}\n     * @private\n     */\n    RagnarokProfilerImpl.prototype.pendingTelemetry;\n}\n// Create one instance of profiler used by all Ragnarok classes.\n/** @type {!RagnarokProfilerImpl} */\nexports.RagnarokProfiler = new RagnarokProfilerImpl();\n","import {\r\n    StartSessionResultEvent,\r\n    StreamingTerminatedEvent,\r\n    STREAMING_STATE,\r\n    StreamingEvent,\r\n    RNotificationCode,\r\n    TrackType,\r\n    Stream,\r\n    CustomMessage,\r\n    MicState,\r\n    EVENTS,\r\n    InputConfigFlags,\r\n    InputType\r\n} from \"./interfaces\";\r\nimport {\r\n    IEventEmitter,\r\n    ErrorDetails,\r\n    GetRandNumericString,\r\n    GetHexString,\r\n    GridSession,\r\n    Usage,\r\n    IsChromium,\r\n    PlatformDetails,\r\n    SDPUtils,\r\n    ISDPIceParameters,\r\n    ISDPDtlsParameters,\r\n    IsWebOS,\r\n    AppLaunchMode,\r\n    Log,\r\n    StreamParam\r\n} from \"./dependencies\";\r\nimport {\r\n    WebSocketMsg,\r\n    ExtendedDebugStats,\r\n    AckIdGenerator,\r\n    StatsHeader,\r\n    IStreamCallbacks,\r\n    WebSocketClose,\r\n    WebSocketHandler,\r\n    VideoStreamProgress,\r\n    StaticStreamStats,\r\n    DataChannelParams\r\n} from \"./rinterfaces\";\r\nimport {\r\n    getClientTerminationReason,\r\n    getRNotificationCode,\r\n    getRErrorCodeForExitMessage,\r\n    ExitMessage\r\n} from \"./util/serverclienterrormap\";\r\nimport { TelemetryHandler } from \"./telemetry/telemetryhandler\";\r\nimport { InputHandler } from \"./input/inputhandler\";\r\nimport { MicCapturer } from \"./miccapturer\";\r\nimport { RErrorCode } from \"./rerrorcode\";\r\nimport {\r\n    ClientStatsService,\r\n    IceConnectionStats,\r\n    IceCandidateCategory,\r\n    IceCandidateCategoryCounts,\r\n    getIceCandidateCategory,\r\n    PrivateIPv4Range,\r\n    getIceCandidateAddressRange,\r\n    IClientStatsCallbacks\r\n} from \"./stats/clientstatsservice\";\r\nimport { RagnarokProfiler } from \"./ragnarokprofiler\";\r\nimport { RagnarokSettings } from \"./util/settings\";\r\nimport { VirtualGamepadHandler } from \"./input/virtualgamepad\";\r\nimport { GamepadTester } from \"./debug/gamepadtester\";\r\nimport { GamepadHandler } from \"./input/gamepadhandler\";\r\nimport { AudioRecorder } from \"./debug/audiorecorder\";\r\nimport { NvstConfig, getDefaultNvstVideoConfig, handleNvstOffer } from \"./nvstconfig\";\r\nimport { CalculateMaxBitrateKbps, mungingTest } from \"./util/utils\";\r\nimport { WebSocketImpl } from \"./websocketimpl\";\r\nimport { GetCodecList, SdpCodecType } from \"./util/devicecapabilities\";\r\nimport { BitstreamDump } from \"./debug/bitstreamdump\";\r\nimport { ILDATHandler } from \"./debug/ldatoverlay\";\r\nimport { SafeZoneHandler } from \"./safezonehandler\";\r\nimport { WindowStateObserver, WindowStateType } from \"./windowstateobserver\";\r\n\r\nconst LOGTAG = \"streamclient\";\r\nconst WSLOGTAG = \"websocketimpl\";\r\n\r\nconst enum RIOverlayDevices {\r\n    GAMEPAD = 0x0001\r\n}\r\n\r\nexport declare interface ControlChannelMsg {\r\n    version?: { major: number; minor: number } /* c->s and s->c sent at the starting */;\r\n    exitMessage?: ExitMessage /* c->s and s->c, terminates the session */;\r\n    perfIndicator?: { on: boolean } /* c->s, toggles perf indiciator */;\r\n    stutterIndicator?: { on: boolean } /* c->s, toggles stutter indiciator */;\r\n    riDeviceOverlay?: {\r\n        bitmap: number;\r\n    } /* c->s, toggles server-side remote input device overlay */;\r\n    latencyTrigger?: boolean /* sends latency trigger to server */;\r\n    pcmDumpTrigger?: boolean /* sends pcmdump trigger to server */;\r\n    timerNotification?: { code: number; secondsLeft: number } /* s->c, timer warnings */;\r\n    heartbeat?: {} /* c->s, tells server we're alive */;\r\n    debugMessage?: { message: string } /* s->c, request to display message on client */;\r\n    customMessage?: string /* s->c & c->s stringified CustomMessage JSON*/;\r\n    videoStreamProgressEvent?: {\r\n        streamIndex: number;\r\n        videoStreamProgress: number;\r\n        timestampUs: number;\r\n    } /* s->c, video stream progress  */;\r\n    etwPrint?: string /* c->s remote trace print*/;\r\n    setMaxBitrate?: {\r\n        streamIndex: number;\r\n        maxBitrate: number;\r\n    } /* c->s, max bitrate in kbps */;\r\n    setDrcState?: { streamIndex: number; state: boolean } /* c->s, drc state */;\r\n    setDfcState?: { streamIndex: number; state: boolean } /* c->s, dfc state */;\r\n    windowState?: {\r\n        streamIndex: number;\r\n        frameNumber: number;\r\n        windowStateFlags: number;\r\n    } /* c->s, notify server of update to window state */;\r\n}\r\n\r\nconst enum NvstWindowStateFlags {\r\n    /// If bit is set mouse cursor is on window else it is on another window.\r\n    MOUSE_FOCUS = 0x0001,\r\n    /// If bit is set window has keyboard focus else another window have focus.\r\n    /// Streaming configuration will be reduced by QoS when not in focus.\r\n    KEYBOARD_FOCUS = 0x0002,\r\n    // If bit is set window is minimize\r\n    MINIMIZE = 0x0004,\r\n    // If bit is set window is maximize\r\n    MAXIMIZE = 0x0008,\r\n    // If bit is set window is fullscreen else it is windowed mode.\r\n    FULLSCREEN = 0x0010\r\n}\r\n\r\ndeclare interface SignalingMessage {\r\n    type?: string;\r\n    sdp?: string;\r\n    candidate?: string;\r\n    sdpMLineIndex?: number | null;\r\n    sdpMid?: string | null;\r\n    nvstSdp?: string;\r\n    nvstServerOverrides?: string;\r\n}\r\n\r\nexport interface MultiopusInfo {\r\n    fmtRed: string | undefined;\r\n    fmtCodec: string;\r\n    specificationRed: string;\r\n    specificationCodec: string;\r\n}\r\n\r\nconst IceConnectionFlags = {\r\n    NONE: 0x0000,\r\n    NEW: 0x0001,\r\n    CHECKING: 0x0002,\r\n    CONNECTED: 0x0004,\r\n    COMPLETED: 0x0008,\r\n    FAILED: 0x0010,\r\n    DISCONNECTED: 0x0020,\r\n    CLOSED: 0x0040\r\n};\r\n\r\nconst enum ChannelState {\r\n    CONNECTING = \"connecting\",\r\n    OPEN = \"open\",\r\n    CLOSING = \"closing\",\r\n    CLOSED = \"closed\"\r\n}\r\n\r\ndeclare interface RTCIceCandidatePairDef {\r\n    local?: RTCIceCandidate;\r\n    remote?: RTCIceCandidate;\r\n}\r\n\r\ndeclare interface RTCIceTransportExtras extends RTCIceTransport {\r\n    getSelectedCandidatePair(): RTCIceCandidatePairDef | null;\r\n}\r\n\r\nconst VIDEO_STREAM_NAME = \"app_video_stream\";\r\nconst AUDIO_STREAM_NAME = \"app_audio_stream\";\r\nconst MEDIA_STREAM_NAME = \"app_media_stream\";\r\n\r\nconst LEGACY_STREAM_NAME = \"stream_id\";\r\nconst LEGACY_SECOND_STREAM_NAME = \"second_stream_id\";\r\nconst MIC_MID = \"3\";\r\nconst DIR_SEND_TRACK = \"sendrecv\";\r\n\r\nexport class StreamClient implements WebSocketHandler, IClientStatsCallbacks {\r\n    eventEmitter: IEventEmitter;\r\n    name: string = \"\";\r\n    id: number = 0;\r\n    private nvstConfig: NvstConfig = { video: [], clientCapture: 0 };\r\n    session: GridSession;\r\n    accessToken: string;\r\n    videoElement: HTMLVideoElement;\r\n    audioElement: HTMLAudioElement;\r\n    remotePeerId: number = -1;\r\n    connectionUrl: string;\r\n    pc?: RTCPeerConnection;\r\n    inputChannel?: RTCDataChannel;\r\n    cursorChannel?: RTCDataChannel;\r\n    statsChannel?: RTCDataChannel;\r\n    controlChannel?: RTCDataChannel;\r\n    inputHandler?: InputHandler;\r\n    stopNotified: boolean = false;\r\n    startNotified: boolean = false;\r\n    iceCandidateFlag: number = 0;\r\n    telemetry: TelemetryHandler;\r\n    configFlags: InputConfigFlags;\r\n    micCapturer: MicCapturer;\r\n    debugMessageElement: HTMLDivElement;\r\n    debugMessageTimeoutId: number = 0;\r\n    streamBeginTimeoutId: number = 0;\r\n    statsService?: ClientStatsService;\r\n    profilerRunning: boolean = false;\r\n    webSocketDirtyCloseCount: number = 0;\r\n    signInTimeoutId: number = 0;\r\n    gotOffer: boolean = false;\r\n    gotLocalCandidate: boolean = false;\r\n    gotRemoteCandidate: boolean = false;\r\n    gotAudioTrack: boolean = false;\r\n    gotVideoTrack: boolean = false;\r\n    callbacks: IStreamCallbacks;\r\n    audioTrackMuted: boolean = true;\r\n    //Feature toggle state\r\n    // can be moved to new class, aggregating all features that can be toggled\r\n    private perfIndicator: boolean = false;\r\n    private stutterIndicator: boolean = false;\r\n    private riDeviceOverlayBitmap: number = 0;\r\n    private trackIdsExpected: string[] = [];\r\n    private streamsAttached: Stream[] = [];\r\n    private signInUrl: string = \"\";\r\n    private signInRetries = 0;\r\n    private gamepadTester: GamepadTester;\r\n    private gamepadHandler: GamepadHandler;\r\n    private isAckSupportedOnWs: boolean = false;\r\n    private ackIdGenerator: AckIdGenerator = new AckIdGenerator();\r\n    private timeTakenBySetRemoteDescriptionCall: number = 0;\r\n    private timeTakenBySetLocalDescriptionCall: number = 0;\r\n    private timeTakenByCreateAnswerCall: number = 0;\r\n    private audioRecorder?: AudioRecorder;\r\n    private textInputElement?: HTMLInputElement;\r\n    private signInTimerStart: number = 0;\r\n    private streamBeginTimerStart: number = Date.now();\r\n    private signInDuration: number = 0;\r\n    private streamBeginDuration: number = 0;\r\n    private pcReconnects: number = 0;\r\n    private platformDetails: PlatformDetails;\r\n    private hasPendingKeyboardLayout: boolean = false;\r\n    private keyboardLayout: string = \"\";\r\n    private appLaunchMode: AppLaunchMode;\r\n    private webSocket?: WebSocketImpl;\r\n    private maxReceivedAckId: number = 0;\r\n    private videoStreamProgress: VideoStreamProgress = VideoStreamProgress.NO_INFO;\r\n    private clientAppVersion?: string;\r\n    /// ICE stats taken when the peer connection becomes \"disconnected\"\r\n    private disconnectedIceStats?: IceConnectionStats;\r\n    private isResume?: boolean;\r\n    private codecsPromise: Promise<SdpCodecType[]>;\r\n    private mungingTestPromise: Promise<Number>;\r\n    private requestedRegion?: string;\r\n    private bitstreamDump?: BitstreamDump;\r\n    private queuedControlMessages: ControlChannelMsg[] = [];\r\n    private safeZoneHandler: SafeZoneHandler;\r\n    private sendVideoTrack?: MediaStreamTrack;\r\n    private receivedAudioTrackId: string = \"\";\r\n    private windowObserver: WindowStateObserver;\r\n    private windowStateChangeFunc: Function = this.onWindowStateChange.bind(this);\r\n    private iceCandidateEventCount: number = 0;\r\n    private candidateCategoryCounts: IceCandidateCategoryCounts = new IceCandidateCategoryCounts();\r\n    private iceCandidateEventFunc: any = this.iceCandidateEventHandler.bind(this);\r\n    private candidateAddressRanges: Set<PrivateIPv4Range> = new Set();\r\n    constructor(\r\n        parent: IStreamCallbacks,\r\n        videoElement: HTMLVideoElement,\r\n        audioElement: HTMLAudioElement,\r\n        micCapturer: MicCapturer,\r\n        configFlags: InputConfigFlags,\r\n        gamepadTester: GamepadTester,\r\n        gamepadHandler: GamepadHandler,\r\n        telemetry: TelemetryHandler,\r\n        platformDetails: PlatformDetails,\r\n        session: GridSession,\r\n        accessToken: string,\r\n        streamParam?: StreamParam,\r\n        audioRecorder?: AudioRecorder,\r\n        textInputElement?: HTMLInputElement,\r\n        clientAppVersion?: string,\r\n        isResume?: boolean,\r\n        requestedRegion?: string\r\n    ) {\r\n        // TODO: streamParam shouldn't really be optional, and we shouldn't even use it because it still has references\r\n        // to the video and audio element IDs. We should probably take in a new interface created from session params\r\n        // just for StreamClient\r\n        this.platformDetails = platformDetails;\r\n        this.videoElement = videoElement;\r\n        this.audioElement = audioElement;\r\n        this.micCapturer = micCapturer;\r\n        this.eventEmitter = parent;\r\n        Log.d(\"{93c7910}\", \"{e1ca54d}\", JSON.stringify(session));\r\n        this.session = session;\r\n        this.accessToken = accessToken;\r\n\r\n        let providedBitrate: number | undefined;\r\n        if (RagnarokSettings.maxBitrate) {\r\n            providedBitrate = RagnarokSettings.maxBitrate;\r\n            Log.d(\"{93c7910}\", \"{55e5b30}\", providedBitrate);\r\n        } else if (streamParam?.maxBitrateKbps) {\r\n            providedBitrate = streamParam?.maxBitrateKbps;\r\n            Log.d(\"{93c7910}\", \"{965049f}\", providedBitrate);\r\n        }\r\n        for (const stream of session.streamInfo) {\r\n            // Use a function for this so we can log the calculated max bitrate\r\n            const calculate = () => {\r\n                const calculated = CalculateMaxBitrateKbps(stream.width, stream.height, stream.fps);\r\n                Log.d(\"{93c7910}\", \"{aff4184}\", calculated);\r\n                return calculated;\r\n            };\r\n            const maxBitrate = providedBitrate ?? calculate();\r\n            // TODO: This can be determined by checking if the video element supports requestVideoFrameCallback, but\r\n            // we don't have access to the video element in the constructor. Once we cleanup GridApp/StreamClient, we\r\n            // can set this properly\r\n            const mapRtpTimestampsToFrames = true;\r\n            this.nvstConfig.video.push(\r\n                getDefaultNvstVideoConfig(\r\n                    stream,\r\n                    maxBitrate,\r\n                    mapRtpTimestampsToFrames,\r\n                    streamParam?.drc\r\n                )\r\n            );\r\n        }\r\n        // TODO: Remove from constructor once early initialization added for device capabilities\r\n        this.codecsPromise = GetCodecList(\r\n            this.session.streamInfo[0] ?? { width: 0, height: 0, fps: 0 },\r\n            this.platformDetails\r\n        );\r\n\r\n        // TODO: Remove this when UI move to async function call of getSupportedChannelCount\r\n        this.mungingTestPromise = mungingTest();\r\n\r\n        this.telemetry = telemetry;\r\n        this.configFlags = configFlags;\r\n        this.callbacks = parent;\r\n        this.gamepadTester = gamepadTester;\r\n        this.gamepadHandler = gamepadHandler;\r\n        this.audioRecorder = audioRecorder;\r\n        this.textInputElement = textInputElement;\r\n        this.appLaunchMode = session.appLaunchMode;\r\n        this.clientAppVersion = clientAppVersion;\r\n        this.isResume = isResume;\r\n        this.requestedRegion = requestedRegion;\r\n        this.sendVideoTrack = streamParam?.sendVideoTrack;\r\n\r\n        // TODO: signalConnectionInfo members shouldn't be optional\r\n        let protocol = this.session.signalConnectionInfo.protocol!;\r\n        protocol = protocol.replace(\"http\", \"ws\");\r\n\r\n        this.connectionUrl =\r\n            protocol +\r\n            \"://\" +\r\n            this.session.signalConnectionInfo.ip +\r\n            \":\" +\r\n            this.session.signalConnectionInfo.port;\r\n\r\n        RagnarokProfiler.initialize(this.session.sessionId, this.telemetry, this.ackIdGenerator);\r\n        this.safeZoneHandler = new SafeZoneHandler(\r\n            this,\r\n            videoElement,\r\n            this.platformDetails,\r\n            this.telemetry\r\n        );\r\n        this.windowObserver = new WindowStateObserver(platformDetails);\r\n\r\n        const debugMessageElement = document.createElement(\"div\");\r\n        debugMessageElement.style.position = \"absolute\";\r\n        debugMessageElement.style.zIndex = \"300\";\r\n        debugMessageElement.style.left = \"0\";\r\n        debugMessageElement.style.top = \"0\";\r\n        debugMessageElement.style.width = \"100%\";\r\n        debugMessageElement.style.display = \"none\";\r\n        debugMessageElement.style.fontSize = \"3em\";\r\n        debugMessageElement.style.color = \"white\";\r\n        debugMessageElement.style.backgroundColor = \"gray\";\r\n        debugMessageElement.style.textAlign = \"center\";\r\n        this.videoElement.insertAdjacentElement(\"afterend\", debugMessageElement);\r\n        this.debugMessageElement = debugMessageElement;\r\n    }\r\n\r\n    /**\r\n     * Starts attempting to connect to the signaling server to start streaming.\r\n     * This should only be called once per StreamClient instance\r\n     */\r\n    public start() {\r\n        this.signInToConnectionServer();\r\n        RagnarokProfiler.updateStreamTime();\r\n        this.logStreamTimestamps();\r\n    }\r\n\r\n    private setSignInfo() {\r\n        this.name = \"peer-\" + GetRandNumericString(10);\r\n        Log.d(\"{93c7910}\", \"{f2b789d}\", this.name);\r\n        this.signInUrl = this.connectionUrl + \"/sign_in?peer_id=\" + this.name + \"&version=2\";\r\n\r\n        Log.d(\"{93c7910}\", \"{05b8afd}\", this.signInUrl);\r\n    }\r\n\r\n    /**\r\n     * Stops the currently active session\r\n     */\r\n    public stop(errorCode: number) {\r\n        this.telemetry.emitMetricEvent(\r\n            \"StreamTimersAndReconnects\",\r\n            GetHexString(errorCode),\r\n            0,\r\n            this.signInDuration,\r\n            this.streamBeginDuration,\r\n            this.pcReconnects\r\n        );\r\n        const peerAPIDurationsAndMicTelemetry = (micState: MicState) => {\r\n            Log.i(\"{93c7910}\", \"{a848987}\", micState);\r\n            this.telemetry.emitMetricEvent(\r\n                \"PeerAPIDurationsAndMic\",\r\n                GetHexString(errorCode),\r\n                this.timeTakenByCreateAnswerCall,\r\n                this.timeTakenBySetRemoteDescriptionCall,\r\n                this.timeTakenBySetLocalDescriptionCall,\r\n                micState\r\n            );\r\n        };\r\n\r\n        this.micCapturer.getCurrentMicStatus().then(state => {\r\n            peerAPIDurationsAndMicTelemetry(state);\r\n        });\r\n\r\n        // This will be no-op if start has already been notified.\r\n        this.notifyStart({\r\n            code: errorCode,\r\n            description: \"Session stopped before stream connected\"\r\n        });\r\n\r\n        if (this.debugMessageTimeoutId) {\r\n            clearTimeout(this.debugMessageTimeoutId);\r\n            this.debugMessageTimeoutId = 0;\r\n        }\r\n        this.debugMessageElement.remove();\r\n\r\n        this.stopNotified = true; // no need to report errors in this case.\r\n\r\n        //attempt to notify error to server as ragnarok is terminating the session\r\n        try {\r\n            this.sendControlMessage({\r\n                exitMessage: { code: getClientTerminationReason(errorCode) }\r\n            });\r\n        } catch (exp) {\r\n            const EXP_MSG = \"Send termination reason to server exception\";\r\n            Log.e(\"{93c7910}\", \"{d337883}\", exp);\r\n        }\r\n        this.stopInputHandler();\r\n\r\n        if (this.inputChannel) {\r\n            this.inputChannel.close();\r\n        }\r\n\r\n        this.stopStatsService();\r\n\r\n        this.pc?.removeEventListener(\"icecandidate\", this.iceCandidateEventFunc);\r\n        if (this.pc) {\r\n            this.pc.close();\r\n        }\r\n\r\n        this.stopBitstreamDump();\r\n\r\n        if (this.streamBeginTimeoutId !== 0) {\r\n            window.clearTimeout(this.streamBeginTimeoutId);\r\n            this.streamBeginTimeoutId = 0;\r\n        }\r\n\r\n        if (this.signInTimeoutId !== 0) {\r\n            window.clearTimeout(this.signInTimeoutId);\r\n            this.signInTimeoutId = 0;\r\n        }\r\n\r\n        RagnarokProfiler.stopProfiling();\r\n\r\n        this.webSocket?.uninitialize();\r\n        RagnarokProfiler.stopWebSocket();\r\n        this.logStreamTimestamps();\r\n        RagnarokProfiler.deinitialize();\r\n\r\n        if (this.gotVideoTrack && this.audioTrackMuted) {\r\n            Log.e(\"{93c7910}\", \"{283a180}\");\r\n            this.telemetry.emitDebugEvent(\"Audio track muted\");\r\n        }\r\n        this.gotVideoTrack = false;\r\n        this.gotAudioTrack = false;\r\n\r\n        if (this.webSocketDirtyCloseCount > 0) {\r\n            this.telemetry.emitMetricEvent(\r\n                \"WebSocketClose\",\r\n                \"\",\r\n                0,\r\n                this.webSocketDirtyCloseCount,\r\n                0,\r\n                0\r\n            );\r\n        }\r\n\r\n        this.audioRecorder?.uninitialize();\r\n        this.safeZoneHandler.uninitialize();\r\n\r\n        this.windowObserver.removeStateListener(WindowStateType.FOCUS, this.windowStateChangeFunc);\r\n        this.windowObserver.removeStateListener(\r\n            WindowStateType.MOUSE_FOCUS,\r\n            this.windowStateChangeFunc\r\n        );\r\n        this.windowObserver.removeStateListener(\r\n            WindowStateType.FULLSCREEN,\r\n            this.windowStateChangeFunc\r\n        );\r\n        this.windowObserver.uninitialize();\r\n    }\r\n\r\n    messageHandler(obj: WebSocketMsg) {\r\n        Log.i(\"{93c7910}\", \"{39024c3}\", JSON.stringify(obj));\r\n        if (obj.ackid && this.maxReceivedAckId < obj.ackid) {\r\n            this.maxReceivedAckId = obj.ackid;\r\n        }\r\n        if (obj.peer_info) {\r\n            if (!this.isAckSupportedOnWs && obj.ackid !== undefined) {\r\n                this.isAckSupportedOnWs = true;\r\n            }\r\n            if (obj.peer_info.name === this.name || this.id === 0) {\r\n                // This is the first message and this is our id.\r\n                this.id = obj.peer_info.id;\r\n                Log.d(\"{93c7910}\", \"{c5faf27}\", this.id);\r\n            } else {\r\n                // This is some other peer.\r\n            }\r\n        } else if (obj.peer_msg) {\r\n            let peerId = obj.peer_msg.from;\r\n            this.handlePeerMessage(peerId, obj.peer_msg.msg);\r\n        } else if (obj.error) {\r\n            if (obj.error === \"peerRemoved\") {\r\n                let removedCode: RErrorCode;\r\n                // If we get peerRemoved before streaming begins, it can indicate the server timed out before\r\n                // establishing a peer connection. If we get a more specific error from our stream begin error handling,\r\n                // use that instead of our generic ServerDisconnectedPeerRemovedBeforeStream\r\n                if (this.streamBeginTimeoutId !== 0) {\r\n                    removedCode =\r\n                        this.getStreamBeginError() ??\r\n                        RErrorCode.ServerDisconnectedPeerRemovedBeforeStream;\r\n                    Log.w(\"{93c7910}\", \"{cbb35d3}\");\r\n                } else {\r\n                    removedCode = RErrorCode.ServerDisconnectedPeerRemovedByServer;\r\n                }\r\n                this.stopStreamWithError(removedCode);\r\n            } else {\r\n                this.stopStreamWithError(RErrorCode.ServerDisconnectedUnknownError);\r\n            }\r\n        }\r\n    }\r\n\r\n    signInTimeout() {\r\n        this.signInTimeoutId = 0;\r\n        Log.i(\"{93c7910}\", \"{6d6b337}\");\r\n        this.notifyStart({\r\n            code: RErrorCode.StreamerSignInTimeout\r\n        });\r\n    }\r\n\r\n    closeHandler(data: WebSocketClose) {\r\n        if (data.error && this.signInTimeoutId !== 0) {\r\n            // If there was an error and the timeout hasn't been cleared, sign-in failed.\r\n            // @todo add an event for WS in schema\r\n            this.telemetry.emitHttpEvent({\r\n                url: this.signInUrl,\r\n                verb: \"WS\",\r\n                statusCode: String(data.code ?? \"\"),\r\n                requestStatusCode: data.reason ?? \"\",\r\n                sessionId: this.session.sessionId,\r\n                subSessionId: this.session.subSessionId,\r\n                requestId: String(data.wasClean ?? \"\"),\r\n                serverId: this.session?.signalConnectionInfo.ip ?? \"\",\r\n                callDuration: this.signInRetries\r\n            });\r\n            const MAX_SIGNIN_RETRIES = 3;\r\n            this.signInRetries++;\r\n            if (this.signInRetries <= MAX_SIGNIN_RETRIES) {\r\n                this.setSignInfo();\r\n                this.createWSAndSignIn();\r\n            } else {\r\n                window.clearTimeout(this.signInTimeoutId);\r\n                this.signInTimeoutId = 0;\r\n                Log.i(\"{93c7910}\", \"{8595cb4}\");\r\n                this.notifyStart({\r\n                    code: RErrorCode.StreamerSignInFailure\r\n                });\r\n            }\r\n        }\r\n\r\n        // Based on telemetry data, !data.wasClean covers all error cases and more\r\n        if (!data.wasClean) {\r\n            this.webSocketDirtyCloseCount++;\r\n        }\r\n    }\r\n\r\n    openingHandler() {\r\n        Log.i(\"{93c7910}\", \"{6423101}\");\r\n    }\r\n\r\n    openHandler() {\r\n        if (this.signInTimeoutId !== 0) {\r\n            window.clearTimeout(this.signInTimeoutId);\r\n            this.signInTimeoutId = 0;\r\n            this.signInDuration = Date.now() - this.signInTimerStart;\r\n        }\r\n\r\n        if (!this.startNotified && this.streamBeginTimeoutId === 0) {\r\n            this.startStreamBeginTimeout();\r\n        }\r\n    }\r\n\r\n    private onWsInfoLog(infoMsg: string) {\r\n        Log.i(\"{8ba4138}\", \"{0b0c6f9}\", infoMsg);\r\n    }\r\n\r\n    private onWsExceptionLog(expMsg: string) {\r\n        this.telemetry.emitExceptionEvent(undefined, expMsg, \"{8ba4138}.ts\", 0, 0, true);\r\n        Log.e(\"{8ba4138}\", \"{0b0c6f9}\", expMsg);\r\n    }\r\n\r\n    private createWSAndSignIn() {\r\n        this.webSocket = new WebSocketImpl(this.session.sessionId, this.session.accessToken || \"\", {\r\n            wsHandler: this,\r\n            logCallback: {\r\n                info: this.onWsInfoLog.bind(this),\r\n                exception: this.onWsExceptionLog.bind(this)\r\n            }\r\n        });\r\n        this.webSocket.initialize(this.signInUrl, this.maxReceivedAckId, this.isAckSupportedOnWs);\r\n    }\r\n\r\n    signInToConnectionServer() {\r\n        this.setSignInfo();\r\n        let signInTimeoutMs = 10000;\r\n        if (\r\n            RagnarokSettings.ragnarokConfig.signInTimeout &&\r\n            RagnarokSettings.ragnarokConfig.signInTimeout !== 0\r\n        ) {\r\n            signInTimeoutMs = RagnarokSettings.ragnarokConfig.signInTimeout;\r\n            Log.i(\"{93c7910}\", \"{4f2f101}\", signInTimeoutMs);\r\n        }\r\n\r\n        this.signInTimeoutId = window.setTimeout(() => this.signInTimeout(), signInTimeoutMs);\r\n        this.signInTimerStart = Date.now();\r\n        this.createWSAndSignIn();\r\n    }\r\n\r\n    startStreamBeginTimeout() {\r\n        const INITIAL_ICE_CONNECTION_TIMEOUT_MS = 30000;\r\n        this.streamBeginTimeoutId = window.setTimeout(\r\n            () => this.streamBeginTimeout(),\r\n            INITIAL_ICE_CONNECTION_TIMEOUT_MS\r\n        );\r\n        this.streamBeginTimerStart = Date.now();\r\n    }\r\n\r\n    private streamBeginTimeout() {\r\n        this.streamBeginTimeoutId = 0;\r\n        Log.i(\"{93c7910}\", \"{d22df91}\");\r\n        this.stopStreamWithError(\r\n            this.getStreamBeginError() ?? RErrorCode.StreamerGetRemotePeerTimedOut\r\n        );\r\n    }\r\n\r\n    private getStreamBeginError(): RErrorCode | undefined {\r\n        let errorCode: RErrorCode | undefined;\r\n        switch (this.videoStreamProgress) {\r\n            case VideoStreamProgress.NO_INFO:\r\n            case VideoStreamProgress.SETUP_END:\r\n                break;\r\n            case VideoStreamProgress.ADAPTER_INIT_BEGIN:\r\n                errorCode = RErrorCode.StreamerVideoAdapterInitTimeOut;\r\n                break;\r\n            case VideoStreamProgress.FRAMEPROVIDER_INIT_BEGIN:\r\n                errorCode = RErrorCode.StreamerVideoFrameProviderInitTimeOut;\r\n                break;\r\n            case VideoStreamProgress.ENCODER_INIT_BEGIN:\r\n                errorCode = RErrorCode.StreamerVideoEncoderInitTimeOut;\r\n                break;\r\n            default:\r\n                errorCode = RErrorCode.StreamerVideoSetupTimeOut;\r\n                break;\r\n        }\r\n        const candidatePairError = this.statsService?.getCandidatePairError();\r\n        if (!this.id) {\r\n            errorCode = RErrorCode.StreamerNoPeerInfo;\r\n        } else if (!this.gotOffer) {\r\n            errorCode = RErrorCode.StreamerNoOffer;\r\n        } else if (!this.gotAudioTrack) {\r\n            errorCode = RErrorCode.StreamerNoAudioTrack;\r\n        } else if (!this.gotVideoTrack) {\r\n            errorCode = RErrorCode.StreamerNoVideoTrack;\r\n        } else if (!this.gotRemoteCandidate) {\r\n            errorCode = RErrorCode.StreamerNoRemoteCandidates;\r\n        } else if (!this.gotLocalCandidate) {\r\n            errorCode = RErrorCode.StreamerNoLocalCandidates;\r\n        } else if (candidatePairError) {\r\n            errorCode = candidatePairError;\r\n        } else if (getChannelState(this.inputChannel) === ChannelState.CONNECTING) {\r\n            errorCode = RErrorCode.StreamerInputChannelNotOpen;\r\n        } else if (getChannelState(this.cursorChannel) === ChannelState.CONNECTING) {\r\n            errorCode = RErrorCode.StreamerCursorChannelNotOpen;\r\n        } else if (getChannelState(this.controlChannel) === ChannelState.CONNECTING) {\r\n            errorCode = RErrorCode.StreamerControlChannelNotOpen;\r\n        }\r\n        return errorCode;\r\n    }\r\n\r\n    private stopStreamWithErrorIfSleep(): boolean {\r\n        let stopped = false;\r\n        // As per bug https://bugs.chromium.org/p/chromium/issues/detail?id=1060547 relying on signalingState to detect lid close (sleep),\r\n        // this is a temporary change until http://crbug.com/1083204 gets fixed.\r\n        if (IsChromium() && this.pc!.signalingState === \"closed\") {\r\n            stopped = true;\r\n            this.stopStreamWithError(RErrorCode.SystemSleepDuringStreaming);\r\n        }\r\n        return stopped;\r\n    }\r\n\r\n    private stopStreamDueToChannelClosing() {\r\n        if (!this.stopStreamWithErrorIfSleep()) {\r\n            this.stopStreamWithError(RErrorCode.StreamerDataChannelClosing);\r\n        }\r\n    }\r\n\r\n    private sendCandidatesTelemetry() {\r\n        const getInvalidTotal = (counts?: IceCandidateCategoryCounts) => {\r\n            const tcpCount = counts?.get(IceCandidateCategory.TCP) ?? 0;\r\n            const ipv6Count = counts?.get(IceCandidateCategory.IPV6) ?? 0;\r\n            return tcpCount + ipv6Count;\r\n        };\r\n        const getCandidateTotal = (source: string, counts?: IceCandidateCategoryCounts) => {\r\n            let totalCandidates = 0;\r\n            if (counts) {\r\n                let candidateLog = `${source} local candidates:`;\r\n                for (const [key, value] of counts) {\r\n                    totalCandidates += value;\r\n                    candidateLog += ` ${key}: ${value}`;\r\n                }\r\n                Log.i(\"{93c7910}\", \"{0b0c6f9}\", candidateLog);\r\n            }\r\n            return totalCandidates;\r\n        };\r\n\r\n        const candidateCategoriesStats = this.statsService?.getCandidateStatCategoryCounts();\r\n        const totalOnCandidateCount = getCandidateTotal(\"event\", this.candidateCategoryCounts);\r\n        const totalStatsCount = getCandidateTotal(\"stats\", candidateCategoriesStats);\r\n        const candidateEventDiff = totalOnCandidateCount - this.iceCandidateEventCount;\r\n        // metric string will be of the form: 'category <>, type <>'\r\n        // filters can be created in the backend to look for specific patterns since all fields have different sets of values\r\n        let selectedString = \"\";\r\n        const videoReceiver = this.pc\r\n            ?.getReceivers()\r\n            .find(receiver => receiver.track.kind === \"video\" && receiver.track.enabled);\r\n        const localCandidate = (<RTCIceTransportExtras>(\r\n            videoReceiver?.transport?.iceTransport\r\n        ))?.getSelectedCandidatePair?.()?.local;\r\n        if (localCandidate) {\r\n            const category = getIceCandidateCategory(localCandidate);\r\n            selectedString = `category: ${category}, type: ${localCandidate.type}`;\r\n        }\r\n\r\n        this.telemetry.emitMetricEvent(\r\n            \"LocalCandidatesCategories\",\r\n            selectedString,\r\n            totalOnCandidateCount,\r\n            totalOnCandidateCount - getInvalidTotal(this.candidateCategoryCounts),\r\n            totalStatsCount,\r\n            totalStatsCount - getInvalidTotal(candidateCategoriesStats)\r\n        );\r\n\r\n        const statsRanges = this.statsService?.getCandidateAddressRanges() ?? new Set();\r\n        this.telemetry.emitMetricEvent(\r\n            \"LocalCandidateRanges\",\r\n            `${this.pc?.iceGatheringState}`,\r\n            candidateEventDiff,\r\n            statsRanges?.size,\r\n            this.candidateAddressRanges.size,\r\n            new Set<PrivateIPv4Range>([...statsRanges, ...this.candidateAddressRanges]).size\r\n        );\r\n    }\r\n\r\n    public stopStreamWithError(error: number) {\r\n        if (!this.stopNotified) {\r\n            this.stopNotified = true;\r\n            this.stopInputHandler();\r\n\r\n            this.stopStatsService();\r\n            if (!this.startNotified) {\r\n                this.notifyStart({ code: error });\r\n            } else {\r\n                let result: StreamingTerminatedEvent = {\r\n                    sessionId: this.session.sessionId,\r\n                    subSessionId: this.session.subSessionId,\r\n                    error: { code: error },\r\n                    zoneName: this.session.zoneName,\r\n                    zoneAddress: this.session.zoneAddress\r\n                };\r\n                this.telemetry.emitDebugEvent(\r\n                    \"SignalingState\",\r\n                    GetHexString(error),\r\n                    this.pc?.signalingState\r\n                );\r\n                Log.i(\"{93c7910}\", \"{89d3ea6}\", this.pc!.signalingState);\r\n                this.callbacks.onStreamStop(result);\r\n            }\r\n            Log.e(\"{93c7910}\", \"{573fb24}\", GetHexString(error));\r\n        }\r\n    }\r\n\r\n    /** Replaces legacy stream names with new ones */\r\n    private renameStreams(): void {\r\n        for (const stream of this.streamsAttached) {\r\n            if (stream.streamId === LEGACY_STREAM_NAME && this.streamsAttached.length === 2) {\r\n                stream.streamId = VIDEO_STREAM_NAME;\r\n            } else if (stream.streamId === LEGACY_STREAM_NAME) {\r\n                stream.streamId = MEDIA_STREAM_NAME;\r\n            } else if (stream.streamId === LEGACY_SECOND_STREAM_NAME) {\r\n                stream.streamId = AUDIO_STREAM_NAME;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines which streams to apply to the video/audio elements. If possible, will combine separate video and audio\r\n     * streams into one media stream and apply it to the video element\r\n     *\r\n     * The server can send separate streams to avoid WebRTC A/V sync from delaying the video, but we may want to only\r\n     * have one stream on the client. This avoids having to use the audio element, which is important for Tizen. By\r\n     * combining them on the client, we get the best of both worlds\r\n     */\r\n    private setMediaElementStreams(): void {\r\n        const mediaStream = this.streamsAttached.find(x => x.streamId === MEDIA_STREAM_NAME);\r\n        if (mediaStream) {\r\n            this.setStreamOnElement(mediaStream, this.videoElement);\r\n            Log.i(\"{93c7910}\", \"{a5e354c}\");\r\n            return;\r\n        }\r\n\r\n        const videoStream = this.streamsAttached.find(x => x.streamId === VIDEO_STREAM_NAME);\r\n        const audioStream = this.streamsAttached.find(x => x.streamId === AUDIO_STREAM_NAME);\r\n        if (videoStream && audioStream) {\r\n            const mediaStream: Stream = {\r\n                streamId: MEDIA_STREAM_NAME,\r\n                tracks: videoStream.tracks.concat(audioStream.tracks)\r\n            };\r\n            this.streamsAttached.splice(this.streamsAttached.indexOf(videoStream), 1);\r\n            this.streamsAttached.splice(this.streamsAttached.indexOf(audioStream), 1);\r\n            this.streamsAttached.push(mediaStream);\r\n            this.setStreamOnElement(mediaStream, this.videoElement);\r\n            Log.i(\"{93c7910}\", \"{e2dc4ec}\");\r\n        } else if (videoStream) {\r\n            this.setStreamOnElement(videoStream, this.videoElement);\r\n            Log.i(\"{93c7910}\", \"{07f3411}\");\r\n        } else if (audioStream) {\r\n            this.setStreamOnElement(audioStream, this.audioElement);\r\n            Log.i(\"{93c7910}\", \"{243a50b}\");\r\n        } else {\r\n            Log.w(\"{93c7910}\", \"{c3a2679}\");\r\n        }\r\n    }\r\n\r\n    private addSendVideoTrack(): void {\r\n        try {\r\n            if (this.pc && this.sendVideoTrack) {\r\n                const transceiver = this.pc\r\n                    .getTransceivers()\r\n                    .find(x => x.receiver.track.kind === \"video\");\r\n                if (!transceiver) {\r\n                    Log.w(\"{93c7910}\", \"{8272b59}\");\r\n                } else {\r\n                    let logMsg = \"\";\r\n                    let origDir = transceiver.direction;\r\n                    if (transceiver.direction !== DIR_SEND_TRACK) {\r\n                        transceiver.direction = DIR_SEND_TRACK;\r\n                        logMsg =\r\n                            \" (\" + origDir + \" direction is overridden by \" + DIR_SEND_TRACK + \")\";\r\n                    }\r\n                    transceiver\r\n                        .sender!.replaceTrack(this.sendVideoTrack)\r\n                        .then(() => {\r\n                            Log.i(\"{93c7910}\", \"{b54f651}\", logMsg);\r\n                        })\r\n                        .catch((err: any) => {\r\n                            if (transceiver.direction !== origDir) {\r\n                                transceiver.direction = origDir;\r\n                            }\r\n                            Log.w(\"{93c7910}\", \"{d225159}\", err);\r\n                        });\r\n                }\r\n            }\r\n        } catch (exp) {\r\n            const EXP_MSG = \"SendVideoTrack: exception\";\r\n            Log.w(\"{93c7910}\", \"{66082ec}\", exp);\r\n        }\r\n    }\r\n\r\n    private logAndEmitExceptionEvent(message: string, exception: Error | DOMException) {\r\n        Log.w(\"{93c7910}\", \"{4d3c418}\", message, exception);\r\n        this.telemetry.emitExceptionEvent(exception, message, \"{93c7910}.ts\", 0, 0, true);\r\n    }\r\n\r\n    private setCodecPreferences(codec: SdpCodecType): void {\r\n        const transceiver = this.pc!.getTransceivers().find(\r\n            x =>\r\n                x.receiver.track.kind === \"video\" &&\r\n                (x.direction === \"recvonly\" || x.direction === \"sendrecv\")\r\n        );\r\n\r\n        if (!transceiver) {\r\n            return;\r\n        }\r\n        if (\r\n            !RTCRtpReceiver.getCapabilities ||\r\n            !RTCRtpSender.getCapabilities ||\r\n            !transceiver.setCodecPreferences\r\n        ) {\r\n            // These are unsupported on Firefox\r\n            Log.w(\"{93c7910}\", \"{274c489}\");\r\n            return;\r\n        }\r\n\r\n        const codecsToKeep = [codec, \"flexfec-03\", \"rtx\"];\r\n        const codecCapabilities = RTCRtpReceiver.getCapabilities(\"video\")?.codecs;\r\n        let preferences: RTCRtpCodecCapability[] = [];\r\n\r\n        if (!codecCapabilities) {\r\n            return;\r\n        }\r\n\r\n        for (const codec of codecsToKeep) {\r\n            const capabilities = codecCapabilities.filter(x => x.mimeType === \"video/\" + codec);\r\n            if (capabilities) {\r\n                preferences.push.apply(preferences, capabilities);\r\n            }\r\n        }\r\n\r\n        try {\r\n            transceiver.setCodecPreferences(preferences);\r\n        } catch (exp) {\r\n            const EXP_MSG = `Failed to set codec preferences to receiver capabilities`;\r\n            this.logAndEmitExceptionEvent(EXP_MSG, exp);\r\n\r\n            try {\r\n                preferences = preferences.concat(\r\n                    RTCRtpSender.getCapabilities(\"video\")?.codecs ?? []\r\n                );\r\n                transceiver.setCodecPreferences(preferences);\r\n            } catch (exp) {\r\n                const EXP_MSG = `Failed to set codec preferences to sender and receiver capabilities`;\r\n                this.logAndEmitExceptionEvent(EXP_MSG, exp);\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveWSToWebWorker() {\r\n        const WS_CLOSE_KEEP_PEER_ALIVE = 4001;\r\n        this.webSocket?.uninitialize(WS_CLOSE_KEEP_PEER_ALIVE);\r\n        this.webSocket = undefined;\r\n        RagnarokProfiler.startWebSocket(\r\n            this.signInUrl,\r\n            this.maxReceivedAckId,\r\n            this.isAckSupportedOnWs,\r\n            this,\r\n            true\r\n        );\r\n    }\r\n\r\n    notifyStart(error?: ErrorDetails) {\r\n        if (!this.startNotified) {\r\n            this.streamBeginDuration = Date.now() - this.streamBeginTimerStart;\r\n            if (error === undefined) {\r\n                this.moveWSToWebWorker();\r\n                if (RagnarokSettings.statsUploadEnabled) {\r\n                    this.startProfiler();\r\n                }\r\n            } else {\r\n                this.sendCandidatesTelemetry();\r\n            }\r\n\r\n            this.startNotified = true;\r\n            if (this.streamBeginTimeoutId !== 0) {\r\n                window.clearTimeout(this.streamBeginTimeoutId);\r\n                this.streamBeginTimeoutId = 0;\r\n            }\r\n\r\n            let result: StartSessionResultEvent = {\r\n                sessionId: this.session.sessionId,\r\n                subSessionId: this.session.subSessionId,\r\n                streams: this.streamsAttached,\r\n                streamInfo: this.session.streamInfo,\r\n                error: error,\r\n                zoneName: this.session.zoneName,\r\n                zoneAddress: this.session.zoneAddress,\r\n                gpuType: this.session.gpuType,\r\n                isResume: this.isResume ?? false\r\n            };\r\n            this.callbacks.onSessionStart(result);\r\n            this.safeZoneHandler.send();\r\n        }\r\n    }\r\n\r\n    public isStartNotified(): boolean {\r\n        return this.startNotified;\r\n    }\r\n\r\n    /** Sets element.srcObject to a new MediaStream with all the given stream's tracks */\r\n    private setStreamOnElement(stream: Stream, element: HTMLMediaElement): void {\r\n        const tracks = this.pc!.getTransceivers().map(x => x.receiver.track);\r\n        const mediaStream = new MediaStream(\r\n            tracks.filter(x => stream.tracks.find(y => y.trackId === x.id))\r\n        );\r\n        element.srcObject = mediaStream;\r\n    }\r\n\r\n    /**\r\n     * Sends a control channel message, failing if the channel isn't open\r\n     */\r\n    private sendControlMessage(msg: ControlChannelMsg): void {\r\n        try {\r\n            if (this.controlChannel?.readyState === ChannelState.OPEN) {\r\n                let t0 = performance.now();\r\n                this.controlChannel.send(JSON.stringify(msg));\r\n                let t1 = performance.now();\r\n                let delta = t1 - t0;\r\n                this.updateDcTimeDuration(delta);\r\n            } else {\r\n                Log.w(\"{93c7910}\", \"{593db1b}\");\r\n            }\r\n        } catch (exp) {\r\n            const EXP_MSG = \"sendControlMessage exception\";\r\n            Log.e(\"{93c7910}\", \"{a585a6e}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, EXP_MSG, \"{93c7910}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Queues a control channel message for sending if the channel isn't open yet, or sends it immediately if the\r\n     * channel is already open\r\n     */\r\n    private queueControlMessage(msg: ControlChannelMsg): void {\r\n        if (getChannelState(this.controlChannel) === ChannelState.CONNECTING) {\r\n            this.queuedControlMessages.push(msg);\r\n        } else {\r\n            // sendControlMessage checks if readyState === open, so we don't need to check it here\r\n            this.sendControlMessage(msg);\r\n        }\r\n    }\r\n\r\n    public updateDcTimeDuration(duration: number) {\r\n        RagnarokProfiler.addDataChannelSendTime(duration);\r\n        this.statsService?.updateDcSendDuration(duration);\r\n    }\r\n\r\n    public updateBlockedDuration(duration: number) {\r\n        this.statsService?.updateBlockedDuration(duration);\r\n    }\r\n\r\n    public notifyIdleUpdate(code: RNotificationCode, secondsLeft: number) {\r\n        if (code === RNotificationCode.ApproachingIdleTimeout) {\r\n            this.inputHandler?.setUserIdleTimeoutPending(true);\r\n        }\r\n\r\n        Log.d(\"{93c7910}\", \"{5ba6173}\", code, secondsLeft);\r\n        const timerEvent: StreamingEvent = {\r\n            streamingWarnings: {\r\n                code: code,\r\n                secondsLeft: secondsLeft\r\n            }\r\n        };\r\n        this.eventEmitter.emit(EVENTS.STREAMING_EVENT, timerEvent);\r\n    }\r\n\r\n    private sendTimerEvent(msg: ControlChannelMsg) {\r\n        let clientTimerNotificationCode = getRNotificationCode(msg.timerNotification!.code);\r\n        if (clientTimerNotificationCode === RNotificationCode.Unknown) {\r\n            Log.e(\"{93c7910}\", \"{de37ac5}\", msg.timerNotification!.code);\r\n            return;\r\n        }\r\n\r\n        this.notifyIdleUpdate(clientTimerNotificationCode, msg.timerNotification!.secondsLeft);\r\n    }\r\n\r\n    private emitCustomMessageEvent(message: string) {\r\n        this.eventEmitter.emit(EVENTS.CUSTOM_MESSAGE, JSON.parse(message));\r\n    }\r\n\r\n    private emitIceStatsEvent(pcState: string, stats: IceConnectionStats) {\r\n        this.telemetry.emitMetricEvent(\r\n            \"IceStats\",\r\n            pcState,\r\n            0,\r\n            stats.recentRequestsSent,\r\n            stats.recentResponsesReceived,\r\n            stats.recentPacketsReceived\r\n        );\r\n    }\r\n\r\n    private startBitstreamDump(): void {\r\n        this.bitstreamDump?.start(this.pc!);\r\n    }\r\n\r\n    private stopBitstreamDump(): void {\r\n        this.bitstreamDump?.save();\r\n        this.bitstreamDump = undefined;\r\n    }\r\n\r\n    private iceCandidateEventHandler(event: RTCPeerConnectionIceEvent) {\r\n        Log.d(\"{93c7910}\", \"{4742d5e}\");\r\n        if (event.candidate) {\r\n            this.iceCandidateEventCount++;\r\n        }\r\n        // TODO: evaluate if we still need this for Firefox\r\n        if (!IsChromium()) {\r\n            if (this.pc && this.pc.canTrickleIceCandidates && this.pc.onicecandidate) {\r\n                this.onIceCandidateHandler(event, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onIceCandidateHandler(event: RTCPeerConnectionIceEvent, eventOrigin?: boolean) {\r\n        if (event.candidate) {\r\n            if (!eventOrigin) {\r\n                // avoid counting candidates twice, since this can be called from both the event listener and peer connection callback\r\n                const category = getIceCandidateCategory(event.candidate);\r\n                this.candidateCategoryCounts.set(\r\n                    category,\r\n                    this.candidateCategoryCounts.get(category)! + 1\r\n                );\r\n                if (category === IceCandidateCategory.IPV4) {\r\n                    const candidateRange = getIceCandidateAddressRange(event.candidate);\r\n                    if (candidateRange !== PrivateIPv4Range.UNKNOWN) {\r\n                        // don't count unknown ranges, because they could be public IPs\r\n                        this.candidateAddressRanges.add(candidateRange);\r\n                    }\r\n                }\r\n            }\r\n            if (event.candidate.protocol === \"tcp\") {\r\n                Log.d(\"{93c7910}\", \"{6f19d1e}\");\r\n                return;\r\n            }\r\n            Log.d(\"{93c7910}\", \"{ac052fa}\", event.candidate.port, event.candidate.protocol);\r\n            const candidate: SignalingMessage = {\r\n                sdpMLineIndex: event.candidate.sdpMLineIndex,\r\n                sdpMid: event.candidate.sdpMid,\r\n                candidate: event.candidate.candidate\r\n            };\r\n            //exchange candidates with the remote peer\r\n            this.sendDataToPeer(this.remotePeerId, candidate);\r\n            this.gotLocalCandidate = true;\r\n        } else {\r\n            Log.d(\"{93c7910}\", \"{a759d16}\");\r\n        }\r\n    }\r\n\r\n    createPeerConnection(peerId: number) {\r\n        Log.d(\"{93c7910}\", \"{d79ed0a}\", peerId);\r\n        try {\r\n            let pcConfig: RTCConfiguration = {\r\n                iceServers: [{ urls: \"stun:s1.stun.gamestream.nvidia.com:19308\" }]\r\n            };\r\n            this.bitstreamDump?.maybeUpdateRtcConfig(pcConfig);\r\n            Log.d(\"{93c7910}\", \"{93106c2}\", JSON.stringify(pcConfig));\r\n\r\n            this.remotePeerId = peerId;\r\n\r\n            this.pc = new RTCPeerConnection(pcConfig);\r\n            const stopStream = (isIceConnectionFailed: boolean) => {\r\n                if (this.disconnectedIceStats) {\r\n                    this.emitIceStatsEvent(\"disconnected\", this.disconnectedIceStats);\r\n                    this.disconnectedIceStats = undefined;\r\n                }\r\n                const failedIceStats = this.statsService?.getIceStats();\r\n                if (failedIceStats) {\r\n                    this.emitIceStatsEvent(\"failed\", failedIceStats);\r\n                }\r\n\r\n                this.iceCandidateFlag |= IceConnectionFlags.FAILED;\r\n                if ((this.iceCandidateFlag & IceConnectionFlags.CONNECTED) == 0) {\r\n                    this.stopStreamWithError(RErrorCode.StreamerIceConnectionFailed);\r\n                } else if (this.statsService && this.statsService.packetsReceived() == 0) {\r\n                    this.stopStreamWithError(RErrorCode.StreamerNoVideoPacketsReceivedEver);\r\n                } else if (this.statsService && this.statsService.getFramesDecoded() == 0) {\r\n                    this.stopStreamWithError(RErrorCode.StreamerNoVideoFramesLossyNetwork);\r\n                } else if (isIceConnectionFailed) {\r\n                    this.stopStreamWithError(RErrorCode.StreamerIceReConnectionFailed);\r\n                } else {\r\n                    this.stopStreamWithError(RErrorCode.StreamerReConnectionFailed);\r\n                }\r\n            };\r\n\r\n            this.pc.onconnectionstatechange = (event: Event) => {\r\n                if (this.pc) {\r\n                    Log.d(\"{93c7910}\", \"{4ced155}\", this.pc.connectionState);\r\n                    switch (this.pc.connectionState) {\r\n                        case \"connected\":\r\n                            // The connection has become fully connected\r\n                            break;\r\n                        case \"disconnected\":\r\n                            break;\r\n                        case \"failed\":\r\n                            // One or more transports has terminated unexpectedly or in an error\r\n                            stopStream(false);\r\n                            break;\r\n                        case \"closed\":\r\n                            // The connection has been closed\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Log.e(\"{93c7910}\", \"{648f784}\");\r\n                }\r\n            };\r\n\r\n            this.pc.oniceconnectionstatechange = (ev: any) => {\r\n                if (this.pc) {\r\n                    Log.d(\"{93c7910}\", \"{3a3143a}\", this.pc.iceConnectionState);\r\n                    //https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState#RTCIceConnectionState_enum\r\n                    switch (this.pc.iceConnectionState) {\r\n                        case \"new\":\r\n                            this.iceCandidateFlag |= IceConnectionFlags.NEW;\r\n                            break;\r\n                        case \"checking\":\r\n                            this.iceCandidateFlag |= IceConnectionFlags.CHECKING;\r\n                            break;\r\n                        case \"connected\":\r\n                            this.disconnectedIceStats = undefined;\r\n                            if (this.iceCandidateFlag & IceConnectionFlags.DISCONNECTED) {\r\n                                this.eventEmitter.emit(EVENTS.STREAMING_EVENT, {\r\n                                    streamingState: { state: STREAMING_STATE.RECONNECTED }\r\n                                });\r\n                                this.pcReconnects++;\r\n                            }\r\n                            this.iceCandidateFlag |= IceConnectionFlags.CONNECTED;\r\n                            break;\r\n                        case \"completed\":\r\n                            this.disconnectedIceStats = undefined;\r\n                            this.iceCandidateFlag |= IceConnectionFlags.COMPLETED;\r\n                            break;\r\n                        case \"failed\":\r\n                            stopStream(true);\r\n                            break;\r\n                        case \"disconnected\":\r\n                            this.disconnectedIceStats = this.statsService?.getIceStats();\r\n                            if (this.iceCandidateFlag & IceConnectionFlags.CONNECTED) {\r\n                                this.eventEmitter.emit(EVENTS.STREAMING_EVENT, {\r\n                                    streamingState: { state: STREAMING_STATE.RECONNECTING }\r\n                                });\r\n                            }\r\n                            this.iceCandidateFlag |= IceConnectionFlags.DISCONNECTED;\r\n                            break;\r\n                        case \"closed\":\r\n                            this.iceCandidateFlag |= IceConnectionFlags.CLOSED;\r\n                            if ((this.iceCandidateFlag & IceConnectionFlags.DISCONNECTED) != 0) {\r\n                                this.stopStreamWithError(RErrorCode.StreamerNetworkError); //in case if we ever reach here without failed.\r\n                            }\r\n                            break;\r\n                    }\r\n                } else {\r\n                    Log.e(\"{93c7910}\", \"{648f784}\");\r\n                }\r\n            };\r\n\r\n            this.pc.ondatachannel = ev => {\r\n                Log.d(\"{93c7910}\", \"{b364db9}\", ev.channel.label);\r\n                if (ev.channel.label == \"control_channel\") {\r\n                    this.addDataChannel(ev.channel, {\r\n                        errorCode: RErrorCode.StreamControlChannelError,\r\n                        open: () => {\r\n                            this.controlChannel = ev.channel;\r\n\r\n                            for (const msg of this.queuedControlMessages) {\r\n                                this.sendControlMessage(msg);\r\n                            }\r\n                            Log.d(\"{93c7910}\", \"{038895c}\", this.queuedControlMessages.length);\r\n                            this.queuedControlMessages = [];\r\n\r\n                            const ETWS_RTC_BROWSER = `NvRtcClient Browser name: ${this.platformDetails.browser}, Browser version: ${this.platformDetails.browserFullVer}`;\r\n                            this.writeEtwPrint(ETWS_RTC_BROWSER);\r\n                            //send initial window state and start listening for updates\r\n                            this.sendWindowState(this.statsService?.getFramesDecoded() ?? 0);\r\n                            this.windowObserver.addStateListener(\r\n                                WindowStateType.FOCUS,\r\n                                this.windowStateChangeFunc\r\n                            );\r\n                            this.windowObserver.addStateListener(\r\n                                WindowStateType.MOUSE_FOCUS,\r\n                                this.windowStateChangeFunc\r\n                            );\r\n                            this.windowObserver.addStateListener(\r\n                                WindowStateType.FULLSCREEN,\r\n                                this.windowStateChangeFunc\r\n                            );\r\n                        }\r\n                    });\r\n\r\n                    ev.channel.onmessage = (msg: any) => {\r\n                        try {\r\n                            let obj = <ControlChannelMsg>JSON.parse(msg.data);\r\n                            Log.d(\"{93c7910}\", \"{9371373}\");\r\n                            if (obj.exitMessage) {\r\n                                this.stopStreamWithError(\r\n                                    getRErrorCodeForExitMessage(obj.exitMessage)\r\n                                );\r\n                            } else if (obj.timerNotification) {\r\n                                this.sendTimerEvent(obj);\r\n                            } else if (obj.debugMessage) {\r\n                                this.showDebugMessage(obj.debugMessage.message);\r\n                            } else if (obj.customMessage) {\r\n                                this.emitCustomMessageEvent(obj.customMessage);\r\n                            } else if (obj.videoStreamProgressEvent) {\r\n                                this.videoStreamProgress =\r\n                                    obj.videoStreamProgressEvent.videoStreamProgress;\r\n                            } else {\r\n                                Log.d(\"{93c7910}\", \"{d14e0fd}\");\r\n                            }\r\n                        } catch (exp) {\r\n                            const MSG = \"Error in control_channel message handling\";\r\n                            Log.e(\"{93c7910}\", \"{a40734a}\", exp);\r\n                            this.telemetry.emitExceptionEvent(exp, MSG, \"{93c7910}.ts\", 0, 0, true);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n\r\n            Log.d(\"{93c7910}\", \"{d9ffda2}\");\r\n            const inputChannelParams: RTCDataChannelInit = <any>{\r\n                ordered: true,\r\n                reliable: true\r\n            };\r\n            Log.d(\"{93c7910}\", \"{2bd4728}\");\r\n            this.inputChannel = this.pc.createDataChannel(\"input_channel_v1\", inputChannelParams);\r\n            this.inputChannel.binaryType = \"arraybuffer\";\r\n            this.addDataChannel(this.inputChannel, {\r\n                errorCode: RErrorCode.StreamInputChannelError\r\n            });\r\n            const cursorChannelParams: RTCDataChannelInit = <any>{\r\n                ordered: true,\r\n                reliable: true\r\n            };\r\n            this.cursorChannel = this.pc.createDataChannel(\"cursor_channel\", cursorChannelParams);\r\n            this.cursorChannel.binaryType = \"arraybuffer\";\r\n            this.addDataChannel(this.cursorChannel, {\r\n                errorCode: RErrorCode.StreamCursorChannelError\r\n            });\r\n            this.inputHandler = new InputHandler(\r\n                this,\r\n                this.videoElement,\r\n                this.inputChannel,\r\n                this.cursorChannel,\r\n                this.telemetry,\r\n                this.eventEmitter,\r\n                this.configFlags,\r\n                this.appLaunchMode === AppLaunchMode.TouchFriendly,\r\n                this.gamepadTester,\r\n                this.gamepadHandler,\r\n                this.platformDetails,\r\n                this.callbacks,\r\n                this.safeZoneHandler,\r\n                this.windowObserver,\r\n                this.textInputElement\r\n            );\r\n            if (this.hasPendingKeyboardLayout) {\r\n                this.setKeyboardLayout(this.keyboardLayout);\r\n                this.hasPendingKeyboardLayout = false;\r\n            }\r\n\r\n            if (RagnarokSettings.webrtcStatsEnabled) {\r\n                Log.d(\"{93c7910}\", \"{9ae428b}\");\r\n                const staticStreamStats: StaticStreamStats = {\r\n                    zoneName: this.session.zoneName,\r\n                    clientAppVersion: this.clientAppVersion ?? \"\",\r\n                    appId: this.session.appId,\r\n                    requestedRegion: this.requestedRegion ?? \"\",\r\n                    gpuType: this.session.gpuType,\r\n                    streamInfo: this.session.streamInfo[0] ?? { width: 0, height: 0, fps: 0 },\r\n                    clientLocale: this.session.clientLocale\r\n                };\r\n                this.statsService = new ClientStatsService(\r\n                    this.eventEmitter,\r\n                    this,\r\n                    this.videoElement,\r\n                    this.pc,\r\n                    this.nvstConfig,\r\n                    this.telemetry,\r\n                    this.platformDetails,\r\n                    staticStreamStats,\r\n                    this.windowObserver\r\n                );\r\n            }\r\n\r\n            this.pc.addEventListener(\"icecandidate\", this.iceCandidateEventFunc);\r\n\r\n            // this doesn't get called if our code do pc.close()\r\n            this.pc.onsignalingstatechange = (event: any) => {\r\n                Log.i(\"{93c7910}\", \"{3236227}\", this.pc!.signalingState);\r\n            };\r\n\r\n            this.pc.onicecandidate = (event: RTCPeerConnectionIceEvent) =>\r\n                this.onIceCandidateHandler(event);\r\n\r\n            this.pc.onicecandidateerror = (event_: Event) => {\r\n                const event = <RTCPeerConnectionIceErrorEvent>event_;\r\n                Log.w(\"{93c7910}\", \"{9871b05}\", event.port, event.url, event.errorCode, event.errorText);\r\n            };\r\n\r\n            if (RagnarokSettings.micEnabled ?? !IsWebOS(this.platformDetails)) {\r\n                this.micCapturer.initialize(\r\n                    this.pc,\r\n                    this.eventEmitter,\r\n                    this.videoElement,\r\n                    this.audioElement\r\n                );\r\n            }\r\n\r\n            this.pc.ontrack = (event: RTCTrackEvent) => {\r\n                const stream = event.streams[0];\r\n                Log.d(\"{93c7910}\", \"{47359d4}\", stream.id, event.track.kind, event.track.id, event.streams.length, GetHexString(this.iceCandidateFlag));\r\n\r\n                let track = {\r\n                    kind: event.track.kind === \"video\" ? TrackType.VIDEO : TrackType.AUDIO,\r\n                    trackId: event.track.id\r\n                };\r\n\r\n                // could have both audio and video in single stream case\r\n                const isMediaStream = (): boolean => {\r\n                    return stream.id === LEGACY_STREAM_NAME || stream.id === MEDIA_STREAM_NAME;\r\n                };\r\n\r\n                const isAudioStream = (): boolean => {\r\n                    return (\r\n                        stream.id === LEGACY_SECOND_STREAM_NAME || stream.id === AUDIO_STREAM_NAME\r\n                    );\r\n                };\r\n\r\n                // only render the first video track received\r\n                if (event.track.kind === \"video\" && isMediaStream() && !this.gotVideoTrack) {\r\n                    this.gotVideoTrack = true;\r\n                    if (!shouldCombineStreams()) {\r\n                        this.videoElement.srcObject = stream;\r\n                    }\r\n                } else if (event.track.kind === \"audio\" && (isMediaStream() || isAudioStream())) {\r\n                    this.gotAudioTrack = true;\r\n                    this.receivedAudioTrackId = event.track.id;\r\n                    // audio stream is received only in case of double stream\r\n                    if (isAudioStream() && !shouldCombineStreams()) {\r\n                        this.audioElement.srcObject = stream;\r\n                    }\r\n                    this.signalAudioPacketsReceived(stream);\r\n                    this.audioRecorder?.initialize(new MediaStream(stream.getAudioTracks()));\r\n                }\r\n\r\n                let streamInArray = this.streamsAttached.find(s => s.streamId === stream.id);\r\n                if (streamInArray) {\r\n                    streamInArray.tracks.push(track);\r\n                } else {\r\n                    this.streamsAttached.push({\r\n                        streamId: stream.id,\r\n                        tracks: [track]\r\n                    });\r\n                }\r\n                this.checkAndNotifyStartToClient(); // when all play calls are removed from ragnarok, this is needed.\r\n            };\r\n        } catch (exp) {\r\n            const EXP_MSG = \"Exception in creating peer connection\";\r\n            Log.e(\"{93c7910}\", \"{ff11182}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, EXP_MSG, \"{93c7910}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    private stopInputHandler() {\r\n        if (this.inputHandler) {\r\n            this.inputHandler.uninitialize();\r\n            this.inputHandler = undefined;\r\n        }\r\n    }\r\n\r\n    private stopStatsService() {\r\n        // do not reset statsService object to undefined/null we need it to get saved stats like framesdecoded\r\n        this.statsService?.stop();\r\n    }\r\n\r\n    updateIceCandidates(sdp: string): string {\r\n        return sdp\r\n            .split(\"\\r\\n\")\r\n            .map(line => {\r\n                if (!line.startsWith(\"a=candidate:\")) {\r\n                    return line;\r\n                }\r\n                this.gotRemoteCandidate = true;\r\n                return \"a=\" + this.updateIceCandidate(line.substr(2));\r\n            })\r\n            .join(\"\\r\\n\");\r\n    }\r\n\r\n    updateIceCandidate(iceCandidate: string): string {\r\n        Log.d(\"{93c7910}\", \"{2dd62a2}\");\r\n        const videoInfo = this.session.mediaConnectionInfo.find(x => x.usage === Usage.VIDEO);\r\n        if (videoInfo) {\r\n            // Update fields [4] and [5] which contain the address and port to connect to.\r\n            // See https://datatracker.ietf.org/doc/html/rfc5245#section-15.1\r\n            let list = iceCandidate.split(\" \");\r\n            list[4] = videoInfo.ip;\r\n            list[5] = \"\" + videoInfo.port;\r\n\r\n            let newIceCandidate = list.join(\" \");\r\n            Log.d(\"{93c7910}\", \"{1fbcd88}\", newIceCandidate);\r\n            return newIceCandidate;\r\n        }\r\n\r\n        Log.d(\"{93c7910}\", \"{aee7283}\");\r\n        return iceCandidate;\r\n    }\r\n\r\n    private didReceiveExpectedTracks(): boolean {\r\n        let receivedTracks: string[] = [];\r\n        for (const stream of this.streamsAttached) {\r\n            for (const track of stream.tracks) {\r\n                receivedTracks.push(track.trackId!);\r\n            }\r\n        }\r\n        if (this.trackIdsExpected.length !== receivedTracks.length) {\r\n            return false;\r\n        }\r\n\r\n        for (const trackId of this.trackIdsExpected) {\r\n            if (!receivedTracks.some(id => id === trackId)) {\r\n                return false;\r\n            }\r\n        }\r\n        Log.d(\"{93c7910}\", \"{4fef10b}\");\r\n        return true;\r\n    }\r\n\r\n    private cacheTrackIdsExpected() {\r\n        let transceivers = this.pc!.getTransceivers();\r\n\r\n        if (transceivers.length === 0) {\r\n            Log.d(\"{93c7910}\", \"{3399d9d}\");\r\n            this.notifyStart({ code: RErrorCode.StreamerNoTracksReceivedInSdp });\r\n            return;\r\n        }\r\n\r\n        for (const transceiver of transceivers) {\r\n            /// \\todo: Remove this hard coded mid\r\n            if (\r\n                transceiver.mid === MIC_MID &&\r\n                transceiver.receiver.track.id !== this.receivedAudioTrackId\r\n            ) {\r\n                /// addTrack() from micCapturer adds a sendrecv transceiver, which causes problem in getClientStats()\r\n                Log.i(\"{93c7910}\", \"{981392f}\");\r\n                transceiver.receiver.track.enabled = false;\r\n            } else {\r\n                this.trackIdsExpected.push(transceiver.receiver.track.id);\r\n            }\r\n        }\r\n\r\n        Log.d(\"{93c7910}\", \"{648ae93}\", JSON.stringify(this.trackIdsExpected));\r\n    }\r\n\r\n    async handlePeerMessage(peerId: number, data: string) {\r\n        Log.d(\"{93c7910}\", \"{9978507}\", peerId);\r\n\r\n        try {\r\n            const dataJson = <SignalingMessage>JSON.parse(data);\r\n            if (dataJson.type === \"offer\") {\r\n                this.gotOffer = true;\r\n                let answerConfig: string | undefined = undefined;\r\n                let sdp: string = dataJson.sdp || \"\";\r\n\r\n                Log.d(\"{93c7910}\", \"{ca9a155}\", sdp);\r\n\r\n                const codecs = await this.codecsPromise;\r\n                const selectedCodec = StreamClient.GetSelectedCodec(sdp, codecs);\r\n\r\n                if (dataJson.nvstSdp) {\r\n                    const override = dataJson.nvstServerOverrides ?? \"\";\r\n                    answerConfig = this.handleNvstSdp(dataJson.nvstSdp, override);\r\n                    if (!answerConfig) {\r\n                        return;\r\n                    }\r\n                }\r\n                this.bitstreamDump = new BitstreamDump(this.nvstConfig, selectedCodec);\r\n                this.createPeerConnection(peerId);\r\n                let startTime = Date.now();\r\n                sdp = this.updateIceCandidates(sdp);\r\n                // This adds an 'a=imageattr' tag for H26[45] targets.  Imageattr notifies the\r\n                // peer about supported resolutions and framerates (nonstandard).  It will eventually\r\n                // come from the server but hack it in here for the time being.  It will be ignored\r\n                // by all clients that don't understand it.\r\n                sdp = StreamClient.AddImageattrsToSDP(\r\n                    sdp,\r\n                    960,\r\n                    this.nvstConfig.video[0].clientViewportWd,\r\n                    540,\r\n                    this.nvstConfig.video[0].clientViewportHt,\r\n                    30, // user is able to select 30fps in the UI\r\n                    this.nvstConfig.video[0].maxFps\r\n                );\r\n                Log.d(\"{93c7910}\", \"{542f9d5}\", sdp);\r\n                this.pc!.setRemoteDescription({\r\n                    type: dataJson.type,\r\n                    sdp\r\n                })\r\n                    .then(() => {\r\n                        this.timeTakenBySetRemoteDescriptionCall = Date.now() - startTime;\r\n                        this.cacheTrackIdsExpected();\r\n                        Log.d(\"{93c7910}\", \"{ab7b3af}\", this.timeTakenBySetRemoteDescriptionCall);\r\n\r\n                        this.renameStreams();\r\n                        if (shouldCombineStreams()) {\r\n                            // If !ShouldCombineStreams(), this has already happened in ontrack\r\n                            this.setMediaElementStreams();\r\n                        }\r\n\r\n                        this.startBitstreamDump();\r\n                        this.addSendVideoTrack();\r\n                        this.setCodecPreferences(selectedCodec);\r\n\r\n                        let onSessionDescriptionFunction = (\r\n                            sessionDescription: RTCSessionDescriptionInit\r\n                        ) => {\r\n                            this.timeTakenByCreateAnswerCall = Date.now() - startTime;\r\n                            Log.d(\"{93c7910}\", \"{2984003}\", this.timeTakenByCreateAnswerCall);\r\n                            //set local session description and provide callback for when it succeeds or fails\r\n\r\n                            const bitRateMax =\r\n                                this.nvstConfig.video[0].maximumBitrateKbps.toString();\r\n                            const bitRateMin =\r\n                                this.nvstConfig.video[0].minimumBitrateKbps.toString();\r\n                            const bitRateSrt =\r\n                                this.nvstConfig.video[0].initialBitrateKbps.toString();\r\n                            Log.d(\"{93c7910}\", \"{b535c15}\", sessionDescription.sdp);\r\n                            if (sessionDescription.sdp !== undefined) {\r\n                                sessionDescription.sdp = StreamClient.GetMediaBitrateUpdatedSDP(\r\n                                    sessionDescription.sdp,\r\n                                    \"video\",\r\n                                    bitRateMax\r\n                                );\r\n                                if (IsChromium()) {\r\n                                    sessionDescription.sdp = StreamClient.GetGoogBitrateUpdatedSDP(\r\n                                        sessionDescription.sdp,\r\n                                        \"video\",\r\n                                        bitRateMin,\r\n                                        bitRateMax,\r\n                                        bitRateSrt\r\n                                    );\r\n                                }\r\n                                sessionDescription.sdp = StreamClient.AddOpusStereoSupported(\r\n                                    sessionDescription.sdp,\r\n                                    \"audio\"\r\n                                );\r\n\r\n                                // iOS safari is not tested for surround, rest Chrome/Yandex/Edge supports it\r\n                                const info: MultiopusInfo | undefined =\r\n                                    StreamClient.isMultiopusOffered(sdp, \"audio\");\r\n                                if (info) {\r\n                                    sessionDescription.sdp = StreamClient.AddOpusSurroundSupported(\r\n                                        sessionDescription.sdp,\r\n                                        \"audio\",\r\n                                        info\r\n                                    );\r\n                                }\r\n                                Log.d(\"{93c7910}\", \"{1a048a7}\", sessionDescription.sdp);\r\n                            }\r\n\r\n                            startTime = Date.now();\r\n                            this.pc!.setLocalDescription(sessionDescription)\r\n                                .then(() => {\r\n                                    this.timeTakenBySetLocalDescriptionCall =\r\n                                        Date.now() - startTime;\r\n                                    Log.d(\"{93c7910}\", \"{de86c01}\", this.timeTakenBySetLocalDescriptionCall);\r\n                                    if (sessionDescription.sdp !== undefined && !IsChromium()) {\r\n                                        sessionDescription.sdp =\r\n                                            StreamClient.GetGoogBitrateUpdatedSDP(\r\n                                                sessionDescription.sdp,\r\n                                                \"video\",\r\n                                                bitRateMin,\r\n                                                bitRateMax,\r\n                                                bitRateSrt\r\n                                            );\r\n                                    }\r\n\r\n                                    if (sessionDescription.sdp !== undefined && answerConfig) {\r\n                                        const sdpSections: string[] = SDPUtils.SplitSections(\r\n                                            sessionDescription.sdp\r\n                                        );\r\n                                        const sessionPart: string = sdpSections.shift()!;\r\n                                        const iceParameters: ISDPIceParameters =\r\n                                            SDPUtils.GetIceParameters(sdpSections[0], sessionPart);\r\n                                        const dtlsParameters: ISDPDtlsParameters =\r\n                                            SDPUtils.GetDtlsParameters(sdpSections[0], sessionPart);\r\n                                        const nvSections: string[] = SDPUtils.SplitSections(\r\n                                            answerConfig!\r\n                                        );\r\n                                        nvSections[0] +=\r\n                                            \"a=general.icePassword:\" +\r\n                                            iceParameters.password +\r\n                                            \"\\r\\n\";\r\n                                        nvSections[0] +=\r\n                                            \"a=general.iceUserNameFragment:\" +\r\n                                            iceParameters.usernameFragment +\r\n                                            \"\\r\\n\";\r\n                                        nvSections[0] +=\r\n                                            \"a=general.dtlsFingerprint:\" +\r\n                                            dtlsParameters.fingerprints[0].value +\r\n                                            \"\\r\\n\";\r\n                                        answerConfig = nvSections.join(\"\");\r\n                                    }\r\n\r\n                                    const answerMessage: SignalingMessage = {\r\n                                        type: sessionDescription.type,\r\n                                        sdp: sessionDescription.sdp,\r\n                                        nvstSdp: answerConfig\r\n                                    };\r\n                                    this.sendDataToPeer(peerId, answerMessage);\r\n\r\n                                    Log.i(\"{93c7910}\", \"{bd70666}\", JSON.stringify(this.streamsAttached));\r\n                                    this.checkAndNotifyStartToClient();\r\n                                })\r\n                                .catch((sdpError: any) => {\r\n                                    Log.e(\"{93c7910}\", \"{ba2deaa}\", sdpError);\r\n                                    this.stopStreamWithError(RErrorCode.StreamerSetSDPFailure);\r\n                                });\r\n                        };\r\n\r\n                        startTime = Date.now();\r\n                        this.pc!.createAnswer()\r\n                            .then(onSessionDescriptionFunction)\r\n                            .catch((error: DOMException) => {\r\n                                // error\r\n                                Log.d(\"{93c7910}\", \"{40c0f69}\", error);\r\n                            });\r\n                    })\r\n                    .catch((event: any) => {\r\n                        Log.e(\"{93c7910}\", \"{ec2853e}\", event);\r\n                        this.stopStreamWithError(RErrorCode.StreamerSetSDPFailure);\r\n                    });\r\n            } else if (dataJson.candidate) {\r\n                // add ice candidates\r\n                Log.d(\"{93c7910}\", \"{cf4c103}\");\r\n                let updatedCandidate = this.updateIceCandidate(dataJson.candidate);\r\n                Log.d(\"{93c7910}\", \"{43e80e0}\", updatedCandidate);\r\n                this.pc!.addIceCandidate({\r\n                    sdpMLineIndex: dataJson.sdpMLineIndex,\r\n                    sdpMid: dataJson.sdpMid,\r\n                    candidate: updatedCandidate\r\n                })\r\n                    .then(() => {\r\n                        Log.d(\"{93c7910}\", \"{db0ae14}\");\r\n                        this.gotRemoteCandidate = true;\r\n                    })\r\n                    .catch((ex?: DOMException) => {\r\n                        Log.e(\"{93c7910}\", \"{62f207e}\", ex);\r\n                        this.telemetry.emitDebugEvent(\"AddCandidateFailed\", ex?.name, ex?.message);\r\n                    });\r\n                Log.d(\"{93c7910}\", \"{9454009}\");\r\n            }\r\n        } catch (exp) {\r\n            if (data === \"BYE\") {\r\n                this.stopStreamWithError(RErrorCode.StreamDisconnectedFromServer);\r\n            } else {\r\n                const EXP_MSG = \"Invalid handlePeerMessage Response\";\r\n                Log.e(\"{93c7910}\", \"{93367fc}\", exp);\r\n                this.telemetry.emitExceptionEvent(exp, EXP_MSG, \"{93c7910}.ts\", 0, 0, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleNvstSdp(sdp: string, override: string): string | undefined {\r\n        const result = handleNvstOffer(this.nvstConfig, sdp, override, this.platformDetails);\r\n        if (result.config && result.answer) {\r\n            this.nvstConfig = result.config;\r\n            return result.answer;\r\n        } else {\r\n            this.notifyStart({ code: result.error ?? RErrorCode.StreamerNvstSdpFailure });\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public toggleOnScreenStats(enableDevStats: boolean = false) {\r\n        if (this.statsServiceEnabled()) {\r\n            this.statsService!.toggleOnScreenStats(enableDevStats);\r\n        } else {\r\n            this.showDebugMessage(\"Stats is OFF. Please enable by ctrl+alt+F5/F6\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    public getLdatHandler(): ILDATHandler | undefined {\r\n        if (this.statsServiceEnabled()) {\r\n            return this.statsService!.getLdatHandler();\r\n        }\r\n    }\r\n\r\n    public toggleProfiler() {\r\n        if (this.profilerRunning) {\r\n            RagnarokProfiler.stopProfiling();\r\n            this.profilerRunning = false;\r\n            this.disableWebRTCStats();\r\n            this.showDebugMessage(\"Profiler: OFF, Stats: OFF\");\r\n        } else {\r\n            this.startProfiler();\r\n            this.enableWebRTCStats();\r\n            this.showDebugMessage(\"Profiler: ON, Stats: ON\");\r\n        }\r\n    }\r\n\r\n    public toggleWebRTCStats() {\r\n        if (this.statsServiceEnabled()) {\r\n            this.disableWebRTCStats();\r\n            this.showDebugMessage(\"Stats: OFF\");\r\n        } else {\r\n            this.enableWebRTCStats();\r\n            this.showDebugMessage(\"Stats: ON\");\r\n        }\r\n    }\r\n\r\n    private statsServiceEnabled(): boolean {\r\n        return !!(this.statsService && this.statsService.isEnabled());\r\n    }\r\n\r\n    enableWebRTCStats() {\r\n        this.statsService?.enableStats();\r\n    }\r\n\r\n    disableWebRTCStats() {\r\n        this.statsService?.disableStats();\r\n    }\r\n\r\n    sendDataToPeer(peerId: number, message: SignalingMessage) {\r\n        const data = JSON.stringify(message);\r\n        const obj: WebSocketMsg = {\r\n            peer_msg: {\r\n                from: this.id,\r\n                to: peerId,\r\n                msg: data\r\n            },\r\n            ackid: this.isAckSupportedOnWs ? this.ackIdGenerator.getNextAckId() : undefined\r\n        };\r\n        Log.d(\"{93c7910}\", \"{7ecb902}\", peerId, data.length, JSON.stringify(obj));\r\n        if (this.webSocket) {\r\n            this.webSocket.send(obj);\r\n        } else {\r\n            RagnarokProfiler.sendOverWs(obj);\r\n        }\r\n    }\r\n\r\n    getFramesDecoded() {\r\n        if (!this.statsService) return 0;\r\n        return this.statsService.getFramesDecoded();\r\n    }\r\n\r\n    getVideoCodec() {\r\n        if (!this.statsService) return \"UNKNOWN\";\r\n        const codec = this.statsService.getVideoCodec();\r\n        return codec === \"\" ? \"PENDING\" : codec;\r\n    }\r\n\r\n    public toggleUserInput(enable: boolean, inputs?: InputType) {\r\n        if (this.inputHandler) {\r\n            this.inputHandler.toggleUserInput(enable, inputs);\r\n        } else {\r\n            Log.e(\"{93c7910}\", \"{5a0e299}\", enable);\r\n        }\r\n    }\r\n\r\n    public showDebugMessage(message: string) {\r\n        this.debugMessageElement.innerHTML = message;\r\n        this.debugMessageElement.style.display = \"block\";\r\n        if (this.debugMessageTimeoutId) {\r\n            clearTimeout(this.debugMessageTimeoutId);\r\n        }\r\n        this.debugMessageTimeoutId = window.setTimeout(() => {\r\n            this.debugMessageElement.style.display = \"none\";\r\n        }, 1000);\r\n    }\r\n\r\n    startProfiler() {\r\n        const statsHeader: StatsHeader = {\r\n            stats: {\r\n                from: this.id,\r\n                to: this.remotePeerId\r\n            }\r\n        };\r\n\r\n        RagnarokProfiler.startProfiling(statsHeader);\r\n        this.profilerRunning = true;\r\n    }\r\n\r\n    static GetMediaBitrateUpdatedSDP(sdp: string, media: string, bitrate: string) {\r\n        let modifier = \"AS:\";\r\n\r\n        let lines = sdp.split(\"\\r\\n\");\r\n        let line = -1;\r\n        // Find the right media line\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].indexOf(\"m=\" + media) === 0) {\r\n                line = i;\r\n                break;\r\n            }\r\n        }\r\n        // If not found - return the original SDP payload\r\n        if (line === -1) {\r\n            Log.e(\"{93c7910}\", \"{e0899ab}\", media);\r\n            return sdp;\r\n        }\r\n        Log.d(\"{93c7910}\", \"{5cc346f}\", media, line);\r\n\r\n        // Go to the next line\r\n        line++;\r\n\r\n        // Skip i and c lines - don't mess up the SDP parser order - it seems to matter\r\n        while (lines[line].indexOf(\"i=\") === 0 || lines[line].indexOf(\"c=\") === 0) {\r\n            line++;\r\n        }\r\n\r\n        // Are we on the B line - if so, try to override the value\r\n        if (lines[line].indexOf(\"b\") === 0) {\r\n            Log.d(\"{93c7910}\", \"{e77177e}\", line);\r\n            lines[line] = \"b=\" + modifier + bitrate;\r\n            return lines.join(\"\\r\\n\");\r\n        }\r\n\r\n        // Add a new b line\r\n        Log.d(\"{93c7910}\", \"{3dfc348}\", line);\r\n        let newLines = lines.slice(0, line);\r\n        newLines.push(\"b=\" + modifier + bitrate);\r\n        newLines = newLines.concat(lines.slice(line, lines.length));\r\n        return newLines.join(\"\\r\\n\");\r\n    }\r\n\r\n    static isMultiopusOffered(serverSdp: string, media: string): MultiopusInfo | undefined {\r\n        let serverLines = serverSdp.split(\"\\r\\n\");\r\n        let mediaLine = -1;\r\n\r\n        for (let i = 0; i < serverLines.length; i++) {\r\n            if (serverLines[i].indexOf(\"m=\" + media) === 0) {\r\n                mediaLine = i;\r\n                break;\r\n            }\r\n        }\r\n        if (mediaLine === -1) {\r\n            Log.d(\"{93c7910}\", \"{a939549}\", media);\r\n            return undefined;\r\n        }\r\n\r\n        let multiopusFmt = undefined;\r\n        let redFmt = undefined;\r\n        let multiopusChannel = undefined;\r\n        let redChannel = undefined;\r\n        let codec = \"\";\r\n        const rtpmap = \"a=rtpmap:\";\r\n        // Find the right media line then obtain red & multiopus fmt from that media block\r\n        // First scan for rtpmap and then confirming codec, red and multiopus can be in any order\r\n        for (let i = mediaLine + 1; i < serverLines.length; i++) {\r\n            if (serverLines[i].indexOf(rtpmap) === 0) {\r\n                codec = serverLines[i].split(\" \")[1];\r\n\r\n                if (codec.indexOf(\"red\") === 0) {\r\n                    redFmt = serverLines[i].split(\" \")[0].slice(rtpmap.length); // value written after 'a=rtpmap:'\r\n                    /* red/48000/<channel> */\r\n                    redChannel = codec.split(\"/\")[2];\r\n                    Log.i(\"{93c7910}\", \"{4e6ce55}\", media, redFmt, redChannel);\r\n                } else if (codec.indexOf(\"multiopus\") === 0) {\r\n                    multiopusFmt = serverLines[i].split(\" \")[0].slice(rtpmap.length);\r\n                    /* multiopus/48000/<channel> */\r\n                    multiopusChannel = codec.split(\"/\")[2];\r\n                    Log.i(\"{93c7910}\", \"{53ebbb1}\", media, multiopusFmt, multiopusChannel);\r\n                }\r\n            } else if (serverLines[i].indexOf(\"m=\") === 0) {\r\n                Log.d(\"{93c7910}\", \"{9fc6964}\", serverLines[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!multiopusFmt) {\r\n            Log.d(\"{93c7910}\", \"{cf4ee2d}\", media);\r\n            return undefined;\r\n        }\r\n\r\n        let multiopusSpec: string[] = [];\r\n        let redSpec: string[] = [];\r\n        // Find and save the multiopus & red's specifications from server sdp\r\n        for (let i = mediaLine + 1; i < serverLines.length; i++) {\r\n            if (\r\n                serverLines[i].indexOf(\"a=rtpmap:\" + redFmt) === 0 ||\r\n                serverLines[i].indexOf(\"a=rtcp-fb:\" + redFmt) === 0 ||\r\n                serverLines[i].indexOf(\"a=fmtp:\" + redFmt) === 0\r\n            ) {\r\n                redSpec.push(serverLines[i]);\r\n            } else if (\r\n                serverLines[i].indexOf(\"a=rtpmap:\" + multiopusFmt) === 0 ||\r\n                serverLines[i].indexOf(\"a=rtcp-fb:\" + multiopusFmt) === 0 ||\r\n                serverLines[i].indexOf(\"a=fmtp:\" + multiopusFmt) === 0\r\n            ) {\r\n                multiopusSpec.push(serverLines[i]);\r\n            } else if (serverLines[i].indexOf(\"m=\") === 0) {\r\n                Log.d(\"{93c7910}\", \"{9fc6964}\", serverLines[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If red and multiopus doesn't have same channel config then we want to reject munging \"red\"\r\n        if (redChannel && redChannel !== multiopusChannel) {\r\n            redFmt = undefined;\r\n            redSpec = [];\r\n            Log.w(\"{93c7910}\", \"{ad53601}\", redChannel, multiopusChannel);\r\n        }\r\n\r\n        // multiopus/red is rejected with fmt 0, we extract these info from server sdp and munge it back to answer sdp\r\n        const info: MultiopusInfo = {\r\n            fmtRed: redFmt,\r\n            fmtCodec: multiopusFmt,\r\n            specificationRed: redSpec.join(\"\\r\\n\"),\r\n            specificationCodec: multiopusSpec.join(\"\\r\\n\")\r\n        };\r\n        return info;\r\n    }\r\n\r\n    // Need to do sdp munge to support surround audio, RFC 3264\r\n    // TODO Remove this when multiopus is offered in codec list ie. Fmt 0 is fixed\r\n    static AddOpusSurroundSupported(sdp: string, media: string, multiopus: MultiopusInfo) {\r\n        let lines = sdp.split(\"\\r\\n\");\r\n        let mediaLine = -1;\r\n        let endLine = -1;\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].indexOf(\"m=\" + media) === 0) {\r\n                mediaLine = i;\r\n                break;\r\n            }\r\n        }\r\n        if (mediaLine === -1) {\r\n            Log.d(\"{93c7910}\", \"{e0899ab}\", media);\r\n            return sdp;\r\n        }\r\n\r\n        let newLines = lines.slice(0, mediaLine);\r\n        //Append multiopus fmt to media line, as it was set 0 (multiopus is non-advertised codec)\r\n        let mediaDescriptor = lines[mediaLine].split(\" \");\r\n        if (mediaDescriptor[3] !== \"0\") {\r\n            Log.d(\"{93c7910}\", \"{794b3c6}\", media, mediaDescriptor.join(\" \"));\r\n            return sdp;\r\n        }\r\n\r\n        // Edit media descriptor line with 'red'(if offered) then 'multiopus' codec\r\n        if (multiopus.fmtRed) {\r\n            mediaDescriptor[3] = multiopus.fmtRed;\r\n            mediaDescriptor[4] = multiopus.fmtCodec;\r\n        } else {\r\n            mediaDescriptor[3] = multiopus.fmtCodec;\r\n        }\r\n        newLines.push(mediaDescriptor.join(\" \"));\r\n\r\n        // search the end of current mediablock and then add multiopus\r\n        for (let i = mediaLine + 1; i < lines.length; i++) {\r\n            if (lines[i].indexOf(\"m=\") === 0) {\r\n                endLine = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (endLine === -1) {\r\n            //Since we end SDP with a empty line, Rfc 4566\r\n            endLine = lines.length - 1;\r\n        }\r\n        newLines = newLines.concat(lines.slice(mediaLine + 1, endLine));\r\n\r\n        //add 'red'(if offered) then 'multiopus' Rtpmap and Fmtp from server sdp\r\n        if (multiopus.fmtRed) {\r\n            newLines = newLines.concat(multiopus.specificationRed.split(\"\\r\\n\"));\r\n        }\r\n        newLines = newLines.concat(multiopus.specificationCodec.split(\"\\r\\n\"));\r\n        newLines = newLines.concat(lines.slice(endLine));\r\n        return newLines.join(\"\\r\\n\");\r\n    }\r\n\r\n    //Indicate that the client prefers stereo audio (see RFC 7587)\r\n    static AddOpusStereoSupported(sdp: string, media: string) {\r\n        let fmtpLines: Array<number> = [];\r\n        let lines = sdp.split(\"\\r\\n\");\r\n        let opusFmt = \"-1\";\r\n        let codec = \"\";\r\n        const rtpmap = \"a=rtpmap:\";\r\n        // Find the right fmt for 'opus' codec by scanning rtpmap then obtain fmtp for it\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].indexOf(rtpmap) === 0) {\r\n                codec = lines[i].split(\" \")[1];\r\n\r\n                if (codec.indexOf(\"opus\") === 0) {\r\n                    opusFmt = lines[i].split(\" \")[0].slice(rtpmap.length); // value written after 'a=rtpmap:'\r\n                    Log.i(\"{93c7910}\", \"{c3dd71b}\", media, opusFmt);\r\n                }\r\n            } else if (lines[i].indexOf(\"a=fmtp:\" + opusFmt + \" \") === 0) {\r\n                // Find the fmtp (will always be ahead of rtpmap & media line)\r\n                fmtpLines.push(i);\r\n                opusFmt = \"-1\";\r\n            }\r\n        }\r\n        // If not found - return the original SDP payload\r\n        if (fmtpLines.length === 0) {\r\n            Log.e(\"{93c7910}\", \"{115f256}\", media);\r\n            return sdp;\r\n        }\r\n\r\n        let fmtp;\r\n        let lastFmtpLine = -1;\r\n        let newLines: string[] = [];\r\n        for (const fmtpLine of fmtpLines) {\r\n            fmtp = lines[fmtpLine];\r\n            Log.d(\"{93c7910}\", \"{9bb0e6f}\", fmtp);\r\n            fmtp = fmtp + \";stereo=1\";\r\n            Log.d(\"{93c7910}\", \"{4f021eb}\", fmtp);\r\n\r\n            newLines = newLines.concat(lines.slice(lastFmtpLine + 1, fmtpLine));\r\n            newLines.push(fmtp);\r\n            lastFmtpLine = fmtpLine;\r\n        }\r\n        newLines = newLines.concat(lines.slice(lastFmtpLine + 1));\r\n        return newLines.join(\"\\r\\n\");\r\n    }\r\n\r\n    // Adds 'a=imageattr' to SDP for H26[45] targets.  See RFC 6236.\r\n    // We also added nonstandard parameter \"framerate,\" which is allowed\r\n    // by the spec.\r\n    // Should be removed when server begins to send this in the SDP.\r\n    // Only adds \"a=imageattr\" to first video media section of SDP.\r\n    static AddImageattrsToSDP(\r\n        sdp: string,\r\n        minw: number,\r\n        maxw: number,\r\n        minh: number,\r\n        maxh: number,\r\n        minfps: number,\r\n        maxfps: number\r\n    ) {\r\n        let lines = sdp.split(\"\\r\\n\");\r\n        let lineIndex = -1;\r\n        // Find the video media line\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].startsWith(\"m=video\")) {\r\n                lineIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        // If not found - return the original SDP payload\r\n        if (lineIndex === -1) {\r\n            Log.e(\"{93c7910}\", \"{3ab33e3}\");\r\n            return sdp;\r\n        }\r\n\r\n        // Go to the next line\r\n        lineIndex++;\r\n\r\n        // First, search for a=imageattr to make sure it is not here yet.\r\n        // This allows seamless upgrade when server adds it to the SDP.\r\n        for (let i = lineIndex; i < lines.length; i++) {\r\n            if (lines[i].startsWith(\"a=imageattr\")) {\r\n                Log.d(\"{93c7910}\", \"{b38bf22}\");\r\n                return sdp;\r\n            }\r\n        }\r\n\r\n        // ok, no imageattr - continue to add\r\n\r\n        let payloadTypes = new Set<string>();\r\n        // Look for all RTP payloads that correspond to H26[45] streams, taking care not to\r\n        // move into the next media section. Add imageattr line for each payload.\r\n        while (lineIndex < lines.length && !lines[lineIndex].startsWith(\"m=\")) {\r\n            const line = lines[lineIndex];\r\n            const h26XRe = /a=rtpmap:.*H26[45]\\//;\r\n            if (h26XRe.test(line)) {\r\n                const payloadType = line.slice(9, line.indexOf(\" \"));\r\n                payloadTypes.add(payloadType);\r\n            } else if (line.indexOf(\"a=fmtp:\") === 0) {\r\n                const payloadType = line.slice(7, line.indexOf(\" \"));\r\n                if (payloadTypes.has(payloadType)) {\r\n                    // insert new line after fmtp for this payloadType\r\n                    lineIndex++;\r\n                    let imageattr = `a=imageattr:${payloadType} send [x=[${minw}:${maxw}],y=[${minh}:${maxh}],fps=[${minfps}:${maxfps}]]`;\r\n                    lines.splice(lineIndex, 0, imageattr);\r\n                }\r\n            }\r\n            lineIndex++;\r\n        }\r\n        return lines.join(\"\\r\\n\");\r\n    }\r\n\r\n    static GetGoogBitrateUpdatedSDP(\r\n        sdp: string,\r\n        media: string,\r\n        br_min: string,\r\n        br_max: string,\r\n        br_start: string\r\n    ) {\r\n        let lines = sdp.split(\"\\r\\n\");\r\n        let lineIndex = -1;\r\n        // Find the right media line\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].indexOf(\"m=\" + media) === 0) {\r\n                lineIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        // If not found - return the original SDP payload\r\n        if (lineIndex === -1) {\r\n            Log.e(\"{93c7910}\", \"{e0899ab}\", media);\r\n            return sdp;\r\n        }\r\n        Log.d(\"{93c7910}\", \"{5cc346f}\", media, lineIndex);\r\n\r\n        // Go to the next line\r\n        lineIndex++;\r\n\r\n        // Additional format params\r\n        let additionalParams = \"\";\r\n        additionalParams += \";x-google-max-bitrate=\" + br_max;\r\n        additionalParams += \";x-google-min-bitrate=\" + br_min;\r\n        additionalParams += \";x-google-start-bitrate=\" + br_start;\r\n\r\n        let h264Payloads = new Set<string>();\r\n        // Look for all RTP payloads that correspond to H264 streams, taking care not to\r\n        // move into the next media section. When we find corresponding format parameters\r\n        // for one, add our additional parameters\r\n        while (lineIndex < lines.length && lines[lineIndex].indexOf(\"m=\") !== 0) {\r\n            const line = lines[lineIndex];\r\n            if (line.indexOf(\"a=rtpmap:\") === 0 && line.indexOf(\"H264/\") > 0) {\r\n                const payload = line.slice(9, line.indexOf(\" \"));\r\n                h264Payloads.add(payload);\r\n            } else if (line.indexOf(\"a=fmtp:\") === 0) {\r\n                const payload = line.slice(7, line.indexOf(\" \"));\r\n                if (h264Payloads.has(payload)) {\r\n                    // Modify the line in-place instead of using our local variable\r\n                    lines[lineIndex] += additionalParams;\r\n                }\r\n            }\r\n            lineIndex++;\r\n        }\r\n        return lines.join(\"\\r\\n\");\r\n    }\r\n\r\n    /**\r\n     * @brief Compares the provided SDP to the list of supported codecs, selecting the top codec present in the SDP that has a match in the codec list.\r\n     * If no match is found, defaults to H264.\r\n     * @param sdp the WebRTC SDP\r\n     * @param codecs list of codecs supported by device in descending order according to priority.\r\n     * The first codec in the array is given highest priority.\r\n     * @returns the selected codec\r\n     * @todo Consoliate SDP manipulation into one function or group of functions.\r\n     */\r\n    static GetSelectedCodec(sdp: string, codecs: SdpCodecType[]): SdpCodecType {\r\n        const lines = sdp.split(\"\\r\\n\");\r\n        let mediaLineIndex = -1;\r\n        let lineIndex = -1;\r\n\r\n        if (!codecs.length) {\r\n            return SdpCodecType.H264;\r\n        }\r\n\r\n        // Find the video media line\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].startsWith(\"m=video\")) {\r\n                mediaLineIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (mediaLineIndex === -1) {\r\n            Log.e(\"{93c7910}\", \"{3ab33e3}\");\r\n            return SdpCodecType.H264;\r\n        }\r\n\r\n        // Go to the next line\r\n        lineIndex = mediaLineIndex + 1;\r\n\r\n        const sdpCodecs = new Set<SdpCodecType>();\r\n\r\n        // Find all codecs present in the SDP\r\n        while (lineIndex < lines.length && !lines[lineIndex].startsWith(\"m=\")) {\r\n            const line = lines[lineIndex];\r\n            const rtpMap = \"a=rtpmap:\";\r\n            if (line.indexOf(rtpMap) === 0) {\r\n                const codec = line.slice(line.indexOf(\" \") + 1, line.indexOf(\"/\"));\r\n                if (\r\n                    codec === SdpCodecType.H264 ||\r\n                    codec === SdpCodecType.H265 ||\r\n                    codec === SdpCodecType.AV1\r\n                ) {\r\n                    sdpCodecs.add(codec);\r\n                }\r\n            }\r\n            lineIndex++;\r\n        }\r\n\r\n        // Traverse list of supported codecs, selecting the first that is present in the SDP\r\n        for (const codec of codecs) {\r\n            if (sdpCodecs.has(codec)) {\r\n                Log.i(\"{93c7910}\", \"{304c3b1}\", codec);\r\n                return codec;\r\n            }\r\n        }\r\n\r\n        Log.i(\"{93c7910}\", \"{81357e4}\");\r\n        return SdpCodecType.H264;\r\n    }\r\n\r\n    public getVirtualGamepadHandler(): VirtualGamepadHandler | undefined {\r\n        return this.inputHandler?.getVirtualGamepadHandler();\r\n    }\r\n\r\n    public getExtendedDebugStats(): ExtendedDebugStats {\r\n        return {\r\n            isVideoElementPaused: this.videoElement.paused,\r\n            isAudioElementPaused: this.audioElement.paused,\r\n            isUserInputEnabled: this.inputHandler?.isUserInputEnabled() ?? false,\r\n            isVirtualKeyboardVisible: this.inputHandler?.getVirtualKeyboardState() ?? false,\r\n            micState: this.micCapturer.getMicState(),\r\n            isRsdmmActive: this.gamepadHandler.isRsdmmActive(),\r\n            keyboardLayout: this.keyboardLayout,\r\n            appLaunchMode: this.appLaunchMode,\r\n            inputMode: this.inputHandler?.getInputMode() ?? \"\"\r\n        };\r\n    }\r\n\r\n    public togglePerfIndicator() {\r\n        this.perfIndicator = !this.perfIndicator;\r\n        const msg: ControlChannelMsg = {\r\n            perfIndicator: { on: this.perfIndicator }\r\n        };\r\n        this.queueControlMessage(msg);\r\n    }\r\n\r\n    public toggleStutterIndicator() {\r\n        this.stutterIndicator = !this.stutterIndicator;\r\n        const msg: ControlChannelMsg = {\r\n            stutterIndicator: { on: this.stutterIndicator }\r\n        };\r\n        this.queueControlMessage(msg);\r\n    }\r\n\r\n    public toggleGamepadOverlay() {\r\n        this.riDeviceOverlayBitmap ^= RIOverlayDevices.GAMEPAD;\r\n\r\n        const msg: ControlChannelMsg = {\r\n            riDeviceOverlay: { bitmap: this.riDeviceOverlayBitmap }\r\n        };\r\n        this.queueControlMessage(msg);\r\n    }\r\n\r\n    // Returns true if we sent the latency trigger\r\n    public sendLatencyTrigger(): boolean {\r\n        if (this.audioRecorder?.startLatencyDump()) {\r\n            const msg: ControlChannelMsg = {\r\n                latencyTrigger: true\r\n            };\r\n            this.queueControlMessage(msg);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sendPcmDumpTrigger() {\r\n        if (this.audioRecorder?.startPcmDump()) {\r\n            const msg: ControlChannelMsg = {\r\n                pcmDumpTrigger: true\r\n            };\r\n            this.queueControlMessage(msg);\r\n        }\r\n    }\r\n\r\n    public eventTriggerLatencyDump() {\r\n        this.audioRecorder?.createNewLatencyDump();\r\n    }\r\n\r\n    public toggleGpuViewCapture() {\r\n        // TODO: This lives in the mall client in native, along with the rest of hotkey handling. We should work to\r\n        // move it out\r\n        this.sendCustomMessage({\r\n            messageType: \"GpuViewStartRequest\",\r\n            messageRecipient: \"GPUViewTraceControl\",\r\n            data: \"GpuView\"\r\n        });\r\n        Log.i(\"{93c7910}\", \"{0915cd3}\");\r\n    }\r\n\r\n    public sendTextInput(text: ArrayBuffer) {\r\n        this.inputHandler?.sendTextInput(text);\r\n    }\r\n\r\n    public setVirtualKeyboardState(visible: boolean) {\r\n        this.inputHandler?.setVirtualKeyboardState(visible);\r\n    }\r\n\r\n    public setVideoTransforms(offsetX: number, offsetY: number, zoomFactor: number) {\r\n        this.inputHandler?.clientRequestVideoTransform(offsetX, offsetY, zoomFactor);\r\n    }\r\n\r\n    public sendCustomMessage(data: CustomMessage) {\r\n        const message: ControlChannelMsg = {\r\n            customMessage: JSON.stringify(data)\r\n        };\r\n        this.queueControlMessage(message);\r\n    }\r\n\r\n    public setStreamingMaxBitrate(streamIdx: number, kbps: number) {\r\n        this.queueControlMessage({ setMaxBitrate: { streamIndex: streamIdx, maxBitrate: kbps } });\r\n        Log.d(\"{93c7910}\", \"{6bbc1a2}\", kbps);\r\n    }\r\n\r\n    public setDrcDfcState(streamIdx: number, enabled: boolean) {\r\n        this.queueControlMessage({ setDrcState: { streamIndex: streamIdx, state: enabled } });\r\n        this.queueControlMessage({ setDfcState: { streamIndex: streamIdx, state: enabled } });\r\n        Log.d(\"{93c7910}\", \"{0ed76f3}\", enabled);\r\n    }\r\n\r\n    public writeEtwPrint(msg: string) {\r\n        this.queueControlMessage({ etwPrint: msg });\r\n    }\r\n\r\n    public emitChannelErrorEvent(name: string, event: Event, bufferedAmount?: number) {\r\n        const error = (<RTCErrorEvent>event)?.error;\r\n        // Only report this if the session isn't already stopping. Client-initiated stops\r\n        // always trigger error events on all data channels\r\n        if (!this.stopNotified) {\r\n            this.telemetry.emitDebugEvent(\r\n                \"ChannelError\",\r\n                name,\r\n                error?.name,\r\n                error?.message,\r\n                bufferedAmount?.toString()\r\n            );\r\n        }\r\n        Log.e(\"{93c7910}\", \"{db7ae96}\", name, error?.name, error?.message);\r\n    }\r\n\r\n    public processInputChannelStats(): void {\r\n        RagnarokProfiler.addInputChannelStats(\r\n            this.inputChannel!.bufferedAmount,\r\n            this.gamepadHandler.getMainThreadSchedulingDelay()\r\n        );\r\n\r\n        // Reset needed since we send the max delay every stats reporting interval\r\n        this.gamepadHandler.resetMainThreadSchedulingDelay();\r\n    }\r\n\r\n    public sendKeyEvent(event: KeyboardEvent) {\r\n        this.inputHandler?.sendKeyEvent(event);\r\n    }\r\n\r\n    private checkAndNotifyStartToClient() {\r\n        if (\r\n            this.trackIdsExpected.length > 0 &&\r\n            getChannelState(this.controlChannel) !== ChannelState.CONNECTING &&\r\n            getChannelState(this.cursorChannel) !== ChannelState.CONNECTING &&\r\n            getChannelState(this.inputChannel) !== ChannelState.CONNECTING &&\r\n            this.didReceiveExpectedTracks()\r\n        ) {\r\n            this.notifyStart();\r\n        }\r\n    }\r\n\r\n    private signalAudioPacketsReceived(stream: MediaStream) {\r\n        let audioTrack = getAudioTrack(stream);\r\n        if (audioTrack) {\r\n            audioTrack.onunmute = () => {\r\n                this.audioTrackMuted = false;\r\n            };\r\n        }\r\n    }\r\n\r\n    public setKeyboardLayout(layout: string) {\r\n        this.keyboardLayout = layout;\r\n        if (!this.inputHandler) {\r\n            this.hasPendingKeyboardLayout = true;\r\n        } else {\r\n            this.sendCustomMessage({\r\n                messageType: \"kbLayout\",\r\n                messageRecipient: \"KBLayoutChange\",\r\n                data: layout\r\n            });\r\n\r\n            this.inputHandler.setKeyboardLayout(layout);\r\n        }\r\n    }\r\n\r\n    private logStreamTimestamps() {\r\n        Log.d(\"{93c7910}\", \"{440d709}\", RagnarokProfiler.getStreamBeginTime(), performance.timeOrigin);\r\n    }\r\n\r\n    /**\r\n     * Configures the given data channel with common event handling, logs, and telemetry\r\n     * @param dataChannel The data channel to configure\r\n     * @param params How to configure the given data channel, see DataChannelParams for details\r\n     */\r\n    public addDataChannel(dataChannel: RTCDataChannel, params: DataChannelParams): void {\r\n        // TODO: If requiredForStreaming, we could keep track of the data channel in a list instead of hard coding\r\n        // the list of required channels in checkAndNotifyStartToClient\r\n        const channelName = dataChannel.label;\r\n        let isClosing = false;\r\n        dataChannel.onopen = () => {\r\n            Log.d(\"{93c7910}\", \"{8e9ee5d}\", channelName);\r\n            params.open?.();\r\n            if (params.errorCode) {\r\n                this.checkAndNotifyStartToClient();\r\n            }\r\n        };\r\n\r\n        dataChannel.onclosing = () => {\r\n            Log.d(\"{93c7910}\", \"{d0c8ae7}\", channelName);\r\n            isClosing = true;\r\n        };\r\n\r\n        dataChannel.onclose = () => {\r\n            Log.d(\"{93c7910}\", \"{a3c9826}\", channelName);\r\n            params.close?.();\r\n            if (params.errorCode) {\r\n                this.stopStreamWithErrorIfSleep();\r\n                // TODO: I guess we should stop the stream unconditionally here\r\n            }\r\n        };\r\n\r\n        dataChannel.onerror = error => {\r\n            Log.e(\"{93c7910}\", \"{fcd64bb}\", channelName);\r\n            if (isClosing && params.errorCode) {\r\n                this.stopStreamDueToChannelClosing();\r\n            } else {\r\n                this.emitChannelErrorEvent(channelName, error, dataChannel.bufferedAmount);\r\n                if (params.errorCode) {\r\n                    this.stopStreamWithError(params.errorCode);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    private sendWindowState(frameNumber: number) {\r\n        let windowStateFlags = 0x0000;\r\n        // Get new state every time, to avoid maintaining a separate window state cache\r\n        if (this.windowObserver.getWindowFocus()) {\r\n            windowStateFlags |= NvstWindowStateFlags.KEYBOARD_FOCUS;\r\n        }\r\n        if (this.windowObserver.getMouseFocus()) {\r\n            windowStateFlags |= NvstWindowStateFlags.MOUSE_FOCUS;\r\n        }\r\n        if (this.windowObserver.getFullscreen()) {\r\n            windowStateFlags |= NvstWindowStateFlags.FULLSCREEN;\r\n        }\r\n        // TODO: We don't get maximize/minimize events in browser, we could however compare viewport and screen size\r\n        // It is not going to be taken into account in QoS initially, so leave it off for now\r\n        // It might be better to add a visibility flag instead if it does come into use\r\n        const msg: ControlChannelMsg = {\r\n            windowState: {\r\n                streamIndex: 0,\r\n                frameNumber: frameNumber,\r\n                windowStateFlags: windowStateFlags\r\n            }\r\n        };\r\n        this.queueControlMessage(msg);\r\n    }\r\n\r\n    private onWindowStateChange() {\r\n        if (!this.statsServiceEnabled()) {\r\n            // Should only be in internal cases when the user explicitly disabled stats\r\n            // Usually low power systems, where the ideal case without many window state updates is tested\r\n            Log.w(\"{93c7910}\", \"{76bcede}\");\r\n            return;\r\n        }\r\n        this.sendWindowState(this.statsService!.getFramesDecoded());\r\n    }\r\n}\r\n\r\nfunction getAudioTrack(stream: MediaStream) {\r\n    let audioTrack = null;\r\n    let audioTracks = stream.getAudioTracks();\r\n    if (audioTracks.length) {\r\n        audioTrack = audioTracks[0];\r\n    }\r\n    return audioTrack;\r\n}\r\n\r\nfunction shouldCombineStreams(): boolean {\r\n    return (\r\n        RagnarokSettings.combineStreams ?? RagnarokSettings.ragnarokConfig.combineStreams ?? true\r\n    );\r\n}\r\n\r\n/**\r\n * If the provided data channel is defined, returns readyState.\r\n * Otherwise, returns \"connecting\" since the data channel hasn't been created yet.\r\n */\r\nfunction getChannelState(dataChannel?: RTCDataChannel): RTCDataChannelState {\r\n    return dataChannel?.readyState ?? ChannelState.CONNECTING;\r\n}\r\n","import { StreamClient } from \"../streamclient\";\r\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\r\nimport {\r\n    IEventEmitter,\r\n    IsWindowsOS,\r\n    IsChromeOS,\r\n    IsiDevice,\r\n    IsMacOS,\r\n    PlatformDetails,\r\n    IsLinuxOS,\r\n    IsTizenOS,\r\n    IsAndroidOS,\r\n    IsTV,\r\n    Log\r\n} from \"../dependencies\";\r\nimport { GestureDetector, GestureHandler, TouchRecord } from \"./gesturedetector\";\r\nimport { TouchListener } from \"./touchlistener\";\r\nimport {\r\n    EVENTS,\r\n    RNotificationCode,\r\n    StreamingEvent,\r\n    InputConfigFlags,\r\n    Zoneless,\r\n    TextCompositionEvent,\r\n    InputType\r\n} from \"../interfaces\";\r\nimport { RagnarokProfiler } from \"../ragnarokprofiler\";\r\nimport { VirtualGamepadHandler } from \"./virtualgamepad\";\r\nimport { VIRTUAL_KEYS, CODE_TO_VK_MAP, KEY_TO_VK_MAP, CHAR_TO_VK_MAP } from \"./keycodes\";\r\nimport { RagnarokSettings } from \"../util/settings\";\r\nimport { InputChannel, InputMediaElement, Measurements } from \"./inputinterfaces\";\r\nimport { PacketId, InputModifierFlags, LockKeyBitMask } from \"./inputpacketinfo\";\r\nimport { GamepadHandler } from \"./gamepadhandler\";\r\nimport { LatencyIndicator } from \"../debug/latencyindicator\";\r\nimport { GamepadTester } from \"../debug/gamepadtester\";\r\nimport {\r\n    InputPacketHandler,\r\n    IInputPacketHandlerCallbacks,\r\n    MoveEventBuffer\r\n} from \"./inputpackethandler\";\r\nimport { GamepadRSDMM } from \"./gamepadrsdmm\";\r\nimport { BoundaryPair, IStreamCallbacks, VideoState } from \"../rinterfaces\";\r\nimport { SafeZoneHandler } from \"../safezonehandler\";\r\nimport { MouseHandler } from \"./mousehandler\";\r\nimport { GetCaptureTimestamp } from \"../util/utils\";\r\nimport { WindowStateObserver, WindowStateType } from \"../windowstateobserver\";\r\n\r\nconst LOGTAG = \"inputhandler\";\r\n\r\ninterface LocalStatistics {\r\n    rafTime: number;\r\n    droppedVideoFrames: number;\r\n    totalVideoFrames: number;\r\n}\r\n\r\n/// Approximate max number of mouse events we want in one packet. This fits a mouse group of 18 packets, 18 more\r\n/// individual ungrouped mouse events, an extra non-move event.\r\nconst MAX_MOUSE_EVENTS = 36;\r\n\r\ndeclare interface ResizeObserverSize {\r\n    inlineSize: number;\r\n    blockSize: number;\r\n}\r\n\r\ndeclare interface ResizeObserverEntry {\r\n    target: Element;\r\n    contentRect: DOMRectReadOnly;\r\n    borderBoxSize: readonly ResizeObserverSize[];\r\n    contentBoxSize: readonly ResizeObserverSize[];\r\n    devicePixelContentBoxSize: readonly ResizeObserverSize[];\r\n}\r\n\r\ndeclare class ResizeObserver {\r\n    constructor(\r\n        callback: (entries: readonly ResizeObserverEntry[], observer: ResizeObserver) => void\r\n    );\r\n\r\n    observe(target: Element, options?: { box?: \"content-box\" | \"border-box\" }): void;\r\n    unobserve(target: Element): void;\r\n    disconnect(): void;\r\n}\r\n\r\ndeclare interface IntersectionObserverInit {\r\n    root?: Element | null;\r\n    rootMargin?: string;\r\n    threshold?: number | number[];\r\n}\r\n\r\ndeclare interface IntersectionObserverEntry {\r\n    readonly boundingClientRect: DOMRectReadOnly;\r\n    readonly intersectionRatio: number;\r\n    readonly intersectionRect: DOMRectReadOnly;\r\n    readonly isIntersecting: boolean;\r\n    readonly rootBounds: DOMRectReadOnly | null;\r\n    readonly target: Element;\r\n    readonly time: number;\r\n}\r\n\r\ndeclare class IntersectionObserver {\r\n    constructor(\r\n        callback: (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => void,\r\n        options?: IntersectionObserverInit\r\n    );\r\n\r\n    readonly root: Element | null;\r\n    readonly rootMargin: string;\r\n    readonly thresholds: ReadonlyArray<number>;\r\n    disconnect(): void;\r\n    observe(target: Element): void;\r\n    takeRecords(): IntersectionObserverEntry[];\r\n    unobserve(target: Element): void;\r\n}\r\n\r\nconst enum MouseButtons {\r\n    LEFT_CLICK = 0,\r\n    MIDDLE_CLICK,\r\n    RIGHT_CLICK,\r\n    MOUSE_FOUR,\r\n    MOUSE_FIVE\r\n}\r\n\r\nconst enum TextCompositionState {\r\n    COMPOSITION_NONE = 0,\r\n    COMPOSITION_BEGIN = 1,\r\n    COMPOSITION_IN_PROGRESS = 2\r\n}\r\n\r\nconst MAX_ZOOM_FACTOR = 3;\r\nconst MIN_ZOOM_FACTOR = 1.1;\r\n\r\nconst CHINESE_TRADITIONAL_LAYOUT = \"zh-TW\";\r\n\r\nexport class InputHandler implements GestureHandler, IInputPacketHandlerCallbacks {\r\n    private videoTagElement: InputMediaElement;\r\n    private videoState: VideoState;\r\n    private keydownFunc: any;\r\n    private keyupFunc: any;\r\n    private focusChangeFunc: any;\r\n    private fullscreenEventFunc: any;\r\n    private preRenderFunc: any;\r\n    private mouseHandler: MouseHandler;\r\n    private gestureDetector?: GestureDetector;\r\n    private touchListener?: TouchListener;\r\n    private eventEmitter: IEventEmitter;\r\n    private rendering: boolean;\r\n    private resizedFunc: any;\r\n    private viewportResizedFunc: any;\r\n    private popStateFunc: any;\r\n    private textInputFunc: any;\r\n    private textCompositionFunc: any;\r\n    private lastLockKeysState: number;\r\n    private pressedKeys: Set<number> = new Set();\r\n    private supportsNumAndScrollLock: boolean;\r\n    private isChromeOs: boolean;\r\n    private isMacOs: boolean;\r\n    private isAndroidOs: boolean;\r\n    private ignoredLockKeys: number[];\r\n    private telemetry: TelemetryHandler;\r\n    private enabledInputs: InputType = InputType.None;\r\n    private isVirtualKeyboardVisible: boolean = false;\r\n    private enabledInputsBeforeUserIdlePendingOverlay?: InputType;\r\n    private isUserIdleTimeoutPending: boolean;\r\n    private historyProtected: boolean;\r\n    private preventNavigation: boolean;\r\n    private streamClient: StreamClient;\r\n    private measurements: Measurements;\r\n    private localStats: LocalStatistics;\r\n    private perf: PerformanceObserver | null;\r\n    private useVkCodes: boolean = true;\r\n    private windowAddEventListener: any;\r\n    private documentAddEventListener: any;\r\n    private videoAddEventListener: any;\r\n    private windowRemoveEventListener: any;\r\n    private documentRemoveEventListener: any;\r\n    private videoRemoveEventListener: any;\r\n    private gamepadHandler: GamepadHandler;\r\n    private rsdmmHandler: GamepadRSDMM;\r\n    private statsGestureTimerId: number = 0;\r\n    private resizeObserver?: ResizeObserver;\r\n    private intersectionObserver?: IntersectionObserver;\r\n    private touchDelay: TouchDelay = new TouchDelay();\r\n    private gamepadTester: GamepadTester;\r\n    private packetHandler: InputPacketHandler;\r\n    private gamepadTesterEnabled: boolean = false;\r\n    private idleInputListenerFunc: any;\r\n    private textInputElement?: HTMLInputElement;\r\n    private textCompositionState: TextCompositionState = TextCompositionState.COMPOSITION_NONE;\r\n    private textInputDetected: boolean = false;\r\n    private platformDetails: PlatformDetails;\r\n    // TODO: Make this configurable with a remote config option\r\n    private flagTranslateToggleChineseKey: boolean = true;\r\n    private tradChineseLayout: boolean = false;\r\n    private callbacks: IStreamCallbacks;\r\n    private twoFingerTapCount: number = 0;\r\n    private threeFingerTapCount: number = 0;\r\n    private safeZoneHandler: SafeZoneHandler;\r\n    private safeZoneTimeoutId: number = 0;\r\n    private autocapitalizeSetting: string = \"off\";\r\n    private autocorrectSetting: string = \"off\";\r\n\r\n    constructor(\r\n        streamClient: StreamClient,\r\n        videoElement: InputMediaElement,\r\n        inputChannel: InputChannel,\r\n        cursorChannel: InputChannel,\r\n        telemetry: TelemetryHandler,\r\n        eventEmitter: IEventEmitter,\r\n        configFlags: InputConfigFlags,\r\n        sendRawTouchinput: boolean,\r\n        gamepadTester: GamepadTester,\r\n        gamepadHandler: GamepadHandler,\r\n        platformDetails: PlatformDetails,\r\n        callbacks: IStreamCallbacks,\r\n        safeZoneHandler: SafeZoneHandler,\r\n        private windowObserver: WindowStateObserver,\r\n        textInputElement?: HTMLInputElement\r\n    ) {\r\n        this.platformDetails = platformDetails;\r\n        this.streamClient = streamClient;\r\n        this.videoTagElement = videoElement;\r\n        this.telemetry = telemetry;\r\n        this.callbacks = callbacks;\r\n        this.safeZoneHandler = safeZoneHandler;\r\n\r\n        // Using video element or screen dimensions to start here ensures the cursor's initial position\r\n        // is correct. If we initialize these to zero, the cursor will only be able to start at (0, 0).\r\n        /// TODO: Store our cursor coordinates normalized to 0-65535 so we don't need to change them\r\n        /// when the video dimensions change.\r\n        this.videoState = {\r\n            displayVideoWidth: videoElement.clientWidth || window.screen.width,\r\n            displayVideoHeight: videoElement.clientHeight || window.screen.height,\r\n            scalingFactor: 1,\r\n            leftPadding: 0,\r\n            topPadding: 0,\r\n            videoWidth: 0,\r\n            videoHeight: 0,\r\n            viewportHeight: 0,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            zoomFactor: 1\r\n        };\r\n\r\n        const zoneless = (window as any).zoneless as Zoneless;\r\n        this.windowAddEventListener =\r\n            zoneless?.windowAddEventListener?.bind(window) ?? window.addEventListener.bind(window);\r\n        this.windowRemoveEventListener =\r\n            zoneless?.windowRemoveEventListener?.bind(window) ??\r\n            window.removeEventListener.bind(window);\r\n        this.documentAddEventListener =\r\n            zoneless?.documentAddEventListener?.bind(document) ??\r\n            document.addEventListener.bind(document);\r\n        this.documentRemoveEventListener =\r\n            zoneless?.documentRemoveEventListener?.bind(document) ??\r\n            document.removeEventListener.bind(document);\r\n        this.videoAddEventListener =\r\n            zoneless?.videoAddEventListener?.bind(videoElement) ??\r\n            zoneless?.documentAddEventListener?.bind(document) ??\r\n            videoElement.addEventListener.bind(videoElement);\r\n        this.videoRemoveEventListener =\r\n            zoneless?.videoRemoveEventListener?.bind(videoElement) ??\r\n            zoneless?.documentRemoveEventListener?.bind(document) ??\r\n            videoElement.removeEventListener.bind(videoElement);\r\n\r\n        this.keydownFunc = this.keydown.bind(this);\r\n        this.keyupFunc = this.keyup.bind(this);\r\n        this.fullscreenEventFunc = this.fullscreenEventHandler.bind(this);\r\n        this.preRenderFunc = this.preRender.bind(this);\r\n        this.focusChangeFunc = this.onFocusChange.bind(this);\r\n        this.resizedFunc = this.resized.bind(this);\r\n        this.viewportResizedFunc = this.viewportResized.bind(this);\r\n        this.popStateFunc = this.popstate.bind(this);\r\n        this.idleInputListenerFunc = this.idleInputListener.bind(this);\r\n        this.textInputFunc = this.textInputHandler.bind(this);\r\n        this.textCompositionFunc = this.textCompositionHandler.bind(this);\r\n        this.rendering = false;\r\n\r\n        this.gamepadTester = gamepadTester;\r\n\r\n        this.preventNavigation = !!configFlags.preventNavigation;\r\n\r\n        this.measurements = {\r\n            baseTime: 0,\r\n            baseTotalVideoFrames: 0,\r\n            animationFrameCount: 0,\r\n            sendInputCount: 0,\r\n            sendInputOver5ms: 0,\r\n            sendInputOver10ms: 0,\r\n            singleDroppedFrames: 0,\r\n            multiDroppedFrames: 0,\r\n            aggregatedCount: 0,\r\n            oversizedEventCount: 0\r\n        };\r\n\r\n        const moveEventBuffer = new MoveEventBuffer(MAX_MOUSE_EVENTS);\r\n        this.packetHandler = new InputPacketHandler(\r\n            this,\r\n            moveEventBuffer,\r\n            this.measurements,\r\n            this.videoState,\r\n            this.streamClient,\r\n            inputChannel,\r\n            this.telemetry\r\n        );\r\n        this.rsdmmHandler = new GamepadRSDMM(this.videoTagElement, this.platformDetails);\r\n        this.mouseHandler = new MouseHandler(\r\n            streamClient,\r\n            videoElement,\r\n            cursorChannel,\r\n            telemetry,\r\n            configFlags,\r\n            platformDetails,\r\n            this.rsdmmHandler,\r\n            this.measurements,\r\n            moveEventBuffer,\r\n            this.packetHandler,\r\n            this.windowObserver\r\n        );\r\n\r\n        if (sendRawTouchinput) {\r\n            if (TouchListener.isSupported()) {\r\n                this.touchListener = this.createTouchListener();\r\n                this.mouseHandler.setShowCursor(false);\r\n                Log.i(\"{8bacfa5}\", \"{60f3637}\");\r\n            } else {\r\n                Log.w(\"{8bacfa5}\", \"{32104d3}\");\r\n            }\r\n        } else {\r\n            Log.i(\"{8bacfa5}\", \"{6be89bf}\");\r\n        }\r\n\r\n        if (GestureDetector.isSupported() && !IsTV(this.platformDetails)) {\r\n            this.gestureDetector = this.createGestureDetector();\r\n        }\r\n\r\n        this.eventEmitter = eventEmitter;\r\n        // NVST protocol format: https://confluence.nvidia.com/display/GAMESTREAM/NVSC+RemoteInput+protocol\r\n\r\n        this.lastLockKeysState = 0;\r\n\r\n        this.supportsNumAndScrollLock = IsWindowsOS(this.platformDetails);\r\n        this.isChromeOs = IsChromeOS(this.platformDetails);\r\n        this.isMacOs = IsMacOS(this.platformDetails);\r\n        this.isAndroidOs = IsAndroidOS(this.platformDetails);\r\n\r\n        // Ignore none, some, or all of the lock keys depending on the platform.\r\n        // If possible, we try to send these through the lock keys state message and ignore the key press.\r\n        // On client platforms that don't keep track of certain key states, send the key press instead.\r\n        if (this.supportsNumAndScrollLock) {\r\n            // Caps lock, num lock, and scroll lock. All lock key states are valid on the client.\r\n            Log.d(\"{8bacfa5}\", \"{da5ae1d}\");\r\n            this.ignoredLockKeys = [\r\n                VIRTUAL_KEYS.CODE_CAPITAL,\r\n                VIRTUAL_KEYS.CODE_NUMLOCK,\r\n                VIRTUAL_KEYS.CODE_SCROLL\r\n            ];\r\n        } else if (this.isChromeOs || IsLinuxOS(this.platformDetails)) {\r\n            // All lock keys are unsupported or broken here.\r\n            Log.d(\"{8bacfa5}\", \"{b7becf9}\");\r\n            this.ignoredLockKeys = [];\r\n        } else {\r\n            // Verified on macOS, iPhone, and iPad. Assume support from other platforms.\r\n            Log.d(\"{8bacfa5}\", \"{098ce9c}\");\r\n            this.ignoredLockKeys = [VIRTUAL_KEYS.CODE_CAPITAL];\r\n        }\r\n\r\n        this.isUserIdleTimeoutPending = false;\r\n        this.historyProtected = false;\r\n        // local statistics\r\n        this.localStats = {\r\n            rafTime: 0,\r\n            droppedVideoFrames: 0,\r\n            totalVideoFrames: 0\r\n        };\r\n\r\n        if (PerformanceObserver) {\r\n            this.perf = new PerformanceObserver(list => this.perfCallback(list));\r\n        } else {\r\n            this.perf = null;\r\n        }\r\n\r\n        this.windowObserver.addStateListener(WindowStateType.FULLSCREEN, this.fullscreenEventFunc);\r\n\r\n        Log.d(\"{8bacfa5}\", \"{cc9c05b}\");\r\n\r\n        if ((<any>window).ResizeObserver) {\r\n            this.resizeObserver = new ResizeObserver(_entries => {\r\n                this.resized();\r\n            });\r\n            this.resizeObserver.observe(this.videoTagElement);\r\n        } else {\r\n            // Listen for resizes\r\n            this.windowAddEventListener(\"resize\", this.resizedFunc);\r\n        }\r\n        if (\r\n            (IsiDevice(platformDetails) || IsTizenOS(platformDetails)) &&\r\n            (<any>window).IntersectionObserver\r\n        ) {\r\n            this.intersectionObserver = new IntersectionObserver(\r\n                _entries => {\r\n                    this.resized();\r\n                },\r\n                {\r\n                    threshold: [1.0]\r\n                }\r\n            );\r\n            this.intersectionObserver.observe(this.videoTagElement);\r\n        }\r\n        // The resize event on video elements is for the video stream width/height rather than the element\r\n        // width/height, so we need this in addition to ResizeObserver/IntersectionObserver/window resize.\r\n        this.videoTagElement.addEventListener(\"resize\", this.resizedFunc);\r\n\r\n        const viewport = (<any>window).visualViewport;\r\n        if (viewport) {\r\n            this.videoState.viewportHeight = viewport.height;\r\n            viewport.addEventListener(\"resize\", this.viewportResizedFunc);\r\n        }\r\n\r\n        this.gamepadHandler = gamepadHandler;\r\n        this.gamepadHandler.setGamepadDataSender(this.packetHandler);\r\n        this.packetHandler.addVibrationHandler(this.gamepadHandler);\r\n        this.gamepadHandler.setGamepadRSDMM(this.rsdmmHandler);\r\n        this.gamepadHandler.addTelemetry(this.telemetry);\r\n\r\n        // we might already be in fullscreen\r\n        this.fullscreenEventHandler(this.windowObserver.getFullscreen());\r\n        this.changeFocusHandling(true);\r\n        if (\r\n            this.perf &&\r\n            PerformanceObserver.supportedEntryTypes &&\r\n            PerformanceObserver.supportedEntryTypes.includes(\"longtask\")\r\n        ) {\r\n            this.perf.observe({ entryTypes: [\"longtask\"] });\r\n        }\r\n\r\n        if (RagnarokSettings.latencyTest) {\r\n            LatencyIndicator.getInstance().initialize(this.videoTagElement, this.platformDetails);\r\n        }\r\n\r\n        if (IsTV(this.platformDetails) || this.isAndroidOs || IsiDevice(this.platformDetails)) {\r\n            this.textInputElement = textInputElement;\r\n\r\n            if (this.isAndroidOs) {\r\n                // Android's system keyboard input is always in IME mode.\r\n                // However, when the user types in English we don't want to wait until the composition is\r\n                // complete but instead send the key strokes directly to the server as the user types.\r\n\r\n                // The autocorrect and autocapitalize settings on android interfere in this case and we end\r\n                // up sending every character in caps. Hence turning them off\r\n                this.autocapitalizeSetting =\r\n                    this.textInputElement?.getAttribute(\"autocapitalize\") ?? \"off\";\r\n                this.autocorrectSetting =\r\n                    this.textInputElement?.getAttribute(\"autocorrect\") ?? \"off\";\r\n\r\n                this.textInputElement?.setAttribute(\"autocapitalize\", \"off\");\r\n                this.textInputElement?.setAttribute(\"autocorrect\", \"off\");\r\n            }\r\n        }\r\n    }\r\n\r\n    uninitialize() {\r\n        this.setUserIdleTimeoutPending(false);\r\n        const videoPaused = this.videoTagElement.paused;\r\n        const videoState =\r\n            videoPaused !== undefined ? (videoPaused ? \"paused\" : \"playing\") : \"unknown\";\r\n        if (this.videoTagElement.paused || (this.videoTagElement.currentTime ?? 1) < 1) {\r\n            this.telemetry.emitDebugEvent(\r\n                \"VideoPaused\",\r\n                videoState,\r\n                this.videoTagElement.currentTime?.toFixed(2)\r\n            );\r\n        }\r\n        Log.i(\"{8bacfa5}\", \"{fdc8bf7}\", videoState, this.videoTagElement.currentTime);\r\n        this.intersectionObserver?.disconnect();\r\n        this.resizeObserver?.disconnect();\r\n        this.packetHandler.stop();\r\n        if (this.perf) {\r\n            this.perf.disconnect();\r\n        }\r\n        this.toggleUserInput(false);\r\n        this.windowRemoveEventListener(\"resize\", this.resizedFunc);\r\n        this.videoTagElement.removeEventListener(\"resize\", this.resizedFunc);\r\n        (<any>window).visualViewport?.removeEventListener(\"resize\", this.viewportResizedFunc);\r\n\r\n        this.gamepadHandler.disconnectAllGamepads();\r\n        this.packetHandler.removeVibrationHandler(this.gamepadHandler);\r\n        this.windowObserver.removeStateListener(\r\n            WindowStateType.FULLSCREEN,\r\n            this.fullscreenEventFunc\r\n        );\r\n\r\n        this.rsdmmHandler.stop();\r\n        this.gamepadHandler.removeGamepadDataHandler(this.rsdmmHandler);\r\n        this.gamepadHandler.removeGamepadDataHandler(this.packetHandler);\r\n        if (this.gamepadTesterEnabled) {\r\n            this.gamepadHandler.removeGamepadDataHandler(this.gamepadTester);\r\n            this.gamepadTester.toggleGamepadTester(this.videoTagElement);\r\n        }\r\n        this.mouseHandler.uninitialize();\r\n\r\n        this.changeFocusHandling(false);\r\n        this.clearSafeZoneTimeout();\r\n        this.textInputElement?.setAttribute(\"autocapitalize\", this.autocapitalizeSetting);\r\n        this.textInputElement?.setAttribute(\"autocorrect\", this.autocorrectSetting);\r\n        Log.d(\"{8bacfa5}\", \"{b6b2756}\");\r\n    }\r\n\r\n    private createGestureDetector(): GestureDetector {\r\n        const gestureTarget = this.videoTagElement;\r\n        return new GestureDetector(\r\n            gestureTarget,\r\n            this.videoAddEventListener,\r\n            this.videoRemoveEventListener,\r\n            this as GestureHandler\r\n        );\r\n    }\r\n\r\n    private createTouchListener(): TouchListener {\r\n        return new TouchListener(\r\n            this.videoTagElement,\r\n            this.videoAddEventListener,\r\n            this.videoRemoveEventListener,\r\n            this.packetHandler,\r\n            this as GestureHandler,\r\n            this.platformDetails\r\n        );\r\n    }\r\n\r\n    private changeFocusHandling(enable: boolean) {\r\n        if (enable) {\r\n            this.windowObserver.addStateListener(WindowStateType.FOCUS, this.focusChangeFunc);\r\n        } else {\r\n            this.windowObserver.removeStateListener(WindowStateType.FOCUS, this.focusChangeFunc);\r\n        }\r\n    }\r\n\r\n    // Update the lock keys state on the server.\r\n    // Ignore CapsLock state if specified; only for Traditional Chinese input toggle.\r\n    private updateLockKeysState(evt: KeyboardEvent) {\r\n        // The caps lock key on external keyboards is bugged on ChromeOS.\r\n        // It will always set the caps lock modifier key in the down event and unset it in the up event.\r\n        // So, ignore the modifier keys in this case and send the key directly to the server.\r\n        if (this.isChromeOs && evt.keyCode === VIRTUAL_KEYS.CODE_CAPITAL) {\r\n            return;\r\n        }\r\n        // iOS only sets the CapsLock modifier properly on the caps lock keydown/up.\r\n        if (IsiDevice(this.platformDetails) && evt.keyCode !== VIRTUAL_KEYS.CODE_CAPITAL) {\r\n            return;\r\n        }\r\n        let state = 0;\r\n        // Not all these modifier keys work on all platforms according to:\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\r\n        state |= LockKeyBitMask.NVST_LKB_CAPS_VALID;\r\n\r\n        // Must not send Caps Lock state changes when using the key as a toggle between Chinese\r\n        // and Latin input.\r\n        let allowCapsLock: boolean = !this.chineseTogglePermitted();\r\n\r\n        if (allowCapsLock && evt.getModifierState(\"CapsLock\")) {\r\n            state |= LockKeyBitMask.NVST_LKB_CAPS;\r\n        }\r\n\r\n        if (this.supportsNumAndScrollLock) {\r\n            state |= LockKeyBitMask.NVST_LKB_NUM_VALID;\r\n            state |= LockKeyBitMask.NVST_LKB_SCROLL_VALID;\r\n            if (evt.getModifierState(\"NumLock\")) {\r\n                state |= LockKeyBitMask.NVST_LKB_NUM;\r\n            }\r\n            if (evt.getModifierState(\"ScrollLock\")) {\r\n                state |= LockKeyBitMask.NVST_LKB_SCROLL;\r\n            }\r\n        }\r\n\r\n        if (state == this.lastLockKeysState) {\r\n            return;\r\n        }\r\n        this.lastLockKeysState = state;\r\n\r\n        this.packetHandler.sendLockKeyState(state);\r\n    }\r\n\r\n    private preRender(_timestamp: number) {\r\n        RagnarokProfiler.onPreRender();\r\n        if (!RagnarokSettings.leanMode) {\r\n            const now = window.performance.now();\r\n            const frameCounts = getVideoFrameCounts(this.videoTagElement);\r\n            if (frameCounts) {\r\n                const totalDroppedVideoFrames = frameCounts.dropped;\r\n                const droppedFrames = totalDroppedVideoFrames - this.localStats.droppedVideoFrames;\r\n                const decodedFrames = frameCounts.decoded - this.localStats.totalVideoFrames;\r\n\r\n                this.localStats.droppedVideoFrames = totalDroppedVideoFrames;\r\n                this.localStats.totalVideoFrames = frameCounts.decoded;\r\n                if (droppedFrames == 1) {\r\n                    this.measurements.singleDroppedFrames++;\r\n                } else if (droppedFrames > 1) {\r\n                    this.measurements.multiDroppedFrames += droppedFrames;\r\n                }\r\n                RagnarokProfiler.onFrameInfo(decodedFrames, droppedFrames);\r\n            }\r\n            this.localStats.rafTime = now;\r\n        }\r\n        window.setTimeout(() => this.postRender());\r\n\r\n        this.mouseHandler.preRender(_timestamp);\r\n    }\r\n\r\n    private postRender() {\r\n        if (this.rendering) {\r\n            window.requestAnimationFrame(this.preRenderFunc);\r\n        }\r\n        this.mouseHandler.postRender();\r\n        this.gamepadHandler.postRender();\r\n\r\n        if (!RagnarokSettings.leanMode) {\r\n            this.handleMeasurements();\r\n        }\r\n    }\r\n\r\n    private handleMeasurements() {\r\n        const INTERVAL_MS = 10000;\r\n\r\n        const now = window.performance.now();\r\n        if (now > this.measurements.baseTime + INTERVAL_MS) {\r\n            if (this.measurements.baseTime !== 0) {\r\n                Log.i(\"{8bacfa5}\", \"{5fa9066}\", this.measurements.animationFrameCount, this.measurements.sendInputCount, this.measurements.sendInputOver5ms, this.measurements.sendInputOver10ms, (this.localStats.totalVideoFrames -\r\n                            this.measurements.baseTotalVideoFrames), this.measurements.singleDroppedFrames, this.measurements.multiDroppedFrames, this.measurements.aggregatedCount, this.measurements.oversizedEventCount);\r\n            }\r\n\r\n            this.measurements.baseTime = now;\r\n            this.measurements.baseTotalVideoFrames = this.localStats.totalVideoFrames;\r\n            this.measurements.animationFrameCount = 1;\r\n            this.measurements.sendInputCount = 0;\r\n            this.measurements.sendInputOver5ms = 0;\r\n            this.measurements.sendInputOver10ms = 0;\r\n            this.measurements.singleDroppedFrames = 0;\r\n            this.measurements.multiDroppedFrames = 0;\r\n            this.measurements.aggregatedCount = 0;\r\n            this.measurements.oversizedEventCount = 0;\r\n        } else {\r\n            this.measurements.animationFrameCount += 1;\r\n        }\r\n    }\r\n\r\n    virtualGamepadUpdateHandler() {\r\n        if (this.packetHandler.channelOpen()) {\r\n            this.gamepadHandler.virtualGamepadUpdateHandler();\r\n        }\r\n    }\r\n\r\n    resized(_evt?: Event) {\r\n        this.updateVideoState(this.videoTagElement);\r\n\r\n        this.touchListener?.updateVideoState(\r\n            this.videoState,\r\n            this.getMargins(),\r\n            this.videoState.zoomFactor\r\n        );\r\n    }\r\n\r\n    viewportResized(evt: Event) {\r\n        this.videoState.viewportHeight = (<any>window).visualViewport!.height;\r\n        this.applyVideoTransforms(\r\n            this.videoState.offsetX,\r\n            this.videoState.offsetY,\r\n            this.videoState.zoomFactor\r\n        );\r\n    }\r\n\r\n    popstate(evt: Event) {\r\n        Log.d(\"{8bacfa5}\", \"{b6fbd34}\");\r\n        history.pushState(null, document.title, location.href);\r\n    }\r\n\r\n    private getVirtualKeycode(evt: KeyboardEvent): number {\r\n        if (this.useVkCodes) {\r\n            if (this.isAndroidOs && this.isVirtualKeyboardVisible) {\r\n                // On Android, when textcomposition is not true, we receive keyDown/KeyUp\r\n                // with valid data for control characters (BackSpace, Enter, etc), but:\r\n                //\r\n                //     softKB inputs are recevied via KeyboardEvent.key, and KeyboardEvent.code is \"\"\r\n                // externalKb inputs are recevied via KeyboardEvent.code as usual.\r\n                //\r\n                // I have not seen the 'evt.key' filled with any values we have defined in KEY_TO_VK_MAP\r\n                // even when entering using korean and chineses.\r\n                //\r\n                // When external KB is connected, isVirtualKeyboardVisible is expecetd to be false.\r\n                // However, currently UI is setting it to true. So checking for valid code first.\r\n                let vkCode = evt.code?.length\r\n                    ? CODE_TO_VK_MAP.get(evt.code)\r\n                    : CODE_TO_VK_MAP.get(evt.key);\r\n                return vkCode ?? VIRTUAL_KEYS.CODE_NONE;\r\n            } else {\r\n                let vkCode = evt.code ? CODE_TO_VK_MAP.get(evt.code) : KEY_TO_VK_MAP.get(evt.key);\r\n                return vkCode ?? VIRTUAL_KEYS.CODE_NONE;\r\n            }\r\n        } else {\r\n            return evt.keyCode;\r\n        }\r\n    }\r\n\r\n    private japaneseSpecialKey(evt: KeyboardEvent) {\r\n        function isKanaKey(key: string) {\r\n            return (\r\n                key == \"Hiragana\" /* Kana */ ||\r\n                key == \"Katakana\" /* Shift+Kana */ ||\r\n                key == \"Romaji\" /* Alt+Kana */ ||\r\n                key == \"KanaMode\" /* Alt+Kana */\r\n            );\r\n        }\r\n        if (\r\n            evt.code == \"CapsLock\" &&\r\n            (evt.key == \"Alphanumeric\" || evt.key == \"Katakana\" || evt.key == \"Hiragana\")\r\n        ) {\r\n            // Japanese key Eisu/Caps Lock\r\n            // NOTE:    evt.keyCodes are not 20 (VIRTUAL_KEYS.CODE_CAPITAL) but\r\n            //          240 (Alphanumeric), 241 (Katakana), 242 (Hiragana)\r\n            // Allow through to the session; treat as Caps Lock\r\n            return true;\r\n        } else if (evt.code == \"KanaMode\" && isKanaKey(evt.key)) {\r\n            // Japanese 106 Hiragana/Katakana (Kana) key (2nd to the right of space) combinations\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private koreanSpecialKey(evt: KeyboardEvent) {\r\n        // Korean 103 Hangul key (to the right of space).\r\n        return evt.code == \"Lang1\" || evt.key == \"HangulMode\";\r\n    }\r\n\r\n    private chineseTogglePermitted(): boolean {\r\n        return this.flagTranslateToggleChineseKey && this.isMacOs && this.tradChineseLayout;\r\n    }\r\n\r\n    private tradChineseToggleKey(evt: KeyboardEvent): boolean {\r\n        if (!this.chineseTogglePermitted()) {\r\n            return false;\r\n        }\r\n        return evt.code == \"CapsLock\";\r\n    }\r\n\r\n    keydown(evt: KeyboardEvent) {\r\n        let sendGeneratedUpEvent = false;\r\n        this.textInputDetected = false; // tracks if there is a input event between keyDown and keyUp events\r\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\r\n\r\n        if (!this.windowObserver.getWindowFocus()) {\r\n            // On Safari, we can receive extra keypresses after we lose focus.\r\n            // Since we release keys on focus lost, this can cause an extra key press to get sent.\r\n            // Ignore all such keypresses.\r\n            return;\r\n        }\r\n\r\n        // Prevent most browser hotkeys from activating.\r\n        if (this.shouldPreventDefaultKb(evt)) {\r\n            evt.preventDefault();\r\n        }\r\n\r\n        let tradCnToggle = this.tradChineseToggleKey(evt);\r\n        if (tradCnToggle) {\r\n            sendGeneratedUpEvent = sendGeneratedUpEvent || tradCnToggle;\r\n        }\r\n\r\n        this.updateLockKeysState(evt);\r\n\r\n        const jpSpecialKey = this.japaneseSpecialKey(evt);\r\n        sendGeneratedUpEvent = sendGeneratedUpEvent || jpSpecialKey;\r\n\r\n        const krSpecialKey = this.koreanSpecialKey(evt);\r\n        sendGeneratedUpEvent = sendGeneratedUpEvent || krSpecialKey;\r\n\r\n        // Japanese and Chinese keyboards can use Caps Lock in a different way, including\r\n        // special key combinations, so don't always ignore Caps Lock on those keyboards.\r\n        if (this.ignoredLockKeys.includes(evt.keyCode) && !jpSpecialKey && !tradCnToggle) {\r\n            // On mac when caps lock is enabled only keydown callback is invoked.\r\n            // Upon clearing of the capslock a keyup is sent for it.\r\n            // To avoid dealing with this, handle lock keys in updateLockKeysState above.\r\n            return;\r\n        }\r\n\r\n        const keycode: number = tradCnToggle\r\n            ? VIRTUAL_KEYS.CODE_LSHIFT\r\n            : this.getVirtualKeycode(evt);\r\n        if (keycode === VIRTUAL_KEYS.CODE_NONE || this.pressedKeys.has(keycode)) {\r\n            return;\r\n        }\r\n        this.pressedKeys.add(keycode);\r\n\r\n        let sendEvent: boolean = false;\r\n        const ldat = this.streamClient.getLdatHandler();\r\n\r\n        if (keycode == VIRTUAL_KEYS.CODE_OEM_PLUS) {\r\n            // Ignore this event if it was used to send the latency trigger\r\n            sendEvent = !this.streamClient.sendLatencyTrigger();\r\n        } else if (evt.ctrlKey && evt.altKey) {\r\n            // Possible hotkey.\r\n            // Support stutter indicator for explicit override\r\n            if (\r\n                (RagnarokSettings.isInternalUser || RagnarokSettings.stutterIndicator) &&\r\n                (keycode == VIRTUAL_KEYS.CODE_F8 || keycode == VIRTUAL_KEYS.CODE_OEM_4)\r\n            ) {\r\n                // Handle Ctrl+Alt+ (F8/`) key combination.\r\n                this.streamClient.toggleStutterIndicator();\r\n            }\r\n            // Support all other feature toggles for internal users only.\r\n            else if (RagnarokSettings.isInternalUser) {\r\n                switch (keycode) {\r\n                    case VIRTUAL_KEYS.CODE_0:\r\n                        this.mouseHandler.setNextRawUpdate();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_1:\r\n                        this.streamClient.toggleGamepadOverlay();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_8:\r\n                        this.streamClient.toggleGpuViewCapture();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_D:\r\n                        this.streamClient.sendPcmDumpTrigger();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_G:\r\n                        this.gamepadTesterEnabled = !this.gamepadTesterEnabled;\r\n                        this.gamepadTester.toggleGamepadTester(this.videoTagElement);\r\n\r\n                        if (this.gamepadTesterEnabled) {\r\n                            this.gamepadHandler.addGamepadDataHandler(this.gamepadTester);\r\n                        } else {\r\n                            this.gamepadHandler.removeGamepadDataHandler(this.gamepadTester);\r\n                        }\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_L:\r\n                        ldat?.toggleVisibility();\r\n                        this.mouseHandler.updatePointerLock();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_S:\r\n                        this.safeZoneHandler.toggleDisplaySafeZone();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_F4:\r\n                        this.streamClient.toggleProfiler();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_F5:\r\n                        this.streamClient.toggleWebRTCStats();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_F6:\r\n                        this.streamClient.toggleOnScreenStats(evt.shiftKey);\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_F7:\r\n                    case VIRTUAL_KEYS.CODE_OEM_3:\r\n                        this.streamClient.togglePerfIndicator();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_F9:\r\n                        this.mouseHandler.toggleUnadjustedMovement();\r\n                        break;\r\n                    case VIRTUAL_KEYS.CODE_OEM_MINUS:\r\n                        this.useVkCodes = !this.useVkCodes;\r\n                        const message =\r\n                            \"Position dependent keys: \" + (this.useVkCodes ? \"ON\" : \"OFF\");\r\n                        this.streamClient.showDebugMessage(message);\r\n                        Log.i(\"{8bacfa5}\", \"{61d2ab5}\", (this.useVkCodes ? \"ON\" : \"OFF\"));\r\n                        break;\r\n                    default:\r\n                        sendEvent = true;\r\n                        break;\r\n                }\r\n            } else {\r\n                sendEvent = true;\r\n            }\r\n        } else if (ldat?.isVisible()) {\r\n            if (keycode == VIRTUAL_KEYS.CODE_RETURN) {\r\n                ldat.toggle();\r\n                this.mouseHandler.updatePointerLock();\r\n            } else if (keycode == VIRTUAL_KEYS.CODE_R) {\r\n                ldat.reset();\r\n                this.mouseHandler.updatePointerLock();\r\n            } else if (keycode == VIRTUAL_KEYS.CODE_A) {\r\n                ldat.toggleAutoFire();\r\n            } else if (keycode == VIRTUAL_KEYS.CODE_S) {\r\n                ldat.saveLog();\r\n            } else if (keycode == VIRTUAL_KEYS.CODE_C) {\r\n                ldat.centerLoupe();\r\n            } else {\r\n                sendEvent = true;\r\n            }\r\n        } else {\r\n            sendEvent = true;\r\n        }\r\n\r\n        if (sendEvent) {\r\n            LatencyIndicator.getInstance().toggleIndicator();\r\n            this.packetHandler.sendKeyboardEvent(\r\n                PacketId.PACKET_KEYDOWN,\r\n                keycode,\r\n                this.getModifierFlags(evt),\r\n                timeStamp\r\n            );\r\n        }\r\n\r\n        if (evt.key == \"Hankaku\" || evt.key == \"Zenkaku\") {\r\n            // For Japanese keyboards, the 'Backquote' key is effectively a lock state toggle,\r\n            // between Hankaku and Zenkaku. A keydown event is generated when entering each\r\n            // lock state, and keyup when exiting.\r\n            // Therefore, we receive a keyup for one state and keydown for the other, which\r\n            // leaves the key in a down state.\r\n            // If the server is not using a Japanese keyboard, this looks just like auto-repeat,\r\n            // generating lots of (in English US) tilde (~) or backquote (`) characters.\r\n\r\n            if (keycode == VIRTUAL_KEYS.CODE_OEM_3) {\r\n                sendGeneratedUpEvent = true;\r\n            }\r\n        }\r\n\r\n        if (this.isAndroidOs && this.isVirtualKeyboardVisible) {\r\n            if (evt.code == \"Backspace\") {\r\n                // For softkb input input evt.code will not be filled.\r\n                // On Android, when external KB is connected and virtualKb is also open, the keyUp for backspace\r\n                // is not getting triggered. This causes either all subsequent backpsaces to be ignored or to\r\n                // send backspaces repeatedly if no other key is input immediately.\r\n\r\n                sendGeneratedUpEvent = true;\r\n            }\r\n\r\n            if (evt.code == \"\" && evt.key == \"Enter\") {\r\n                // On Softkb enter, if there is a composition in progress, end it\r\n                const compositionEndEvt: CompositionEvent = new CompositionEvent(\"compositionend\", {\r\n                    data: this.textInputElement?.value\r\n                });\r\n                this.textInputElement?.dispatchEvent(compositionEndEvt);\r\n            }\r\n        }\r\n\r\n        if (sendGeneratedUpEvent) {\r\n            this.packetHandler.sendKeyboardEvent(\r\n                PacketId.PACKET_KEYUP,\r\n                keycode,\r\n                this.getModifierFlags(evt),\r\n                timeStamp\r\n            );\r\n            this.pressedKeys.delete(keycode);\r\n        }\r\n    }\r\n\r\n    keyup(evt: KeyboardEvent) {\r\n        let sendGeneratedDownEvent = false;\r\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\r\n\r\n        if (\r\n            this.isAndroidOs &&\r\n            this.isVirtualKeyboardVisible &&\r\n            evt.code == \"\" && // this will rule out input from external kb\r\n            evt.key == \"Unidentified\"\r\n        ) {\r\n            // WAR for Andorid softkb where backspaces are consumed by the IME compositor\r\n            // If there is no input event between a keyDown and keyUp event, then treat it\r\n            // as backspace and send keycode to server\r\n            if (!this.textInputDetected) {\r\n                this.packetHandler.sendKeyboardEvent(\r\n                    PacketId.PACKET_KEYDOWN,\r\n                    VIRTUAL_KEYS.CODE_BACK,\r\n                    0,\r\n                    timeStamp\r\n                );\r\n                this.packetHandler.sendKeyboardEvent(\r\n                    PacketId.PACKET_KEYUP,\r\n                    VIRTUAL_KEYS.CODE_BACK,\r\n                    0,\r\n                    timeStamp\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        let tradCnToggle = this.tradChineseToggleKey(evt);\r\n        if (tradCnToggle) {\r\n            sendGeneratedDownEvent = sendGeneratedDownEvent || tradCnToggle;\r\n        }\r\n\r\n        this.updateLockKeysState(evt);\r\n\r\n        if (this.ignoredLockKeys.includes(evt.keyCode) && !tradCnToggle) {\r\n            return;\r\n        }\r\n\r\n        const keycode: number = tradCnToggle\r\n            ? VIRTUAL_KEYS.CODE_LSHIFT\r\n            : this.getVirtualKeycode(evt);\r\n\r\n        if (sendGeneratedDownEvent) {\r\n            this.packetHandler.sendKeyboardEvent(\r\n                PacketId.PACKET_KEYDOWN,\r\n                keycode,\r\n                this.getModifierFlags(evt),\r\n                timeStamp\r\n            );\r\n            this.pressedKeys.add(keycode);\r\n        }\r\n\r\n        if (!this.pressedKeys.has(keycode)) {\r\n            return;\r\n        }\r\n        this.pressedKeys.delete(keycode);\r\n\r\n        LatencyIndicator.getInstance().toggleIndicator();\r\n        this.packetHandler.sendKeyboardEvent(\r\n            PacketId.PACKET_KEYUP,\r\n            keycode,\r\n            this.getModifierFlags(evt),\r\n            timeStamp\r\n        );\r\n    }\r\n\r\n    clientAspectGreater(client: number, session: number): boolean {\r\n        let diff = Math.abs(client - session);\r\n        if (diff < 0.01) {\r\n            // Close enough to be considered the same.\r\n            return false;\r\n        } else {\r\n            return client > session;\r\n        }\r\n    }\r\n\r\n    private updateVideoState(videoElement: InputMediaElement) {\r\n        if (videoElement.videoWidth <= 0 || videoElement.videoHeight <= 0) {\r\n            // No session size yet, so ignore this state update.\r\n            return;\r\n        }\r\n\r\n        let scalingFactor = 1.0;\r\n        let topPadding = 0.0;\r\n        let leftPadding = 0.0;\r\n        let videoRatio = videoElement.videoWidth / videoElement.videoHeight;\r\n        let elementRatio = videoElement.clientWidth / videoElement.clientHeight;\r\n\r\n        let displayVideoWidth: number;\r\n        let displayVideoHeight: number;\r\n\r\n        // There can be padding, either above/below (letterbox) or\r\n        // left/right (pillarbox) of the video (remote session) content.\r\n        // Take ratio of element's actual width(height) and video's real width(height).\r\n        // (Ratio of CSS pixels to server pixels.)\r\n        // That will be the scaling factor for the entire video;\r\n        // the video aspect doesn't change.\r\n        // Use that scaling factor as multiplier for received event co-ordinates,\r\n        // *after* those co-ordinates have been corrected for the padding bars.\r\n\r\n        if (this.clientAspectGreater(elementRatio, videoRatio)) {\r\n            // Pillarbox\r\n            scalingFactor = videoElement.clientHeight / videoElement.videoHeight;\r\n            displayVideoWidth = videoElement.videoWidth * scalingFactor;\r\n            displayVideoHeight = videoElement.videoHeight * scalingFactor;\r\n            let totalPadding = videoElement.clientWidth - displayVideoWidth;\r\n            leftPadding = totalPadding / 2;\r\n        } else {\r\n            // Letterbox\r\n            scalingFactor = videoElement.clientWidth / videoElement.videoWidth;\r\n            displayVideoWidth = videoElement.videoWidth * scalingFactor;\r\n            displayVideoHeight = videoElement.videoHeight * scalingFactor;\r\n            let totalPadding = videoElement.clientHeight - displayVideoHeight;\r\n            topPadding = totalPadding / 2;\r\n        }\r\n\r\n        let horizontalScaleFactor = 1;\r\n        let verticalScaleFactor = 1;\r\n\r\n        if (this.videoState.displayVideoWidth && this.videoState.displayVideoHeight) {\r\n            horizontalScaleFactor = displayVideoWidth / this.videoState.displayVideoWidth;\r\n            verticalScaleFactor = displayVideoHeight / this.videoState.displayVideoHeight;\r\n        }\r\n\r\n        this.videoState.displayVideoWidth = displayVideoWidth;\r\n        this.videoState.displayVideoHeight = displayVideoHeight;\r\n        this.videoState.scalingFactor = scalingFactor;\r\n        this.videoState.topPadding = topPadding;\r\n        this.videoState.leftPadding = leftPadding;\r\n        this.videoState.videoWidth = videoElement.videoWidth;\r\n        this.videoState.videoHeight = videoElement.videoHeight;\r\n        // Scale translations to the new coordinate space\r\n        this.applyVideoTransforms(\r\n            this.videoState.offsetX * horizontalScaleFactor,\r\n            this.videoState.offsetY * verticalScaleFactor,\r\n            this.videoState.zoomFactor\r\n        );\r\n\r\n        this.mouseHandler.updateVideoState(this.videoState);\r\n        this.safeZoneHandler.updateVideoState(\r\n            this.videoState.topPadding,\r\n            this.videoState.leftPadding\r\n        );\r\n        this.sendSafeZone();\r\n    }\r\n\r\n    fullscreenEventHandler(fullscreen: boolean) {\r\n        Log.d(\"{8bacfa5}\", \"{77df54c}\", (fullscreen ? \"fullscreen\" : \"not fullscreen\"));\r\n\r\n        this.resized({} as Event);\r\n\r\n        if (fullscreen) {\r\n            if (window.isSecureContext) {\r\n                const keyboard = (<any>window.navigator).keyboard;\r\n                // Not all browsers support navigator.keyboard and keyboard.lock\r\n                if (keyboard && keyboard.lock) {\r\n                    // Allow Alt+Tab to work as expected.\r\n                    // Lock and capture other keys - sequences (generally Ctrl) with these keys cause issues\r\n                    keyboard.lock([\r\n                        // Leaves fullscreen if entered by our button\r\n                        \"Escape\",\r\n\r\n                        // Leaves fullscreen if entered by browser menu or F11 key (or programmatically, without this lock)\r\n                        \"F11\",\r\n\r\n                        // Navigates browser\r\n                        \"BrowserBack\",\r\n                        \"BrowserForward\",\r\n                        \"BrowserRefresh\",\r\n                        \"BrowserHome\",\r\n                        \"BrowserFavorites\",\r\n                        \"BrowserSearch\",\r\n                        \"BrowserStop\",\r\n                        // Power control\r\n                        \"Sleep\",\r\n                        \"Power\",\r\n                        \"WakeUp\",\r\n\r\n                        // ChromeOS interactions\r\n                        \"KeyT\", // Ctrl+Alt+T opens Terminal tab on ChromeOS\r\n                        \"KeyZ\", // Ctrl+Alt+Z opens Chrome spoken feedback (ChromeOS?)\r\n                        \"Slash\", // Ctrl+Alt+/ opens Keyboard shortcuts on ChromeOS\r\n\r\n                        // ChromeOS shelf icons (Alt+<digit> clicks icon on shelf)\r\n                        \"Digit1\",\r\n                        \"Digit2\",\r\n                        \"Digit3\",\r\n                        \"Digit4\",\r\n                        \"Digit5\",\r\n                        \"Digit6\",\r\n                        \"Digit7\",\r\n                        \"Digit8\",\r\n                        \"Digit9\",\r\n\r\n                        // ChromeOS System settings, specific apps, etc.\r\n                        \"KeyM\", // Alt+Shift+M opens Files app, Ctrl+Search+M opens Magnifier\r\n                        \"KeyD\", // Ctrl+Search+D opens Magnifier\r\n                        \"KeyN\", // Alt+Shift+N opens notifications\r\n                        \"KeyS\", // Alt+Shift+S opens status area\r\n                        \"KeyK\", // Shift+Search+K shows list of input methods/layouts\r\n                        \"KeyL\", // Alt+Shift+L highlights launcher\r\n                        \"Space\", // Ctrl+Space/Ctrl+Shift+Space switch to next/previous input method\r\n\r\n                        // Generic controls\r\n                        \"PrintScreen\", // Captures screenshot\r\n\r\n                        // Start new apps\r\n                        \"LaunchApp1\",\r\n                        \"LaunchApp2\",\r\n                        \"LaunchMail\",\r\n\r\n                        // macOS\r\n                        \"Comma\", // Cmd+Comma opens app preferneces\r\n                        \"Semicolon\", // Cmd+Shift+Semicolon opens Spelling and grammer\r\n\r\n                        \"ArrowLeft\", // Cmd+Left opnavigates back\r\n                        \"ArrowRight\", // Cmd+Right navigates forwards\r\n                        \"BracketLeft\", // Cmd+[ navigates back\r\n                        \"BracketRight\", // Cmd+] navigates forwards\r\n                        \"KeyW\", // Cmd+W closes current Tab\r\n                        \"KeyQ\", // Cmd+Q closes application (long hold)\r\n                        \"KeyR\", // Cmd+R refreshes current Tab\r\n                        \"KeyY\", // Cmd+Y opens History\r\n                        \"KeyO\", // Cmd+O opens Open File window\r\n                        \"KeyP\", // Cmd+P opens Print window\r\n                        \"KeyF\", // Cmd+F opens Find\r\n                        \"KeyG\" // Cmd+G opens Repeat Find / Find Again\r\n                    ]);\r\n                }\r\n            }\r\n\r\n            this.videoTagElement.onclick = null;\r\n            this.videoTagElement.removeAttribute(\"controls\");\r\n        } else {\r\n            this.releasePressedKeysAndButtons();\r\n\r\n            if (window.isSecureContext) {\r\n                const keyboard = (window.navigator as any).keyboard;\r\n                // Not all browsers support navigator.keyboard and keyboard.unlock\r\n                if (keyboard && keyboard.unlock) {\r\n                    keyboard.unlock();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private enableBackPrevention() {\r\n        if (!this.historyProtected) {\r\n            this.historyProtected = true;\r\n            history.pushState(null, document.title, location.href);\r\n            this.windowAddEventListener(\"popstate\", this.popStateFunc);\r\n        }\r\n    }\r\n\r\n    private disableBackPrevention() {\r\n        if (this.historyProtected) {\r\n            this.windowRemoveEventListener(\"popstate\", this.popStateFunc);\r\n            history.back();\r\n            this.historyProtected = false;\r\n        }\r\n    }\r\n\r\n    private isTrueTouchActive() {\r\n        return this.touchListener && !this.isVirtualKeyboardVisible;\r\n    }\r\n\r\n    private enableUserInput(inputs: InputType): boolean {\r\n        const wereAllDisabled = !this.isUserInputEnabled();\r\n        const addedInputs = (this.enabledInputs ^ inputs) & inputs;\r\n        if (!addedInputs) {\r\n            return false;\r\n        }\r\n        this.enabledInputs |= addedInputs;\r\n        // set once only if all were disabled\r\n        if (wereAllDisabled) {\r\n            this.rendering = true;\r\n            window.requestAnimationFrame(this.preRenderFunc);\r\n        }\r\n\r\n        if (addedInputs & InputType.Gamepad) {\r\n            this.gamepadHandler.enableUserInput();\r\n        }\r\n\r\n        if (addedInputs & InputType.Mouse) {\r\n            this.mouseHandler.enableUserInput();\r\n        }\r\n\r\n        if (addedInputs & InputType.Keyboard) {\r\n            this.documentAddEventListener(\"keydown\", this.keydownFunc);\r\n            this.documentAddEventListener(\"keyup\", this.keyupFunc);\r\n\r\n            this.textInputElement?.addEventListener(\"input\", this.textInputFunc);\r\n            this.textInputElement?.addEventListener(\"compositionstart\", this.textCompositionFunc);\r\n            this.textInputElement?.addEventListener(\"compositionupdate\", this.textCompositionFunc);\r\n            this.textInputElement?.addEventListener(\"compositionend\", this.textCompositionFunc);\r\n            this.textCompositionState = TextCompositionState.COMPOSITION_NONE;\r\n        }\r\n\r\n        if (addedInputs & InputType.Touch) {\r\n            if (this.isTrueTouchActive()) {\r\n                this.touchListener!.start();\r\n            } else if (this.gestureDetector) {\r\n                this.gestureDetector.start();\r\n            }\r\n        }\r\n\r\n        if (wereAllDisabled) {\r\n            // Prevent Back navigation\r\n            if (this.preventNavigation) {\r\n                this.enableBackPrevention();\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private disableUserInput(inputs: InputType): boolean {\r\n        const removedInputs = this.enabledInputs & inputs;\r\n        if (!removedInputs) {\r\n            return false;\r\n        }\r\n        this.enabledInputs ^= removedInputs;\r\n        // only reset if all disabled\r\n        const allDisabled = !this.isUserInputEnabled();\r\n        if (allDisabled) {\r\n            this.rendering = false;\r\n        }\r\n\r\n        if (removedInputs & InputType.Gamepad) {\r\n            this.gamepadHandler.disableUserInput();\r\n        }\r\n\r\n        if (removedInputs & InputType.Mouse) {\r\n            this.mouseHandler.disableUserInput();\r\n        }\r\n\r\n        if (removedInputs & InputType.Keyboard) {\r\n            this.releasePressedKeys();\r\n            this.documentRemoveEventListener(\"keydown\", this.keydownFunc);\r\n            this.documentRemoveEventListener(\"keyup\", this.keyupFunc);\r\n            this.textInputElement?.removeEventListener(\"input\", this.textInputFunc);\r\n            this.textInputElement?.removeEventListener(\r\n                \"compositionstart\",\r\n                this.textCompositionFunc\r\n            );\r\n            this.textInputElement?.removeEventListener(\r\n                \"compositionupdate\",\r\n                this.textCompositionFunc\r\n            );\r\n            this.textInputElement?.removeEventListener(\"compositionend\", this.textCompositionFunc);\r\n        }\r\n\r\n        if (removedInputs & InputType.Touch) {\r\n            if (this.gestureDetector) {\r\n                this.gestureDetector.stop();\r\n            }\r\n            if (this.touchListener) {\r\n                this.touchListener.stop();\r\n            }\r\n            if (this.statsGestureTimerId !== 0) {\r\n                this.clearStatsGestureTimer();\r\n            }\r\n            this.touchDelay.clear();\r\n        }\r\n\r\n        if (allDisabled) {\r\n            if (this.preventNavigation) {\r\n                this.disableBackPrevention();\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public toggleUserInput(enable: boolean, inputs?: InputType) {\r\n        Log.d(\"{8bacfa5}\", \"{2424824}\", enable, inputs);\r\n        const changedInputs = inputs ?? InputType.All;\r\n        const state = enable\r\n            ? this.enableUserInput(changedInputs)\r\n            : this.disableUserInput(changedInputs);\r\n    }\r\n\r\n    public isUserInputEnabled(): boolean {\r\n        return this.enabledInputs !== InputType.None;\r\n    }\r\n\r\n    private onFocusChange(focus: boolean): void {\r\n        if (focus) {\r\n            this.sendSafeZone();\r\n            Log.d(\"{8bacfa5}\", \"{cb19d31}\");\r\n        } else {\r\n            Log.d(\"{8bacfa5}\", \"{8744dbe}\");\r\n            this.releasePressedKeysAndButtons();\r\n        }\r\n    }\r\n\r\n    private getShiftModifierFlag(evt: KeyboardEvent): number {\r\n        let flag = undefined;\r\n\r\n        // WAR for iOS.\r\n        // A complete solution requires iOS-specific keyboard layout map, or mapping to a known layout.\r\n        if (IsiDevice(this.platformDetails)) {\r\n            // When a keyboard event is originated from a virtual keyboard,\r\n            // its `shiftKey` might differ from the one typed by a physical keyboard.\r\n            // For instance, \"@\" is { keyCode: 50, shiftKey: true } on physical keyboard,\r\n            //                      { keyCode: 50, shiftKey: false } on virtual keyboard (tested with iPhone).\r\n            // To inject correct key on the server, we add SHFIT modifier regardless what `shiftKey` is for\r\n            // some characters that must be shifted.\r\n            // Note that this only works when the server is running US keyboard layout map.\r\n            const keysRequiredToBeShifted = '!@#$%^&*()~_+{}|:\"<>?';\r\n            // Further, certain characters must not be shifted, so we explicitly remove the SHIFT modifier.\r\n            const keysRequiredToBeUnshifted = \"1234567890`-=[]\\\\;',./\";\r\n            if (evt.key.length === 1) {\r\n                if (keysRequiredToBeShifted.includes(evt.key)) {\r\n                    flag = InputModifierFlags.NVST_MF_SHIFT;\r\n                } else if (keysRequiredToBeUnshifted.includes(evt.key)) {\r\n                    flag = InputModifierFlags.NVST_MF_NONE;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (flag === undefined && evt.shiftKey && !evt.code.startsWith(\"Shift\")) {\r\n            flag = InputModifierFlags.NVST_MF_SHIFT;\r\n        }\r\n        return flag ?? InputModifierFlags.NVST_MF_NONE;\r\n    }\r\n\r\n    private getModifierFlags(evt: KeyboardEvent): number {\r\n        let flags = InputModifierFlags.NVST_MF_NONE;\r\n        if (evt.ctrlKey && !evt.code.startsWith(\"Control\")) {\r\n            flags |= InputModifierFlags.NVST_MF_CONTROL;\r\n        }\r\n        if (evt.altKey && !evt.code.startsWith(\"Alt\")) {\r\n            flags |= InputModifierFlags.NVST_MF_ALT;\r\n        }\r\n        if (evt.metaKey && !evt.code.startsWith(\"Meta\")) {\r\n            flags |= InputModifierFlags.NVST_MF_META;\r\n        }\r\n        flags |= this.getShiftModifierFlag(evt);\r\n        return flags;\r\n    }\r\n\r\n    public sendHeartbeatEvent() {\r\n        // Make sure to revert to previous input state.\r\n        if (this.enabledInputsBeforeUserIdlePendingOverlay !== undefined) {\r\n            this.toggleUserInput(\r\n                false,\r\n                ~this.enabledInputsBeforeUserIdlePendingOverlay & InputType.All\r\n            );\r\n            this.enabledInputsBeforeUserIdlePendingOverlay = undefined;\r\n        }\r\n\r\n        this.packetHandler.sendHeartbeatEvent();\r\n    }\r\n\r\n    private clearIdleTimeout() {\r\n        this.setUserIdleTimeoutPending(false);\r\n        let timerEvent: StreamingEvent = {\r\n            streamingWarnings: {\r\n                code: RNotificationCode.ClearUserIdleTimeOut\r\n            }\r\n        };\r\n        this.eventEmitter.emit(EVENTS.STREAMING_EVENT, timerEvent);\r\n        this.sendHeartbeatEvent();\r\n        this.callbacks.onUserIdleClear();\r\n    }\r\n\r\n    private getIdleEvents(): string[] {\r\n        return [this.mouseHandler.getMoveEventName(), \"pointerdown\", \"touchstart\"];\r\n    }\r\n\r\n    private idleInputListener() {\r\n        if (this.isUserIdleTimeoutPending) {\r\n            this.clearIdleTimeout();\r\n        }\r\n    }\r\n\r\n    public setUserIdleTimeoutPending(value: boolean) {\r\n        this.isUserIdleTimeoutPending = value;\r\n        // if input already disabled means we have some overlay already, like go to fullscreen, enable input (if not already) just to\r\n        // listen input for resetting idle timer on server. We could also check if we are in non-fullscreen instead\r\n        // of checking enabledInputs flag. Assumption is client calls toggleUserInput(false) on all popups except userIdleWarning popup.\r\n        if (value && this.enabledInputs !== InputType.All) {\r\n            this.enabledInputsBeforeUserIdlePendingOverlay = this.enabledInputs;\r\n            this.toggleUserInput(true);\r\n        }\r\n        if (value) {\r\n            this.getIdleEvents().forEach(event =>\r\n                this.documentAddEventListener(event, this.idleInputListenerFunc)\r\n            );\r\n        } else {\r\n            // Must clear all idle listeners on false to avoid leaking listeners.\r\n            this.getIdleEvents().forEach(event =>\r\n                this.documentRemoveEventListener(event, this.idleInputListenerFunc)\r\n            );\r\n        }\r\n    }\r\n\r\n    releasePressedKeys() {\r\n        if (this.pressedKeys.size > 0) {\r\n            Log.i(\"{8bacfa5}\", \"{7998ee8}\", this.pressedKeys.size);\r\n            for (const keyCode of this.pressedKeys) {\r\n                this.packetHandler.sendKeyboardEvent(PacketId.PACKET_KEYUP, keyCode, 0);\r\n            }\r\n            this.pressedKeys.clear();\r\n        }\r\n    }\r\n\r\n    releasePressedKeysAndButtons() {\r\n        this.releasePressedKeys();\r\n        this.mouseHandler.releasePressedButtons();\r\n    }\r\n\r\n    private perfCallback(list: PerformanceObserverEntryList) {\r\n        list.getEntriesByType(\"longtask\").forEach(entry => {\r\n            let duration = Math.round(entry.duration);\r\n            RagnarokProfiler.addMainThreadBlockDuration(duration, entry.startTime);\r\n            this.streamClient.updateBlockedDuration(duration);\r\n            Log.i(\"{8bacfa5}\", \"{7071359}\", duration);\r\n        });\r\n    }\r\n\r\n    getVirtualGamepadHandler(): VirtualGamepadHandler {\r\n        return this.gamepadHandler.getVirtualGamepadHandler();\r\n    }\r\n\r\n    public sendTextInput(text: ArrayBuffer) {\r\n        this.packetHandler.sendTextInput(text);\r\n    }\r\n\r\n    private sendAndClearText(text: string) {\r\n        const encoder = new TextEncoder();\r\n        const unicodeText = encoder.encode(text);\r\n        this.sendTextInput(unicodeText.buffer);\r\n\r\n        this.textInputElement!.value = \"\";\r\n    }\r\n\r\n    private hasVirtualKeyCodeMapping(text: String): boolean {\r\n        for (let i = text.length - 1; i >= 0; i--) {\r\n            if (CHAR_TO_VK_MAP.get(text.charAt(i)) === undefined) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private sendCharCodesAndClearText(text: string) {\r\n        // On Android, the NVST_LKB_CAPS is not being set for softKB but it gets set for external kb.\r\n        // We use this.lastLockKeysState to detrmine the CAPS lock state on the server and adjust the\r\n        // ShiftModifier accordingly.\r\n        let isCapsLockOn = false;\r\n        if (this.lastLockKeysState & LockKeyBitMask.NVST_LKB_CAPS_VALID) {\r\n            isCapsLockOn = (LockKeyBitMask.NVST_LKB_CAPS & this.lastLockKeysState) != 0;\r\n        }\r\n\r\n        // If we are in this function, it is gauranteed that the input text is comprised of charcodes between\r\n        // 32 and 126 (printable chars in the ascii charset). Process the text char-by-char and send the\r\n        // keycodes directy to the server.\r\n        for (let i = 0; i < text.length; i++) {\r\n            const vkmap = CHAR_TO_VK_MAP.get(text.charAt(i));\r\n            if (!vkmap) {\r\n                Log.e(\"{8bacfa5}\", \"{67554be}\", text.charAt(i));\r\n                return;\r\n            }\r\n\r\n            const keycode = vkmap!.vkCode;\r\n            let flags = vkmap!.shift\r\n                ? InputModifierFlags.NVST_MF_SHIFT\r\n                : InputModifierFlags.NVST_MF_NONE;\r\n\r\n            if (keycode >= VIRTUAL_KEYS.CODE_A && keycode <= VIRTUAL_KEYS.CODE_Z) {\r\n                // Only CAPITAL letter keycodes are sent to server (See CODE_TO_VK_MAP in keycodes.ts).\r\n                // Determine the shift modifier based on the CAPS lock state on the server\r\n                if (isCapsLockOn) {\r\n                    flags = ~flags;\r\n                }\r\n            }\r\n            // If shift modifier is to be applied, send the LSHIFT keydown and keyup\r\n            if (flags) {\r\n                this.packetHandler.sendKeyboardEvent(\r\n                    PacketId.PACKET_KEYDOWN,\r\n                    VIRTUAL_KEYS.CODE_LSHIFT,\r\n                    0,\r\n                    performance.now()\r\n                );\r\n            }\r\n            this.packetHandler.sendKeyboardEvent(\r\n                PacketId.PACKET_KEYDOWN,\r\n                keycode,\r\n                flags,\r\n                performance.now()\r\n            );\r\n            this.packetHandler.sendKeyboardEvent(\r\n                PacketId.PACKET_KEYUP,\r\n                keycode,\r\n                flags,\r\n                performance.now()\r\n            );\r\n            if (flags) {\r\n                this.packetHandler.sendKeyboardEvent(\r\n                    PacketId.PACKET_KEYUP,\r\n                    VIRTUAL_KEYS.CODE_LSHIFT,\r\n                    0,\r\n                    performance.now()\r\n                );\r\n            }\r\n        }\r\n        // This will clear any composition that is underway\r\n        this.textInputElement!.value = \"\";\r\n    }\r\n\r\n    private textCompositionHandler(e: CompositionEvent) {\r\n        switch (e.type) {\r\n            case \"compositionstart\":\r\n                this.textCompositionState = TextCompositionState.COMPOSITION_BEGIN;\r\n                break;\r\n            case \"compositionupdate\":\r\n                {\r\n                    // For iOS, composition events occur only for IME langs\r\n                    // For other platforms, when when non-ascii inputs are detected, set IME recommendation\r\n                    if (IsiDevice(this.platformDetails) || !this.hasVirtualKeyCodeMapping(e.data)) {\r\n                        const compositionEvent: TextCompositionEvent = {\r\n                            compositionText: e.data,\r\n                            imeRecommendation: true\r\n                        };\r\n                        this.eventEmitter.emit(EVENTS.TEXT_COMPOSITION, compositionEvent);\r\n                    }\r\n                }\r\n                break;\r\n            case \"compositionend\":\r\n                // Trim the extra space at the end ONLY for Android to not alter the current behaviour but we\r\n                // need to revist this. Having extra space while entering passwords will be incorrect.\r\n                const inputText = this.isAndroidOs ? e.data.trim() : e.data;\r\n                if (inputText.length) {\r\n                    const imeMode =\r\n                        IsiDevice(this.platformDetails) || !this.hasVirtualKeyCodeMapping(e.data);\r\n\r\n                    if (this.isAndroidOs && !imeMode) {\r\n                        // Loop through the final composed string and send charcodes individually.\r\n                        this.sendCharCodesAndClearText(inputText);\r\n                    } else {\r\n                        // Send text as unicode string\r\n                        this.sendAndClearText(inputText);\r\n                    }\r\n\r\n                    if (imeMode) {\r\n                        // indicate to client that composition has ended\r\n                        const compositionEvent: TextCompositionEvent = { compositionText: \"\" };\r\n                        this.eventEmitter.emit(EVENTS.TEXT_COMPOSITION, compositionEvent);\r\n                    }\r\n                }\r\n                this.textCompositionState = TextCompositionState.COMPOSITION_NONE;\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private textInputHandler() {\r\n        this.textInputDetected = true;\r\n\r\n        let inputText = this.textInputElement!.value;\r\n        if (this.textCompositionState == TextCompositionState.COMPOSITION_BEGIN) {\r\n            if (this.isAndroidOs && inputText.length > 1) {\r\n                // Bug 4137739: On some Android devices, the composition starts with multiple characters even though we process the individual keystrokes\r\n                // The following sequence of inputs results in this behaviour:\r\n                //     input1: 5 (any numeric, does not involve composition)\r\n                //     input2: a (any char, starts new composition)\r\n                // Now the composing text will be '5a' instead of just 'a'. This seems to be due to the\r\n                // system remembering the previous inputs to provide predictive suggestions.\r\n\r\n                // When the composition just started, only consider the last input char\r\n                inputText = inputText.charAt(inputText.length - 1);\r\n\r\n                // However, the above breaks on Microsoft swiftkeyboard, as there is no way to prevent predictions.\r\n                // On swiftkeyboard, even though we process individual keystrokes and clear the text, the predictions still show up\r\n                // https://support.swiftkey.com/hc/en-us/articles/201647952-Can-I-turn-the-prediction-bar-off-on-my-Microsoft-SwiftKey-Keyboard-\r\n                //\r\n                // Currently we don't support 3rd party keyboards\r\n            }\r\n            this.textCompositionState = TextCompositionState.COMPOSITION_IN_PROGRESS;\r\n        }\r\n        // Note that this function will be called for every input, composing or not.\r\n        // We process input for some cases here and for rest depend on compositionend event.\r\n\r\n        // On Android, when isAscii=true, sendKeycodes to server irrespective of the composition state.\r\n        // Todo: This can be generalized to all platforms and we should remove the Android check after testing on other platforms.\r\n        if (this.isAndroidOs && this.hasVirtualKeyCodeMapping(inputText)) {\r\n            // For ascii input, send the keycodes to server.\r\n            this.sendCharCodesAndClearText(inputText); // If composition in progress, it gets cancelled.\r\n\r\n            // Clearing the text does not trigger the compositionend event. Hence reset the state here\r\n            this.textCompositionState = TextCompositionState.COMPOSITION_NONE;\r\n            return;\r\n        }\r\n        // When textComposition not in progress, sendUnicode text to server. For Android, this will be non-ascii input\r\n        // Once the Android check is removed above, we will only be sending unicode for non-ascii input.\r\n        if (this.textCompositionState != TextCompositionState.COMPOSITION_IN_PROGRESS) {\r\n            // When not in composition mode send unicode text to server\r\n            this.sendAndClearText(inputText);\r\n        }\r\n        // When textCompositionInProgress=true and isAscii=false, compositionend event handles the input\r\n    }\r\n\r\n    public setVirtualKeyboardState(visible: boolean) {\r\n        Log.i(\"{8bacfa5}\", \"{60b2d45}\", visible);\r\n        if (this.isVirtualKeyboardVisible === visible) {\r\n            return;\r\n        }\r\n        this.isVirtualKeyboardVisible = visible;\r\n\r\n        if (this.gestureDetector && this.touchListener) {\r\n            if (this.isVirtualKeyboardVisible) {\r\n                this.touchListener.stop();\r\n                this.gestureDetector.start();\r\n            } else {\r\n                this.gestureDetector.stop();\r\n                if (this.videoState.zoomFactor !== 1) {\r\n                    this.applyVideoTransforms(0, 0, 1);\r\n                }\r\n                this.touchListener.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** Returns true if virtual keyboard is visible, false otherwise.*/\r\n    public getVirtualKeyboardState(): boolean {\r\n        return this.isVirtualKeyboardVisible;\r\n    }\r\n\r\n    public setKeyboardLayout(layout: string) {\r\n        if (layout == CHINESE_TRADITIONAL_LAYOUT) {\r\n            this.tradChineseLayout = true;\r\n        } else {\r\n            this.tradChineseLayout = false;\r\n        }\r\n    }\r\n\r\n    private getTranslationLimits(): BoundaryPair {\r\n        return {\r\n            horizontal: (this.videoState.displayVideoWidth * (this.videoState.zoomFactor - 1)) / 2,\r\n            vertical: (this.videoState.displayVideoHeight * (this.videoState.zoomFactor - 1)) / 2\r\n        };\r\n    }\r\n\r\n    private touchMove(target: HTMLElement, touch: TouchRecord, timestamp: number) {\r\n        // Make sure any delayed mouse clicks happen before we move the cursor again\r\n        this.touchDelay.flushImmediately();\r\n\r\n        const targetRect = target.getBoundingClientRect();\r\n        const offsetX = (touch.clientX - targetRect.left) / this.videoState.zoomFactor;\r\n        const offsetY = (touch.clientY - targetRect.top) / this.videoState.zoomFactor;\r\n\r\n        this.mouseHandler.setCursorPosFromOffset(offsetX, offsetY);\r\n        const { absX, absY } = this.mouseHandler.getCursorState();\r\n        this.packetHandler.sendCursorPos(true, absX, absY, timestamp);\r\n    }\r\n\r\n    private applyVideoTransforms(offsetX: number, offsetY: number, zoomFactor: number) {\r\n        // set zoom factor first, so that translation limits are determined based on the new factor\r\n        this.videoState.zoomFactor = zoomFactor;\r\n\r\n        let translationLimits = this.getTranslationLimits();\r\n        // take padding into account\r\n        translationLimits.horizontal -= this.videoState.leftPadding;\r\n        translationLimits.vertical -= this.videoState.topPadding;\r\n        // allow overscroll to bring the bottom of the video to the bottom of the viewport\r\n        // useful when the keyboard is up\r\n        let viewportOverscroll = Math.max(\r\n            0,\r\n            this.videoState.displayVideoHeight -\r\n                this.videoState.viewportHeight +\r\n                2 * this.videoState.topPadding\r\n        );\r\n\r\n        let upwardLimit = Math.max(translationLimits.vertical + viewportOverscroll, 0);\r\n        let downwardLimit = Math.max(translationLimits.vertical, 0);\r\n        translationLimits.horizontal = Math.max(translationLimits.horizontal, 0);\r\n\r\n        offsetX = Math.min(\r\n            Math.max(offsetX, -1 * translationLimits.horizontal),\r\n            translationLimits.horizontal\r\n        );\r\n        offsetY = Math.min(Math.max(offsetY, -1 * upwardLimit), downwardLimit);\r\n\r\n        this.videoTagElement.style.transform = `translate3d(${offsetX}px,${offsetY}px,0px) scale3d(${zoomFactor},${zoomFactor},1)`;\r\n\r\n        this.videoState.offsetX = offsetX;\r\n        this.videoState.offsetY = offsetY;\r\n\r\n        this.mouseHandler.updateVideoState(this.videoState);\r\n    }\r\n\r\n    public clientRequestVideoTransform(offsetX: number, offsetY: number, zoomFactor: number) {\r\n        // update the viewport in case the client is making the request on a viewport resize, and we haven't been notified yet\r\n        const viewport = (<any>window).visualViewport;\r\n        if (viewport) {\r\n            this.videoState.viewportHeight = viewport.height;\r\n        }\r\n        this.applyVideoTransforms(offsetX, offsetY, zoomFactor);\r\n    }\r\n\r\n    shouldPreventDefaultTouch(): boolean {\r\n        // This is called for touch events on the video element, so we can reset the idle timeout.\r\n        // Touch events outside the video element use the idleInputListenerFunc to clear the idle timeout.\r\n        if (this.isUserIdleTimeoutPending) {\r\n            this.clearIdleTimeout();\r\n            return false;\r\n        }\r\n        // keyboard state does not correctly track when using a floating or split keyboard\r\n        // if that is fixed, we can call preventDefault only when the keyboard is up to keep the text element in focus\r\n        // return this.isVirtualKeyboardVisible;\r\n        // let browser restore focus\r\n        return this.windowObserver.getWindowFocus();\r\n    }\r\n\r\n    shouldPreventDefaultKb(evt: KeyboardEvent): boolean {\r\n        if (this.streamClient.getLdatHandler()?.isVisible()) {\r\n            return false;\r\n        }\r\n        if (this.isChromeOs) {\r\n            switch (evt.code) {\r\n                case \"Tab\":\r\n                    return evt.altKey ? false : true;\r\n                case \"ZoomToggle\":\r\n                case \"SelectTask\":\r\n                case \"BrightnessDown\":\r\n                case \"BrightnessUp\":\r\n                case \"AudioVolumeMute\":\r\n                case \"AudioVolumeDown\":\r\n                case \"AudioVolumeUp\":\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private clearStatsGestureTimer(): void {\r\n        window.clearTimeout(this.statsGestureTimerId);\r\n        this.statsGestureTimerId = 0;\r\n        this.twoFingerTapCount = 0;\r\n        this.threeFingerTapCount = 0;\r\n    }\r\n\r\n    tap(target: HTMLElement, timestamp: number, lastTouch: TouchRecord, touchCount: number) {\r\n        this.touchDelay.flushImmediately();\r\n        switch (touchCount) {\r\n            case 1:\r\n                this.touchMove(target, lastTouch, timestamp);\r\n                this.touchDelay.delay(() => {\r\n                    this.emulateMouseClick(MouseButtons.LEFT_CLICK, timestamp);\r\n                });\r\n                break;\r\n            case 2:\r\n                this.twoFingerTapCount++;\r\n                if (this.statsGestureTimerId === 0) {\r\n                    this.statsGestureTimerId = window.setTimeout(() => {\r\n                        if (this.twoFingerTapCount === 2) {\r\n                            this.streamClient.toggleOnScreenStats();\r\n                        } else if (this.twoFingerTapCount === 3) {\r\n                            this.streamClient.toggleOnScreenStats(RagnarokSettings.isInternalUser);\r\n                        }\r\n                        this.clearStatsGestureTimer();\r\n                    }, 300);\r\n                }\r\n                this.emulateMouseClick(MouseButtons.RIGHT_CLICK, timestamp);\r\n                break;\r\n            case 3:\r\n                this.threeFingerTapCount++;\r\n                if (RagnarokSettings.isInternalUser && this.statsGestureTimerId === 0) {\r\n                    this.statsGestureTimerId = window.setTimeout(() => {\r\n                        if (this.threeFingerTapCount === 2) {\r\n                            this.safeZoneHandler.toggleDisplaySafeZone();\r\n                        }\r\n                        this.clearStatsGestureTimer();\r\n                    }, 300);\r\n                }\r\n                this.emulateMouseClick(MouseButtons.MIDDLE_CLICK, timestamp);\r\n\r\n                break;\r\n            case 4:\r\n                this.emulateMouseClick(MouseButtons.MOUSE_FOUR, timestamp);\r\n                break;\r\n            case 5:\r\n                this.emulateMouseClick(MouseButtons.MOUSE_FIVE, timestamp);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private emulateMouseClick(button: MouseButtons, timestamp: number) {\r\n        this.sendMouseDown(button, timestamp);\r\n        this.touchDelay.delay(() => {\r\n            this.sendMouseUp(button, timestamp);\r\n        });\r\n    }\r\n\r\n    holdBegin(target: HTMLElement, timestamp: number, touch: TouchRecord) {\r\n        if (this.videoState.zoomFactor === 1) {\r\n            this.touchMove(target, touch, timestamp);\r\n            this.touchDelay.delay(() => {\r\n                this.sendMouseDown(MouseButtons.LEFT_CLICK, timestamp);\r\n            });\r\n        }\r\n    }\r\n\r\n    holdEnd(target: HTMLElement, timestamp: number) {\r\n        if (this.videoState.zoomFactor === 1) {\r\n            // Make sure the mouse down from holdBegin is sent before the up\r\n            this.touchDelay.flushImmediately();\r\n            this.sendMouseUp(MouseButtons.LEFT_CLICK, timestamp);\r\n        }\r\n    }\r\n\r\n    drag(target: HTMLElement, timestamp: number, touch: TouchRecord) {\r\n        // Drag gesture should pan if part of the video is not visible or streaming a true touch app\r\n        if (\r\n            this.videoState.zoomFactor !== 1 ||\r\n            this.isVirtualKeyboardVisible ||\r\n            this.touchListener !== undefined\r\n        ) {\r\n            // pan\r\n            this.applyVideoTransforms(\r\n                this.videoState.offsetX + touch.deltaX,\r\n                this.videoState.offsetY + touch.deltaY,\r\n                this.videoState.zoomFactor\r\n            );\r\n        } else {\r\n            // mouse move\r\n            this.touchMove(target, touch, timestamp);\r\n        }\r\n    }\r\n\r\n    scroll(target: HTMLElement, timestamp: number, touches: TouchRecord[]) {\r\n        if (touches.length > 0) {\r\n            this.packetHandler.sendMouseWheel(Math.sign(touches[0].deltaY), timestamp); // TODO: translate magnitude of drag to magnitude of the scroll\r\n        }\r\n    }\r\n\r\n    panZoom(target: HTMLElement, timestamp: number, touches: TouchRecord[]) {\r\n        if (touches.length === 2) {\r\n            this.mouseHandler.setZoomInProgress(true);\r\n\r\n            const firstTouch = touches[0];\r\n            const secondTouch = touches[1];\r\n\r\n            const currentDistance = Math.hypot(\r\n                firstTouch.clientX - secondTouch.clientX,\r\n                firstTouch.clientY - secondTouch.clientY\r\n            );\r\n            const previousDistance = Math.hypot(\r\n                firstTouch.clientX - firstTouch.deltaX - (secondTouch.clientX - secondTouch.deltaX),\r\n                firstTouch.clientY - firstTouch.deltaY - (secondTouch.clientY - secondTouch.deltaY)\r\n            );\r\n\r\n            const bounding = this.videoTagElement.getBoundingClientRect();\r\n            const translationLimits = this.getTranslationLimits();\r\n\r\n            let zoomFactor = this.videoState.zoomFactor * (currentDistance / previousDistance);\r\n            zoomFactor = Math.min(Math.max(zoomFactor, 1), MAX_ZOOM_FACTOR);\r\n\r\n            let offsetX = (firstTouch.clientX + secondTouch.clientX) / 2 - bounding.left; // touch center\r\n            offsetX +=\r\n                this.videoState.offsetX -\r\n                translationLimits.horizontal -\r\n                (bounding.width - offsetX) / this.videoState.zoomFactor; // relative offset of touch center from video center\r\n            offsetX = (zoomFactor / this.videoState.zoomFactor - 1) * offsetX * -1; // scale offset\r\n            offsetX += this.videoState.offsetX + (firstTouch.deltaX + secondTouch.deltaX) / 2; // add pan distance\r\n\r\n            let offsetY = (firstTouch.clientY + secondTouch.clientY) / 2 - bounding.top; // touch center\r\n            offsetY +=\r\n                this.videoState.offsetY -\r\n                translationLimits.vertical -\r\n                (bounding.height - offsetY) / this.videoState.zoomFactor; // relative offset of touch center from video center\r\n            offsetY = (zoomFactor / this.videoState.zoomFactor - 1) * offsetY * -1; // scale offset\r\n            offsetY += this.videoState.offsetY + (firstTouch.deltaY + secondTouch.deltaY) / 2; // add pan distance\r\n\r\n            this.applyVideoTransforms(offsetX, offsetY, zoomFactor);\r\n        }\r\n    }\r\n\r\n    panZoomEnd(target: HTMLElement, timestamp: number) {\r\n        this.mouseHandler.setZoomInProgress(false);\r\n        if (this.videoState.zoomFactor < MIN_ZOOM_FACTOR) {\r\n            this.applyVideoTransforms(this.videoState.offsetX, this.videoState.offsetY, 1);\r\n        }\r\n    }\r\n\r\n    private getMargins(): BoundaryPair {\r\n        const boundingRect = this.videoTagElement.getBoundingClientRect();\r\n        return {\r\n            horizontal:\r\n                boundingRect.left +\r\n                window.pageXOffset +\r\n                this.videoState.leftPadding * this.videoState.zoomFactor,\r\n            vertical:\r\n                boundingRect.top +\r\n                window.pageYOffset +\r\n                this.videoState.topPadding * this.videoState.zoomFactor\r\n        };\r\n    }\r\n\r\n    /**\r\n     * If keyboard input is kept enabled when the GFN virtual keyboard is on,\r\n     * inputs meant to navigate it will affect the stream unintentionally.\r\n     * So utilize keydown/keyup methods for GFN virtual Keyboard input only.\r\n     */\r\n    public sendKeyEvent(event: KeyboardEvent) {\r\n        // If we get here before the input channel is open, keydown and keyup can affect our internal state but we won't\r\n        // be able to send the key press packets. Just bail early if we hit this\r\n        if (!this.packetHandler.channelOpen()) {\r\n            return;\r\n        }\r\n        const keyCode = this.getVirtualKeycode(event);\r\n        if (keyCode) {\r\n            if (event.type === \"keydown\") {\r\n                this.keydown(event);\r\n            } else if (event.type === \"keyup\") {\r\n                this.keyup(event);\r\n            }\r\n        } else if (event.type === \"keydown\" && event.key.length === 1) {\r\n            // For symbols that are not in virtual key list. eg. £, €, ™, ©, ¢, etc.\r\n            const encoder = new TextEncoder();\r\n            const unicodeText = encoder.encode(event.key);\r\n            this.sendTextInput(unicodeText.buffer);\r\n        }\r\n    }\r\n\r\n    private sendSafeZone(): void {\r\n        this.clearSafeZoneTimeout();\r\n\r\n        // Use 350ms delay before notifying safezone handler to ensure any orientation change is detectable\r\n        this.safeZoneTimeoutId = window.setTimeout(() => {\r\n            this.safeZoneHandler.send();\r\n        }, 350);\r\n    }\r\n\r\n    private clearSafeZoneTimeout(): void {\r\n        if (this.safeZoneTimeoutId !== 0) {\r\n            window.clearTimeout(this.safeZoneTimeoutId);\r\n            this.safeZoneTimeoutId = 0;\r\n        }\r\n    }\r\n\r\n    private sendMouseDown(button: number, ts: number) {\r\n        this.mouseHandler.sendMouseDown(button, ts);\r\n    }\r\n\r\n    private sendMouseUp(button: number, ts: number) {\r\n        this.mouseHandler.sendMouseUp(button, ts);\r\n    }\r\n\r\n    public onSendInput(): boolean {\r\n        if (this.isUserIdleTimeoutPending) {\r\n            this.clearIdleTimeout();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public getInputMode(): string {\r\n        return this.mouseHandler.getMouseMode();\r\n    }\r\n}\r\n\r\n// This class only exists because some games/apps don't handle mouse moves and clicks immediately after one another.\r\n// It's an app bug but we still have to deal with it. Basically, this does a best-effort delay on a given event. To\r\n// preserve ordering, if another event comes before the previous delay elapses, we give up and call the previous\r\n// callback early. This class is pretty hacky to support chained delay() calls, needed for tap (move -> down -> up all\r\n// need delays)\r\nclass TouchDelay {\r\n    static TOUCH_DELAY_MS: number = 30;\r\n\r\n    private timerId: number = 0;\r\n    private callback?: VoidFunction;\r\n    private flushing: boolean = false;\r\n\r\n    // Immediately calls the currently-delayed input callback, if any\r\n    // Any calls to delay() during the flush will complete immediately\r\n    public flushImmediately() {\r\n        this.flushing = true;\r\n        this.resetTimer();\r\n        this.callCallback();\r\n        this.flushing = false;\r\n    }\r\n\r\n    // Clears the currently-delayed input callback without calling it\r\n    public clear() {\r\n        this.callback = undefined;\r\n        this.resetTimer();\r\n    }\r\n\r\n    // Schedules the given callback to be called in TOUCH_DELAY_MS\r\n    // Only delay() can be called from within a callback. Calling other members can cause unexpected behavior\r\n    public delay(callback: VoidFunction) {\r\n        if (this.flushing) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.flushImmediately();\r\n\r\n        this.callback = callback;\r\n        this.timerId = window.setTimeout(() => {\r\n            this.timerId = 0;\r\n            this.callCallback();\r\n        }, TouchDelay.TOUCH_DELAY_MS);\r\n    }\r\n\r\n    private callCallback() {\r\n        // Set this.callback to undefined before calling it in case it calls delay() with a new callback\r\n        const callback = this.callback;\r\n        if (callback) {\r\n            this.callback = undefined;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    private resetTimer() {\r\n        if (this.timerId !== 0) {\r\n            window.clearTimeout(this.timerId);\r\n            this.timerId = 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getVideoFrameCounts(\r\n    videoTagElement: InputMediaElement\r\n): { decoded: number; dropped: number } | undefined {\r\n    if (!!videoTagElement.getVideoPlaybackQuality) {\r\n        const quality = videoTagElement.getVideoPlaybackQuality();\r\n        return {\r\n            decoded: quality.totalVideoFrames,\r\n            dropped: quality.droppedVideoFrames\r\n        };\r\n    } else if (videoTagElement.webkitDecodedFrameCount !== undefined) {\r\n        return {\r\n            decoded: videoTagElement.webkitDecodedFrameCount,\r\n            dropped: videoTagElement.webkitDroppedFrameCount ?? 0\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\n","import { RagnarokProfiler } from \"../ragnarokprofiler\";\nimport { StatsType, KeyDeprecatedStats } from \"./statsinterfaces\";\nimport { VideoFrameMetadata } from \"../internalinterfaces\";\nimport { setUint64 } from \"../util/utils\";\nimport { statsConfig } from \"./webrtcbinarystats\";\n\n// https://www.w3.org/TR/webrtc-stats/#dom-rtcinboundrtpstreamstats\nexport declare interface RTCInboundRtpStreamExtraStats extends RTCInboundRtpStreamStats {\n    trackIdentifier: string;\n    kind: \"video\" | \"audio\";\n    mid?: string;\n    remoteId?: string;\n    framesDecoded?: number;\n    keyFramesDecoded?: number;\n    framesRendered?: number;\n    framesDropped?: number;\n    frameWidth?: number;\n    frameHeight?: number;\n    framesPerSecond?: number;\n    qpSum?: number;\n    totalDecodeTime?: number;\n    totalInterFrameDelay?: number;\n    totalSquaredInterFrameDelay?: number;\n    pauseCount?: number;\n    totalPausesDuration?: number;\n    freezeCount?: number;\n    totalFreezesDuration?: number;\n    lastPacketReceivedTimestamp?: DOMHighResTimeStamp;\n    headerBytesReceived?: number;\n    packetsDiscarded?: number;\n    fecPacketsReceived?: number;\n    fecPacketsDiscarded?: number;\n    bytesReceived?: number;\n    nackCount?: number;\n    firCount?: number;\n    pliCount?: number;\n    totalProcessingDelay?: number;\n    estimatedPlayoutTimestamp?: DOMHighResTimeStamp;\n    jitterBufferDelay?: number;\n    jitterBufferTargetDelay?: number;\n    jitterBufferEmittedCount?: number;\n    jitterBufferMinimumDelay?: number;\n    totalSamplesReceived?: number;\n    concealedSamples?: number;\n    silentConcealedSamples?: number;\n    concealmentEvents?: number;\n    insertedSamplesForDeceleration?: number;\n    removedSamplesForAcceleration?: number;\n    audioLevel?: number;\n    totalAudioEnergy?: number;\n    totalSamplesDuration?: number;\n    framesReceived?: number;\n    decoderImplementation?: string;\n    playoutId?: string;\n    powerEfficientDecoder?: boolean;\n    framesAssembledFromMultiplePackets?: number;\n    totalAssemblyTime?: number;\n\n    // Non-standard\n    perFrameEntries?: string;\n}\n\ndeclare interface VideoPerFrameEntry {\n    frameNumber: number;\n    decodeTime: number;\n    assemblyTime: number;\n}\n\nexport class BinaryReport {\n    private videoPacketsLost: number = 0;\n    private videoFrameDecodeTimeAvgMs: number = 0;\n    private prevVideoPacketsLost: number = 0;\n    private prevVideoFramesDecoded: number = 0;\n    private prevVideoDecodeTimeTotalMs: number = 0;\n    private framesDecoded: number = 0;\n    private pliCount: number = 0;\n    private prevPliCount: number = 0;\n    private framesDropped: number = 0;\n    private prevFramesDropped: number = 0;\n    private rvfcStatsCache: ArrayBuffer[] = new Array();\n    /**\n     * Each call to getStats does not guarantee the new decoded/assembly frames stats get returned,\n     * so maintain a tracker here to track the latest frame recorded so far.\n     * It is for comparing frame numbers and only take frames with larger frame numbers so that we know which frames are newly updated.\n     */\n    private lastPfdaFrameNumber: number = -1;\n\n    constructor(private readonly rvfcStatsCacheLimit: number = 120) {}\n\n    private getTimeLapsedSinceStreamBegin(value: number | undefined): number {\n        if (value !== undefined) {\n            return value - RagnarokProfiler.getStreamBeginTime();\n        } else {\n            return 0;\n        }\n    }\n\n    private getRelativeTimestamp(): number {\n        // We used to use WebRTC report timestamps, but they don't follow the spec on safari and aren't monotonic on any\n        // platform. Generate our own timestamp instead. Internally, most stats use a single timestamp taken at the\n        // start of getStats so it isn't very useful anyway. At most, the timestamp will be off by the time it took for\n        // the getStats Promise to resolve\n        return RagnarokProfiler.getStreamTime();\n    }\n\n    private sendAudioTrack(audioTrack: RTCInboundRtpStreamExtraStats) {\n        const buffer = new ArrayBuffer(statsConfig.traa.size);\n        const view = new DataView(buffer);\n        view.setFloat64(0, getVal(audioTrack.audioLevel), true);\n        setUint64(getVal(audioTrack.concealedSamples), view, 8, true);\n        setUint64(getVal(audioTrack.concealmentEvents), view, 16, true);\n        setUint64(getVal(audioTrack.insertedSamplesForDeceleration), view, 24, true);\n        view.setFloat64(32, getVal(audioTrack.jitterBufferDelay), true);\n        setUint64(getVal(audioTrack.jitterBufferEmittedCount), view, 40, true);\n        setUint64(getVal(audioTrack.removedSamplesForAcceleration), view, 48, true);\n        setUint64(getVal(audioTrack.silentConcealedSamples), view, 56, true);\n        view.setFloat64(64, getVal(audioTrack.totalSamplesReceived), true);\n        view.setFloat64(72, getVal(audioTrack.totalSamplesDuration), true);\n        view.setFloat64(80, this.getRelativeTimestamp(), true);\n        RagnarokProfiler.addStatsReport([buffer], StatsType.TRAA);\n    }\n\n    private sendVideoTrack(videoTrack: RTCInboundRtpStreamExtraStats) {\n        const recentFramesDropped = getVal(videoTrack.framesDropped);\n        if (recentFramesDropped >= this.prevFramesDropped) {\n            this.framesDropped = recentFramesDropped - this.prevFramesDropped;\n            this.prevFramesDropped = recentFramesDropped;\n        }\n\n        const buffer = new ArrayBuffer(statsConfig.trav.size);\n        const view = new DataView(buffer);\n        view.setUint32(0, getVal(videoTrack.framesDecoded), true);\n        view.setUint32(4, recentFramesDropped, true);\n        view.setUint32(8, getVal(videoTrack.frameHeight), true);\n        view.setUint32(12, getVal(videoTrack.frameWidth), true);\n        view.setUint32(16, getVal(videoTrack.framesReceived), true);\n        view.setFloat64(20, getVal(videoTrack.jitterBufferDelay), true);\n        setUint64(getVal(videoTrack.jitterBufferEmittedCount), view, 28, true);\n        view.setFloat64(36, this.getRelativeTimestamp(), true);\n        RagnarokProfiler.addStatsReport([buffer], StatsType.TRAV);\n    }\n\n    public sendInboundRtpStats(rtp: RTCInboundRtpStreamExtraStats) {\n        if (rtp.kind === \"audio\") {\n            this.sendAudioRtp(rtp);\n            this.sendAudioTrack(rtp);\n        } else {\n            this.sendVideoRtp(rtp);\n            this.sendVideoTrack(rtp);\n            this.sendVideoRtpPerFrame(rtp);\n        }\n    }\n\n    private sendAudioRtp(audioRtp: RTCInboundRtpStreamExtraStats) {\n        const buffer = new ArrayBuffer(statsConfig.rtpa.size);\n        const view = new DataView(buffer);\n        setUint64(getVal(audioRtp.packetsReceived), view, 0, true);\n        setUint64(getVal(audioRtp.bytesReceived), view, 8, true);\n        setUint64(getVal(audioRtp.packetsLost), view, 16, true);\n        view.setFloat64(24, getVal(audioRtp.lastPacketReceivedTimestamp), true);\n        view.setFloat64(32, getVal(audioRtp.jitter), true);\n        view.setFloat64(40, this.getRelativeTimestamp(), true);\n        RagnarokProfiler.addStatsReport([buffer], StatsType.RTPA);\n    }\n\n    public getPacketsLost(): number {\n        return this.videoPacketsLost;\n    }\n\n    public getDecodeTimeAvgMs(): number {\n        return Math.round(this.videoFrameDecodeTimeAvgMs);\n    }\n\n    public getFramesDecoded(): number {\n        return this.framesDecoded;\n    }\n\n    public getPliCount(): number {\n        return this.pliCount;\n    }\n\n    public getFramesDropped(): number {\n        return this.framesDropped;\n    }\n\n    private updateClientAppFeedbackStats(\n        recentPacketsLost: number,\n        recentFramesDecoded: number,\n        recentTotalDecodeTimeMs: number,\n        recentPliCount: number\n    ) {\n        if (recentPacketsLost >= this.prevVideoPacketsLost) {\n            this.videoPacketsLost = recentPacketsLost - this.prevVideoPacketsLost;\n            this.prevVideoPacketsLost = recentPacketsLost;\n        }\n\n        if (recentPliCount >= this.prevPliCount) {\n            this.pliCount = recentPliCount - this.prevPliCount;\n            this.prevPliCount = recentPliCount;\n        }\n\n        this.framesDecoded = recentFramesDecoded - this.prevVideoFramesDecoded;\n        // Repeat old value if no frames are decoded.\n        // Very congested decoder will result in PLIs causing decoder going idle during recovery.\n        if (this.framesDecoded > 0 && recentTotalDecodeTimeMs > this.prevVideoDecodeTimeTotalMs) {\n            this.videoFrameDecodeTimeAvgMs =\n                ((recentTotalDecodeTimeMs - this.prevVideoDecodeTimeTotalMs) * 1000) /\n                this.framesDecoded;\n            this.prevVideoFramesDecoded = recentFramesDecoded;\n            this.prevVideoDecodeTimeTotalMs = recentTotalDecodeTimeMs;\n        }\n    }\n\n    private sendVideoRtp(videoRtp: RTCInboundRtpStreamExtraStats) {\n        const packetsLost = getVal(videoRtp.packetsLost);\n        const framesDecoded = getVal(videoRtp.framesDecoded);\n        const totalDecodeTimeMs = getVal(videoRtp.totalDecodeTime);\n        const pliCount = getVal(videoRtp.pliCount);\n        this.updateClientAppFeedbackStats(packetsLost, framesDecoded, totalDecodeTimeMs, pliCount);\n\n        const buffer = new ArrayBuffer(statsConfig.rtpv.size);\n        const view = new DataView(buffer);\n        view.setUint32(0, framesDecoded, true);\n        view.setUint32(4, getVal(videoRtp.keyFramesDecoded), true);\n        view.setUint32(8, getVal(videoRtp.nackCount), true);\n        view.setInt32(12, packetsLost, true);\n        view.setInt32(16, pliCount, true);\n        setUint64(getVal(videoRtp.bytesReceived), view, 20, true);\n        setUint64(getVal(videoRtp.packetsReceived), view, 28, true);\n        view.setFloat64(36, totalDecodeTimeMs, true);\n        view.setFloat64(44, getVal(videoRtp.totalInterFrameDelay), true);\n        view.setFloat64(52, getVal(videoRtp.totalSquaredInterFrameDelay), true);\n        view.setFloat64(60, getVal(videoRtp.totalAssemblyTime), true);\n        view.setUint32(68, getVal(videoRtp.framesAssembledFromMultiplePackets), true);\n        view.setFloat64(72, this.getRelativeTimestamp(), true);\n        RagnarokProfiler.addStatsReport([buffer], StatsType.RTPV);\n    }\n\n    private sendVideoRtpPerFrame(videoRtp: RTCInboundRtpStreamExtraStats) {\n        if (videoRtp.perFrameEntries) {\n            // Per frame entries will be available for custom chrome build.\n            // It is mainly for recording per frame decode and assembly time.\n            // Each call to getStats will return at maximum 128 frame entries,\n            // and these subroutine will forward decode and assembly data per entry to the\n            // server and qosweb.\n            const entries: VideoPerFrameEntry[] = JSON.parse(videoRtp.perFrameEntries);\n            const report: ArrayBuffer[] = [];\n            let tempPfdaFrameNumber = this.lastPfdaFrameNumber;\n            for (let i = 0; i < entries.length; i++) {\n                if (entries[i].frameNumber > this.lastPfdaFrameNumber) {\n                    const buffer = new ArrayBuffer(statsConfig.pfda.size);\n                    const dataView = new DataView(buffer);\n                    dataView.setUint32(0, entries[i].frameNumber, true);\n                    dataView.setFloat64(4, entries[i].decodeTime, true);\n                    dataView.setFloat64(12, entries[i].assemblyTime, true);\n                    report.push(buffer);\n                }\n                tempPfdaFrameNumber = Math.max(tempPfdaFrameNumber, entries[i].frameNumber);\n            }\n            this.lastPfdaFrameNumber = tempPfdaFrameNumber;\n            if (report.length > 0) {\n                RagnarokProfiler.addStatsReport(report, StatsType.PFDA);\n            }\n        }\n    }\n\n    public sendDeprStats(deprecatedStats: KeyDeprecatedStats) {\n        // Ex: 789244794,-15,-15,-10,-10,-1,-15,-15,432205915,432205926,432205927,432205929,432205929,0,1\n        const array = deprecatedStats.timingFrameInfo.split(\",\", 15);\n        if (array.length < 15) {\n            return;\n        }\n\n        const buffer = new ArrayBuffer(statsConfig.depr.size);\n        const view = new DataView(buffer);\n        view.setUint32(0, getVal(deprecatedStats.targetDelayMs), true);\n        view.setUint32(4, getVal(deprecatedStats.minPlayoutDelayMs), true);\n        view.setUint32(8, getVal(deprecatedStats.currentDelayMs), true);\n        view.setFloat64(12, this.getRelativeTimestamp(), true);\n        view.setFloat64(20, getVal(parseFloat(array[3])), true);\n        view.setFloat64(28, getVal(parseFloat(array[4])), true);\n        view.setFloat64(36, getVal(parseFloat(array[8])), true);\n        view.setFloat64(44, getVal(parseFloat(array[9])), true);\n        view.setFloat64(52, getVal(parseFloat(array[10])), true);\n        view.setFloat64(60, getVal(parseFloat(array[11])), true);\n        view.setUint8(68, getVal(parseFloat(array[13])));\n        view.setUint8(69, getVal(parseFloat(array[14])));\n        RagnarokProfiler.addStatsReport([buffer], StatsType.DEPR);\n    }\n\n    public sendVideoFrameMetadata(cbtimestamp: DOMHighResTimeStamp, metadata: VideoFrameMetadata) {\n        const recvTimeMs = metadata.receiveTime ?? 0;\n        const presentTimeMs = metadata.presentationTime - recvTimeMs;\n        const processTimeMs = (metadata.processingDuration ?? 0) * 1000;\n        const timeStamp = this.getTimeLapsedSinceStreamBegin(metadata.presentationTime);\n\n        const buffer = new ArrayBuffer(statsConfig.vfmd.size);\n        const view = new DataView(buffer);\n        view.setFloat64(0, timeStamp, true);\n        view.setUint16(8, Math.min(presentTimeMs * 100, 0xffff), true);\n        view.setUint16(10, Math.min(processTimeMs * 100, 0xffff), true);\n        this.rvfcStatsCache.push(buffer);\n        // Posting message to Webworker for every frame might be causing issues.\n        // We cache these per-frame stats here and send them in burts of rvfcStatsCacheLimit\n        // Note that the Webrtc stats are cached again in webworker and are uploaded every 5 seconds\n        if (this.rvfcStatsCache.length == this.rvfcStatsCacheLimit) {\n            this.sendCachedVfmdStats();\n        }\n    }\n\n    public sendCachedVfmdStats() {\n        if (this.rvfcStatsCache.length > 0) {\n            RagnarokProfiler.addStatsReport(this.rvfcStatsCache, StatsType.VFMD);\n            this.rvfcStatsCache = [];\n        }\n    }\n}\n\nfunction getVal(val: number | undefined): number {\n    return val || 0;\n}\n","import { IEventEmitter, IsChromium, PlatformDetails, Log } from \"../dependencies\";\nimport { KeyDeprecatedStats, DeprecatedStats } from \"./statsinterfaces\";\nimport { EVENTS, StreamUpdateEvent, Resolution } from \"../interfaces\";\nimport {\n    INTERNAL_EVENTS,\n    VideoFrameMetadata,\n    VideoFrameRequestCallback,\n    WithRequestVideoFrameCallback\n} from \"../internalinterfaces\";\nimport { QosCalculator } from \"./qoscalculator\";\nimport { StreamStats } from \"./streamstats\";\nimport { RagnarokProfiler } from \"../ragnarokprofiler\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { BinaryReport, RTCInboundRtpStreamExtraStats } from \"./binaryreport\";\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\nimport { DataChannelParams, ExtendedDebugStats, StaticStreamStats } from \"../rinterfaces\";\nimport {\n    ShouldEnableCPM,\n    GetResolutionString,\n    GetPhysicalResolution,\n    GetLogicalResolution\n} from \"../util/utils\";\nimport { CapabilitiesHelper } from \"../util/devicecapabilities\";\nimport { LDATOverlay, ILDATHandler } from \"../debug/ldatoverlay\";\nimport { NvstConfig } from \"../nvstconfig\";\nimport { WindowStateObserver } from \"../windowstateobserver\";\nimport { RErrorCode } from \"../rerrorcode\";\n/**\n *This class has all the logic to execute GetStats method, and calculate few stats for displaying on client side.\n */\n\nconst LOGTAG = \"clientstatsservice\";\nconst BWE_OFFSET = 1;\nconst JITTER_OFFSET = 9;\nconst RTD_OFFSET = 17;\nconst FPS_OFFSET = 25;\n\ninterface InboundVideoCounts {\n    currReportFailed: number;\n    prevReportFailed: number;\n    success: number;\n}\n\ninterface InboundVideoStats {\n    counts: InboundVideoCounts;\n    decoder: string;\n    fallbackFrameNumber: number;\n}\n\nexport interface IceConnectionStats {\n    recentRequestsSent: number;\n    recentResponsesReceived: number;\n    recentPacketsReceived: number;\n}\n\nconst enum StreamStatsState {\n    OFF,\n    STANDARD,\n    DETAILED\n}\n\nconst enum StatsCollectionState {\n    STARTED,\n    STREAMING,\n    STOPPED\n}\n\ndeclare interface RTCIceCandidateStats extends RTCStats {\n    transportId: string;\n    address?: string | null;\n    port?: number;\n    protocol?: string;\n    candidateType: RTCIceCandidateType;\n    priority?: number;\n    url?: string;\n    // relayProtocol?: RTCIceServerTransportProtocol;\n    foundation?: string;\n    relatedAddress?: string;\n    relatedPort?: number;\n    usernameFragment?: string;\n    tcpType?: RTCIceTcpCandidateType;\n}\n\ndeclare interface RTCIceCandidatePairStatsExtras extends RTCIceCandidatePairStats {\n    requestsSent: number;\n    consentRequestsSent: number;\n    requestsReceived: number;\n    responsesSent: number;\n    responsesReceived: number;\n    packetsSent: number;\n    packetsReceived: number;\n}\n\ninterface RtpMapping {\n    rtp: number;\n    client: number;\n}\n\nconst ICE_STATS_HISTORY_SIZE = 6;\n\nexport interface IClientStatsCallbacks {\n    addDataChannel(dataChannel: RTCDataChannel, params: DataChannelParams): void;\n    getExtendedDebugStats(): ExtendedDebugStats;\n    writeEtwPrint(msg: string): void;\n    processInputChannelStats(): void;\n}\n/**\n * Categories of ice candidates that can be generated/read from stats\n */\nexport const enum IceCandidateCategory {\n    TCP = \"TCP\",\n    MDNS = \"MDNS\",\n    IPV6 = \"IPV6\",\n    IPV4 = \"IPV4\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\n/**\n * Private IPv4 address ranges\n */\nexport const enum PrivateIPv4Range {\n    TEN = \"10/8\",\n    ONESEVENTWO = \"172.16/12\",\n    ONENINETWO = \"192.168/16\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\n/**\n * Map that can be used to store counts of ice candidates categories, that guarantees keys exist for each enum\n * When a new IceCandidateCategory is added, must initialize its entry to 0 in the constructor\n */\nexport class IceCandidateCategoryCounts extends Map<IceCandidateCategory, number> {\n    constructor() {\n        super([\n            [IceCandidateCategory.TCP, 0],\n            [IceCandidateCategory.MDNS, 0],\n            [IceCandidateCategory.IPV6, 0],\n            [IceCandidateCategory.IPV4, 0],\n            [IceCandidateCategory.UNKNOWN, 0]\n        ]);\n    }\n}\n\nexport class ClientStatsService {\n    private peerConnection: RTCPeerConnection;\n    private telemetry: TelemetryHandler;\n    private videoElement: HTMLVideoElement & WithRequestVideoFrameCallback;\n    private running: boolean = true;\n    private statsChannel!: RTCDataChannel;\n    private statsIntervalId: number = 0;\n    private deprecatedstatsIntervalId: number = 0;\n    private eventEmitter: IEventEmitter;\n    private keyDeprecatedStats: KeyDeprecatedStats;\n    //stats cache from previous calls to calculate desired rates\n    private videoPacketsReceived: number = 0;\n    private videoFramesDecoded: number = 0;\n    private audioCodecType: string = \"\";\n    private videoCodecType: string = \"\";\n    private reportCache?: RTCStatsReport;\n    private qosCalculator: QosCalculator;\n    private streamStats: StreamStats;\n    private callbacks: IClientStatsCallbacks;\n    private initTypeId: boolean = false;\n    private typeToIdMap: Map<string, Array<string>> = new Map<string, Array<string>>();\n    private bweMbps: number = 0;\n    private jitter: number = 0;\n    private rtd: number = 0;\n    private gameFps: number = 0;\n    private mediaType: \"video\" | \"audio\" = \"video\";\n    private shouldEmitInternalStatsEvent: boolean;\n    private binaryReport: BinaryReport;\n    private streamStatsState: StreamStatsState = StreamStatsState.OFF;\n    private nextStreamStatsTs: number = 0;\n    private platformDetails: PlatformDetails;\n    private usedHeapSize: number = 0;\n    private totalHeapSize: number = 0;\n    private staticStreamStats: StaticStreamStats;\n    /// Maintains stats on the active candidate pair once a second for ICE_STATS_HISTORY_SIZE seconds\n    private iceStats: RTCIceCandidatePairStatsExtras[] = [];\n    private videoFrameCallbackFunc: VideoFrameRequestCallback;\n    private logicalResolution: Resolution = { width: 0, height: 0 };\n    private physicalResolution: Resolution = { width: 0, height: 0 };\n    private pendingStats: boolean = false;\n    private pendingDeprecatedStats: boolean = false;\n    private inboundVideoStats: InboundVideoStats;\n    private ldat?: LDATOverlay;\n    private useInboundRtpAsTrack: boolean = false;\n    private mapRtpTimestampsToFrames: boolean;\n    private maxBitrate: number;\n    private lastUnsentRtpMapping?: RtpMapping;\n    private nextRtpMappingTime: number = 0;\n    private hasAudioStats?: boolean;\n    private statsCollectionState: StatsCollectionState = StatsCollectionState.STARTED;\n\n    constructor(\n        eventEmitter: IEventEmitter,\n        callbacks: IClientStatsCallbacks,\n        videoElement: HTMLVideoElement,\n        pc: RTCPeerConnection,\n        nvstConfig: NvstConfig,\n        telemetry: TelemetryHandler,\n        platformDetails: PlatformDetails,\n        staticStreamStats: StaticStreamStats,\n        windowObserver: WindowStateObserver\n    ) {\n        this.eventEmitter = eventEmitter;\n        this.callbacks = callbacks;\n        this.videoElement = videoElement;\n        this.peerConnection = pc;\n        this.mapRtpTimestampsToFrames = nvstConfig.video?.[0].mapRtpTimestampsToFrames ?? false;\n        this.maxBitrate = nvstConfig.video?.[0].maximumBitrateKbps ?? 0;\n        this.telemetry = telemetry;\n        this.platformDetails = platformDetails;\n        this.staticStreamStats = staticStreamStats;\n\n        this.keyDeprecatedStats = {\n            ts: 0,\n            timingFrameInfo: \"\",\n            targetDelayMs: 0,\n            minPlayoutDelayMs: 0,\n            currentDelayMs: 0\n        };\n        this.qosCalculator = new QosCalculator(this.maxBitrate);\n\n        this.streamStats = new StreamStats(\n            videoElement,\n            this.platformDetails,\n            this.staticStreamStats\n        );\n        if (RagnarokSettings.isInternalUser) {\n            this.ldat = new LDATOverlay(videoElement, windowObserver);\n        }\n        this.peerConnection = pc;\n        this.createStatsDataChannel();\n        this.shouldEmitInternalStatsEvent = this.eventEmitter.hasListener(\n            INTERNAL_EVENTS.STREAMING_STATS\n        );\n        this.binaryReport = new BinaryReport();\n        this.inboundVideoStats = {\n            counts: {\n                currReportFailed: 0,\n                prevReportFailed: 0,\n                success: 0\n            },\n            decoder: \"\",\n            fallbackFrameNumber: -1\n        };\n\n        this.videoFrameCallbackFunc = this.videoFrameCallback.bind(this);\n\n        this.setIntervals();\n    }\n\n    private initMap() {\n        this.peerConnection\n            .getStats(null)\n            .then((report: RTCStatsReport) => {\n                let foundTrack = false;\n                for (let stat of report.values()) {\n                    if (stat.type === \"track\") {\n                        foundTrack = true;\n                    }\n                    if (this.isTypeWhitelisted(stat.type)) {\n                        if (stat.kind === \"audio\") {\n                            this.hasAudioStats = true;\n                        }\n\n                        const statsArray = this.typeToIdMap.get(stat.type);\n                        if (statsArray) {\n                            if (!statsArray.includes(stat.id)) {\n                                statsArray.push(stat.id);\n                            } else {\n                                Log.e(\"{5cea617}\", \"{76f5968}\", stat.id);\n                            }\n                        } else {\n                            this.typeToIdMap.set(stat.type, [stat.id]);\n                        }\n                    }\n                }\n                this.useInboundRtpAsTrack = !foundTrack;\n                Log.i(\"{5cea617}\", \"{1317761}\", (this.useInboundRtpAsTrack ? \"yes\" : \"no\"));\n                this.initTypeId = true;\n                this.reportCache = report;\n                this.processStatsReport(report);\n            })\n            .catch(exp => this.emitStatsException(exp, \"init\"))\n            .finally(() => this.finalizeGetStats());\n    }\n\n    public createStatsDataChannel() {\n        let statsChannelParams = {\n            ordered: false,\n            reliable: false,\n            maxRetransmits: 0\n        };\n        this.statsChannel = this.peerConnection.createDataChannel(\n            \"stats_channel\",\n            statsChannelParams\n        );\n        this.statsChannel.binaryType = \"arraybuffer\";\n        this.callbacks.addDataChannel(this.statsChannel, {\n            open: () => {\n                this.statsCollectionState = StatsCollectionState.STREAMING;\n            },\n            close: () => {\n                this.clearIntervals();\n                this.statsCollectionState = StatsCollectionState.STOPPED;\n            }\n        });\n        this.statsChannel.onmessage = (msg: any) => {\n            var view = new DataView(msg.data);\n            let version = view.getUint8(0);\n            if (version >= 2) {\n                this.bweMbps = view.getFloat64(BWE_OFFSET, true) / 1000000;\n                this.jitter = view.getFloat64(JITTER_OFFSET, true) * 1000;\n                this.rtd = view.getFloat64(RTD_OFFSET, true);\n\n                this.streamStats.updateJitter(this.jitter);\n                this.streamStats.updateRtd(this.rtd);\n                if (version >= 3) {\n                    this.gameFps = view.getFloat64(FPS_OFFSET, true);\n                    this.streamStats.updateAvgGameFps(this.gameFps);\n                }\n                this.qosCalculator.calculateBandwidthScoreV2(\n                    this.bweMbps,\n                    this.streamStats.updateBwu(this.bweMbps)\n                );\n                this.qosCalculator.calculateLatencyScoreV2(this.rtd);\n            } else {\n                Log.e(\"{5cea617}\", \"{4f9f4b7}\", version);\n            }\n        };\n    }\n\n    private setIntervals() {\n        this.statsIntervalId = window.setInterval(() => {\n            this.sendClientStats();\n        }, RagnarokSettings.ragnarokConfig.getStatsInterval ?? 96);\n        if (IsChromium()) {\n            this.deprecatedstatsIntervalId = window.setInterval(() => {\n                this.saveDeprecatedStats();\n            }, RagnarokSettings.ragnarokConfig.getDeprecatedStatsInterval ?? 201);\n        }\n\n        this.videoElement.requestVideoFrameCallback?.(this.videoFrameCallbackFunc);\n    }\n\n    private videoFrameCallback(now: DOMHighResTimeStamp, metadata: VideoFrameMetadata) {\n        this.binaryReport.sendVideoFrameMetadata(now, metadata);\n        if (this.ldat?.isActive()) {\n            this.ldat.onVideoFrame(now, metadata);\n        }\n        if (this.mapRtpTimestampsToFrames && metadata.rtpTimestamp && metadata.receiveTime) {\n            this.lastUnsentRtpMapping = {\n                rtp: metadata.rtpTimestamp,\n                client: metadata.receiveTime - RagnarokProfiler.getStreamBeginTime()\n            };\n        }\n\n        if (this.isEnabled()) {\n            // Re-register the callback to be notified about the next frame.\n            this.videoElement.requestVideoFrameCallback?.(this.videoFrameCallbackFunc);\n        }\n    }\n\n    private clearIntervals() {\n        if (this.statsIntervalId) {\n            clearInterval(this.statsIntervalId);\n            this.statsIntervalId = 0;\n        }\n        if (this.deprecatedstatsIntervalId) {\n            clearInterval(this.deprecatedstatsIntervalId);\n            this.deprecatedstatsIntervalId = 0;\n        }\n        // We cache the per frame vfmd stats and send them in bursts\n        // Ensure we flush any cached stats before disabling the stats\n        this.binaryReport.sendCachedVfmdStats();\n    }\n\n    public reset() {\n        this.clearIntervals();\n        this.qosCalculator = new QosCalculator(this.maxBitrate);\n        this.streamStats = new StreamStats(\n            this.videoElement,\n            this.platformDetails,\n            this.staticStreamStats\n        );\n        this.reportCache = undefined;\n    }\n\n    public isEnabled() {\n        return this.statsIntervalId != 0;\n    }\n\n    public disableStats() {\n        if (!this.isEnabled()) {\n            return;\n        }\n        this.reset();\n        this.setOnScreenStats(false);\n    }\n\n    public enableStats() {\n        if (this.isEnabled()) {\n            return;\n        }\n        this.setIntervals();\n    }\n\n    public stop() {\n        if (!this.running) {\n            return;\n        }\n        this.running = false;\n        this.disableStats();\n        this.ldat?.stop();\n        this.telemetry.emitMetricEvent(\n            \"InboundVideoStats\",\n            this.inboundVideoStats.decoder,\n            this.inboundVideoStats.counts.success,\n            this.inboundVideoStats.counts.currReportFailed,\n            this.inboundVideoStats.fallbackFrameNumber,\n            this.inboundVideoStats.counts.prevReportFailed\n        );\n    }\n\n    private isTypeWhitelisted(type: string) {\n        return [\"transport\", \"inbound-rtp\", \"candidate-pair\"].includes(type);\n    }\n\n    public resetTypeIds() {\n        this.initTypeId = false;\n    }\n\n    private processEarlyStatsReport(report: RTCStatsReport) {\n        this.reportCache = report;\n    }\n\n    private processStatsReport(report: RTCStatsReport) {\n        const STREAM_STATS_INTERVAL_MS = 1000;\n        const RTP_MAPPING_INTERVAL = 1000;\n\n        const getStatsT0 = performance.now();\n        if (getStatsT0 >= this.nextStreamStatsTs && this.mediaType === \"video\") {\n            this.updateOnScreenStats(report);\n            this.updateCandidatePairStats(report);\n            if (this.showStreamStats()) {\n                this.streamStats.drawStatsOnScreen(\n                    this.streamStatsState === StreamStatsState.DETAILED\n                );\n            }\n            const streamEvent: StreamUpdateEvent = this.streamStats.makeStreamUpdateEvent();\n            this.eventEmitter.emit(EVENTS.STREAM_STATS_UPDATE, streamEvent);\n            this.reportCache = report;\n            this.nextStreamStatsTs = getStatsT0 + STREAM_STATS_INTERVAL_MS;\n        }\n        this.convertReportToBinary(report);\n        this.processGarbageCollectionStats();\n        this.callbacks.processInputChannelStats();\n\n        if (getStatsT0 >= this.nextRtpMappingTime && this.lastUnsentRtpMapping) {\n            this.sendRtpMapping(this.lastUnsentRtpMapping);\n            this.lastUnsentRtpMapping = undefined;\n\n            this.nextRtpMappingTime = getStatsT0 + RTP_MAPPING_INTERVAL;\n        }\n        if (this.mediaType === \"video\") {\n            if (ShouldEnableCPM(this.platformDetails)) {\n                this.sendClientPerfStats();\n            }\n            this.streamStats.updateQScore(this.qosCalculator.GetStreamQuality());\n            const sq = this.qosCalculator.GetStreamQuality();\n            this.eventEmitter.emit(EVENTS.STREAMING_QUALITY, sq);\n            if (this.shouldEmitInternalStatsEvent)\n                this.eventEmitter.emit(\n                    INTERNAL_EVENTS.STREAMING_STATS,\n                    this.streamStats.getStreamingStats()\n                );\n            RagnarokProfiler.addQualityScore(sq);\n        }\n        const getStatsT1 = performance.now();\n        let statsTs = getStatsT1 - getStatsT0;\n        RagnarokProfiler.addGetStatsTime(statsTs);\n        this.streamStats.updateStatsDuration(statsTs);\n        if (this.hasAudioStats) {\n            this.mediaType = this.mediaType === \"video\" ? \"audio\" : \"video\";\n        }\n    }\n\n    private convertReportToBinary(report: RTCStatsReport) {\n        for (const [type, ids] of this.typeToIdMap.entries()) {\n            for (const id of ids) {\n                const stats = report.get(id);\n                if (!stats) {\n                    continue;\n                }\n                switch (type) {\n                    case \"inbound-rtp\":\n                        this.binaryReport.sendInboundRtpStats(\n                            this.getUnifiedInboundRtp(report, stats)\n                        );\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    public updateDcSendDuration(time: number) {\n        this.streamStats.updateDcSendDuration(time);\n    }\n    public updateBlockedDuration(duration: number) {\n        this.streamStats.updateMainThreadBlockDuration(duration);\n    }\n    public sendClientStats() {\n        // Don't start another call to getStats if the previous one hasn't succeeded. This indicates a client perf\n        // problem which we shouldn't make worse. This is also especially important for initMap() to ensure we don't\n        // add the same IDs to the map multiple times\n        if (this.pendingStats) {\n            return;\n        }\n        this.pendingStats = true;\n\n        if (this.statsCollectionState === StatsCollectionState.STARTED) {\n            // Connection is still being established, cache reports so we can look for clues if it fails\n            // But don't initialize our stat map/stream stats because the connection is not finalized\n            this.peerConnection\n                .getStats()\n                .then(report => this.processEarlyStatsReport(report))\n                .catch(exp => this.emitStatsException(exp, \"early\"))\n                .finally(() => this.finalizeGetStats());\n        } else if (this.statsCollectionState === StatsCollectionState.STREAMING) {\n            if (!this.initTypeId) {\n                this.initMap();\n            } else {\n                const receivers = this.peerConnection.getReceivers();\n                const receiver = receivers.find(\n                    receiver => receiver.track.kind === this.mediaType && receiver.track.enabled\n                );\n                if (!receiver) return;\n                receiver\n                    .getStats()\n                    .then(report => this.processStatsReport(report))\n                    .catch(exp => this.emitStatsException(exp, \"standard\"))\n                    .finally(() => this.finalizeGetStats());\n            }\n        } else {\n            this.pendingStats = false;\n        }\n    }\n\n    private showStreamStats(): boolean {\n        return this.streamStatsState !== StreamStatsState.OFF;\n    }\n\n    public toggleOnScreenStats(enableDevStats: boolean) {\n        this.setOnScreenStats(!this.showStreamStats(), enableDevStats);\n    }\n\n    private setOnScreenStats(show: boolean, enableDevStats: boolean = false) {\n        this.streamStats.setShown(show);\n        if (show) {\n            this.streamStatsState = enableDevStats\n                ? StreamStatsState.DETAILED\n                : StreamStatsState.STANDARD;\n            this.streamStats.drawStatsOnScreen(enableDevStats);\n            // Trigger an immediate stats update\n            this.nextStreamStatsTs = performance.now();\n        } else {\n            this.streamStatsState = StreamStatsState.OFF;\n        }\n    }\n\n    private updateOnScreenStats(report: RTCStatsReport) {\n        this.updateInboundVideoRtpStats(report);\n        this.streamStats.updateExtendedDebugStats(this.callbacks.getExtendedDebugStats());\n    }\n\n    private updateInboundVideoRtpStats(report: RTCStatsReport) {\n        const ids = this.typeToIdMap.get(\"inbound-rtp\");\n        if (!ids || !this.reportCache) return;\n        let inboundVideo: RTCInboundRtpStreamExtraStats | undefined = ids\n            .map(id => report.get(id))\n            .find(x => x?.kind === \"video\" || x?.mediaType === \"video\");\n        if (!inboundVideo) {\n            this.inboundVideoStats.counts.currReportFailed++;\n            return;\n        }\n        inboundVideo = this.getUnifiedInboundRtp(report, inboundVideo);\n        const decoder: string | undefined = inboundVideo.decoderImplementation;\n        if (decoder?.indexOf) {\n            const isFallback = decoder.indexOf(\"fallback\") !== -1;\n            if (isFallback) {\n                if (this.inboundVideoStats.fallbackFrameNumber === -1) {\n                    this.inboundVideoStats.fallbackFrameNumber =\n                        inboundVideo.framesDecoded ?? this.videoFramesDecoded;\n                    // TODO: Remove from blob stats after qosweb sources from ETWPrint\n                    RagnarokProfiler.onEvent(\"SoftwareDecodeFallback\");\n                    const ETWS_SOFTWARE_DECODE_FALLBACK =\n                        \"Fallback to software decode at frame \" +\n                        String(this.inboundVideoStats.fallbackFrameNumber);\n                    Log.d(\"{5cea617}\", \"{0b0c6f9}\", ETWS_SOFTWARE_DECODE_FALLBACK);\n                    this.streamStats.setSoftwareDecodeFallback(true);\n                    this.callbacks.writeEtwPrint(ETWS_SOFTWARE_DECODE_FALLBACK);\n                }\n            }\n            if (decoder !== this.inboundVideoStats.decoder && decoder !== \"unknown\") {\n                this.inboundVideoStats.decoder = decoder;\n                this.streamStats.setDecoderImplementation(decoder);\n            }\n        }\n        const prevInboundVideo: RTCInboundRtpStreamExtraStats | undefined = this.reportCache.get(\n            inboundVideo.id\n        );\n        if (!prevInboundVideo) {\n            this.inboundVideoStats.counts.prevReportFailed++;\n            return;\n        }\n        this.inboundVideoStats.counts.success++;\n        const codecId = inboundVideo.codecId;\n        if (codecId) {\n            this.videoCodecType = report.get(codecId).mimeType;\n            this.streamStats.updateVideoCodec(this.videoCodecType);\n        }\n        this.qosCalculator.calculateNetworkLossScore(inboundVideo, prevInboundVideo);\n        this.streamStats.updateInboundVideoRtpStats(inboundVideo);\n        this.videoFramesDecoded = inboundVideo.framesDecoded ?? 0;\n        this.videoPacketsReceived = inboundVideo.packetsReceived ?? 0;\n        this.updateDisplayResolution();\n    }\n\n    // If we are using track stats, grabs them from the report and combines it with the given inbound RTP stats.\n    // This basically emulates the newer inbound RTP stats that have all the fields taken from track stats\n    private getUnifiedInboundRtp(\n        report: RTCStatsReport,\n        inboundRtp: RTCInboundRtpStreamExtraStats\n    ): RTCInboundRtpStreamExtraStats {\n        if (!this.useInboundRtpAsTrack) {\n            const track: RTCInboundRtpStreamExtraStats | undefined = report.get(\n                (<any>inboundRtp).trackId\n            );\n            if (track) {\n                // We use track as the target rather than inboundRtp because we want any existing inbound RTP fields\n                // to overwrite the deprecated ones in track\n                inboundRtp = Object.assign(track, inboundRtp);\n            }\n        }\n        return inboundRtp;\n    }\n\n    private updateCandidatePairStats(report: RTCStatsReport) {\n        const ids = this.typeToIdMap.get(\"candidate-pair\");\n        const candidatePair: RTCIceCandidatePairStatsExtras | undefined = ids\n            ?.map(id => report.get(id))\n            .find(x => x);\n        if (!candidatePair) {\n            return;\n        }\n        if (this.iceStats.length >= ICE_STATS_HISTORY_SIZE) {\n            this.iceStats.splice(0, 1);\n        }\n        this.iceStats.push(candidatePair);\n\n        const prevCandidatePair: RTCIceCandidatePairStatsExtras | undefined = this.reportCache?.get(\n            candidatePair.id\n        );\n        if (!prevCandidatePair) {\n            return;\n        }\n        this.streamStats.updateAvgStreamingRate(candidatePair, prevCandidatePair);\n    }\n\n    private saveDeprecatedStats() {\n        if (this.pendingDeprecatedStats) {\n            return;\n        }\n        this.pendingDeprecatedStats = true;\n        const rejectionHandler = (exp: DOMException) => {\n            this.emitStatsException(exp, \"deprecated\");\n            this.pendingDeprecatedStats = false;\n        };\n        (<any>this.peerConnection)\n            .getStats((report: DeprecatedStats) => {\n                for (let stat of report.result()) {\n                    if (stat.type != \"ssrc\") continue;\n                    for (let name of stat.names()) {\n                        if (stat.stat(\"mediaType\") === \"video\") {\n                            this.keyDeprecatedStats.ts = RagnarokProfiler.getStreamTime();\n                            this.keyDeprecatedStats.timingFrameInfo =\n                                stat.stat(\"googTimingFrameInfo\");\n                            this.keyDeprecatedStats.targetDelayMs = +stat.stat(\"googTargetDelayMs\");\n                            this.keyDeprecatedStats.minPlayoutDelayMs =\n                                +stat.stat(\"googMinPlayoutDelayMs\");\n                            this.keyDeprecatedStats.currentDelayMs =\n                                +stat.stat(\"googCurrentDelayMs\");\n                        }\n                        break;\n                    }\n                }\n                this.binaryReport.sendDeprStats(this.keyDeprecatedStats);\n                this.pendingDeprecatedStats = false;\n            }, rejectionHandler)\n            .catch(rejectionHandler);\n    }\n\n    private sendClientPerfStats() {\n        const APP_FEEDBACK_TYPE = 1;\n        const APP_FEEDBACK_VERSION = 1;\n\n        const dataBuffer = new ArrayBuffer(12);\n        const dataBufferView = new DataView(dataBuffer);\n        const offset = 0;\n\n        dataBufferView.setUint8(offset, APP_FEEDBACK_TYPE);\n        dataBufferView.setUint8(offset + 1, APP_FEEDBACK_VERSION);\n        dataBufferView.setUint16(offset + 2, this.binaryReport.getPacketsLost(), true);\n        dataBufferView.setUint16(offset + 4, this.binaryReport.getDecodeTimeAvgMs(), true);\n        dataBufferView.setUint16(offset + 6, this.binaryReport.getFramesDecoded(), true);\n        dataBufferView.setUint16(offset + 8, this.binaryReport.getPliCount(), true);\n        dataBufferView.setUint16(offset + 10, this.binaryReport.getFramesDropped(), true);\n\n        this.maybeSendMessage(dataBuffer, \"clientperf\");\n    }\n\n    private sendRtpMapping(mapping: RtpMapping) {\n        const RTP_MAPPING_TYPE = 2;\n        const RTP_MAPPING_VERSION = 1;\n        // We can support multiple timestamps in one message by making this dynamic in the future\n        const RTP_COUNT = 1;\n\n        const dataBuffer = new ArrayBuffer(15);\n        const dataBufferView = new DataView(dataBuffer);\n        const offset = 0;\n\n        dataBufferView.setUint8(offset, RTP_MAPPING_TYPE);\n        dataBufferView.setUint8(offset + 1, RTP_MAPPING_VERSION);\n        dataBufferView.setUint8(offset + 2, RTP_COUNT);\n        dataBufferView.setUint32(offset + 3, mapping.rtp, true);\n        dataBufferView.setFloat64(offset + 7, mapping.client, true);\n\n        this.maybeSendMessage(dataBuffer, \"rtpmapping\");\n    }\n\n    private maybeSendMessage(buffer: ArrayBuffer, where: string): void {\n        try {\n            if (this.statsChannel.readyState === \"open\") {\n                this.statsChannel.send(buffer);\n            }\n        } catch (exp) {\n            let msg = \"statsChannel send exception\";\n            Log.e(\"{5cea617}\", \"{78e74c5}\", exp);\n            this.emitStatsException(exp, where);\n        }\n    }\n\n    private emitStatsException(exp: Error | DOMException, where: string) {\n        this.telemetry.emitExceptionEvent(exp,\n            `Exception in ${where} getStats`,\n            LOGTAG + \".ts\",\n            0,\n            0,\n            true,\n            \"getStats\");\n    }\n\n    private finalizeGetStats(): void {\n        this.pendingStats = false;\n    }\n\n    private processGarbageCollectionStats() {\n        let memoryInfo = (performance as any).memory;\n        if (!memoryInfo) {\n            return;\n        }\n\n        const currentUsedHeapSize = memoryInfo.usedJSHeapSize;\n        const currentTotalHeapSize = memoryInfo.totalJSHeapSize;\n\n        let deltaUsedHeapSize = currentUsedHeapSize - this.usedHeapSize;\n        let deltaTotalHeapSize = currentTotalHeapSize - this.totalHeapSize;\n\n        this.usedHeapSize = currentUsedHeapSize;\n        this.totalHeapSize = currentTotalHeapSize;\n\n        // only report when there is a decrease in heap size\n        if (deltaUsedHeapSize >= 0 && deltaTotalHeapSize >= 0) {\n            return;\n        }\n        RagnarokProfiler.addGarbageCollectionStats(deltaUsedHeapSize, deltaTotalHeapSize);\n    }\n\n    public getFramesDecoded() {\n        return this.videoFramesDecoded;\n    }\n\n    public getVideoCodec() {\n        return this.videoCodecType;\n    }\n    public getAudioCodec() {\n        return this.audioCodecType;\n    }\n\n    public packetsReceived() {\n        return this.videoPacketsReceived;\n    }\n\n    public getIceStats(): IceConnectionStats | undefined {\n        const handleNan = (x: number) => (isNaN(x) ? -1 : x);\n\n        if (this.iceStats.length < 2) {\n            return undefined;\n        }\n        const oldPair = this.iceStats[0];\n        const newPair = this.iceStats[this.iceStats.length - 1];\n        return {\n            recentRequestsSent: handleNan(\n                newPair.requestsSent -\n                    oldPair.requestsSent +\n                    newPair.consentRequestsSent -\n                    oldPair.consentRequestsSent\n            ),\n            recentResponsesReceived: handleNan(\n                newPair.responsesReceived - oldPair.responsesReceived\n            ),\n            recentPacketsReceived: handleNan(newPair.packetsReceived - oldPair.packetsReceived)\n        };\n    }\n\n    public getCandidatePairError(): RErrorCode | undefined {\n        if (!this.reportCache) {\n            return undefined;\n        }\n        let totalRequestsSent = 0;\n        let totalResponsesReceived = 0;\n        // Currently OneSDK doesn't send any STUN requests, only responses. When OneSDK fully implements ICE, we will\n        // be able to interpret not receiving any requests as an error\n        let _totalRequestsReceived = 0;\n        let _totalResponsesSent = 0;\n        let totalNominatedPairs = 0;\n        let totalSucceededPairs = 0;\n        for (const stat of this.reportCache.values()) {\n            if (stat.type === \"candidate-pair\") {\n                const pair = <RTCIceCandidatePairStatsExtras>stat;\n                totalRequestsSent += pair.requestsSent + pair.consentRequestsSent;\n                totalResponsesReceived += pair.responsesReceived;\n                _totalRequestsReceived += pair.requestsReceived;\n                _totalResponsesSent += pair.responsesSent;\n                if (pair.nominated) {\n                    totalNominatedPairs++;\n                }\n                if (pair.state === \"succeeded\") {\n                    totalSucceededPairs++;\n                }\n            }\n        }\n\n        Log.i(\"{5cea617}\", \"{47c0ce7}\", totalRequestsSent, totalResponsesReceived);\n\n        if (totalRequestsSent > 0 && totalResponsesReceived === 0) {\n            return RErrorCode.StreamerNoStunResponsesReceived;\n        } else if (!totalNominatedPairs) {\n            return RErrorCode.StreamerNoNominatedCandidatePairs;\n        } else if (!totalSucceededPairs) {\n            return RErrorCode.StreamerNoSucceededCandidatePairs;\n        }\n        return undefined;\n    }\n\n    public getCandidateStatCategoryCounts(): IceCandidateCategoryCounts {\n        let candidateCounts = new IceCandidateCategoryCounts();\n\n        if (!this.reportCache) {\n            return candidateCounts;\n        }\n\n        for (const stat of this.reportCache.values()) {\n            if (stat.type === \"local-candidate\") {\n                const candidateStat = <RTCIceCandidateStats>stat;\n                const category = getIceCandidateCategory(candidateStat);\n                candidateCounts.set(category, candidateCounts.get(category)! + 1);\n            }\n        }\n\n        return candidateCounts;\n    }\n\n    public getCandidateAddressRanges(): Set<PrivateIPv4Range> {\n        let candidateAddressRanges = new Set<PrivateIPv4Range>();\n\n        if (!this.reportCache) {\n            return candidateAddressRanges;\n        }\n\n        for (const stat of this.reportCache.values()) {\n            if (stat.type === \"local-candidate\") {\n                const candidateStat = <RTCIceCandidateStats>stat;\n                if (getIceCandidateCategory(candidateStat) === IceCandidateCategory.IPV4) {\n                    const candidateRange = getIceCandidateAddressRange(candidateStat);\n                    if (candidateRange !== PrivateIPv4Range.UNKNOWN) {\n                        // don't count unknown ranges, because they could be public IPs\n                        candidateAddressRanges.add(candidateRange);\n                    }\n                }\n            }\n        }\n\n        return candidateAddressRanges;\n    }\n\n    private async updateDisplayResolution() {\n        const physicalResolution = GetPhysicalResolution();\n        const logicalResolution = GetLogicalResolution();\n        const videoFramesDecoded = this.videoFramesDecoded;\n\n        const isEqual = (x: Resolution, y: Resolution) => {\n            return x.width === y.width && x.height === y.height;\n        };\n\n        if (\n            isEqual(physicalResolution, this.physicalResolution) &&\n            isEqual(logicalResolution, this.logicalResolution)\n        ) {\n            return;\n        }\n\n        this.physicalResolution = physicalResolution;\n        this.logicalResolution = logicalResolution;\n        const refreshRate = await CapabilitiesHelper.getRefreshRate();\n\n        const ETWS_DISPLAY_RESOLUTION = `Stream[0]: Client display[-1] resolution : {physical : ${GetResolutionString(\n            physicalResolution\n        )}@${refreshRate}, logical : ${GetResolutionString(\n            logicalResolution\n        )}@${refreshRate}} at frame#${videoFramesDecoded}`;\n\n        Log.i(\"{5cea617}\", \"{0b0c6f9}\", ETWS_DISPLAY_RESOLUTION);\n        this.callbacks.writeEtwPrint(ETWS_DISPLAY_RESOLUTION);\n    }\n\n    public getLdatHandler(): ILDATHandler | undefined {\n        return this.ldat;\n    }\n}\n\n/**\n * @param candidate Ice candidate or candidate stat to check the candidate category of\n * @return Category of the ice candidate\n */\nexport function getIceCandidateCategory(\n    candidate: RTCIceCandidate | RTCIceCandidateStats\n): IceCandidateCategory {\n    if (candidate.protocol === \"tcp\") {\n        return IceCandidateCategory.TCP;\n    }\n    const address = candidate.address || candidate.relatedAddress;\n    if (!address) {\n        return IceCandidateCategory.UNKNOWN;\n    } else if (address.endsWith(\".local\")) {\n        return IceCandidateCategory.MDNS;\n    } else if (address.indexOf(\":\") !== -1) {\n        return IceCandidateCategory.IPV6;\n    } else {\n        return IceCandidateCategory.IPV4;\n    }\n}\n\n/**\n * @param candidate Ice candidate or candidate stat to check the address range of\n * @return Private IPv4 range the candidate falls into, or undefined if it does not fall into a category\n */\nexport function getIceCandidateAddressRange(\n    candidate: RTCIceCandidate | RTCIceCandidateStats\n): PrivateIPv4Range {\n    const address = candidate.address || candidate.relatedAddress;\n    const octets = address?.split(\".\");\n    if (octets?.length === 4) {\n        const firstOctet = parseInt(octets[0]);\n        const secondOctet = parseInt(octets[1]);\n        if (!isNaN(firstOctet) && !isNaN(secondOctet)) {\n            let range = PrivateIPv4Range.UNKNOWN;\n            if (firstOctet === 10) {\n                // 10/8: first octet must be 10\n                range = PrivateIPv4Range.TEN;\n            } else if (firstOctet === 192 && secondOctet === 168) {\n                // 192.168/16: first two octets must be 192 and 168\n                range = PrivateIPv4Range.ONENINETWO;\n            } else if (firstOctet === 172 && (secondOctet & 0xf0) === 16) {\n                // 172.16/12: first octet must be 172 and the top four bits of the second octet must be 16\n                range = PrivateIPv4Range.ONESEVENTWO;\n            }\n            if (range !== PrivateIPv4Range.UNKNOWN) {\n                Log.d(\"{5cea617}\", \"{343589d}\", range);\n            }\n            return range;\n        }\n    }\n    Log.i(\"{5cea617}\", \"{fa2d6b9}\");\n    return PrivateIPv4Range.UNKNOWN;\n}\n","import { StatsHeader, WebSocketClose, WebSocketMsg, WorkerResponse } from \"./rinterfaces\";\nimport {\n    Perf,\n    ClientEvent,\n    WorkerMessage,\n    StreamingQualityWithTs,\n    MtbDuration,\n    InputChannelStats,\n    GarbageCollectionStats\n} from \"./ragnarokprofiler\";\n\nimport { WebrtcBinaryStats } from \"./stats/webrtcbinarystats\";\nimport { WebSocketImpl } from \"./websocketimpl\";\n\nconst ctx: Worker = self as any;\n\n/* This worker thread periodically uploads the browser perf and other metrics at regular interval to the server.\n   Protocol Description: https://confluence.nvidia.com/display/GAMESTREAM/Browser+Stats+Wire+Protocol\n   Note:  The initial version of this file had RagnarokWorker class but unfortunately the setInterval call\n   to the member function of the class did not work. Couldn't figure out the reason.\n   The same code in mainthread worked. Hence removed class and split everything into functions for now.\n*/\nconst ChunkHeaderSize = 9;\nconst PerfEntrySize = 13;\nconst EventEntrySize = 72;\nconst UploadInterval = 5000;\nconst StreamingQualityEntrySize = 12;\nconst MtbDurationSize = 10;\nconst InputChannelEntrySize = 12;\nconst GarbageCollectionEntrySize = 16;\n\nlet perfs: Perf[] = [];\nlet clientEvents: ClientEvent[] = [];\nlet webrtcBinaryStats: WebrtcBinaryStats = new WebrtcBinaryStats();\nlet sessionId: string = \"\"; // SessionId\nlet url: string = \"\"; // Connection URL for WebSocket.\nlet statsHeaderObj: StatsHeader | null = null;\nlet webSocket: WebSocketImpl | undefined = undefined;\nlet uploadIntervalId: number = 0; // Timer Id\nlet streamingQuality: StreamingQualityWithTs[] = [];\nlet mtbDurations: MtbDuration[] = [];\nlet inputChannelStats: InputChannelStats[] = [];\nlet garbageCollectionStats: GarbageCollectionStats[] = [];\nlet serverSupportsAck = false;\nlet nextAckIdToSendForStats = 0;\n\nfunction workerLogger(logmsg: string) {\n    let msg: WorkerResponse = {\n        log: logmsg\n    };\n    ctx.postMessage(msg);\n}\n\n/* Right now we are uploading only exception message.\n   Once the exception handler is re-factored we can collect more data.\n*/\nfunction workerException(expmsg: string) {\n    let msg: WorkerResponse = {\n        exception: expmsg\n    };\n    ctx.postMessage(msg);\n}\n\nfunction clearCachedData() {\n    perfs = [];\n    clientEvents = [];\n    webrtcBinaryStats.resetLists();\n    streamingQuality = [];\n    mtbDurations = [];\n    inputChannelStats = [];\n    garbageCollectionStats = [];\n}\n\nfunction writeChunkHeader(\n    dataBufferView: DataView,\n    offset: number,\n    chunkType: string,\n    version: number,\n    elementCount: number,\n    sizeOfElement: number\n) {\n    for (let i = 0; i < 4; i++) {\n        dataBufferView.setUint8(offset + i, chunkType.charCodeAt(i));\n    }\n    dataBufferView.setUint8(offset + 4, version);\n    dataBufferView.setUint16(offset + 5, elementCount, true);\n    dataBufferView.setUint16(offset + 7, sizeOfElement, true);\n}\n\nfunction writePerf(dataBufferView: DataView, offset: number) {\n    for (let i = 0; i < perfs.length; i++) {\n        dataBufferView.setFloat64(offset, perfs[i].RAFTS, true);\n        /* The below values are in millisec.microsec format. Covert into microsec.\n           In order to reduce the upload bytes size collecting as UInt16 ~ 65msec. */\n        dataBufferView.setUint16(offset + 8, Math.min(perfs[i].DCSend * 1000, 0xffff), true);\n        dataBufferView.setUint16(offset + 10, Math.min(perfs[i].GetStats * 1000, 0xffff), true);\n        dataBufferView.setUint8(offset + 12, perfs[i].FrameInfo);\n        offset += PerfEntrySize;\n    }\n}\n\nfunction writeSqScore(dataBufferView: DataView, offset: number) {\n    for (let i = 0; i < streamingQuality.length; i++) {\n        dataBufferView.setUint8(offset, streamingQuality[i].qualityScore);\n        dataBufferView.setUint8(offset + 1, streamingQuality[i].bandwidthScore);\n        dataBufferView.setUint8(offset + 2, streamingQuality[i].latencyScore);\n        dataBufferView.setUint8(offset + 3, streamingQuality[i].networkLossScore);\n        dataBufferView.setFloat64(offset + 4, streamingQuality[i].timestamp, true);\n        offset += StreamingQualityEntrySize;\n    }\n}\n\nfunction writeClientEvents(dataBufferView: DataView, offset: number) {\n    for (let i = 0; i < clientEvents.length; i++) {\n        dataBufferView.setFloat64(offset, clientEvents[i].TS, true);\n        offset = offset + 8;\n        let eventstr = clientEvents[i].eventtype;\n        let j = 0;\n        for (; j < eventstr.length && j < 63; j++) {\n            dataBufferView.setUint8(offset + j, eventstr.charCodeAt(j));\n        }\n        dataBufferView.setUint8(offset + j, 0x00);\n        offset = offset + 64;\n    }\n}\n\nfunction writeBlockedDurations(dataBufferView: DataView, offset: number) {\n    // Send values in milliseconds, not us as other times (getstats, DC send).\n    // Gives greater usable range on the server - scaling to us would\n    // limit the range to 50-65ms, with everything larger reported as 0xffff.\n    for (let i = 0; i < mtbDurations.length; i++) {\n        dataBufferView.setFloat64(offset, mtbDurations[i].timestamp, true);\n        dataBufferView.setUint16(offset + 8, Math.min(mtbDurations[i].duration, 0xffff), true);\n        offset = offset + MtbDurationSize;\n    }\n}\n\nfunction writeInputChannelStats(dataBufferView: DataView, offset: number) {\n    for (let i = 0; i < inputChannelStats.length; i++) {\n        dataBufferView.setFloat64(offset, inputChannelStats[i].timestamp, true);\n        dataBufferView.setUint16(\n            offset + 8,\n            Math.min(inputChannelStats[i].bufferedAmount, 0xffff),\n            true\n        );\n        dataBufferView.setUint16(\n            offset + 10,\n            Math.min(inputChannelStats[i].maxSchedulingDelay, 0xffff),\n            true\n        );\n        offset += InputChannelEntrySize;\n    }\n}\n\nfunction asInt32(num: number): number {\n    if (num < 0) {\n        return Math.max(num, -0x80000000);\n    }\n    return Math.min(num, 0xffffffff);\n}\n\nfunction writeGarbageCollectionStats(dataBufferView: DataView, offset: number) {\n    for (let i = 0; i < garbageCollectionStats.length; i++) {\n        dataBufferView.setFloat64(offset, garbageCollectionStats[i].timestamp, true);\n        dataBufferView.setInt32(\n            offset + 8,\n            asInt32(garbageCollectionStats[i].deltaUsedHeapSize),\n            true\n        );\n        dataBufferView.setInt32(\n            offset + 12,\n            asInt32(garbageCollectionStats[i].deltaTotalHeapSize),\n            true\n        );\n        offset += GarbageCollectionEntrySize;\n    }\n}\n\nfunction uploadData() {\n    if ((perfs.length || clientEvents.length) && statsHeaderObj) {\n        try {\n            statsHeaderObj.ackid = serverSupportsAck ? nextAckIdToSendForStats : undefined;\n            const header = JSON.stringify(statsHeaderObj);\n            const len = header.length;\n            const totalLen = len + 2; // 2 bytes for the size of the header.\n            const headerBytesBuffer = new ArrayBuffer(totalLen);\n            const headerView = new DataView(headerBytesBuffer);\n            headerView.setUint16(0, len);\n            for (var i = 2; i < totalLen; ++i) {\n                headerView.setUint8(i, header.charCodeAt(i - 2));\n            }\n            const headerBufferBytes = new Uint8Array(headerBytesBuffer);\n            const perfDataSize = PerfEntrySize * perfs.length;\n            const eventsDataSize = EventEntrySize * clientEvents.length;\n            const sqEventsDataSize = StreamingQualityEntrySize * streamingQuality.length;\n            const durationDataSize = MtbDurationSize * mtbDurations.length;\n            const inputChannelDataSize = InputChannelEntrySize * inputChannelStats.length;\n            const garbageCollectionDataSize =\n                GarbageCollectionEntrySize * garbageCollectionStats.length;\n            let totalSize = ChunkHeaderSize + headerBufferBytes.length;\n            if (perfDataSize) {\n                totalSize += ChunkHeaderSize + perfDataSize;\n            }\n            if (eventsDataSize) {\n                totalSize += ChunkHeaderSize + eventsDataSize;\n            }\n            if (sqEventsDataSize) {\n                totalSize += ChunkHeaderSize + sqEventsDataSize;\n            }\n            if (durationDataSize) {\n                totalSize += ChunkHeaderSize + durationDataSize;\n            }\n            if (inputChannelDataSize) {\n                totalSize += ChunkHeaderSize + inputChannelDataSize;\n            }\n            if (garbageCollectionDataSize) {\n                totalSize += ChunkHeaderSize + garbageCollectionDataSize;\n            }\n\n            totalSize += webrtcBinaryStats.size();\n            const dataBuffer = new ArrayBuffer(totalSize);\n            const dataBufferView = new DataView(dataBuffer);\n            let offset = 0;\n            new Uint8Array(dataBuffer).set(headerBufferBytes);\n            offset += headerBufferBytes.length;\n            writeChunkHeader(dataBufferView, offset, \"BPRF\", 1, 0, 0);\n            offset += ChunkHeaderSize;\n            if (perfDataSize) {\n                writeChunkHeader(dataBufferView, offset, \"PERF\", 2, perfs.length, PerfEntrySize);\n                offset += ChunkHeaderSize;\n                writePerf(dataBufferView, offset);\n                offset += perfDataSize;\n            }\n            if (eventsDataSize) {\n                writeChunkHeader(\n                    dataBufferView,\n                    offset,\n                    \"EVNT\",\n                    1,\n                    clientEvents.length,\n                    EventEntrySize\n                );\n                offset += ChunkHeaderSize;\n                writeClientEvents(dataBufferView, offset);\n                offset += eventsDataSize;\n            }\n            if (sqEventsDataSize) {\n                writeChunkHeader(\n                    dataBufferView,\n                    offset,\n                    \"SQEV\",\n                    1,\n                    streamingQuality.length,\n                    StreamingQualityEntrySize\n                );\n\n                offset += ChunkHeaderSize;\n                writeSqScore(dataBufferView, offset);\n                offset += sqEventsDataSize;\n            }\n            if (durationDataSize) {\n                writeChunkHeader(\n                    dataBufferView,\n                    offset,\n                    \"MTBD\",\n                    1,\n                    mtbDurations.length,\n                    MtbDurationSize\n                );\n                offset += ChunkHeaderSize;\n                writeBlockedDurations(dataBufferView, offset);\n                offset += durationDataSize;\n            }\n            if (inputChannelDataSize) {\n                writeChunkHeader(\n                    dataBufferView,\n                    offset,\n                    \"INPT\",\n                    1,\n                    inputChannelStats.length,\n                    InputChannelEntrySize\n                );\n                offset += ChunkHeaderSize;\n                writeInputChannelStats(dataBufferView, offset);\n                offset += inputChannelDataSize;\n            }\n            if (garbageCollectionDataSize) {\n                writeChunkHeader(\n                    dataBufferView,\n                    offset,\n                    \"GRBG\",\n                    1,\n                    garbageCollectionStats.length,\n                    GarbageCollectionEntrySize\n                );\n                offset += ChunkHeaderSize;\n                writeGarbageCollectionStats(dataBufferView, offset);\n                offset += garbageCollectionDataSize;\n            }\n\n            let buffer = new Uint8Array(dataBuffer);\n            webrtcBinaryStats.write(buffer, offset);\n            webSocket?.send({\n                stats: dataBuffer,\n                ackid: serverSupportsAck ? nextAckIdToSendForStats : undefined\n            });\n        } catch (err) {\n            workerException(\n                \"Exception in perf/stats upload. Error : \" + err.message + \" stack: \" + err.stack\n            );\n        }\n    }\n    clearCachedData();\n}\n\nfunction wsMessageHandler(data: WebSocketMsg) {\n    if (!serverSupportsAck && data.ackid !== undefined) {\n        serverSupportsAck = true;\n    }\n    const response: WorkerResponse = { wsMessage: data };\n    ctx.postMessage(response);\n}\n\nfunction wsCloseHandler(data: WebSocketClose) {\n    const response: WorkerResponse = { wsClose: data };\n    ctx.postMessage(response);\n}\n\nfunction wsOpenHandler() {\n    const response: WorkerResponse = { wsOpen: true };\n    ctx.postMessage(response);\n}\n\nfunction wsOpeningHandler() {\n    const response: WorkerResponse = { wsOpening: true };\n    ctx.postMessage(response);\n}\n\nfunction createWebSocket(maxReceivedAckId: number, reconnect?: boolean) {\n    webSocket = new WebSocketImpl(sessionId, \"\", {\n        wsHandler: {\n            messageHandler: wsMessageHandler,\n            openHandler: wsOpenHandler,\n            closeHandler: wsCloseHandler,\n            openingHandler: wsOpeningHandler\n        },\n        logCallback: {\n            info: workerLogger,\n            exception: workerException\n        }\n    });\n    webSocket.initialize(url, maxReceivedAckId, serverSupportsAck, reconnect);\n    wsOpeningHandler();\n}\n\nctx.onmessage = function (message: MessageEvent) {\n    try {\n        const data: WorkerMessage = message.data;\n        if (data.initMessage) {\n            sessionId = data.initMessage.sessionId;\n            workerLogger(\"{6ccab8d}\");\n        } else if (data.perf) {\n            perfs.push(data.perf);\n        } else if (data.clientEvent) {\n            clientEvents.push(data.clientEvent);\n        } else if (data.startStats) {\n            statsHeaderObj = data.startStats.statsHeader;\n            const response: WorkerResponse = {\n                statsStarted: true\n            };\n            // keep uploading performance data every 5 seconds.\n            uploadIntervalId = self.setInterval(() => uploadData(), UploadInterval);\n            ctx.postMessage(response);\n            workerLogger(\"{5209d98}\");\n        } else if (data.stopStats) {\n            self.clearInterval(uploadIntervalId);\n            uploadData();\n            clearCachedData();\n            workerLogger(\"{b58b6ad}\");\n        } else if (data.webrtcStats) {\n            if (data.ackid) {\n                nextAckIdToSendForStats = data.ackid;\n            }\n            if (data.webrtcStats.stats) {\n                webrtcBinaryStats.addReport(data.webrtcStats);\n            }\n        } else if (data.sq) {\n            streamingQuality.push(data.sq);\n        } else if (data.startWebSocket) {\n            url = data.startWebSocket.signInURL;\n            serverSupportsAck = data.startWebSocket.serverSupportsAck;\n            createWebSocket(data.startWebSocket.maxReceivedAckId, data.startWebSocket.reconnect);\n        } else if (data.stopWebSocket) {\n            webSocket?.uninitialize();\n            serverSupportsAck = false;\n        } else if (data.send) {\n            webSocket?.send(data.send);\n        } else if (data.duration) {\n            mtbDurations.push(data.duration);\n        } else if (data.inputChannelStats) {\n            inputChannelStats.push(data.inputChannelStats);\n        } else if (data.garbageCollectionStats) {\n            garbageCollectionStats.push(data.garbageCollectionStats);\n        }\n    } catch (exp) {\n        workerException(\"Worker onmessage exception: \" + exp);\n    }\n};\n","import {\n    IsiPhone,\n    IsiPad,\n    GetHexString,\n    IsiDevice,\n    PlatformDetails,\n    CodecType,\n    BooleanType,\n    ResumeType,\n    IsWindowsOS,\n    IsMacOS,\n    IsLinuxOS,\n    IsChromeOS,\n    IsiOSVersionAtLeast,\n    BrowserName,\n    IsChromium,\n    Log\n} from \"../dependencies\";\nimport {\n    Resolution,\n    StreamingResolution,\n    StreamingProfilePreset,\n    StreamingSettings,\n    BrowserFeature\n} from \"../interfaces\";\nimport { RagnarokSettings } from \"./settings\";\nimport { RErrorCode } from \"../rerrorcode\";\nimport { RagnarokProfiler } from \"../ragnarokprofiler\";\n\nconst LOGTAG = \"utils\";\n\n/************************************ Utils Exposed to Client ******************************************/\n\n/**\n * DEPRECATED - Use GetDeviceCapabilities instead\n * Returns the streaming resolution to request from the server given\n * the active screen dimensions.\n * This API may not take device capabilities into account if they have not been cached.\n * If device capability needs to be taken into account, AreVideoSettingsSupported should be\n * used to remove unsupported resolutions from candidateResolutions prior to calling this API.\n * @param streamingProfilePreset - StreamingProfilePreset\n        enum<chosen streaming profile>\n        If Balanced, will choose highest resolution, else will choose lowest\n * @param candidateResolutions - StreamingResolution[]\n        Object<width, height>\n        List of resolutions to consider for streaming\n        If empty, recommended resolution will come from a hardcoded list\n * @return - StreamingResolution\n     Recommended resolution to stream at given the active screen dimensions.\n**/\nexport function ChooseStreamingResolution(\n    streamingProfilePreset: StreamingProfilePreset = StreamingProfilePreset.BALANCED,\n    candidateResolutions?: StreamingResolution[]\n): StreamingResolution {\n    const candidateSettings = candidateResolutions?.map(res => {\n        return { resolution: res, frameRate: 60 };\n    });\n    const selectedSettings = ChooseStreamingSettingsImpl(\n        streamingProfilePreset,\n        candidateSettings,\n        GetStreamingSettingsExceptions(),\n        screen.width,\n        screen.height\n    );\n    return selectedSettings.resolution;\n}\n\n/**\n * DEPRECATED - Use GetDeviceCapabilities instead\n * Returns the streaming resolution to request from the server given the active screen dimensions.\n * This API may not take device capabilities into account if they have not been cached.\n * Should call InitializeUtils prior to this to guarantee capabilities are taken into account.\n * @param streamingProfilePreset - StreamingProfilePreset\n     enum<chosen streaming profile>\n     If Balanced, will choose highest resolution, else will choose lowest\n * @param candidateSettings - StreamingSettings[]\n     Object<Object<width, height>, frameRate>\n     List of resolutions and frame rates to consider for streaming\n     If empty, recommended resolution will come from a hardcoded list\n * @param platformDetails - PlatformDetails\n     Obtained from GetPlatformDetails\n * @return - StreamingSettings\n     Recommended stream settings at given the active screen dimensions and device capabilities.\n **/\nexport function ChooseStreamingSettings(\n    streamingProfilePreset: StreamingProfilePreset = StreamingProfilePreset.BALANCED,\n    candidateSettings: StreamingSettings[],\n    platformDetails: PlatformDetails\n): StreamingSettings {\n    return ChooseStreamingSettingsImpl(\n        streamingProfilePreset,\n        candidateSettings,\n        GetStreamingSettingsExceptions(platformDetails),\n        screen.width,\n        screen.height\n    );\n}\n\n/**\n * Calculate the recommended max streaming bitrate in Kbps given the streaming resolution and fps.\n * @param width - number\n *   streaming resolution width\n * @param height - number\n *   streaming resolution height\n * @param fps - number\n *   streaming resolution fps\n * @return - number\n *   the recommended max streaming bitrate\n */\nexport function CalculateMaxBitrateKbps(width: number, height: number, fps: number): number {\n    const bIsResolution1440p = IsResolution1440p(width, height);\n    const bIsResolution4k = IsResolution4k(width, height);\n\n    const MULTIPLIER_30_FPS = 1.25;\n    const adjustedFps = fps === 30 ? fps * MULTIPLIER_30_FPS : Math.min(fps, 60);\n\n    let bitsPerPixel = 0;\n\n    let maxRateKbps = width * height * adjustedFps;\n    if (bIsResolution1440p || bIsResolution4k) {\n        bitsPerPixel =\n            RagnarokSettings.bitsPerPixel1440p ??\n            RagnarokSettings.ragnarokConfig.bitsPerPixel1440p ??\n            0.325;\n\n        let maxRateKbps1080p = MODE_1080P_WIDTH * MODE_1080P_HEIGHT * adjustedFps;\n\n        let maxRateKbps1440p = MODE_1440P_WIDTH * MODE_1440P_HEIGHT * adjustedFps;\n        maxRateKbps1440p = maxRateKbps1080p + (maxRateKbps1440p - maxRateKbps1080p) / 3;\n\n        if (bIsResolution4k) {\n            maxRateKbps = maxRateKbps1440p + (maxRateKbps - maxRateKbps1440p) / 12;\n        } else {\n            maxRateKbps = maxRateKbps1080p + (maxRateKbps - maxRateKbps1080p) / 3;\n        }\n    } else {\n        bitsPerPixel =\n            RagnarokSettings.bitsPerPixel ?? RagnarokSettings.ragnarokConfig.bitsPerPixel ?? 0.3;\n    }\n\n    const BITRATE_ADJUSTMENT_FACTOR = 1.2;\n    maxRateKbps = (maxRateKbps * bitsPerPixel) / (BITRATE_ADJUSTMENT_FACTOR * 1000);\n\n    if (fps >= 120 && !bIsResolution4k) {\n        maxRateKbps = Math.min(50000, Math.round(maxRateKbps * 1.15));\n    }\n\n    return Math.round(maxRateKbps);\n}\n\n/**\n * Calculate estimated data usage for a given combination of fps and bitrateKbps values\n * @param fps - number\n     Streaming refresh rate\n * @param bitrateKbps - number\n     Streaming bitrate in Kbps\n * @return - number\n     Data usage Estimation in GB per hour.\n**/\nexport function CalculateDataUsage(fps: number, bitrateKbps: number) {\n    // Streaming Bitrate formula (data usage estimate):\n    // Default Mode [60Hz]\n    //     streamingBitrate = 0.678*maxBitrate + 910569\n    // Turbo Mode [120Hz]\n    //     streamingBitrate  = 0.916*maxBitrate + 293098\n    // Note:\n    //  streamingBitrate and maxBitrate should be in the units of [bps: bits per seconds]\n    //  GBph [Giga Bytes per hour] = (bps * 3600 * 10^-9) / 8\n    //  Mbps [Mega Bits per sec] = (bps * 10^-6)\n    //  GBph@30Hz = 0.625 * GBph@60Hz\n\n    const A60 = 0.678;\n    const A120 = 0.916;\n    const B60 = 910569;\n    const B120 = 293098;\n    const adjust30 = 0.625;\n    const multiplyFactor = 0.95;\n    const bitratebps = bitrateKbps * 1000;\n\n    const streamingBitrate = fps === 120 ? A120 * bitratebps + B120 : A60 * bitratebps + B60;\n    // convert bps to GB:   GBph [Giga Bytes per hour] = (bps * 3600 * 10^-9) / 8\n    let dataUsageGB = (streamingBitrate * 3600) / 1000000000 / 8;\n\n    if (fps === 30) {\n        dataUsageGB = dataUsageGB * adjust30;\n    }\n\n    // round data usage to integer\n    dataUsageGB = dataUsageGB * multiplyFactor;\n    dataUsageGB = Math.round(dataUsageGB);\n\n    return dataUsageGB;\n}\n\n/**\n * Initialize the utility functions\n * Client should call prior to using other utility APIs\n * If not called, other APIs will still work but may take longer or return less accurate results\n */\nexport function InitializeUtils() {\n    for (const task of tasksToRunOnInit) {\n        task();\n    }\n}\n\n/**\n * Checks whether or not the device supports a given feature\n * @param browserFeature - BrowserFeature\n     enum<feature to check>\n     See definition in interfaces.ts for supported feature checks\n     If value is not part of defined enums, will return false\n * @param platformDetails - PlatformDetails\n     Obtained from GetPlatformDetails\n * @return - boolean\n     Whether or not the device supports the specified feature\n**/\nexport function IsFeatureSupported(\n    browserFeature: BrowserFeature,\n    platformDetails: PlatformDetails\n): boolean {\n    switch (browserFeature) {\n        case BrowserFeature.Streaming:\n            return IsGamestreamSupported(platformDetails);\n        default:\n            return false;\n    }\n}\n\n/**\n * This method returns the channel count supported by default device of client.\n * @return Channel count - 2(STEREO), 6(SURROUND_5_1) or 8(SURROUND_7_1)\n * This will be depricated with Async call\n **/\nexport function GetSupportedAudioChannelCount(): number {\n    const audioCtx = GetAudioContext();\n    if (audioCtx) {\n        const channelCount = audioCtx.destination.maxChannelCount;\n        audioCtx.close();\n        Log.i(\"{d988e7f}\", \"{fa78e0a}\", channelCount);\n        return channelCount;\n    } else {\n        Log.w(\"{d988e7f}\", \"{d018fac}\");\n        return 2;\n    }\n}\n\n/**\n * This method returns the channel count supported by default device of client.\n * @return Channel count - 2(STEREO), 6(SURROUND_5_1) or 8(SURROUND_7_1)\n **/\nexport async function GetSupportedAudioChannelCountAsync(): Promise<number> {\n    const audioCtx = GetAudioContext();\n    if (audioCtx) {\n        const channelCount = audioCtx.destination.maxChannelCount;\n        audioCtx.close();\n        Log.i(\"{d988e7f}\", \"{fa78e0a}\", channelCount);\n        const maxMungePossible = await mungingTest();\n        return Math.min(channelCount, maxMungePossible);\n    } else {\n        Log.w(\"{d988e7f}\", \"{d018fac}\");\n        return 2;\n    }\n}\n\n/************************************ Utils Exposed to Client (END) ******************************************/\n\n/************************************ Internal Utils ******************************************/\n\n// Limit resolutions to be constrained to closest aspect ratio and max resolution.\n// We can happily letterbox or pillarbox as needed, but we\n// don't want to miss selecting a resolution because it is too large\n// in one dimension or another for streaming.\nfunction LimitResolution(\n    resolution: [number, number],\n    limits: [number, number][]\n): [number, number] {\n    if (limits.length == 0) return resolution;\n\n    class AspectRatio {\n        public w: number;\n        public h: number;\n        public a: number;\n        constructor(w: number, h: number) {\n            this.w = w;\n            this.h = h;\n            this.a = w / h;\n        }\n        public clip(f: AspectRatio) {\n            if (Math.abs(f.a - this.a) < 0.05) return f;\n\n            if (f.a > this.a) {\n                // f is wider than this, clip sides\n                // stream will be letterboxed\n                return new AspectRatio(Math.floor(f.w * (this.a / f.a)), f.h);\n            } else {\n                // f is wider than this, clip top/bottom\n                // stream will be pillarboxed\n                return new AspectRatio(f.w, Math.floor(f.h * (f.a / this.a)));\n            }\n        }\n        public toTuple(): [number, number] {\n            return [this.w, this.h];\n        }\n    }\n\n    const ratios = limits.map(a => new AspectRatio(a[0], a[1]));\n\n    const r = new AspectRatio(resolution[0], resolution[1]);\n    let b = ratios[0];\n    for (let i = 1; i < ratios.length; i++) {\n        let a = ratios[i];\n        let rd = Math.abs(r.a - a.a);\n        let bd = Math.abs(r.a - b.a);\n\n        if (rd < bd) {\n            b = a;\n        }\n    }\n\n    const clipped = b.clip(r);\n\n    // Limit to max if appropriate\n    if (clipped.w > b.w) {\n        return b.toTuple();\n    }\n\n    return clipped.toTuple();\n}\n\nexport function MakeLandscapeResolution(res: [number, number]): [number, number] {\n    if (res[0] < res[1]) {\n        return [res[1], res[0]];\n    }\n    return res;\n}\n\n/**\n * Enum that specifies which exceptions should be made during streaming settings selection\n * Can have multiple exceptions, by ORing exceptions together\n */\nexport const enum StreamingSettingsException {\n    NONE = 0x00,\n    IPHONE = 0x01,\n    IPAD = 0x02,\n    TIZEN4K = 0x04,\n    WEBOS4K = 0x08\n}\n\nexport function ChooseStreamingSettingsImpl(\n    streamingProfilePreset: StreamingProfilePreset,\n    candidateSettings: StreamingSettings[] | undefined,\n    exception: StreamingSettingsException,\n    screenWidth: number,\n    screenHeight: number\n): StreamingSettings {\n    const iPhone = !!(exception & StreamingSettingsException.IPHONE);\n    const iPad = !!(exception & StreamingSettingsException.IPAD);\n    const tizen4k = !!(exception & StreamingSettingsException.TIZEN4K);\n    const webOs4k = !!(exception & StreamingSettingsException.WEBOS4K);\n    if (tizen4k || webOs4k) {\n        screenWidth = 3840;\n        screenHeight = 2160;\n    }\n    if (candidateSettings && candidateSettings.length > 0) {\n        [screenWidth, screenHeight] = MakeLandscapeResolution([screenWidth, screenHeight]);\n        // 13\" iPads aren't large enough to get 1600x1200 normally, but it is the best resolution since i devices are pixel dense\n        // override the dimensions to get the right resolution\n        // TODO: find a way to remove this, we don't want any hard coding on the client\n        if (\n            iPad &&\n            screenWidth >= 1366 &&\n            streamingProfilePreset === StreamingProfilePreset.BALANCED\n        ) {\n            screenWidth = 1600;\n            screenHeight = 1200;\n        }\n\n        const screenAspectRatio = screenWidth / screenHeight;\n        const screenPixelCount = screenWidth * screenHeight;\n        // only consider 120+ FPS settings if allowed (and there are non-120 FPS options)\n        const shouldAllow120Fps = false;\n        if (!shouldAllow120Fps) {\n            const filteredSettings = candidateSettings.filter(settings => settings.frameRate < 120);\n            if (filteredSettings.length) {\n                candidateSettings = filteredSettings;\n            }\n        }\n        // sort settings so that the first element is the best match\n        // 1. closest aspect ratio\n        // 2. resolution fits in the screen\n        // 3. if both meet 1 and 2, choose based on fps* then resolution**\n        // 4. if neither meets 1 and 2, choose based on resolution** then fps*\n        // *  Highest fps for balanced and competitive, only recommend 120 if allowed, lowest for datasaver\n        // ** Largest resolution for balanced preset, smallest for competitve and datasaver\n        // return: negative value if settings a should be recommended over b, positive if b over a\n        const settingsCompare = (a: StreamingSettings, b: StreamingSettings) => {\n            const aRes = a.resolution;\n            const bRes = b.resolution;\n            const aspectRatioDiff =\n                Math.abs(aRes.width / aRes.height - screenAspectRatio) -\n                Math.abs(bRes.width / bRes.height - screenAspectRatio);\n            // To minimize letter boxing, choose the closest aspect ratio\n            if (Math.abs(aspectRatioDiff) > 0.05) {\n                return aspectRatioDiff;\n            }\n            // If balanced, we want to select the largest profile with a good aspect ratio, so descending order\n            const resolutionPresetSelector =\n                streamingProfilePreset === StreamingProfilePreset.BALANCED ? -1 : 1;\n            // In datasaver, we want to select the lowest frame rate, so ascending order\n            const frameRatePresetSelector =\n                streamingProfilePreset === StreamingProfilePreset.DATASAVER ? 1 : -1;\n            const frameRateSelection = frameRatePresetSelector * (a.frameRate - b.frameRate);\n\n            const aPixelCount = aRes.width * aRes.height;\n            const bPixelCount = bRes.width * bRes.height;\n            const pixelCountDiff = aPixelCount - bPixelCount;\n\n            if (aPixelCount <= screenPixelCount) {\n                if (bPixelCount <= screenPixelCount) {\n                    // both fit in screen, choose based on preset mode\n                    if (a.frameRate !== b.frameRate) {\n                        return frameRateSelection;\n                    } else {\n                        return resolutionPresetSelector * pixelCountDiff;\n                    }\n                } else {\n                    return -1; // a fits but b doesn't, put a closer to front\n                }\n            } else if (bPixelCount <= screenPixelCount) {\n                return 1; // b fits but a doesn't, put b closer to front\n            } else {\n                // neither fit in screen, choose smallest\n                if (pixelCountDiff) {\n                    return pixelCountDiff;\n                } else {\n                    return frameRateSelection;\n                }\n            }\n        };\n\n        candidateSettings.sort(settingsCompare);\n        return candidateSettings[0];\n    } else {\n        let selectedSettings: StreamingSettings = {\n            resolution: { width: 1280, height: 720 },\n            frameRate: 60\n        };\n        if (iPhone) {\n            let [width, height] = MakeLandscapeResolution([screenWidth, screenHeight]);\n            let aspect = width / height;\n            // iPhones with notches ideally want 1376x640, and the server fallback will\n            // give them 720p.\n            //\n            // 16:9 iPhones always get 720p, this is the closest resolution we support that matches\n            // their aspect ratio. They have high enough density displays that they could show\n            // more, but if we stream that then user interface elements will appear too small.\n            // Revisit this once we have support for hidpi streaming.\n            if (aspect > 2.0) {\n                selectedSettings.resolution = { width: 1376, height: 640 };\n            }\n        } else if (iPad) {\n            if (streamingProfilePreset != StreamingProfilePreset.BALANCED) {\n                // return our lowest 4:3 resolution for datasaver and competitive presets\n                selectedSettings.resolution = { width: 1024, height: 768 };\n            } else {\n                // Similar story for iPads, if we just go by the pixels on the screen they would\n                // always get the max resolution stream, but you wouldn't be able to tap on\n                // anything. Pick a happy middle ground for them.\n                let [width, _] = MakeLandscapeResolution([screenWidth, screenHeight]);\n                if (width <= 1024) {\n                    // <= 10\" iPads\n                    selectedSettings.resolution = { width: 1024, height: 768 };\n                } else if (width < 1366) {\n                    // ~11\" iPads\n                    selectedSettings.resolution = { width: 1112, height: 834 };\n                } else {\n                    // 13\" iPad\n                    selectedSettings.resolution = { width: 1600, height: 1200 };\n                }\n            }\n        } else {\n            // Everything else (Chromebooks, PCs, etc).\n            // Clip and limit resolution\n\n            // Limits for balanced preset\n            const upperLimits: [number, number][] = [\n                [1920, 1200], // 16:10\n                [1920, 1080], // 16:9\n                [1280, 1024], // 5:4\n                [1600, 1200] // 4:3\n            ];\n\n            if (tizen4k) {\n                // add 4k to head of list\n                upperLimits.unshift([3840, 2160]);\n            }\n\n            // Limits for competitive and data saver\n            const reducedLimits: [number, number][] = [\n                [1280, 800], // 16:10\n                [1280, 720], // 16:9\n                [1280, 1024], // 5:4\n                [1024, 768] // 4:3\n            ];\n            let res: [number, number] = [screenWidth, screenHeight];\n            const limits =\n                streamingProfilePreset == StreamingProfilePreset.BALANCED\n                    ? upperLimits\n                    : reducedLimits;\n            res = LimitResolution(res, limits);\n\n            selectedSettings.resolution = { width: res[0], height: res[1] };\n        }\n        return selectedSettings;\n    }\n}\n\nexport function GetStreamingSettingsExceptions(\n    platformDetails?: PlatformDetails\n): StreamingSettingsException {\n    let exception = StreamingSettingsException.NONE;\n    if (IsiPhone(platformDetails)) {\n        exception |= StreamingSettingsException.IPHONE;\n    }\n    if (IsiPad(platformDetails)) {\n        exception |= StreamingSettingsException.IPAD;\n    }\n    // this will only be set on Tizen, and if webapis.js was loaded\n    // IsTV() won't accept NULL PlatformDetails, so just check this way.\n    if (window.webapis?.productinfo) {\n        if (window.webapis.productinfo.isUdPanelSupported()) {\n            exception |= StreamingSettingsException.TIZEN4K;\n        }\n    }\n    if (window[\"lge_webrtc_hevc_support\"]) {\n        exception |= StreamingSettingsException.WEBOS4K;\n    }\n    return exception;\n}\n\n/**\n * Checks whether or not the device supports the video settings for streaming\n * Note: Does not take monitor dimensions into account for resolutions\n * This API may not take device capabilities into account if they have not been cached.\n * Should call InitializeUtils prior to this to guarantee capabilities are taken into account.\n * @param candidateSettings - StreamingSettings[]\n     Object<Object<width, height>, frameRate>\n     List of resolutions and frame rates to check for capability\n * @param platformDetails - PlatformDetails\n     Obtained from GetPlatformDetails\n * @return - StreamingSettings[]\n     List of settings supported by the device.\n     Guaranteed to be a subset of candidateSettings.\n     Can change between subsequent calls (e.g. new monitor with new refresh rate introduced)\n**/\nexport function FilterSupportedStreamingSettings(\n    candidateSettings: StreamingSettings[],\n    platformDetails: PlatformDetails\n): StreamingSettings[] {\n    // TODO: Filter out settings based on device capabilities\n    // for now don't block anything according to current POR\n    return candidateSettings;\n}\n\nexport interface EdgeInsets {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n}\n\n// Returns the safe areas of the window\n// For example, on an iPhone, this may include insets for the notch and the home indicator\n// On an iPad, this may include insets for the status bar and possibly the home indicator\n// The results of this function will change when viewport / orientation changes.\nexport function GetSafeAreas(): EdgeInsets {\n    if (!getComputedStyle(document.documentElement)) {\n        return { top: 0, left: 0, bottom: 0, right: 0 };\n    }\n    if (!getComputedStyle(document.documentElement).getPropertyValue(\"--sat\")) {\n        document.documentElement.style.setProperty(\"--sat\", \"env(safe-area-inset-top)\");\n        document.documentElement.style.setProperty(\"--sar\", \"env(safe-area-inset-right)\");\n        document.documentElement.style.setProperty(\"--sab\", \"env(safe-area-inset-bottom)\");\n        document.documentElement.style.setProperty(\"--sal\", \"env(safe-area-inset-left)\");\n    }\n    return {\n        top: parseInt(getComputedStyle(document.documentElement).getPropertyValue(\"--sat\")),\n        left: parseInt(getComputedStyle(document.documentElement).getPropertyValue(\"--sal\")),\n        bottom: parseInt(getComputedStyle(document.documentElement).getPropertyValue(\"--sab\")),\n        right: parseInt(getComputedStyle(document.documentElement).getPropertyValue(\"--sar\"))\n    };\n}\n\nfunction clamp(v: number, lo: number, hi: number): number {\n    if (v < lo) return lo;\n    if (v > hi) return hi;\n    return v;\n}\n\nexport interface TouchPoint {\n    x: number;\n    y: number;\n}\n\nexport interface TouchPosSize {\n    clientX: number;\n    clientY: number;\n    radiusX: number;\n    radiusY: number;\n}\n\nexport function WarpTouch(touch: TouchPosSize): TouchPoint {\n    let safe = GetSafeAreas();\n    safe.top = Math.max(safe.top, 21); // always reserve status bar height at top\n    safe.bottom = clamp(safe.bottom, 0, 10); // bottom safe area on devices that have it actually reject a lot less than the height of the whole safe area.\n    let pt = { x: touch.clientX, y: touch.clientY };\n    let anchorY = 0.5;\n    if (safe.top > 0 && touch.clientY - touch.radiusY < safe.top) {\n        // Compute fraction of upper half of touch that overlaps the safe area\n        const touchTop = touch.clientY - Math.min(touch.radiusY, 21.0);\n        let frac = (safe.top - touchTop) / touch.radiusY;\n        frac = clamp(frac, 0.0, 1.0);\n        // use quadratic warp so we warp more as we get closer to edge\n        // halve frac to apply to whole touch area\n        anchorY -= 0.5 * (frac * frac);\n    } else if (\n        safe.bottom > 0 &&\n        touch.clientY + touch.radiusY > window.innerHeight - safe.bottom\n    ) {\n        // Same idea as above, but for lower half. Note that we use\n        // a smaller cap for the radius for lower half than top\n        // because it is possible to touch closer to the bottom\n        // than it is to the top.\n        const touchBottom = touch.clientY + Math.min(touch.radiusY, 10.0);\n        let frac = (touchBottom - (window.innerHeight - safe.bottom)) / touch.radiusY;\n        frac = clamp(frac, 0.0, 1.0);\n        anchorY += 0.5 * (frac * frac);\n    }\n    pt.y = clamp(pt.y - touch.radiusY + anchorY * 2.0 * touch.radiusY, 0.0, window.innerHeight);\n    return pt;\n}\n\nexport function ConvertErrorOnConnectivityTest(errorCode: number): number {\n    let newCode = errorCode;\n    if (\n        RagnarokSettings.ragnarokConfig.offlineErrorsStreaming &&\n        RagnarokSettings.ragnarokConfig.offlineErrorsStreaming.includes(GetHexString(errorCode))\n    ) {\n        newCode = RErrorCode.NoInternetDuringStreaming;\n    } else if (\n        RagnarokSettings.ragnarokConfig.offlineErrorsSessionSetup &&\n        RagnarokSettings.ragnarokConfig.offlineErrorsSessionSetup.includes(GetHexString(errorCode))\n    ) {\n        newCode = RErrorCode.NoInternetDuringSessionSetup;\n    } else {\n        switch (errorCode) {\n            case RErrorCode.StreamerIceReConnectionFailed:\n            case RErrorCode.StreamerReConnectionFailed:\n                newCode = RErrorCode.NoInternetDuringStreaming;\n                break;\n            case RErrorCode.NetworkError:\n                newCode = RErrorCode.NoInternetDuringSessionSetup;\n                break;\n        }\n    }\n\n    if (newCode !== errorCode) {\n        Log.i(\"{d988e7f}\", \"{b84d4c8}\", GetHexString(errorCode), GetHexString(newCode));\n    }\n    return newCode;\n}\n\nexport function ConvertErrorOnSleep(errorCode: number, platformDetails: PlatformDetails): number {\n    let newCode = errorCode;\n    if (\n        RagnarokSettings.ragnarokConfig.sleepErrorsStreaming &&\n        RagnarokSettings.ragnarokConfig.sleepErrorsStreaming.includes(GetHexString(errorCode))\n    ) {\n        newCode = RErrorCode.SystemSleepDuringStreaming;\n    } else if (\n        RagnarokSettings.ragnarokConfig.sleepErrorsSessionSetup &&\n        RagnarokSettings.ragnarokConfig.sleepErrorsSessionSetup.includes(GetHexString(errorCode))\n    ) {\n        newCode = RErrorCode.SystemSleepDuringSessionSetup;\n    } else {\n        switch (errorCode) {\n            case RErrorCode.StreamerIceReConnectionFailed:\n                if (IsiDevice(platformDetails)) {\n                    newCode = RErrorCode.SystemSleepDuringStreaming;\n                }\n                break;\n            case RErrorCode.ServerDisconnectedPeerRemovedByServer:\n                newCode = RErrorCode.SystemSleepDuringStreaming;\n                break;\n            case RErrorCode.InvalidSessionIdNotFound:\n                newCode = RErrorCode.SystemSleepDuringSessionSetup;\n                break;\n        }\n    }\n\n    if (newCode !== errorCode) {\n        Log.i(\"{d988e7f}\", \"{49e2182}\", GetHexString(errorCode), GetHexString(newCode));\n    }\n    return newCode;\n}\n\nexport function IsStreamingErrorCategory(errorCode: number): boolean {\n    return (RErrorCode.StreamerErrorCategory ^ errorCode) >> 8 === 0;\n}\n\nexport function ShouldRunConnectivityTest(errorCode: number): boolean {\n    return IsStreamingErrorCategory(errorCode) || errorCode === RErrorCode.NetworkError;\n}\n\n// \\todo transition to setBigUint64 after transition to es2020\nexport function setUint64(\n    value: number,\n    dataBufferView: DataView,\n    offset: number,\n    littleEndian: boolean,\n    scale: number = 1\n): void {\n    const lower = Math.floor(value * scale) & 0xffffffff;\n    const upper = Math.floor((value / 0x100000000) * scale);\n    if (littleEndian) {\n        dataBufferView.setUint32(offset, lower, true);\n        dataBufferView.setUint32(offset + 4, upper, true);\n    } else {\n        dataBufferView.setUint32(offset, upper, false);\n        dataBufferView.setUint32(offset + 4, lower, false);\n    }\n}\n\n// \\todo transition to getBigUint64 after transition to es2020\nexport function getUint64(dataBufferView: DataView, offset: number, littleEndian: boolean): number {\n    let lower = 0;\n    let upper = 0;\n    if (littleEndian) {\n        lower = dataBufferView.getUint32(offset, true);\n        upper = dataBufferView.getUint32(offset + 4, true);\n    } else {\n        upper = dataBufferView.getUint32(offset, false);\n        lower = dataBufferView.getUint32(offset + 4, false);\n    }\n    return upper * 0x100000000 + lower;\n}\n\nexport function CanResume(code: number, platformDetails: PlatformDetails): boolean {\n    let result = false;\n    switch (code) {\n        // List of resumable codes\n        case RErrorCode.StreamInputChannelError:\n        case RErrorCode.StreamCursorChannelError:\n        case RErrorCode.StreamControlChannelError:\n        case RErrorCode.StreamerIceReConnectionFailed:\n        case RErrorCode.StreamerReConnectionFailed:\n        case RErrorCode.StreamerNoVideoFramesLossyNetwork:\n        case RErrorCode.NoInternetDuringStreaming:\n        case RErrorCode.ServerDisconnectedPeerRemovedByServer:\n            result = true;\n            break;\n        case RErrorCode.SystemSleepDuringStreaming:\n            if (IsiDevice(platformDetails)) {\n                result = true;\n            }\n            break;\n    }\n    return result;\n}\n\nconst MODE_1080P_WIDTH = 1920;\nconst MODE_1080P_HEIGHT = 1080;\nconst MODE_UWFHD_1080P_WIDTH = 2560;\nconst MODE_QHDLIKE_PIXEL_THRESHOLD = MODE_UWFHD_1080P_WIDTH * MODE_1080P_HEIGHT;\nconst MODE_1440P_WIDTH = 2560;\nconst MODE_1440P_HEIGHT = 1440;\nconst MODE_UWQHD_1440P_WIDTH = 3440;\nconst MODE_4KLIKE_PIXEL_THRESHOLD = MODE_UWQHD_1440P_WIDTH * MODE_1440P_HEIGHT;\n\nexport function IsResolution1440p(width: number, height: number) {\n    const pixelCount = width * height;\n    return pixelCount >= MODE_QHDLIKE_PIXEL_THRESHOLD && pixelCount < MODE_4KLIKE_PIXEL_THRESHOLD;\n}\n\nexport function IsResolution4k(width: number, height: number) {\n    const pixelCount = width * height;\n    return pixelCount >= MODE_4KLIKE_PIXEL_THRESHOLD;\n}\n\n// codecString is of the format 'video/H264'\nexport function GetCodecType(codecString?: string): CodecType {\n    let codecType: CodecType = CodecType.UNKNOWN;\n    if (codecString) {\n        codecString = codecString.toUpperCase();\n        if (codecString.includes(\"H264\")) {\n            codecType = CodecType.H264;\n        } else if (codecString.includes(\"H265\")) {\n            codecType = CodecType.HEVC;\n        }\n    }\n    return codecType;\n}\n\nexport function ShouldEnableCPM(platformDetails: PlatformDetails): boolean {\n    // Only enable CPM on platforms where it is verified\n    // WebOS is known to have innacurate decode time stats\n    const allowCPMOnPlatform =\n        IsChromeOS(platformDetails) ||\n        IsWindowsOS(platformDetails) ||\n        IsMacOS(platformDetails) ||\n        IsLinuxOS(platformDetails) ||\n        IsiDevice(platformDetails);\n    return RagnarokSettings.ragnarokConfig.enableCpm ?? allowCPMOnPlatform;\n}\n\nexport function ToBooleanType(x?: boolean): BooleanType {\n    if (x !== undefined) {\n        return x ? BooleanType.TRUE : BooleanType.FALSE;\n    }\n    return BooleanType.UNDEFINED;\n}\n\nexport function ToResumeType(isResume: boolean): ResumeType {\n    return isResume ? ResumeType.MANUAL : ResumeType.NONE;\n}\n\n/**\n * Tasks to be ran on startup\n * Tasks must be asynchronous and non-blocking\n * Tasks must have any required arguments already bound\n */\nlet tasksToRunOnInit: VoidFunction[] = [];\nexport function RunTaskOnInit(task: VoidFunction) {\n    tasksToRunOnInit.push(task);\n}\n\n/**\n * @return String representation of resolution in format {width}x{height}\n */\nexport function GetResolutionString(resolution: Resolution): string {\n    return `${resolution.width.toFixed()}x${resolution.height.toFixed()}`;\n}\n\nexport function GetLogicalResolution(): Resolution {\n    return { width: screen.width, height: screen.height };\n}\n\nexport function GetPhysicalResolution(): Resolution {\n    return {\n        width: screen.width * window.devicePixelRatio,\n        height: screen.height * window.devicePixelRatio\n    };\n}\n\n/**\n * Copies bytes from a Uint8Array to a DataView\n * @param to Target data view\n * @param toOffset Offset into DataView to start copying bytes\n * @param from Source array. The entire array will be copied\n */\nexport function setUint8Array(to: DataView, toOffset: number, from: Uint8Array) {\n    const numBytes = from.byteLength;\n    // Copying byte-by-byte like this is ~20x faster than calling Uint8Array.set() on current Chrome versions\n    for (let i = 0; i < numBytes; ++i) {\n        to.setUint8(toOffset + i, from[i]);\n    }\n}\n\n/**\n * Reports whether or not the device meets the minimum requirements for gamestreaming\n * Based on browser/OS/version/features\n */\nfunction IsGamestreamSupported(platformDetails: PlatformDetails): boolean {\n    if (IsiDevice(platformDetails)) {\n        // All browsers on iOS are WebKit based, WebKit got some required fixes in iOS 14\n        return IsiOSVersionAtLeast(platformDetails, 14);\n    }\n\n    let isStreamingSupported = false;\n    if (IsChromium()) {\n        // Chrome 77 has some required patches for gamestreaming\n        // However, Chrome that old does not provide user agent hints needed to reliably get the version\n        // Just allow all Chromium browsers for now\n        // Can update versions as we find minimum required versions and ways to detect them\n        isStreamingSupported = true;\n    }\n    // Non-Chromium supported browser list\n    // CHROME, CHROMIUM, WEBOS, SAMSUNG, SILK, OPERA, YANDEX, EDGE, BRAVE, SILK, REACTNATIVE covered by IsChromium check\n    // Firefox missing required SDP APIs\n    switch (platformDetails.browser) {\n        case BrowserName.EDGE_LEGACY:\n        case BrowserName.SAFARI:\n            isStreamingSupported = true;\n            break;\n        default:\n            break;\n    }\n\n    return isStreamingSupported;\n}\n\n/**\n * Saves content to file name provided.\n * @return True if successfully downloaded content, false otherwise.\n */\nexport function Download(content: any, fileName: string, mimeType: string): boolean {\n    try {\n        // Create a hidden link element and simulate a click on it. This is the only way\n        // to give the downloaded file a custom filename.\n        const link = document.createElement(\"a\");\n        link.style.display = \"none\";\n        const blob = new Blob(content, {\n            type: mimeType\n        });\n        const url = URL.createObjectURL(blob);\n        link.href = url;\n        link.download = fileName;\n        document.body.appendChild(link);\n        link.click();\n        URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n        return true;\n    } catch (err) {\n        Log.e(\"{d988e7f}\", \"{8d57ba9}\", err);\n        return false;\n    }\n}\n\n/**\n * @return Audio context if supported by browser\n */\nexport function GetAudioContext(sampleRate?: number): AudioContext | undefined {\n    const audioContext =\n        (<any>window).AudioContext || (<any>window).webkitAudioContext || undefined;\n    if (audioContext) {\n        let audioCtx = undefined;\n        if (sampleRate) {\n            audioCtx = new audioContext({ sampeleRate: sampleRate });\n        } else {\n            audioCtx = new audioContext();\n        }\n        return audioCtx;\n    } else {\n        Log.w(\"{d988e7f}\", \"{b74c037}\");\n        return undefined;\n    }\n}\n\n/**\n *\n * @param a Object a\n * @param b Object b\n * @return True if objects have same properties with same values\n */\nexport function IsEqualShallow(a: Object, b: Object) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    for (const key of keysA) {\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n *\n * @return True if pointer events are supported, false otherwise\n */\nexport function SupportsPointerEvents(): boolean {\n    return !!PointerEvent?.prototype;\n}\n\n/**\n * @param channel - denote which munging are we testing\n * @param sdp - denote server sdp\n * @return Supported channel count based upon which munging are we testine, ie. 5_1, 7_1\n */\nasync function mungingHelper(\n    channel: number,\n    sdp: string,\n    opusDescription: string\n): Promise<number> {\n    const pc = new RTCPeerConnection();\n    try {\n        await pc.setRemoteDescription({ type: \"offer\", sdp }).catch(sdpError => {\n            throw new Error(\"Audio munging setRemoteDescription failed. \" + sdpError);\n        });\n\n        const answer = await pc.createAnswer();\n        await pc\n            .setLocalDescription({\n                type: \"answer\",\n                sdp: answer.sdp\n                    ?.replace(\"opus/48000/2\", \"multiopus/48000/\" + channel)\n                    .replace(\"useinbandfec=1\", opusDescription)\n            })\n            .catch(sdpError => {\n                throw new Error(\"Audio munging setLocalDescription failed. \" + sdpError);\n            });\n\n        const receiver = pc.getReceivers()[0];\n        if (!receiver.getParameters) {\n            // This is unsupported on Firefox\n            Log.w(\"{d988e7f}\", \"{4be0bf6}\");\n            return 2;\n        }\n        const { codecs } = receiver.getParameters();\n        if (\n            codecs.length === 1 &&\n            codecs[0].mimeType === \"audio/multiopus\" &&\n            codecs[0].channels === channel\n        ) {\n            Log.i(\"{d988e7f}\", \"{8919816}\", channel, codecs[0]);\n        } else {\n            throw new Error(\"Audio munging failed \" + codecs[0]);\n        }\n        return channel;\n    } catch (exception) {\n        Log.e(\"{d988e7f}\", \"{4984c00}\", channel, exception);\n        return 2;\n    } finally {\n        pc.close();\n    }\n}\n\n/**\n * @return Maxmium audio channel count based upon possible munging of SDP\n */\nexport async function mungingTest(): Promise<number> {\n    let maxChannelCount = 2;\n\n    const preamble = `v=0\no=- 0 3 IN IP4 127.0.0.1\ns=-\nt=0 0\na=fingerprint:sha-256 A7:24:72:CA:6E:02:55:39:BA:66:DF:6E:CC:4C:D8:B0:1A:BF:1A:56:65:7D:F4:03:AD:7E:77:43:2A:29:EC:93\nm=audio 9 UDP/TLS/RTP/SAVPF 100 101\nc=IN IP4 0.0.0.0\na=rtcp-mux\na=sendonly\na=mid:audio\na=setup:actpass\na=ice-ufrag:ETEn\na=ice-pwd:OtSK0WpNtpUjkY4+86js7Z/l\\r\\n`;\n\n    const stereo = `\\r\\na=rtpmap:101 opus/48000/2\na=fmtp:101 minptime=10;useinbandfec=1\n`; //Added newline at the end\n\n    let opusDescription = `minptime=10;useinbandfec=1;channel_mapping=0,4,1,2,3,5;num_streams=4;coupled_streams=2`;\n    let sdp = preamble + `a=rtpmap:100 multiopus/48000/6\\r\\na=fmtp:100 ` + opusDescription + stereo;\n    const munging5_1 = mungingHelper(6, sdp, opusDescription);\n\n    opusDescription = `minptime=10;useinbandfec=1;channel_mapping=0,6,1,2,3,4,5,7;num_streams=5;coupled_streams=3`;\n    sdp = preamble + `a=rtpmap:100 multiopus/48000/8\\r\\na=fmtp:100 ` + opusDescription + stereo;\n    const munging7_1 = mungingHelper(8, sdp, opusDescription);\n\n    await Promise.all([munging5_1, munging7_1]).then(values => {\n        maxChannelCount = Math.max(Number(values[0]), Number(values[1]));\n    });\n\n    Log.i(\"{d988e7f}\", \"{dc7ee29}\", maxChannelCount);\n    return maxChannelCount;\n}\n\n/**\n * @param timestamp device capture timestamp\n * @return Capture timestamp relative to stream begin time.\n * Uses original timestamp provided, unless device capture timestamp is unreliable, in which case uses performace.now().\n */\nexport function GetCaptureTimestamp(timestamp: number): number {\n    if (RagnarokSettings.ragnarokConfig.usePerfNowCaptureTimestamp ?? !IsChromium()) {\n        return RagnarokProfiler.getStreamTime();\n    }\n    return timestamp - RagnarokProfiler.getStreamBeginTime();\n}\n\n/************************************ Internal Utils (END) ******************************************/\n","import { LatencyIndicator } from \"../debug/latencyindicator\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { IsTouchCapable } from \"../dependencies\";\nimport { GetCaptureTimestamp, WarpTouch } from \"../util/utils\";\n\nexport interface TouchRecord {\n    identifier: number;\n    clientX: number;\n    clientY: number;\n    deltaX: number;\n    deltaY: number;\n}\n\nfunction recordFromTouch(touch: Touch, warp: boolean = false): TouchRecord {\n    let pt = warp ? WarpTouch(touch) : { x: touch.clientX, y: touch.clientY };\n    return {\n        identifier: touch.identifier,\n        clientX: pt.x,\n        clientY: pt.y,\n        deltaX: 0,\n        deltaY: 0\n    };\n}\n\nconst enum GestureType {\n    NONE,\n    PENDING,\n    HOLD,\n    DRAG,\n    HELD_DRAG,\n    SCROLL,\n    PAN_ZOOM\n}\n\nexport interface GestureHandler {\n    tap: (\n        target: HTMLElement,\n        timestamp: number,\n        lastTouch: TouchRecord,\n        touchCount: number\n    ) => void;\n    holdBegin: (target: HTMLElement, timestamp: number, touch: TouchRecord) => void;\n    holdEnd: (target: HTMLElement, timestamp: number) => void;\n    drag: (target: HTMLElement, timestamp: number, touch: TouchRecord) => void;\n    scroll: (target: HTMLElement, timestamp: number, touches: TouchRecord[]) => void;\n    panZoom: (target: HTMLElement, timestamp: number, touches: TouchRecord[]) => void;\n    panZoomEnd: (target: HTMLElement, timestamp: number) => void;\n    shouldPreventDefaultTouch: () => boolean;\n}\n\n// https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer?language=objc\nexport const maximumTapDurationMs: number = 500;\n\nexport class GestureDetector {\n    static isSupported(): boolean {\n        return RagnarokSettings.forceTouchCapable || IsTouchCapable();\n    }\n\n    // https://developer.apple.com/documentation/uikit/uilongpressgesturerecognizer?language=objc\n    private allowableMovement: number = 10;\n\n    private currentTouches: TouchRecord[] = [];\n    private tapTimerId: number = 0;\n    private maxTouchCount: number = 0;\n    private activeGesture: GestureType = GestureType.NONE;\n\n    private touchStartListener = (evt: TouchEvent) => {\n        let touchHandled = false;\n\n        const touches = evt.changedTouches;\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        for (let i = 0; i < touches.length; i++) {\n            const touch = touches[i];\n            if (touch.target === this.target) {\n                touchHandled = true;\n\n                LatencyIndicator.getInstance().toggleIndicator();\n\n                if (this.currentTouches.length === 0) {\n                    this.activeGesture = GestureType.PENDING;\n                    this.tapTimerId = window.setTimeout(() => {\n                        this.tapTimerId = 0;\n                        if (this.maxTouchCount === 1) {\n                            this.activeGesture = GestureType.HOLD;\n                            if (RagnarokSettings.advancedGestures) {\n                                this.gestureHandler.holdBegin(\n                                    this.target,\n                                    timeStamp,\n                                    recordFromTouch(touch)\n                                );\n                            }\n                        }\n                    }, maximumTapDurationMs);\n                } else if (this.activeGesture !== GestureType.PENDING) {\n                    if (\n                        this.activeGesture === GestureType.HOLD ||\n                        this.activeGesture === GestureType.HELD_DRAG\n                    ) {\n                        if (RagnarokSettings.advancedGestures) {\n                            this.gestureHandler.holdEnd(this.target, timeStamp);\n                        }\n                    } else if (this.activeGesture === GestureType.PAN_ZOOM) {\n                        if (RagnarokSettings.advancedGestures) {\n                            this.gestureHandler.panZoomEnd(this.target, timeStamp);\n                        }\n                    }\n                    this.activeGesture = GestureType.NONE; // cancel active gesture\n                }\n\n                this.currentTouches.push(recordFromTouch(touch));\n                if (this.currentTouches.length > this.maxTouchCount) {\n                    this.maxTouchCount = this.currentTouches.length;\n                }\n            }\n        }\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    };\n\n    private touchMoveListener = (evt: TouchEvent) => {\n        let touchHandled = false;\n\n        for (let touchRecord of this.currentTouches) {\n            touchRecord.deltaX = 0;\n            touchRecord.deltaY = 0;\n        }\n\n        const changedTouches = evt.changedTouches;\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        let updatedTouchIndices: number[] = [];\n        for (let i = 0; i < changedTouches.length; i++) {\n            const touch = changedTouches[i];\n            const touchStartIndex = this.currentTouches.findIndex(\n                t => t.identifier == touch.identifier\n            );\n            if (touchStartIndex != -1) {\n                touchHandled = true;\n\n                const touchStart = this.currentTouches[touchStartIndex];\n                const deltaX = touch.clientX - touchStart.clientX;\n                const deltaY = touch.clientY - touchStart.clientY;\n\n                let shouldUpdateTouch = false;\n\n                if (this.tapTimerId !== 0) {\n                    if (\n                        Math.abs(deltaX) > this.allowableMovement ||\n                        Math.abs(deltaY) > this.allowableMovement\n                    ) {\n                        window.clearTimeout(this.tapTimerId);\n                        this.tapTimerId = 0;\n\n                        shouldUpdateTouch = true;\n                    }\n                } else {\n                    shouldUpdateTouch = true;\n                }\n\n                if (shouldUpdateTouch) {\n                    const touchRecord = {\n                        identifier: touch.identifier,\n                        clientX: touch.clientX,\n                        clientY: touch.clientY,\n                        deltaX: deltaX,\n                        deltaY: deltaY\n                    };\n                    updatedTouchIndices.push(touchStartIndex);\n                    this.currentTouches[touchStartIndex] = touchRecord;\n                }\n            }\n        }\n\n        if (\n            updatedTouchIndices.length > 0 &&\n            this.tapTimerId === 0 && // no longer considered a tap\n            this.activeGesture !== GestureType.NONE // gesture is not cancelled\n        ) {\n            if (this.currentTouches.length === 1) {\n                if (this.activeGesture === GestureType.PENDING) {\n                    this.activeGesture = GestureType.DRAG;\n                } else if (this.activeGesture === GestureType.HOLD) {\n                    this.activeGesture = GestureType.HELD_DRAG;\n                }\n                if (RagnarokSettings.advancedGestures) {\n                    this.gestureHandler.drag(this.target, timeStamp, this.currentTouches[0]);\n                }\n            } else if (this.currentTouches.length === 2) {\n                if (this.activeGesture === GestureType.SCROLL) {\n                    if (RagnarokSettings.advancedGestures) {\n                        this.gestureHandler.scroll(this.target, timeStamp, this.currentTouches);\n                    }\n                } else if (this.activeGesture === GestureType.PAN_ZOOM) {\n                    if (RagnarokSettings.advancedGestures) {\n                        this.gestureHandler.panZoom(this.target, timeStamp, this.currentTouches);\n                    }\n                } else if (this.activeGesture === GestureType.PENDING) {\n                    if (\n                        this.currentTouches[0].deltaY * this.currentTouches[1].deltaY > 0 && // touches moving same direction veritically and\n                        (Math.sign(this.currentTouches[0].deltaX) ===\n                            Math.sign(this.currentTouches[1].deltaX) || // touches moving the same direction or\n                            (Math.abs(this.currentTouches[0].deltaX) < this.allowableMovement &&\n                                Math.abs(this.currentTouches[1].deltaX) < this.allowableMovement)) // not moving horizontally\n                    ) {\n                        this.activeGesture = GestureType.SCROLL;\n                        if (RagnarokSettings.advancedGestures) {\n                            this.gestureHandler.scroll(this.target, timeStamp, this.currentTouches);\n                        }\n                    } else {\n                        this.activeGesture = GestureType.PAN_ZOOM;\n                        if (RagnarokSettings.advancedGestures) {\n                            this.gestureHandler.panZoom(\n                                this.target,\n                                timeStamp,\n                                this.currentTouches\n                            );\n                        }\n                    }\n                }\n            } else {\n                this.activeGesture = GestureType.NONE; // more than two finger move does not have a supported gesture\n            }\n        }\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    };\n\n    private endTouches(evt: TouchEvent, shouldSendTap: boolean) {\n        let touchHandled = false;\n\n        const touches = evt.changedTouches;\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        for (let i = 0; i < touches.length; i++) {\n            const touch = touches[i];\n            const touchStartIndex = this.currentTouches.findIndex(\n                t => t.identifier == touch.identifier\n            );\n            if (touchStartIndex != -1) {\n                touchHandled = true;\n\n                LatencyIndicator.getInstance().toggleIndicator();\n\n                this.currentTouches.splice(touchStartIndex, 1);\n                if (this.currentTouches.length === 0) {\n                    if (this.tapTimerId !== 0) {\n                        window.clearTimeout(this.tapTimerId);\n                        this.tapTimerId = 0;\n                        if (shouldSendTap) {\n                            this.gestureHandler.tap(\n                                this.target,\n                                timeStamp,\n                                recordFromTouch(touch, true),\n                                this.maxTouchCount\n                            );\n                        }\n                    } else if (\n                        this.activeGesture === GestureType.HOLD ||\n                        this.activeGesture === GestureType.HELD_DRAG\n                    ) {\n                        if (RagnarokSettings.advancedGestures) {\n                            this.gestureHandler.holdEnd(this.target, timeStamp);\n                        }\n                    }\n\n                    this.maxTouchCount = 0;\n                    this.activeGesture = GestureType.NONE;\n                } else if (this.activeGesture === GestureType.SCROLL) {\n                    this.activeGesture = GestureType.NONE;\n                } else if (this.activeGesture === GestureType.PAN_ZOOM) {\n                    if (RagnarokSettings.advancedGestures) {\n                        this.gestureHandler.panZoomEnd(this.target, timeStamp);\n                    }\n                    this.activeGesture = GestureType.NONE;\n                }\n            }\n        }\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    }\n\n    private touchCancelListener = (evt: TouchEvent) => {\n        this.endTouches(evt, false);\n    };\n\n    private touchEndListener = (evt: TouchEvent) => {\n        this.endTouches(evt, true);\n    };\n\n    constructor(\n        private target: HTMLElement,\n        private videoAddEventListener: (eventName: string, handler: any, options?: any) => void,\n        private videoRemoveEventListener: (eventName: string, handler: any) => void,\n        private gestureHandler: GestureHandler\n    ) {}\n\n    start() {\n        const options = {\n            passive: !RagnarokSettings.advancedGestures\n        };\n        this.videoAddEventListener(\"touchstart\", this.touchStartListener, options);\n        this.videoAddEventListener(\"touchmove\", this.touchMoveListener, options);\n        this.videoAddEventListener(\"touchcancel\", this.touchCancelListener, options);\n        this.videoAddEventListener(\"touchend\", this.touchEndListener, options);\n    }\n\n    stop() {\n        this.videoRemoveEventListener(\"touchstart\", this.touchStartListener);\n        this.videoRemoveEventListener(\"touchmove\", this.touchMoveListener);\n        this.videoRemoveEventListener(\"touchcancel\", this.touchCancelListener);\n        this.videoRemoveEventListener(\"touchend\", this.touchEndListener);\n\n        this.currentTouches = [];\n        if (this.tapTimerId !== 0) {\n            window.clearTimeout(this.tapTimerId);\n            this.tapTimerId = 0;\n        }\n        this.maxTouchCount = 0;\n        if (RagnarokSettings.advancedGestures) {\n            switch (this.activeGesture) {\n                case GestureType.PAN_ZOOM:\n                    this.gestureHandler.panZoomEnd(this.target, performance.now());\n                    break;\n                case GestureType.HOLD:\n                case GestureType.HELD_DRAG:\n                    this.gestureHandler.holdEnd(this.target, performance.now());\n                    break;\n                default:\n                    break;\n            }\n        }\n        this.activeGesture = GestureType.NONE;\n    }\n}\n","import { RagnarokSettings } from \"../util/settings\";\nimport { GestureHandler } from \"./gesturedetector\";\nimport { LatencyIndicator } from \"../debug/latencyindicator\";\nimport { TouchPosSize, WarpTouch, GetCaptureTimestamp } from \"../util/utils\";\nimport { BoundaryPair, VideoState } from \"../rinterfaces\";\nimport { PlatformDetails, IsSafari, IsTouchCapable, Log } from \"../dependencies\";\n\nexport const enum TouchType {\n    DOWN = 0x0001,\n    UP = 0x0002,\n    MOVE = 0x0004,\n    CANCEL = 0x0008\n}\n\nconst LOGTAG = \"touchlistener\";\n\n/// Maximum number of touches we can support.  (Arbitrary - 10 fingers * 4 types)\nexport const MAX_TOUCH_COUNT = 40;\n\n/// Minimum scaked touch coordinate\nconst CLAMP_LO = 0;\n/// Maximum scaled touch coordinate\nconst CLAMP_HI = 65535;\n\nexport interface TouchDataHandler {\n    addTouchEvent(\n        idx: number,\n        id: number,\n        touchType: TouchType,\n        x: number,\n        y: number,\n        radiusX: number,\n        radiusY: number,\n        timestampMs: number\n    ): boolean;\n\n    sendTouchPacket(count: number): boolean;\n}\n\nclass TouchRecord implements TouchPosSize {\n    // Touch.identifier from the browser\n    public readonly identifier: number;\n    // Identifier we refer to this touch for our network protocol\n    public readonly protocolId: number;\n    // Last known position of the touch.\n    public clientX: number = 0;\n    public clientY: number = 0;\n    public radiusX: number = 0;\n    public radiusY: number = 0;\n    // Whether to warp this touch point whenever it's updated\n    private warp: boolean = false;\n\n    constructor(touch: Touch, protocolId: number) {\n        this.identifier = touch.identifier;\n        this.protocolId = protocolId;\n        // Use page{X,Y} instead of client{X,Y} to address GSDEV-6433\n        // Some iPhones appear to get a 20-pixel vertical scroll after rotating from portrait to landscape\n        // and back with the keyboard showing.  Using the page coordinates compensates for this.\n        this.clientX = touch.pageX;\n        this.clientY = touch.pageY;\n        this.radiusX = touch.radiusX;\n        this.radiusY = touch.radiusY;\n        if (RagnarokSettings.touchWarp) {\n            this.warpTouch();\n        } else {\n            this.warp = false;\n        }\n    }\n\n    update(touch: Touch) {\n        // Use page{X,Y} instead of client{X,Y} to address GSDEV-6433\n        this.clientX = touch.pageX;\n        this.clientY = touch.pageY;\n        this.radiusX = touch.radiusX;\n        this.radiusY = touch.radiusY;\n        if (this.warp) {\n            this.warpTouch();\n        }\n    }\n\n    private warpTouch() {\n        const warpedPt = WarpTouch(this);\n        // Continue warping touches until the touch leaves the warp regions\n        // after that we don't need to warp for further touches moved because\n        // they are not affected by the touch dead areas.\n        //\n        // However, note that we continue warping during the initial touches\n        // moved until we exit the dead areas in order to avoid a jump.\n        this.warp = Math.abs(warpedPt.y - this.clientY) > 0.01;\n        this.clientX = warpedPt.x;\n        this.clientY = warpedPt.y;\n    }\n}\n\nclass TouchStorage {\n    public readonly captureTs: DOMHighResTimeStamp;\n    public readonly callbackTs: DOMHighResTimeStamp;\n\n    public readonly touchType: TouchType;\n\n    public readonly posX: number;\n    public readonly posY: number;\n    public readonly radX: number;\n    public readonly radY: number;\n\n    public readonly id: number;\n    public readonly protocolId: number;\n\n    constructor(\n        touch: Touch,\n        protocolId: number,\n        type: TouchType,\n        ts: DOMHighResTimeStamp,\n        captureTs: DOMHighResTimeStamp\n    ) {\n        this.protocolId = protocolId;\n        this.id = touch.identifier;\n        this.touchType = type;\n        this.posX = touch.pageX;\n        this.posY = touch.pageY;\n        this.radX = touch.radiusX;\n        this.radY = touch.radiusY;\n        this.callbackTs = ts;\n        this.captureTs = captureTs;\n    }\n}\n\nexport class TouchListener {\n    static isSupported(): boolean {\n        return RagnarokSettings.forceTouchCapable || IsTouchCapable();\n    }\n\n    private isSafari: boolean;\n\n    private scaleX: number = 0;\n    private scaleY: number = 0;\n    private margins: BoundaryPair = { horizontal: 1.0, vertical: 1.0 };\n\n    private activeTouches = new Map<number, TouchRecord>();\n    private activeProtocolIds = new Set<number>();\n\n    private droppedEventsCount = 0;\n\n    private storedTouches: TouchStorage[] = [];\n    private storedTouchesTimer: number = 0;\n    private trimStoredTouchesFunc: Function;\n    private logStoredTouchesFunc: Function;\n\n    private clearedAllTouches: boolean = true;\n\n    // Store a touch point for potential logging.\n    private storeTouch(\n        touch: Touch,\n        touchRecord: TouchRecord,\n        touchType: TouchType,\n        callbackTs: DOMHighResTimeStamp,\n        evt: TouchEvent\n    ) {\n        if (!RagnarokSettings.storeTouch) {\n            return;\n        }\n\n        // Use event timestamp directly for logging/debugging\n        let touchStore = new TouchStorage(\n            touch,\n            touchRecord.protocolId,\n            touchType,\n            callbackTs,\n            evt.timeStamp\n        );\n        this.storedTouches.push(touchStore);\n    }\n\n    private trimStoredTouches() {\n        // Clean up oldest touches.\n        // Keep the touches that started up to 30 seconds before the last stored touch.\n        const length = this.storedTouches.length;\n        if (!length) return;\n        let latestTs = this.storedTouches[length - 1].callbackTs;\n        let oldestTs = latestTs - 30 * 1000;\n        let trimIndex = -1;\n\n        // Find highest index who's touch is older than the oldestTs to keep.\n        // Assumes values are stored in montonically-increasing order of performance.now() values.\n        for (let idx = 0; idx < length; idx++) {\n            if (this.storedTouches[idx].callbackTs < oldestTs) {\n                trimIndex = idx;\n            } else {\n                break;\n            }\n        }\n\n        // Remove all older touches\n        this.storedTouches.splice(0, trimIndex + 1);\n    }\n\n    private logStoredTouches() {\n        // Log the stored touch information.\n        for (let touch of this.storedTouches) {\n            Log.d(\"{ec05004}\", \"{3c6a946}\", touch.captureTs.toFixed(2), touch.callbackTs.toFixed(2), \n                    touch.id\n                , touch.protocolId, touch.touchType, touch.posX.toFixed(\n                    2\n                ), touch.posY.toFixed(2), touch.radX.toFixed(0), touch.radY.toFixed(0));\n        }\n        this.storedTouches = [];\n    }\n\n    // Add a new to active touches\n    // Call from touchstart\n    private addNewTouch(touch: Touch): TouchRecord {\n        let newId = 0;\n        while (this.activeProtocolIds.has(newId)) {\n            newId++;\n        }\n        let record = new TouchRecord(touch, newId);\n        this.activeTouches.set(touch.identifier, record);\n        this.activeProtocolIds.add(newId);\n        return record;\n    }\n\n    // Remove a touch from active touches via its Touch.identifier property.\n    // Call from touchend/touchcancel\n    private removeTouch(identifier: number) {\n        let touch = this.activeTouches.get(identifier);\n        if (!touch) {\n            return;\n        }\n        this.activeTouches.delete(identifier);\n        this.activeProtocolIds.delete(touch.protocolId);\n    }\n\n    private shouldHandleTouch(touch: Touch): boolean {\n        return touch.target === this.target;\n    }\n\n    private sendTouches(\n        touchesToSend: (Touch | TouchRecord)[],\n        touchType: TouchType,\n        timeStamp: number\n    ) {\n        let count: number = 0;\n\n        for (let touch of touchesToSend) {\n            if (count > MAX_TOUCH_COUNT) {\n                Log.e(\"{ec05004}\", \"{2faaf33}\", \n                        touchesToSend.length - count\n                    );\n                // TODO Send events in multiple chunks\n                return;\n            }\n            const id = this.activeTouches.get(touch.identifier)?.protocolId;\n            if (id === undefined) {\n                Log.e(\"{ec05004}\", \"{960ee4f}\", touch.identifier);\n                // Ignore touch\n                continue;\n            }\n\n            // TODO Modify the protocol to use scaled radius values, not pixels.\n            let scaledX = this.scaleX * (touch.clientX - this.margins.horizontal);\n            let scaledY = this.scaleY * (touch.clientY - this.margins.vertical);\n\n            const radiusX = this.scaleX * touch.radiusX;\n            const radiusY = this.scaleY * touch.radiusY;\n\n            // Allow touches to be slightly outside the session area, by the touch radius.\n            // Should make it easier to (start a) touch at the edges of the session area.\n            const minX = CLAMP_LO - radiusX;\n            const maxX = CLAMP_HI + radiusX;\n            const minY = CLAMP_LO - radiusY;\n            const maxY = CLAMP_HI + radiusY;\n\n            if (scaledX < minX || scaledX > maxX || scaledY < minY || scaledY > maxY) {\n                // Out-of-range touch.\n                switch (touchType) {\n                    case TouchType.UP:\n                    case TouchType.CANCEL:\n                        // Send this touch point event to the server.\n                        // Sends an end coordinate pair that is the event's coordinate pair clamped to the session area.\n                        break;\n                    case TouchType.DOWN:\n                        // Do not send an explicit DOWN.\n                        // Future MOVEs will be sent if they are in range; the server will synthesize a DOWN if needed.\n                        continue;\n                    case TouchType.MOVE:\n                        // Ignore out-of-range touches - those that are off-screen or outside the session area.\n                        // A touch sequence that re-enters the session area will get a single move to the new location.\n                        continue;\n                    default:\n                        // Unknown touch type, just ignore.  (Shouldn't be possible.)\n                        continue;\n                }\n            }\n\n            // Clamp the touch coordinates to the session area.\n            scaledX = Math.min(Math.max(scaledX, CLAMP_LO), CLAMP_HI);\n            scaledY = Math.min(Math.max(scaledY, CLAMP_LO), CLAMP_HI);\n\n            if (\n                !this.touchDataHandler.addTouchEvent(\n                    count,\n                    id,\n                    touchType,\n                    scaledX,\n                    scaledY,\n                    touch.radiusX,\n                    touch.radiusY,\n                    timeStamp\n                )\n            ) {\n                this.droppedEventsCount += touchesToSend.length - count;\n                break;\n            }\n            count++;\n        }\n\n        if (count == 0) {\n            // No valid events to send\n            return;\n        }\n\n        if (count > touchesToSend.length) {\n            // More events than desired.\n            Log.w(\"{ec05004}\", \"{4e60a66}\", count, touchesToSend.length);\n            return;\n        }\n\n        if (!this.touchDataHandler.sendTouchPacket(count)) {\n            Log.e(\"{ec05004}\", \"{56a8404}\");\n        }\n    }\n\n    private touchStartListener = (evt: TouchEvent) => {\n        const now = performance.now();\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        let touchHandled = false;\n\n        const touches = evt.changedTouches;\n        let touchesToSend: TouchRecord[] = [];\n        for (let i = 0; i < touches.length; i++) {\n            const touch = touches[i];\n            if (this.shouldHandleTouch(touch)) {\n                touchHandled = true;\n\n                LatencyIndicator.getInstance().toggleIndicator();\n\n                let touchRecord = this.addNewTouch(touch);\n                touchesToSend.push(touchRecord);\n\n                this.storeTouch(touch, touchRecord, TouchType.DOWN, now, evt);\n            }\n        }\n\n        this.sendTouches(touchesToSend, TouchType.DOWN, timeStamp);\n\n        if (RagnarokSettings.storeTouch && RagnarokSettings.storeTouchGesture) {\n            if (this.activeTouches.size == 8 && this.clearedAllTouches) {\n                this.trimStoredTouchesFunc();\n                this.logStoredTouchesFunc();\n            }\n        }\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    };\n\n    private touchMoveListener = (evt: TouchEvent) => {\n        const now = performance.now();\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        let touchHandled = false;\n\n        const touches = evt.changedTouches;\n        let touchesToSend: TouchRecord[] = [];\n        for (let i = 0; i < touches.length; i++) {\n            const touch = touches[i];\n            if (this.shouldHandleTouch(touch)) {\n                let touchRecord = this.activeTouches.get(touch.identifier);\n                if (touchRecord) {\n                    touchHandled = true;\n\n                    touchRecord.update(touch);\n                    touchesToSend.push(touchRecord);\n\n                    this.storeTouch(touch, touchRecord, TouchType.MOVE, now, evt);\n                }\n            }\n        }\n\n        this.sendTouches(touchesToSend, TouchType.MOVE, timeStamp);\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    };\n\n    private touchEnd(evt: TouchEvent, type: TouchType) {\n        const now = performance.now();\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        let touchHandled = false;\n\n        let removedIds = [];\n        const touches = evt.changedTouches;\n        let touchesToSend: TouchRecord[] = [];\n        for (let i = 0; i < touches.length; i++) {\n            const touch = touches[i];\n            if (this.shouldHandleTouch(touch)) {\n                let touchRecord = this.activeTouches.get(touch.identifier);\n                removedIds.push(touch.identifier);\n                if (touchRecord) {\n                    touchHandled = true;\n\n                    LatencyIndicator.getInstance().toggleIndicator();\n\n                    touchRecord.update(touch);\n                    touchesToSend.push(touchRecord);\n\n                    this.storeTouch(touch, touchRecord, type, now, evt);\n                }\n            }\n        }\n\n        this.sendTouches(touchesToSend, type, timeStamp);\n        for (const id of removedIds) {\n            this.removeTouch(id);\n        }\n\n        if (RagnarokSettings.storeTouch) {\n            if (this.activeTouches.size == 0) {\n                this.clearedAllTouches = true;\n            } else {\n                this.clearedAllTouches = false;\n            }\n        }\n\n        if (this.gestureHandler.shouldPreventDefaultTouch() && touchHandled) {\n            evt.preventDefault();\n        }\n    }\n\n    private touchCancelListener = (evt: TouchEvent) => {\n        this.touchEnd(evt, TouchType.CANCEL);\n    };\n\n    private touchEndListener = (evt: TouchEvent) => {\n        this.touchEnd(evt, TouchType.UP);\n    };\n\n    constructor(\n        private target: HTMLElement,\n        private videoAddEventListener: (eventName: string, handler: any, options?: any) => void,\n        private videoRemoveEventListener: (eventName: string, handler: any, options?: any) => void,\n        private touchDataHandler: TouchDataHandler,\n        private gestureHandler: GestureHandler,\n        platformDetails: PlatformDetails\n    ) {\n        this.trimStoredTouchesFunc = this.trimStoredTouches.bind(this);\n        this.logStoredTouchesFunc = this.logStoredTouches.bind(this);\n        this.isSafari = IsSafari(platformDetails);\n    }\n\n    start() {\n        this.droppedEventsCount = 0;\n        const options = {\n            passive: false\n        };\n        this.videoAddEventListener(\"touchstart\", this.touchStartListener, options);\n        this.videoAddEventListener(\"touchmove\", this.touchMoveListener, options);\n        this.videoAddEventListener(\"touchcancel\", this.touchCancelListener, options);\n        this.videoAddEventListener(\"touchend\", this.touchEndListener, options);\n\n        if (RagnarokSettings.storeTouch) {\n            Log.d(\"{ec05004}\", \"{72764d2}\", performance.now());\n\n            // Clear stored touches, ready for new input.\n            this.storedTouches = [];\n            // Every so often, prune the list of stored touches so as to keep no more than\n            // 30 seconds worth of data.\n            this.storedTouchesTimer = window.setInterval(\n                this.trimStoredTouchesFunc,\n                1 * 60 * 1000 /* 1 minute */\n            );\n        }\n    }\n\n    stop() {\n        if (RagnarokSettings.storeTouch) {\n            if (this.storedTouchesTimer) {\n                clearTimeout(this.storedTouchesTimer);\n            }\n\n            this.trimStoredTouchesFunc();\n            this.logStoredTouchesFunc();\n        }\n\n        // Cancel any touches we're currently tracking.\n        if (this.activeTouches.size) {\n            this.sendTouches(\n                Array.from(this.activeTouches.values()),\n                TouchType.CANCEL,\n                performance.now()\n            );\n            this.activeTouches.clear();\n            this.activeProtocolIds.clear();\n        }\n        if (this.droppedEventsCount) {\n            Log.w(\"{ec05004}\", \"{10858ae}\", this.droppedEventsCount);\n        }\n        const options = {\n            passive: false\n        };\n        this.videoRemoveEventListener(\"touchstart\", this.touchStartListener, options);\n        this.videoRemoveEventListener(\"touchmove\", this.touchMoveListener, options);\n        this.videoRemoveEventListener(\"touchcancel\", this.touchCancelListener, options);\n        this.videoRemoveEventListener(\"touchend\", this.touchEndListener, options);\n    }\n\n    updateVideoState(videoState: VideoState, margins: BoundaryPair, videoZoomFactor: number) {\n        this.margins = margins;\n        this.scaleX = 65535.0 / videoState.displayVideoWidth;\n        this.scaleY = 65535.0 / videoState.displayVideoHeight;\n\n        this.scaleX /= videoZoomFactor;\n        this.scaleY /= videoZoomFactor;\n    }\n}\n","import { GamepadDataHandler, VibrationHandler } from \"../interfaces\";\r\nimport { StreamClient } from \"../streamclient\";\r\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\r\nimport { Log } from \"../dependencies\";\r\nimport { setUint64 } from \"../util/utils\";\r\nimport { InputChannel, Measurements } from \"./inputinterfaces\";\r\nimport {\r\n    WireProtocolPacketId,\r\n    MOUSE_GROUP_HEADER_LEN,\r\n    PacketId,\r\n    CHROME_CALLBACK_LEN,\r\n    SENT_TIMESTAMP_LEN,\r\n    ServerCommands,\r\n    HapticsCommands\r\n} from \"./inputpacketinfo\";\r\nimport { MAX_TOUCH_COUNT, TouchType, TouchDataHandler } from \"./touchlistener\";\r\nimport { VideoState } from \"../rinterfaces\";\r\nimport { RagnarokProfiler } from \"../ragnarokprofiler\";\r\n\r\nconst LOGTAG = \"inputpackethandler\";\r\n\r\n// Stores everything we need to generate a move packet from a mouse move.\r\nexport interface MoveEvent {\r\n    absPos: boolean;\r\n    x: number;\r\n    y: number;\r\n    captureTimestamp: number;\r\n    // When stored in a list, indicates how many subsequent events (including this one)\r\n    // were created from a single event from the browser. One is a valid group size.\r\n    // If zero, means that no mouse group packets should be generated.\r\n    groupSize: number;\r\n    // Time at which the browser gave us this event. Only used if groupSize > 0.\r\n    callbackTimestamp: number;\r\n}\r\n\r\n/// Max expected size of a single input packet.\r\nconst MAX_SINGLE_INPUT_PACKET = 100;\r\n\r\n/// Maximum number of gamepads we can support.\r\nconst MAX_GAMEPAD_COUNT = 4;\r\n\r\n/// Size of a gamepad packet\r\nconst GAMEPAD_PACKET_SIZE = 38;\r\n\r\n/// Size of max gamepad buffer size depending on protocol\r\nconst GAMEPAD_BUFFER_SIZE_V2 = MAX_GAMEPAD_COUNT * (GAMEPAD_PACKET_SIZE + 2) + 1;\r\nconst GAMEPAD_BUFFER_SIZE_V3 = SENT_TIMESTAMP_LEN + MAX_GAMEPAD_COUNT * (GAMEPAD_PACKET_SIZE + 3);\r\n\r\nconst GamepadControlIndex = 0;\r\n\r\n/// Size of a touch packet header\r\nconst TOUCH_HEADER_LENGTH = 8;\r\n/// Size of a touch record in a touch packet\r\nconst TOUCH_RECORD_LENGTH = 16;\r\nconst TOUCH_PACKET_OFFSET = SENT_TIMESTAMP_LEN + 1; /*v3 pid*/\r\n\r\nclass ShiftedDataView extends DataView {\r\n    private shift = 0;\r\n    constructor(buffer: ArrayBuffer, byteLength?: number, byteOffset?: number, shift?: number) {\r\n        super(buffer, byteLength, byteOffset);\r\n        this.shift = shift ?? 0;\r\n    }\r\n    public setUint8 = (byteOffset: number, value: number) =>\r\n        super.setUint8(byteOffset + this.shift, value);\r\n    public setUint16 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setUint16(byteOffset + this.shift, value, littleEndian);\r\n    public setUint32 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setUint32(byteOffset + this.shift, value, littleEndian);\r\n    public setInt8 = (byteOffset: number, value: number) =>\r\n        super.setInt8(byteOffset + this.shift, value);\r\n    public setInt16 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setInt16(byteOffset + this.shift, value, littleEndian);\r\n    public setInt32 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setInt32(byteOffset + this.shift, value, littleEndian);\r\n    public setFloat32 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setFloat32(byteOffset + this.shift, value, littleEndian);\r\n    public setFloat64 = (byteOffset: number, value: number, littleEndian?: boolean) =>\r\n        super.setFloat64(byteOffset + this.shift, value, littleEndian);\r\n}\r\n\r\ntype ServerCmdFnType = (view: DataView, offset: number) => void;\r\n\r\nexport interface IInputPacketHandlerCallbacks {\r\n    /**\r\n     * Called before sending an input packet.\r\n     * @returns true to send the input to the server or false to drop it\r\n     * */\r\n    onSendInput(): boolean;\r\n}\r\n\r\nexport class InputPacketHandler implements GamepadDataHandler, TouchDataHandler {\r\n    private inputChannel: InputChannel;\r\n    private videoState: VideoState;\r\n    private telemetry: TelemetryHandler;\r\n    private streamClient: StreamClient;\r\n    private measurements: Measurements;\r\n    private _lastMoveSendTime: number = 0;\r\n    private _protocolVersion: number = 0;\r\n    // MTU set in WebRTC is 1200 - size of SCTP headers which is about 1188. Round down to 1150 \"to be safe\".\r\n    private buffer: ArrayBuffer = new ArrayBuffer(1150);\r\n    private bufferView = new DataView(this.buffer);\r\n    private touchBuffer: ArrayBuffer = new ArrayBuffer(\r\n        TOUCH_PACKET_OFFSET + TOUCH_HEADER_LENGTH + MAX_TOUCH_COUNT * TOUCH_RECORD_LENGTH\r\n    );\r\n    private touchBufferView: DataView = new DataView(this.touchBuffer);\r\n    private gamepadBufferView = new DataView(\r\n        new ArrayBuffer(Math.max(GAMEPAD_BUFFER_SIZE_V2, GAMEPAD_BUFFER_SIZE_V3))\r\n    );\r\n    private tempBuffer: ArrayBuffer = new ArrayBuffer(MAX_SINGLE_INPUT_PACKET);\r\n\r\n    private handleServerCommandFunc: ServerCmdFnType;\r\n\r\n    private sendTimerId: number = 0;\r\n\r\n    private moveEventBuffer: MoveEventBuffer;\r\n    private callbacks: IInputPacketHandlerCallbacks;\r\n\r\n    private prependScheduledMoves = this.prependScheduledMovesV2;\r\n    private getTempPacket = this.getTempPacketV2;\r\n\r\n    private vibrationHandlers: VibrationHandler[] = [];\r\n\r\n    constructor(\r\n        callbacks: IInputPacketHandlerCallbacks,\r\n        moveEventBuffer: MoveEventBuffer,\r\n        measurements: Measurements,\r\n        videoState: VideoState,\r\n        streamClient: StreamClient,\r\n        inputChannel: InputChannel,\r\n        telemetry: TelemetryHandler\r\n    ) {\r\n        this.callbacks = callbacks;\r\n        this.moveEventBuffer = moveEventBuffer;\r\n\r\n        this.streamClient = streamClient;\r\n        this.videoState = videoState;\r\n\r\n        this.inputChannel = inputChannel;\r\n        this.inputChannel.onmessage = evt => this.onMessage(evt);\r\n\r\n        this.telemetry = telemetry;\r\n        this.measurements = measurements;\r\n\r\n        this.handleServerCommandFunc = this.handleVibrationCommand.bind(this);\r\n\r\n        // v3 sends from SENT_TIMESTAMP_LEN; v2 from TOUCH_PACKET_OFFSET\r\n        this.touchBufferView.setUint8(SENT_TIMESTAMP_LEN, WireProtocolPacketId.RI_NO_SIZE);\r\n        this.touchBufferView.setUint32(TOUCH_PACKET_OFFSET, PacketId.PACKET_TOUCH_LOW_LEVEL, true);\r\n    }\r\n\r\n    public sendLockKeyState(state: number) {\r\n        const packet = this.getTempPacket(5);\r\n        packet.setUint32(0, PacketId.PACKET_LOCK_KEYS, true);\r\n        packet.setUint8(4, state);\r\n        try {\r\n            this.sendInput(packet);\r\n            Log.d(\"{57a6a4d}\", \"{56c9613}\", state.toString(2));\r\n        } catch (exp) {\r\n            let msg = \"LockKeys state synchronize exception\";\r\n            Log.e(\"{57a6a4d}\", \"{cbe483c}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    private onMessage(evt: MessageEvent) {\r\n        // Only interpret the first message received as server version. Version will always be > 0.\r\n        const view = new DataView(evt.data);\r\n        if (this._protocolVersion === 0) {\r\n            let first16 = view.getUint16(0, true);\r\n            if (first16 == ServerCommands.STREAMER_INPUT_CHANNEL_VERSINO_INFO) {\r\n                this.handleServerCommandFunc = this.handleServerCommand.bind(this);\r\n                this._protocolVersion = view.getUint16(2, true);\r\n            } else {\r\n                this.handleServerCommandFunc = this.handleVibrationCommand.bind(this);\r\n                this._protocolVersion = first16;\r\n            }\r\n\r\n            if (this._protocolVersion == 2) {\r\n                this.moveEventBuffer.supportsGrouping = true;\r\n            } else if (this._protocolVersion > 2) {\r\n                this.moveEventBuffer.supportsGrouping = true;\r\n                this.prependScheduledMoves = this.prependScheduledMovesV3;\r\n                this.getTempPacket = this.getTempPacketV3;\r\n            }\r\n            Log.i(\"{57a6a4d}\", \"{68c4654}\", this._protocolVersion);\r\n        } else {\r\n            this.handleServerCommandFunc(view, 0);\r\n        }\r\n    }\r\n\r\n    private handleServerCommand(view: DataView, offset: number) {\r\n        let first16 = view.getUint16(offset, true);\r\n        switch (first16) {\r\n            case ServerCommands.STREAMER_SERVER_HAPTICS_EVENT:\r\n                this.handleVibrationCommand(view, offset + 2);\r\n                break;\r\n            default:\r\n                // We assume that all RTC server-to-client communication in future will use aggregation.\r\n                let aggCmd = first16 & 0xff;\r\n                switch (aggCmd) {\r\n                    case WireProtocolPacketId.MOUSE_GROUP:\r\n                    case WireProtocolPacketId.RI_PACKET:\r\n                    case WireProtocolPacketId.RI_NO_SIZE:\r\n                    case WireProtocolPacketId.SENT_TIMESTAMP:\r\n                    case WireProtocolPacketId.CHROME_CALLBACK_TIMESTAMP:\r\n                    case WireProtocolPacketId.INPUT_GROUP:\r\n                        this.handleAggregateRiCommand(aggCmd, view, 1);\r\n                        break;\r\n                    default:\r\n                        // Not a valid aggregation command, nor a known server-to-client command.\r\n                        Log.w(\"{57a6a4d}\", \"{aea35b8}\", first16);\r\n                        break;\r\n                }\r\n        }\r\n    }\r\n\r\n    private handleAggregateRiCommand(cmd: number, view: DataView, offset: number) {\r\n        switch (cmd) {\r\n            case WireProtocolPacketId.RI_NO_SIZE:\r\n                this.handleBasicRiCommand(view, offset);\r\n                break;\r\n            default:\r\n                Log.d(\"{57a6a4d}\", \"{ba4ff6a}\", cmd);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private handleBasicRiCommand(view: DataView, offset: number) {\r\n        let riCmd = view.getUint32(offset + 0, true);\r\n        switch (riCmd) {\r\n            case PacketId.PACKET_HAPTICS_EVENT:\r\n                this.handleVibrationCommand(view, offset + 4);\r\n                break;\r\n            default:\r\n                Log.w(\"{57a6a4d}\", \"{25be6a3}\", riCmd);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private handleVibrationCommand(view: DataView, offset: number) {\r\n        // First byte is a HapticsCommand command - 0==NOOP, 1==SIMPLE, 2==DURATION\r\n        // TODO: Extend this or fix it so that non-haptics data could be sent as well.\r\n        const packetId = view.getUint16(offset + 0, true);\r\n        if (packetId == HapticsCommands.HAPTICS_SIMPLE) {\r\n            // Simple haptics command, no duration.\r\n            const size = view.getUint16(offset + 2, true);\r\n            if (size < 6) {\r\n                Log.e(\"{57a6a4d}\", \"{1527181}\", size);\r\n                return;\r\n            } else if (size > 6) {\r\n                Log.w(\"{57a6a4d}\", \"{78db114}\", size);\r\n            }\r\n            const index = view.getUint16(offset + 4, true);\r\n            const lMotorSpeed = view.getUint16(offset + 6, true);\r\n            const rMotorSpeed = view.getUint16(offset + 8, true);\r\n            for (const vibrationHandler of this.vibrationHandlers) {\r\n                vibrationHandler.handleSimpleVibration(index, lMotorSpeed, rMotorSpeed);\r\n            }\r\n        } else {\r\n            // Note: Server code currently doesn't use anything except HAPTICS_SIMPLE for haptics.\r\n            Log.w(\"{57a6a4d}\", \"{c7cf6da}\", packetId);\r\n        }\r\n    }\r\n\r\n    public sendMouseDown(button: number, ts: number /*ms*/) {\r\n        const packet = this.getTempPacket(18);\r\n        packet.setUint32(0, PacketId.PACKET_MOUSEDOWN, true); // little endian format.\r\n        packet.setUint8(4, button + 1); //JS button order directly map with NVST, except that NVSTbuttons starts with value 1.\r\n        packet.setUint8(5, 0);\r\n        packet.setUint32(6, 0);\r\n        setUint64(ts, packet, 10, false, 1000);\r\n\r\n        try {\r\n            this.sendInput(packet);\r\n        } catch (exp) {\r\n            let msg = \"send mousedown exception\";\r\n            Log.e(\"{57a6a4d}\", \"{b258856}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    public sendMouseUp(button: number, ts: number /*ms*/) {\r\n        const packet = this.getTempPacket(18);\r\n        packet.setUint32(0, PacketId.PACKET_MOUSEUP, true); // little endian format.\r\n        packet.setUint8(4, button + 1);\r\n        packet.setUint8(5, 0);\r\n        packet.setUint32(6, 0);\r\n        setUint64(ts, packet, 10, false, 1000);\r\n\r\n        try {\r\n            this.sendInput(packet);\r\n        } catch (exp) {\r\n            let msg = \"send mouseup exception\";\r\n            Log.e(\"{57a6a4d}\", \"{c1ae1fc}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    public sendMouseWheel(deltaY: number, ts: number /*ms*/) {\r\n        const packet = this.getTempPacket(22);\r\n        packet.setUint32(0, PacketId.PACKET_MOUSEWHEEL, true); // little endian format.\r\n        packet.setUint16(4, 0, false);\r\n        /* The values sent by browser is of opposite sign compared to what native clients receive. */\r\n        packet.setUint16(6, -deltaY, false);\r\n        packet.setUint16(8, 0, false);\r\n        packet.setUint32(10, 0);\r\n        setUint64(ts, packet, 14, false, 1000);\r\n\r\n        try {\r\n            this.sendInput(packet);\r\n        } catch (exp) {\r\n            let msg = \"send mousewheel exception\";\r\n            Log.e(\"{57a6a4d}\", \"{3d81a57}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n    // Input coordinates must be pre-scaled to account for the session size:\r\n    //\r\n    // Absolute coordinates are scaled such that events at the bottom-right of the\r\n    //  client session area are at the maximum X resolution and maximum Y resolution values.\r\n    public sendCursorPos(absolute: boolean, x: number, y: number, ts: number = 0) {\r\n        const packetSize = getMoveEventSize(absolute);\r\n        const packet = this.getTempPacket(packetSize);\r\n\r\n        this.fillMovePacket(packet, 0, absolute, x, y, ts);\r\n        try {\r\n            if (this.channelOpen()) {\r\n                this.sendInput(packet);\r\n            }\r\n        } catch (exp) {\r\n            let msg = \"send CursorPos exception\";\r\n            Log.e(\"{57a6a4d}\", \"{dba1265}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    /// Returns the index of the first byte after the header.\r\n    private fillMouseGroupHeader(\r\n        view: DataView,\r\n        index: number,\r\n        totalSize: number,\r\n        callbackTimestamp: number /*ms*/,\r\n        sendTimestamp: number /*ms*/\r\n    ) {\r\n        view.setUint8(index + 0, WireProtocolPacketId.MOUSE_GROUP);\r\n        view.setUint16(index + 1, totalSize, false);\r\n\r\n        setUint64(sendTimestamp, view, index + 3, false, 1000);\r\n        setUint64(callbackTimestamp, view, index + 11, false, 1000);\r\n        return index + MOUSE_GROUP_HEADER_LEN;\r\n    }\r\n\r\n    /// Returns the index of the first byte after the mouse group packet.\r\n    private fillMouseGroupPacketV2(\r\n        view: DataView,\r\n        packetIndex: number,\r\n        firstIndex: number,\r\n        sendTimestampMs: number\r\n    ): number {\r\n        const firstEvent: MoveEvent = this.moveEventBuffer.moveEvents[firstIndex];\r\n        const groupStartIndex = packetIndex;\r\n        // Skip the header for now. We'll write it last once we know the total size of all events.\r\n        packetIndex += MOUSE_GROUP_HEADER_LEN;\r\n        for (let i = 0; i < firstEvent.groupSize; ++i) {\r\n            const moveEvent: MoveEvent = this.moveEventBuffer.moveEvents[firstIndex + i];\r\n            view.setUint8(packetIndex, getMoveEventSize(moveEvent.absPos));\r\n            packetIndex++;\r\n            packetIndex = this.fillMovePacket(\r\n                view,\r\n                packetIndex,\r\n                moveEvent.absPos,\r\n                moveEvent.x,\r\n                moveEvent.y,\r\n                moveEvent.captureTimestamp\r\n            );\r\n        }\r\n        const groupTotalSize = packetIndex - groupStartIndex;\r\n        this.fillMouseGroupHeader(\r\n            view,\r\n            groupStartIndex,\r\n            groupTotalSize,\r\n            firstEvent.callbackTimestamp,\r\n            sendTimestampMs\r\n        );\r\n        return packetIndex;\r\n    }\r\n\r\n    /// Returns the index of the first byte after the packet.\r\n    private fillMovePacket(\r\n        view: DataView,\r\n        index: number,\r\n        absolute: boolean,\r\n        x: number,\r\n        y: number,\r\n        ts: number = 0 /*ms*/\r\n    ): number {\r\n        let sessionWidth = this.videoState.displayVideoWidth;\r\n        let sessionHeight = this.videoState.displayVideoHeight;\r\n\r\n        let packetype = PacketId.PACKET_MOUSEMOVE_REL;\r\n        if (absolute) {\r\n            packetype = PacketId.PACKET_MOUSEMOVE_ABS;\r\n        }\r\n\r\n        let videoDimensionOffset = 0;\r\n        if (packetype == PacketId.PACKET_MOUSEMOVE_ABS) {\r\n            videoDimensionOffset = 4;\r\n        }\r\n\r\n        view.setUint32(index + 0, packetype, true); // little endian format.\r\n        view.setUint16(index + 4, x, false);\r\n        view.setUint16(index + 6, y, false);\r\n        view.setUint16(index + 8, 0, false); // modifier flags\r\n        view.setUint32(index + 10 + videoDimensionOffset, 0, false); // window handle\r\n        setUint64(ts, view, index + 14 + videoDimensionOffset, false, 1000);\r\n        if (videoDimensionOffset) {\r\n            view.setUint16(index + 10, sessionWidth, false);\r\n            view.setUint16(index + 12, sessionHeight, false);\r\n        }\r\n        return index + getMoveEventSize(absolute);\r\n    }\r\n\r\n    public sendKeyboardEvent(\r\n        packetId: number,\r\n        keyCode: number,\r\n        flags: number,\r\n        ts: number = 0 /*ms*/\r\n    ) {\r\n        if (packetId !== PacketId.PACKET_KEYUP && packetId !== PacketId.PACKET_KEYDOWN) {\r\n            Log.e(\"{57a6a4d}\", \"{66e269d}\", packetId);\r\n            return;\r\n        }\r\n\r\n        const packet = this.getTempPacket(18);\r\n        packet.setUint32(0, packetId, true); // little endian format.\r\n        packet.setUint16(4, keyCode, false); // big endian format\r\n        packet.setUint16(6, flags, false);\r\n        packet.setUint16(8, 0, false);\r\n        setUint64(ts, packet, 10, false, 1000);\r\n\r\n        this.sendInput(packet);\r\n    }\r\n\r\n    public sendHeartbeatEvent() {\r\n        const packet = this.getTempPacket(10);\r\n        packet.setUint32(0, PacketId.PACKET_HEARTBEAT, true);\r\n        try {\r\n            this.inputChannel.send(packet);\r\n            Log.d(\"{57a6a4d}\", \"{5693344}\");\r\n        } catch (exp) {\r\n            let msg = \"heartbeat exception\";\r\n            Log.e(\"{57a6a4d}\", \"{ab52f04}\", exp);\r\n            this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n        }\r\n    }\r\n\r\n    /// Sends specified input buffer to the server-side\r\n    /// If available, scheduled packets are prepended to the packet.\r\n    /// Allow an undefined/missing buffer to trigger sending of scheduled packets\r\n    private sendInput(buffer?: DataView, prependTimestamp: boolean = true): boolean {\r\n        if (this.hasScheduledPackets()) {\r\n            buffer = this.prependScheduledMoves(buffer);\r\n        }\r\n        if (buffer === undefined) {\r\n            return false;\r\n        }\r\n\r\n        const before = window.performance.now();\r\n        if (!this.callbacks.onSendInput()) {\r\n            return false;\r\n        }\r\n\r\n        let result = false;\r\n        if (this._protocolVersion > 2 && prependTimestamp) {\r\n            if (buffer.byteOffset < SENT_TIMESTAMP_LEN) {\r\n                Log.w(\"{57a6a4d}\", \"{0fc6121}\");\r\n            } else {\r\n                buffer = new DataView(\r\n                    buffer.buffer,\r\n                    buffer.byteOffset - SENT_TIMESTAMP_LEN,\r\n                    SENT_TIMESTAMP_LEN + buffer.byteLength\r\n                );\r\n                buffer.setUint8(0, WireProtocolPacketId.SENT_TIMESTAMP);\r\n                setUint64(RagnarokProfiler.getStreamTime(), buffer, 1, false, 1000);\r\n            }\r\n        }\r\n\r\n        try {\r\n            let t0 = performance.now();\r\n            this.inputChannel.send(buffer);\r\n            let t1 = performance.now();\r\n            this.streamClient.updateDcTimeDuration(t1 - t0);\r\n            const after = window.performance.now();\r\n            this.measurements.sendInputCount += 1;\r\n            const value = after - before;\r\n            if (value > 5) {\r\n                this.measurements.sendInputOver5ms += 1;\r\n            }\r\n            if (value > 10) {\r\n                this.measurements.sendInputOver10ms += 1;\r\n            }\r\n            result = true;\r\n        } catch (exp) {\r\n            if (exp.stack && !exp.stack.includes(\"Could not send data\")) {\r\n                //@todo evaluate telemetry and fail the session if aaplicable\r\n                let msg = \"sendinput exception\";\r\n                Log.e(\"{57a6a4d}\", \"{7a6bf7c}\", exp);\r\n                // only emit exceptions when the channel is open\r\n                if (this.channelOpen()) {\r\n                    this.telemetry.emitExceptionEvent(exp, msg, \"{57a6a4d}.ts\", 0, 0, true);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getScheduledPacketSizeV2(): number {\r\n        let totalSize = 1;\r\n        let i = 0;\r\n        while (i < this.moveEventBuffer.moveEventIndex) {\r\n            totalSize += 2;\r\n            const groupSize = this.moveEventBuffer.moveEvents[i].groupSize;\r\n            if (groupSize > 0) {\r\n                totalSize += MOUSE_GROUP_HEADER_LEN;\r\n                for (let groupIndex = 0; groupIndex < groupSize; groupIndex++) {\r\n                    totalSize +=\r\n                        1 +\r\n                        getMoveEventSize(this.moveEventBuffer.moveEvents[i + groupIndex].absPos);\r\n                }\r\n                i += groupSize;\r\n            } else {\r\n                totalSize += getMoveEventSize(this.moveEventBuffer.moveEvents[i].absPos);\r\n                i++;\r\n            }\r\n        }\r\n        return totalSize;\r\n    }\r\n\r\n    private getScheduledPacketSizeV3(): number {\r\n        let totalSize = 0;\r\n        let groupSize = -1;\r\n        const packetPrefixSize = 3; // id + size\r\n        for (let i = 0; i < this.moveEventBuffer.moveEventIndex; i++) {\r\n            if (this.moveEventBuffer.moveEvents[i].groupSize > 0) {\r\n                totalSize += CHROME_CALLBACK_LEN;\r\n                groupSize = this.moveEventBuffer.moveEvents[i].groupSize;\r\n            } else if (groupSize === 0) {\r\n                // workaround to end mouse group\r\n                totalSize += CHROME_CALLBACK_LEN;\r\n            }\r\n            totalSize +=\r\n                packetPrefixSize + getMoveEventSize(this.moveEventBuffer.moveEvents[i].absPos);\r\n            groupSize--;\r\n        }\r\n        return totalSize;\r\n    }\r\n\r\n    public hasScheduledPackets(): boolean {\r\n        return this.moveEventBuffer.moveEventIndex > 0;\r\n    }\r\n\r\n    public timeScheduledPackets(delay: number) {\r\n        this.sendTimerId = window.setTimeout(() => {\r\n            this.sendTimerId = 0;\r\n            this.sendScheduledPackets();\r\n        }, delay);\r\n    }\r\n\r\n    /// Sends all scheduled packets.\r\n    public sendScheduledPackets() {\r\n        this.sendInput();\r\n    }\r\n\r\n    private prependScheduledMovesV2(extraPacket?: DataView): DataView {\r\n        if (this.sendTimerId !== 0) {\r\n            window.clearTimeout(this.sendTimerId);\r\n            this.sendTimerId = 0;\r\n        }\r\n        const now = performance.now();\r\n        this._lastMoveSendTime = now;\r\n\r\n        // The resulting packet looks like this:\r\n        // u8: 0xFF (indicating this is an event group)\r\n        // u16: size of next packet\r\n        // bytes: packet\r\n        // u16: size of next packet\r\n        // bytes: packet\r\n        // etc...\r\n        const extraBytes = extraPacket ? 2 + extraPacket.byteLength : 0;\r\n        const totalSize = this.getScheduledPacketSizeV2() + extraBytes;\r\n        let totalPacket: DataView;\r\n        // Try to use our stored move buffer if it will fit our scheduled packet. Otherwise, allocate a larger one.\r\n        // This should not happen frequently since our buffer is able to fit more than 16 mouse events, the max we\r\n        // expect to see in one frame.\r\n        if (totalSize > this.buffer.byteLength) {\r\n            totalPacket = new DataView(new ArrayBuffer(totalSize));\r\n            this.measurements.oversizedEventCount++;\r\n        } else {\r\n            totalPacket = new DataView(this.buffer, 0, totalSize);\r\n        }\r\n        totalPacket.setUint8(0, WireProtocolPacketId.INPUT_GROUP);\r\n\r\n        let packetIndex = 1;\r\n        // Use a while loop instead of a for loop because we can handle more than one event\r\n        // in each iteration.\r\n        let i = 0;\r\n        while (i < this.moveEventBuffer.moveEventIndex) {\r\n            const packetSizeIndex = packetIndex;\r\n            packetIndex += 2;\r\n            const moveEvent: MoveEvent = this.moveEventBuffer.moveEvents[i];\r\n            if (moveEvent.groupSize > 0) {\r\n                packetIndex = this.fillMouseGroupPacketV2(totalPacket, packetIndex, i, now);\r\n                i += moveEvent.groupSize;\r\n            } else {\r\n                packetIndex = this.fillMovePacket(\r\n                    totalPacket,\r\n                    packetIndex,\r\n                    moveEvent.absPos,\r\n                    moveEvent.x,\r\n                    moveEvent.y,\r\n                    moveEvent.captureTimestamp\r\n                );\r\n                i++;\r\n            }\r\n            // Write the packet size now that we know how big it was.\r\n            totalPacket.setUint16(packetSizeIndex, packetIndex - packetSizeIndex - 2);\r\n        }\r\n        this.moveEventBuffer.clear();\r\n\r\n        if (extraPacket) {\r\n            totalPacket.setUint16(packetIndex, extraPacket.byteLength);\r\n            packetIndex += 2;\r\n            for (let i = 0; i < extraPacket.byteLength; i++) {\r\n                totalPacket.setUint8(packetIndex + i, extraPacket.getUint8(i));\r\n            }\r\n            packetIndex += extraPacket.byteLength;\r\n        }\r\n        return totalPacket;\r\n    }\r\n\r\n    private prependScheduledMovesV3(extraPacket?: DataView): DataView {\r\n        if (extraPacket && extraPacket.buffer != this.buffer) {\r\n            // not allowing bulking of scheduled events with packets not created by InputPacketHandler\r\n            this.sendScheduledPackets();\r\n            return extraPacket;\r\n        }\r\n\r\n        if (this.sendTimerId !== 0) {\r\n            window.clearTimeout(this.sendTimerId);\r\n            this.sendTimerId = 0;\r\n        }\r\n        this._lastMoveSendTime = performance.now();\r\n\r\n        const totalSize = this.getScheduledPacketSizeV3() + (extraPacket?.byteLength ?? 0);\r\n        const necessaryBufferSize = SENT_TIMESTAMP_LEN + totalSize;\r\n        let totalPacket: DataView;\r\n        if (necessaryBufferSize > this.buffer.byteLength) {\r\n            totalPacket = new DataView(\r\n                new ArrayBuffer(necessaryBufferSize),\r\n                necessaryBufferSize - totalSize,\r\n                totalSize\r\n            );\r\n            this.measurements.oversizedEventCount++;\r\n            if (extraPacket) {\r\n                const offset = totalPacket.byteLength - extraPacket.byteLength;\r\n                for (let i = 0; i < extraPacket.byteLength; i++) {\r\n                    totalPacket.setUint8(offset + i, extraPacket.getUint8(i));\r\n                }\r\n            }\r\n        } else {\r\n            totalPacket = new DataView(this.buffer, this.buffer.byteLength - totalSize, totalSize);\r\n        }\r\n\r\n        let packetIndex = 0;\r\n        let groupSize = -1;\r\n        for (let i = 0; i < this.moveEventBuffer.moveEventIndex; i++) {\r\n            const moveEvent: MoveEvent = this.moveEventBuffer.moveEvents[i];\r\n            if (moveEvent.groupSize > 0) {\r\n                groupSize = moveEvent.groupSize;\r\n                // write chrome callback ts for the group\r\n                totalPacket.setUint8(packetIndex, WireProtocolPacketId.CHROME_CALLBACK_TIMESTAMP);\r\n                setUint64(moveEvent.callbackTimestamp, totalPacket, packetIndex + 1, false, 1000);\r\n                packetIndex += CHROME_CALLBACK_LEN;\r\n            } else if (groupSize === 0) {\r\n                // workaround to end mouse group count on server\r\n                totalPacket.setUint8(packetIndex, WireProtocolPacketId.CHROME_CALLBACK_TIMESTAMP);\r\n                setUint64(0, totalPacket, packetIndex + 1, false, 1000);\r\n                packetIndex += CHROME_CALLBACK_LEN;\r\n            }\r\n\r\n            totalPacket.setUint8(packetIndex, WireProtocolPacketId.RI_PACKET);\r\n            totalPacket.setUint16(packetIndex + 1, getMoveEventSize(moveEvent.absPos));\r\n            packetIndex = this.fillMovePacket(\r\n                totalPacket,\r\n                packetIndex + 3,\r\n                moveEvent.absPos,\r\n                moveEvent.x,\r\n                moveEvent.y,\r\n                moveEvent.captureTimestamp\r\n            );\r\n            groupSize--;\r\n        }\r\n        this.moveEventBuffer.clear();\r\n\r\n        return totalPacket;\r\n    }\r\n\r\n    /// Returns a temporary DataView of the given length.\r\n    /// This DataView is only valid until the next call to this function.\r\n    private getTempPacketV2(length: number): ShiftedDataView {\r\n        return new ShiftedDataView(this.tempBuffer, 0, length);\r\n    }\r\n\r\n    /// Returns a temporary DataView for an RI packet located at the end of the buffer.\r\n    /// This location allows for direct prepending of scheduled events without moving the returned packet.\r\n    /// \\todo Only return offset to an overall bufferDV and only create a new DataView\r\n    /// before sending across the network. This way we'll have only one DataView instantiation\r\n    /// per packet no matter what.\r\n    private getTempPacketV3(length: number): ShiftedDataView {\r\n        length = length + 1 /* id */;\r\n        const offset = this.buffer.byteLength - length;\r\n        let dv = new ShiftedDataView(this.buffer, offset, length, 1);\r\n        // the last RI packet always has this id in protocol v3\r\n        this.bufferView.setUint8(offset, WireProtocolPacketId.RI_NO_SIZE);\r\n        return dv;\r\n    }\r\n\r\n    public sendTextInput(text: ArrayBuffer) {\r\n        let bytesSent = 0;\r\n        // TODO: This should re-use a buffer instead of creating one every time. It could even use tempBuffer if\r\n        // tempBuffer was increased to MTU size\r\n        const MAX_DATA_LEN = 1016;\r\n        let textView = new DataView(text, 0, text.byteLength);\r\n        let sendBuffer = new ArrayBuffer(MAX_DATA_LEN + 5);\r\n        while (bytesSent < text.byteLength) {\r\n            let textChunkToSend = 0;\r\n            if (text.byteLength - bytesSent <= MAX_DATA_LEN) {\r\n                textChunkToSend = text.byteLength - bytesSent;\r\n            } else {\r\n                textChunkToSend = bytesSent + MAX_DATA_LEN;\r\n                let foundCodePoint = false;\r\n                //utf-8 code can be of 4 bytes max\r\n                for (let i = 0; i < 4; i++) {\r\n                    if ((textView.getUint8(textChunkToSend) & 0xc0) != 0x80) {\r\n                        foundCodePoint = true;\r\n                        break;\r\n                    } else {\r\n                        textChunkToSend--; // Unrecognized lead byte\r\n                    }\r\n                }\r\n\r\n                if (foundCodePoint) {\r\n                    textChunkToSend -= bytesSent;\r\n                } else {\r\n                    Log.e(\"{57a6a4d}\", \"{938b0d3}\");\r\n                    break;\r\n                }\r\n            }\r\n            let sendBufferView = new DataView(sendBuffer, 0, textChunkToSend + 5);\r\n            sendBufferView.setUint8(0, WireProtocolPacketId.RI_NO_SIZE);\r\n            sendBufferView.setUint32(1, PacketId.PACKET_UNICODE, true); // little endian format.\r\n            new Uint8Array(sendBuffer).set(new Uint8Array(text, bytesSent, textChunkToSend), 5);\r\n            bytesSent += textChunkToSend;\r\n            this.sendInput(sendBufferView, false);\r\n        }\r\n    }\r\n\r\n    public channelOpen(): boolean {\r\n        return this.inputChannel.readyState === \"open\";\r\n    }\r\n\r\n    public stop() {\r\n        if (this.inputChannel.bufferedAmount > 0) {\r\n            Log.w(\"{57a6a4d}\", \"{5e5b9e5}\", this.inputChannel.bufferedAmount);\r\n        }\r\n    }\r\n\r\n    public get protocolVersion(): number {\r\n        return this._protocolVersion;\r\n    }\r\n\r\n    public get lastMoveSendTime(): number {\r\n        return this._lastMoveSendTime;\r\n    }\r\n\r\n    private toHexString(buffer: ArrayBuffer) {\r\n        let byteArray = new Uint8Array(buffer);\r\n        return Array.prototype.map\r\n            .call(byteArray, function (byte: number) {\r\n                return (\"0\" + (byte & 0xff).toString(16)).slice(-2);\r\n            })\r\n            .join(\"\");\r\n    }\r\n\r\n    private populateMultiGamepadPacket(\r\n        packet: DataView,\r\n        offset: number,\r\n        index: number,\r\n        buttons: number,\r\n        trigger: number,\r\n        axes: readonly number[],\r\n        ts: number = 0 /*ms*/,\r\n        gamepadBitmap: number = 0\r\n    ) {\r\n        packet.setUint32(offset, PacketId.PACKET_GAMEPAD_MULTIUSER, true);\r\n        packet.setInt16(offset + 4, 0x001a, true);\r\n\r\n        packet.setInt16(offset + 6, index, true); // gamepad index\r\n        packet.setInt16(offset + 8, gamepadBitmap, true); // gamepads bitmap\r\n\r\n        packet.setInt16(offset + 6 + 4, 0x0014, true);\r\n        packet.setInt16(offset + 6 + 6, buttons, true);\r\n        packet.setInt16(offset + 6 + 8, trigger, true);\r\n\r\n        // Axes in NVST procotol are:\r\n        //  1ittle-endian signed 16bit value, -ve left, -ve bottom\r\n        //  16-17 - left stick X\r\n        //  18-19 - left stick Y\r\n        //  20-21 - right stick X\r\n        //  12-23 - right stick Y\r\n        packet.setInt16(offset + 6 + 10, Math.round((axes[0] + 1.0) * 32767.5) - 32768, true);\r\n        packet.setInt16(offset + 6 + 12, Math.round((-axes[1] + 1.0) * 32767.5) - 32768, true);\r\n        packet.setInt16(offset + 6 + 14, Math.round((axes[2] + 1.0) * 32767.5) - 32768, true);\r\n        packet.setInt16(offset + 6 + 16, Math.round((-axes[3] + 1.0) * 32767.5) - 32768, true);\r\n        packet.setInt16(offset + 6 + 18, 0, true);\r\n        packet.setInt16(offset + 6 + 20, 0x0055, true);\r\n        packet.setInt16(offset + 6 + 22, 0x0000, true);\r\n        setUint64(ts, packet, offset + 6 + 24, true, 1000);\r\n\r\n        // Log.d(\"{57a6a4d}\", \"{0b0c6f9}\", this.toHexString(inputPacket));\r\n    }\r\n\r\n    private getMultiGamepadPacket(\r\n        buttons: number,\r\n        trigger: number,\r\n        index: number,\r\n        axes: readonly number[],\r\n        ts: number = 0,\r\n        gamepadBitmap: number = 0\r\n    ): DataView {\r\n        const packet = this.getTempPacket(GAMEPAD_PACKET_SIZE);\r\n        this.populateMultiGamepadPacket(\r\n            packet,\r\n            0,\r\n            index,\r\n            buttons,\r\n            trigger,\r\n            axes,\r\n            ts,\r\n            gamepadBitmap\r\n        );\r\n        return packet;\r\n    }\r\n\r\n    public gamepadBitmapUpdateHandler(gamepadBitmap: number) {\r\n        const packet = this.getMultiGamepadPacket(\r\n            0,\r\n            0,\r\n            GamepadControlIndex,\r\n            {} as number[],\r\n            0,\r\n            gamepadBitmap\r\n        );\r\n        this.sendInput(packet);\r\n    }\r\n\r\n    public gamepadStateUpdateHandler(\r\n        count: number,\r\n        index: number,\r\n        buttons: number,\r\n        trigger: number,\r\n        axes: readonly number[],\r\n        ts: number = 0,\r\n        gamepadBitmap: number\r\n    ) {\r\n        if (this._protocolVersion > 2) {\r\n            const mult = GAMEPAD_PACKET_SIZE + 3; // wire protocol id + size + content\r\n            const offset = SENT_TIMESTAMP_LEN + mult * count;\r\n            this.gamepadBufferView.setUint8(offset, WireProtocolPacketId.RI_PACKET);\r\n            this.gamepadBufferView.setUint16(offset + 1, GAMEPAD_PACKET_SIZE);\r\n            this.populateMultiGamepadPacket(\r\n                this.gamepadBufferView,\r\n                offset + 3,\r\n                index,\r\n                buttons,\r\n                trigger,\r\n                axes,\r\n                ts,\r\n                gamepadBitmap\r\n            );\r\n        } else if (this._protocolVersion == 2) {\r\n            const mult = GAMEPAD_PACKET_SIZE + 2; // size of gamepad data + 2 for bytecount\r\n            const offset = 1 + mult * count;\r\n\r\n            this.gamepadBufferView.setUint16(offset, GAMEPAD_PACKET_SIZE);\r\n            this.populateMultiGamepadPacket(\r\n                this.gamepadBufferView,\r\n                offset + 2,\r\n                index,\r\n                buttons,\r\n                trigger,\r\n                axes,\r\n                ts,\r\n                gamepadBitmap\r\n            );\r\n        } else {\r\n            const packet = this.getMultiGamepadPacket(\r\n                buttons,\r\n                trigger,\r\n                index,\r\n                axes,\r\n                ts,\r\n                gamepadBitmap\r\n            );\r\n            this.sendInput(packet);\r\n        }\r\n    }\r\n\r\n    public virtualGamepadUpdateHandler(\r\n        buttons: number,\r\n        trigger: number,\r\n        index: number,\r\n        axes: readonly number[],\r\n        gamepadBitmap: number = 0\r\n    ) {\r\n        const packet = this.getMultiGamepadPacket(buttons, trigger, index, axes, 0, gamepadBitmap);\r\n        this.sendInput(packet);\r\n    }\r\n\r\n    public finalizeGamepadData(count: number) {\r\n        // Only need to send data for newer protocols; packets will have been sent already\r\n        // for older protocols\r\n        if (this._protocolVersion < 2) return;\r\n\r\n        // Cannot yet group moves and multiple extra packets\r\n        this.sendScheduledPackets();\r\n        let totalPacketView = null;\r\n\r\n        if (this._protocolVersion > 2) {\r\n            const mult = GAMEPAD_PACKET_SIZE + 3;\r\n            totalPacketView = new DataView(\r\n                this.gamepadBufferView.buffer,\r\n                SENT_TIMESTAMP_LEN,\r\n                count * mult\r\n            );\r\n        } else if (this._protocolVersion == 2) {\r\n            this.gamepadBufferView.setUint8(0, WireProtocolPacketId.INPUT_GROUP);\r\n            const mult = GAMEPAD_PACKET_SIZE + 2;\r\n            totalPacketView = new DataView(this.gamepadBufferView.buffer, 0, 1 + count * mult);\r\n        }\r\n\r\n        if (totalPacketView) this.sendInput(totalPacketView);\r\n    }\r\n\r\n    public connectUnsupportedGamepad(gamepad: Gamepad) {}\r\n\r\n    public disconnectUnsupportedGamepad(index: number) {}\r\n\r\n    public sendGamepadHapticsControl(enable: boolean) {\r\n        const packet = this.getTempPacket(6);\r\n        packet.setUint32(0, PacketId.PACKET_HAPTICS_CONTROL, true);\r\n        packet.setUint16(4, enable ? 1 : 0, false);\r\n        this.sendInput(packet);\r\n    }\r\n\r\n    public addTouchEvent(\r\n        idx: number,\r\n        id: number,\r\n        touchType: TouchType,\r\n        x: number,\r\n        y: number,\r\n        radiusX: number,\r\n        radiusY: number,\r\n        ts: number /*ms*/\r\n    ) {\r\n        if (idx >= MAX_TOUCH_COUNT) {\r\n            return false;\r\n        }\r\n        const offset = TOUCH_PACKET_OFFSET + TOUCH_HEADER_LENGTH + idx * TOUCH_RECORD_LENGTH;\r\n        this.touchBufferView.setUint8(offset + 0, id);\r\n        this.touchBufferView.setUint8(offset + 1, touchType);\r\n        this.touchBufferView.setUint16(offset + 2, x, false);\r\n        this.touchBufferView.setUint16(offset + 4, y, false);\r\n        this.touchBufferView.setUint8(offset + 6, radiusX);\r\n        this.touchBufferView.setUint8(offset + 7, radiusY);\r\n        setUint64(ts, this.touchBufferView, offset + 8, false, 1000);\r\n        return true;\r\n    }\r\n\r\n    public sendTouchPacket(count: number): boolean {\r\n        let size = TOUCH_HEADER_LENGTH + count * TOUCH_RECORD_LENGTH;\r\n        this.touchBufferView.setUint16(TOUCH_PACKET_OFFSET + 4, size, false);\r\n        this.touchBufferView.setUint16(TOUCH_PACKET_OFFSET + 6, count, false);\r\n        let offset = TOUCH_PACKET_OFFSET;\r\n        if (this._protocolVersion >= 3) {\r\n            // add WireProtocolPacketId.RI_NO_SIZE to the DataView\r\n            // (it's already present in the buffer)\r\n            size++;\r\n            offset--;\r\n        }\r\n        const totalPacketView = new DataView(this.touchBufferView.buffer, offset, size);\r\n\r\n        // Don't take any chance that PACKET_TOUCH_LOW_LEVEL is too big to combine with\r\n        // other sent data (such as grouped mouse moves)\r\n        this.sendScheduledPackets();\r\n\r\n        return this.sendInput(totalPacketView);\r\n    }\r\n\r\n    public addVibrationHandler(vibrationHandler: VibrationHandler) {\r\n        this.vibrationHandlers.push(vibrationHandler);\r\n    }\r\n\r\n    public removeVibrationHandler(vibrationHandler: VibrationHandler) {\r\n        const index = this.vibrationHandlers.indexOf(vibrationHandler);\r\n        if (index > -1) {\r\n            this.vibrationHandlers.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getMoveEventSize(absolute: boolean) {\r\n    return absolute ? 26 : 22;\r\n}\r\n\r\nexport class MoveEventBuffer {\r\n    private _moveEvents: MoveEvent[];\r\n    public supportsGrouping: boolean = false;\r\n    private _moveEventIndex: number = 0;\r\n\r\n    constructor(bufferSize: number) {\r\n        this._moveEvents = new Array(bufferSize);\r\n        for (let i = 0; i < this.moveEvents.length; i++) {\r\n            this._moveEvents[i] = {\r\n                absPos: false,\r\n                x: 0,\r\n                y: 0,\r\n                captureTimestamp: 0,\r\n                groupSize: 0,\r\n                callbackTimestamp: 0\r\n            };\r\n        }\r\n    }\r\n\r\n    public get moveEvents(): ReadonlyArray<MoveEvent> {\r\n        return this._moveEvents as ReadonlyArray<MoveEvent>;\r\n    }\r\n\r\n    public get moveEventIndex(): number {\r\n        return this._moveEventIndex;\r\n    }\r\n\r\n    public clear() {\r\n        this._moveEventIndex = 0;\r\n    }\r\n\r\n    public setGroupSize(idx: number, groupSize: number) {\r\n        this._moveEvents[idx].groupSize = groupSize;\r\n    }\r\n\r\n    public addMoveEvent(\r\n        absolute: boolean,\r\n        x: number,\r\n        y: number,\r\n        captureTimestamp: number,\r\n        groupSize: number,\r\n        callbackTimestamp: number,\r\n        aggregate?: boolean\r\n    ) {\r\n        if (aggregate && this._moveEventIndex > 0) {\r\n            const target = this._moveEvents[this._moveEventIndex - 1];\r\n            // Make sure we can actually aggregate these events.\r\n            if (target.absPos === absolute && target.callbackTimestamp === callbackTimestamp) {\r\n                if (absolute) {\r\n                    target.x = x;\r\n                    target.y = y;\r\n                } else {\r\n                    target.x += x;\r\n                    target.y += y;\r\n                }\r\n                return;\r\n            }\r\n            // If we didn't aggregate, handle the event normally.\r\n        }\r\n\r\n        const actualGroupSize = this.supportsGrouping ? groupSize : 0;\r\n        if (this._moveEventIndex == this._moveEvents.length) {\r\n            this._moveEvents.push({\r\n                absPos: absolute,\r\n                x: x,\r\n                y: y,\r\n                captureTimestamp: captureTimestamp,\r\n                groupSize: actualGroupSize,\r\n                callbackTimestamp: callbackTimestamp\r\n            });\r\n            this._moveEventIndex++;\r\n        } else {\r\n            const target = this._moveEvents[this._moveEventIndex++];\r\n            target.absPos = absolute;\r\n            target.x = x;\r\n            target.y = y;\r\n            target.captureTimestamp = captureTimestamp;\r\n            target.groupSize = actualGroupSize;\r\n            target.callbackTimestamp = callbackTimestamp;\r\n        }\r\n    }\r\n}\r\n","// Based on https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\nexport const enum VIRTUAL_KEYS {\n    CODE_NONE = 0x00,\n\n    // Virtual Keys, Standard Set\n    CODE_LBUTTON = 0x01,\n    CODE_RBUTTON = 0x02,\n    CODE_CANCEL = 0x03,\n    CODE_MBUTTON = 0x04, // NOT contiguous with LBUTTON and RBUTTON\n    CODE_BACK = 0x08,\n    CODE_TAB = 0x09,\n    CODE_CLEAR = 0x0c,\n    CODE_RETURN = 0x0d,\n    CODE_SHIFT = 0x10,\n    CODE_CONTROL = 0x11,\n    CODE_MENU = 0x12,\n    CODE_PAUSE = 0x13,\n    CODE_CAPITAL = 0x14,\n    CODE_HANGUL = 0x15,\n    CODE_HANJA = 0x19,\n\n    CODE_ESCAPE = 0x1b,\n    CODE_SPACE = 0x20,\n    CODE_PRIOR = 0x21,\n    CODE_NEXT = 0x22,\n    CODE_END = 0x23,\n    CODE_HOME = 0x24,\n    CODE_LEFT = 0x25,\n    CODE_UP = 0x26,\n    CODE_RIGHT = 0x27,\n    CODE_DOWN = 0x28,\n    CODE_SELECT = 0x29,\n    CODE_PRINT = 0x2a,\n    CODE_EXECUTE = 0x2b,\n    CODE_SNAPSHOT = 0x2c,\n    CODE_INSERT = 0x2d,\n    CODE_DELETE = 0x2e,\n    CODE_HELP = 0x2f,\n\n    CODE_0 = 0x30,\n    CODE_1 = 0x31,\n    CODE_2 = 0x32,\n    CODE_3 = 0x33,\n    CODE_4 = 0x34,\n    CODE_5 = 0x35,\n    CODE_6 = 0x36,\n    CODE_7 = 0x37,\n    CODE_8 = 0x38,\n    CODE_9 = 0x39,\n\n    CODE_A = 0x41,\n    CODE_B = 0x42,\n    CODE_C = 0x43,\n    CODE_D = 0x44,\n    CODE_E = 0x45,\n    CODE_F = 0x46,\n    CODE_G = 0x47,\n    CODE_H = 0x48,\n    CODE_I = 0x49,\n    CODE_J = 0x4a,\n    CODE_K = 0x4b,\n    CODE_L = 0x4c,\n    CODE_M = 0x4d,\n    CODE_N = 0x4e,\n    CODE_O = 0x4f,\n    CODE_P = 0x50,\n    CODE_Q = 0x51,\n    CODE_R = 0x52,\n    CODE_S = 0x53,\n    CODE_T = 0x54,\n    CODE_U = 0x55,\n    CODE_V = 0x56,\n    CODE_W = 0x57,\n    CODE_X = 0x58,\n    CODE_Y = 0x59,\n    CODE_Z = 0x5a,\n    CODE_LWIN = 0x5b,\n    CODE_RWIN = 0x5c,\n    CODE_APPS = 0x5d,\n    CODE_NUMPAD0 = 0x60,\n    CODE_NUMPAD1 = 0x61,\n    CODE_NUMPAD2 = 0x62,\n    CODE_NUMPAD3 = 0x63,\n    CODE_NUMPAD4 = 0x64,\n    CODE_NUMPAD5 = 0x65,\n    CODE_NUMPAD6 = 0x66,\n    CODE_NUMPAD7 = 0x67,\n    CODE_NUMPAD8 = 0x68,\n    CODE_NUMPAD9 = 0x69,\n    CODE_MULTIPLY = 0x6a,\n    CODE_ADD = 0x6b,\n    CODE_SEPARATOR = 0x6c,\n    CODE_SUBTRACT = 0x6d,\n    CODE_DECIMAL = 0x6e,\n    CODE_DIVIDE = 0x6f,\n    CODE_F1 = 0x70,\n    CODE_F2 = 0x71,\n    CODE_F3 = 0x72,\n    CODE_F4 = 0x73,\n    CODE_F5 = 0x74,\n    CODE_F6 = 0x75,\n    CODE_F7 = 0x76,\n    CODE_F8 = 0x77,\n    CODE_F9 = 0x78,\n    CODE_F10 = 0x79,\n    CODE_F11 = 0x7a,\n    CODE_F12 = 0x7b,\n    CODE_F13 = 0x7c,\n    CODE_F14 = 0x7d,\n    CODE_F15 = 0x7e,\n    CODE_F16 = 0x7f,\n    CODE_F17 = 0x80,\n    CODE_F18 = 0x81,\n    CODE_F19 = 0x82,\n    CODE_F20 = 0x83,\n    CODE_F21 = 0x84,\n    CODE_F22 = 0x85,\n    CODE_F23 = 0x86,\n    CODE_F24 = 0x87,\n    CODE_NUMLOCK = 0x90,\n    CODE_SCROLL = 0x91,\n\n    // CODE_L* and CODE_R* - left and right Alt, Ctrl and Shift virtual keys.\n    // Used only as parameters to GetAsyncKeyState() and GetKeyState().\n    // No other API or message will distinguish left and right keys in this way.\n    CODE_LSHIFT = 0xa0,\n    CODE_RSHIFT = 0xa1,\n    CODE_LCONTROL = 0xa2,\n    CODE_RCONTROL = 0xa3,\n    CODE_LMENU = 0xa4,\n    CODE_RMENU = 0xa5,\n\n    CODE_PROCESSKEY = 0xe5,\n\n    CODE_ATTN = 0xf6,\n    CODE_CRSEL = 0xf7,\n    CODE_EXSEL = 0xf8,\n    CODE_EREOF = 0xf9,\n    CODE_PLAY = 0xfa,\n    CODE_ZOOM = 0xfb,\n    CODE_NONAME = 0xfc,\n    CODE_PA1 = 0xfd,\n    CODE_OEM_CLEAR = 0xfe,\n\n    END_OF_ASCII_RANGE = 0xff,\n\n    CODE_OEM_1 = 0xba, // ';:' for US\n    CODE_OEM_PLUS = 0xbb, // '+' any country\n    CODE_OEM_COMMA = 0xbc, // ',' any country\n    CODE_OEM_MINUS = 0xbd, // '-' any country\n    CODE_OEM_PERIOD = 0xbe, // '.' any country\n    CODE_OEM_2 = 0xbf, // '/?' for US\n    CODE_OEM_3 = 0xc0, // '`~' for US\n    CODE_OEM_4 = 0xdb, // '[{' for US\n    CODE_OEM_5 = 0xdc, // '\\|' for US\n    CODE_OEM_6 = 0xdd, // ']}' for US\n    CODE_OEM_7 = 0xde, // ''\"' for US\n    CODE_OEM_BACKSLASH = 0xe2, // '/<>|' for non-US\n\n    // On Windows, for Japanese keyboard, this key is mapped to one of the VK_OEM_* virtual keys.\n    // Looks like keyboard logic in GS assumes that physicalKey<->vk mapping is constant across languages/layouts.\n    // This holds true for all 101/102-key layouts except for 106/109-key layout (Japanese keyboard).\n    // So can't use VK_OEM_* which is tied to another physical key, instead defining one from unassigned range 0xC1-0xD7\n    CODE_YEN = 0xc1,\n    CODE_RO = 0xc2,\n\n    // Japanese 106 keyboard toggle keys\n    CODE_HIRAGANA_KATAKANA = 0xe9, // 106/109 Japanese toggle key - 2nd on right of space [ScanCode:70]\n    CODE_HENKAN_ZENKOUHO = 0xea, // 106/109 Japanese toggle key - right of space[ScanCode:79]\n    CODE_MUHENKAN = 0xeb // 106/109 Japanese toggle key - left of space [ScanCode:7B]\n}\n\nexport const CODE_TO_VK_MAP = new Map([\n    [\"Escape\", VIRTUAL_KEYS.CODE_ESCAPE],\n    [\"Digit0\", VIRTUAL_KEYS.CODE_0],\n    [\"Digit1\", VIRTUAL_KEYS.CODE_1],\n    [\"Digit2\", VIRTUAL_KEYS.CODE_2],\n    [\"Digit3\", VIRTUAL_KEYS.CODE_3],\n    [\"Digit4\", VIRTUAL_KEYS.CODE_4],\n    [\"Digit5\", VIRTUAL_KEYS.CODE_5],\n    [\"Digit6\", VIRTUAL_KEYS.CODE_6],\n    [\"Digit7\", VIRTUAL_KEYS.CODE_7],\n    [\"Digit8\", VIRTUAL_KEYS.CODE_8],\n    [\"Digit9\", VIRTUAL_KEYS.CODE_9],\n    [\"Minus\", VIRTUAL_KEYS.CODE_OEM_MINUS],\n    [\"Equal\", VIRTUAL_KEYS.CODE_OEM_PLUS],\n    [\"Backspace\", VIRTUAL_KEYS.CODE_BACK],\n    [\"Tab\", VIRTUAL_KEYS.CODE_TAB],\n    [\"KeyQ\", VIRTUAL_KEYS.CODE_Q],\n    [\"KeyW\", VIRTUAL_KEYS.CODE_W],\n    [\"KeyE\", VIRTUAL_KEYS.CODE_E],\n    [\"KeyR\", VIRTUAL_KEYS.CODE_R],\n    [\"KeyT\", VIRTUAL_KEYS.CODE_T],\n    [\"KeyY\", VIRTUAL_KEYS.CODE_Y],\n    [\"KeyU\", VIRTUAL_KEYS.CODE_U],\n    [\"KeyI\", VIRTUAL_KEYS.CODE_I],\n    [\"KeyO\", VIRTUAL_KEYS.CODE_O],\n    [\"KeyP\", VIRTUAL_KEYS.CODE_P],\n    [\"BracketLeft\", VIRTUAL_KEYS.CODE_OEM_4],\n    [\"BracketRight\", VIRTUAL_KEYS.CODE_OEM_6],\n    [\"Enter\", VIRTUAL_KEYS.CODE_RETURN],\n    [\"ControlLeft\", VIRTUAL_KEYS.CODE_LCONTROL],\n    [\"KeyA\", VIRTUAL_KEYS.CODE_A],\n    [\"KeyS\", VIRTUAL_KEYS.CODE_S],\n    [\"KeyD\", VIRTUAL_KEYS.CODE_D],\n    [\"KeyF\", VIRTUAL_KEYS.CODE_F],\n    [\"KeyG\", VIRTUAL_KEYS.CODE_G],\n    [\"KeyH\", VIRTUAL_KEYS.CODE_H],\n    [\"KeyJ\", VIRTUAL_KEYS.CODE_J],\n    [\"KeyK\", VIRTUAL_KEYS.CODE_K],\n    [\"KeyL\", VIRTUAL_KEYS.CODE_L],\n    [\"Semicolon\", VIRTUAL_KEYS.CODE_OEM_1],\n    [\"Quote\", VIRTUAL_KEYS.CODE_OEM_7],\n    [\"Backquote\", VIRTUAL_KEYS.CODE_OEM_3],\n    [\"ShiftLeft\", VIRTUAL_KEYS.CODE_LSHIFT],\n    [\"Backslash\", VIRTUAL_KEYS.CODE_OEM_5],\n    [\"KeyZ\", VIRTUAL_KEYS.CODE_Z],\n    [\"KeyX\", VIRTUAL_KEYS.CODE_X],\n    [\"KeyC\", VIRTUAL_KEYS.CODE_C],\n    [\"KeyV\", VIRTUAL_KEYS.CODE_V],\n    [\"KeyB\", VIRTUAL_KEYS.CODE_B],\n    [\"KeyN\", VIRTUAL_KEYS.CODE_N],\n    [\"KeyM\", VIRTUAL_KEYS.CODE_M],\n    [\"Comma\", VIRTUAL_KEYS.CODE_OEM_COMMA],\n    [\"Period\", VIRTUAL_KEYS.CODE_OEM_PERIOD],\n    [\"Slash\", VIRTUAL_KEYS.CODE_OEM_2],\n    [\"ShiftRight\", VIRTUAL_KEYS.CODE_RSHIFT],\n    [\"NumpadMultiply\", VIRTUAL_KEYS.CODE_MULTIPLY],\n    [\"AltLeft\", VIRTUAL_KEYS.CODE_LMENU],\n    [\"Space\", VIRTUAL_KEYS.CODE_SPACE],\n    [\"CapsLock\", VIRTUAL_KEYS.CODE_CAPITAL],\n    [\"F1\", VIRTUAL_KEYS.CODE_F1],\n    [\"F2\", VIRTUAL_KEYS.CODE_F2],\n    [\"F3\", VIRTUAL_KEYS.CODE_F3],\n    [\"F4\", VIRTUAL_KEYS.CODE_F4],\n    [\"F5\", VIRTUAL_KEYS.CODE_F5],\n    [\"F6\", VIRTUAL_KEYS.CODE_F6],\n    [\"F7\", VIRTUAL_KEYS.CODE_F7],\n    [\"F8\", VIRTUAL_KEYS.CODE_F8],\n    [\"F9\", VIRTUAL_KEYS.CODE_F9],\n    [\"F10\", VIRTUAL_KEYS.CODE_F10],\n    [\"Pause\", VIRTUAL_KEYS.CODE_PAUSE],\n    [\"ScrollLock\", VIRTUAL_KEYS.CODE_SCROLL],\n    [\"Numpad7\", VIRTUAL_KEYS.CODE_NUMPAD7],\n    [\"Numpad8\", VIRTUAL_KEYS.CODE_NUMPAD8],\n    [\"Numpad9\", VIRTUAL_KEYS.CODE_NUMPAD9],\n    [\"NumpadSubtract\", VIRTUAL_KEYS.CODE_SUBTRACT],\n    [\"Numpad4\", VIRTUAL_KEYS.CODE_NUMPAD4],\n    [\"Numpad5\", VIRTUAL_KEYS.CODE_NUMPAD5],\n    [\"Numpad6\", VIRTUAL_KEYS.CODE_NUMPAD6],\n    [\"NumpadAdd\", VIRTUAL_KEYS.CODE_ADD],\n    [\"Numpad1\", VIRTUAL_KEYS.CODE_NUMPAD1],\n    [\"Numpad2\", VIRTUAL_KEYS.CODE_NUMPAD2],\n    [\"Numpad3\", VIRTUAL_KEYS.CODE_NUMPAD3],\n    [\"Numpad0\", VIRTUAL_KEYS.CODE_NUMPAD0],\n    [\"NumpadDecimal\", VIRTUAL_KEYS.CODE_DECIMAL],\n    [\"PrintScreen\", VIRTUAL_KEYS.CODE_PRINT],\n    [\"IntlBackslash\", VIRTUAL_KEYS.CODE_OEM_BACKSLASH],\n    [\"F11\", VIRTUAL_KEYS.CODE_F11],\n    [\"F12\", VIRTUAL_KEYS.CODE_F12],\n    [\"NumpadEqual\", VIRTUAL_KEYS.CODE_OEM_PLUS], // bestguess\n    [\"F13\", VIRTUAL_KEYS.CODE_F13],\n    [\"F14\", VIRTUAL_KEYS.CODE_F14],\n    [\"F15\", VIRTUAL_KEYS.CODE_F15],\n    [\"F16\", VIRTUAL_KEYS.CODE_F16],\n    [\"F17\", VIRTUAL_KEYS.CODE_F17],\n    [\"F18\", VIRTUAL_KEYS.CODE_F18],\n    [\"F19\", VIRTUAL_KEYS.CODE_F19],\n    [\"F20\", VIRTUAL_KEYS.CODE_F20],\n    [\"F21\", VIRTUAL_KEYS.CODE_F21],\n    [\"F22\", VIRTUAL_KEYS.CODE_F22],\n    [\"F23\", VIRTUAL_KEYS.CODE_F23],\n    [\"F24\", VIRTUAL_KEYS.CODE_F24],\n    [\"KanaMode\", VIRTUAL_KEYS.CODE_HIRAGANA_KATAKANA],\n    [\"Lang2\", VIRTUAL_KEYS.CODE_HANJA],\n    [\"Lang1\", VIRTUAL_KEYS.CODE_HANGUL],\n    [\"IntlRo\", VIRTUAL_KEYS.CODE_RO],\n    [\"Convert\", VIRTUAL_KEYS.CODE_HENKAN_ZENKOUHO],\n    [\"NonConvert\", VIRTUAL_KEYS.CODE_MUHENKAN],\n    [\"IntlYen\", VIRTUAL_KEYS.CODE_YEN],\n    [\"NumpadComma\", VIRTUAL_KEYS.CODE_OEM_COMMA], // bestguess\n    //    [\"Undo\", VIRTUAL_KEYS.CODE_],\n    //    [\"Paste\", VIRTUAL_KEYS.CODE_],\n    //    [\"MediaTrackPrevious\", VIRTUAL_KEYS.CODE_],\n    //    [\"Cut\", VIRTUAL_KEYS.CODE_],\n    //    [\"Copy\", VIRTUAL_KEYS.CODE_],\n    //    [\"MediaTrackNext\", VIRTUAL_KEYS.CODE_],\n    [\"NumpadEnter\", VIRTUAL_KEYS.CODE_RETURN], // mapped\n    [\"ControlRight\", VIRTUAL_KEYS.CODE_RCONTROL],\n    //    [\"LaunchMail\", VIRTUAL_KEYS.CODE_],\n    //    [\"AudioVolumeMute\", VIRTUAL_KEYS.CODE_],\n    //    [\"LaunchApp2\", VIRTUAL_KEYS.CODE_],\n    //    [\"MediaPlayPause\", VIRTUAL_KEYS.CODE_],\n    //    [\"MediaStop\", VIRTUAL_KEYS.CODE_],\n    //    [\"Eject\", VIRTUAL_KEYS.CODE_],\n    //    [\"AudioVolumeDown\", VIRTUAL_KEYS.CODE_],\n    //    [\"AudioVolumeUp\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserHome\", VIRTUAL_KEYS.CODE_],\n    [\"NumpadDivide\", VIRTUAL_KEYS.CODE_DIVIDE],\n    [\"PrintScreen\", VIRTUAL_KEYS.CODE_PRINT],\n    [\"AltRight\", VIRTUAL_KEYS.CODE_RMENU],\n    //    [\"Help\", VIRTUAL_KEYS.CODE_],\n    [\"NumLock\", VIRTUAL_KEYS.CODE_NUMLOCK],\n    [\"Pause\", VIRTUAL_KEYS.CODE_PAUSE],\n    [\"Home\", VIRTUAL_KEYS.CODE_HOME],\n    [\"ArrowUp\", VIRTUAL_KEYS.CODE_UP],\n    [\"PageUp\", VIRTUAL_KEYS.CODE_PRIOR],\n    [\"ArrowLeft\", VIRTUAL_KEYS.CODE_LEFT],\n    [\"ArrowRight\", VIRTUAL_KEYS.CODE_RIGHT],\n    [\"End\", VIRTUAL_KEYS.CODE_END],\n    [\"ArrowDown\", VIRTUAL_KEYS.CODE_DOWN],\n    [\"PageDown\", VIRTUAL_KEYS.CODE_NEXT],\n    [\"Insert\", VIRTUAL_KEYS.CODE_INSERT],\n    [\"Delete\", VIRTUAL_KEYS.CODE_DELETE],\n    [\"MetaLeft\", VIRTUAL_KEYS.CODE_LWIN],\n    [\"OSLeft\", VIRTUAL_KEYS.CODE_LWIN],\n    [\"MetaRight\", VIRTUAL_KEYS.CODE_RWIN],\n    [\"OSRight\", VIRTUAL_KEYS.CODE_RWIN],\n    //    [\"ContextMenu\", VIRTUAL_KEYS.CODE_],\n    //    [\"Power\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserSearch\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserFavorites\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserRefresh\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserStop\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserForward\", VIRTUAL_KEYS.CODE_],\n    //    [\"BrowserBack\", VIRTUAL_KEYS.CODE_],\n    //    [\"LaunchApp1\", VIRTUAL_KEYS.CODE_],\n    //    [\"LaunchMail\", VIRTUAL_KEYS.CODE_],\n    //    [\"LaunchMediaPlayer\", VIRTUAL_KEYS.CODE_],\n    [\"Lang2\", VIRTUAL_KEYS.CODE_HANJA],\n    [\"Lang1\", VIRTUAL_KEYS.CODE_HANGUL],\n\n    [\"NumpadClear\", VIRTUAL_KEYS.CODE_CLEAR], // mapped\n    [\"NumpadClearEntry\", VIRTUAL_KEYS.CODE_CLEAR] // bestguess\n]);\n\n// fallback map in case evt.code is not set.\nexport const KEY_TO_VK_MAP = new Map([\n    [\"HanjaMode\", VIRTUAL_KEYS.CODE_HANJA],\n    [\"HangulMode\", VIRTUAL_KEYS.CODE_HANGUL]\n]);\n\nexport declare interface VirtualKeyCodeMapping {\n    vkCode: number;\n    shift: boolean;\n}\n\n// Mapping char to {VK_Code, Shift_ModifierFlag}\n// On android platforms text input is handled via textcomposition/input events.\n// And we don't received keycodes in keydown/keyup events.\nexport const CHAR_TO_VK_MAP = new Map<String, VirtualKeyCodeMapping>([\n    [\"1\", { vkCode: VIRTUAL_KEYS.CODE_1, shift: false }],\n    [\"2\", { vkCode: VIRTUAL_KEYS.CODE_2, shift: false }],\n    [\"3\", { vkCode: VIRTUAL_KEYS.CODE_3, shift: false }],\n    [\"4\", { vkCode: VIRTUAL_KEYS.CODE_4, shift: false }],\n    [\"5\", { vkCode: VIRTUAL_KEYS.CODE_5, shift: false }],\n    [\"6\", { vkCode: VIRTUAL_KEYS.CODE_6, shift: false }],\n    [\"7\", { vkCode: VIRTUAL_KEYS.CODE_7, shift: false }],\n    [\"8\", { vkCode: VIRTUAL_KEYS.CODE_8, shift: false }],\n    [\"9\", { vkCode: VIRTUAL_KEYS.CODE_9, shift: false }],\n    [\"0\", { vkCode: VIRTUAL_KEYS.CODE_0, shift: false }],\n\n    [\"!\", { vkCode: VIRTUAL_KEYS.CODE_1, shift: true }],\n    [\"@\", { vkCode: VIRTUAL_KEYS.CODE_2, shift: true }],\n    [\"#\", { vkCode: VIRTUAL_KEYS.CODE_3, shift: true }],\n    [\"$\", { vkCode: VIRTUAL_KEYS.CODE_4, shift: true }],\n    [\"%\", { vkCode: VIRTUAL_KEYS.CODE_5, shift: true }],\n    [\"^\", { vkCode: VIRTUAL_KEYS.CODE_6, shift: true }],\n    [\"&\", { vkCode: VIRTUAL_KEYS.CODE_7, shift: true }],\n    [\"*\", { vkCode: VIRTUAL_KEYS.CODE_8, shift: true }],\n    [\"(\", { vkCode: VIRTUAL_KEYS.CODE_9, shift: true }],\n    [\")\", { vkCode: VIRTUAL_KEYS.CODE_0, shift: true }],\n\n    [\"-\", { vkCode: VIRTUAL_KEYS.CODE_OEM_MINUS, shift: false }],\n    [\"_\", { vkCode: VIRTUAL_KEYS.CODE_OEM_MINUS, shift: true }],\n\n    [\"=\", { vkCode: VIRTUAL_KEYS.CODE_OEM_PLUS, shift: false }],\n    [\"+\", { vkCode: VIRTUAL_KEYS.CODE_OEM_PLUS, shift: true }],\n\n    [\",\", { vkCode: VIRTUAL_KEYS.CODE_OEM_COMMA, shift: false }],\n    [\"<\", { vkCode: VIRTUAL_KEYS.CODE_OEM_COMMA, shift: true }],\n\n    [\".\", { vkCode: VIRTUAL_KEYS.CODE_OEM_PERIOD, shift: false }],\n    [\">\", { vkCode: VIRTUAL_KEYS.CODE_OEM_PERIOD, shift: true }],\n\n    [\";\", { vkCode: VIRTUAL_KEYS.CODE_OEM_1, shift: false }],\n    [\":\", { vkCode: VIRTUAL_KEYS.CODE_OEM_1, shift: true }],\n\n    [\"/\", { vkCode: VIRTUAL_KEYS.CODE_OEM_2, shift: false }],\n    [\"?\", { vkCode: VIRTUAL_KEYS.CODE_OEM_2, shift: true }],\n\n    [\"`\", { vkCode: VIRTUAL_KEYS.CODE_OEM_3, shift: false }],\n    [\"~\", { vkCode: VIRTUAL_KEYS.CODE_OEM_3, shift: true }],\n\n    [\"[\", { vkCode: VIRTUAL_KEYS.CODE_OEM_4, shift: false }],\n    [\"{\", { vkCode: VIRTUAL_KEYS.CODE_OEM_4, shift: true }],\n\n    [\"\\\\\", { vkCode: VIRTUAL_KEYS.CODE_OEM_5, shift: false }],\n    [\"|\", { vkCode: VIRTUAL_KEYS.CODE_OEM_5, shift: true }],\n\n    [\"]\", { vkCode: VIRTUAL_KEYS.CODE_OEM_6, shift: false }],\n    [\"}\", { vkCode: VIRTUAL_KEYS.CODE_OEM_6, shift: true }],\n\n    [\"'\", { vkCode: VIRTUAL_KEYS.CODE_OEM_7, shift: false }],\n    ['\"', { vkCode: VIRTUAL_KEYS.CODE_OEM_7, shift: true }],\n\n    [\" \", { vkCode: VIRTUAL_KEYS.CODE_SPACE, shift: false }],\n\n    [\"A\", { vkCode: VIRTUAL_KEYS.CODE_A, shift: true }],\n    [\"B\", { vkCode: VIRTUAL_KEYS.CODE_B, shift: true }],\n    [\"C\", { vkCode: VIRTUAL_KEYS.CODE_C, shift: true }],\n    [\"D\", { vkCode: VIRTUAL_KEYS.CODE_D, shift: true }],\n    [\"E\", { vkCode: VIRTUAL_KEYS.CODE_E, shift: true }],\n    [\"F\", { vkCode: VIRTUAL_KEYS.CODE_F, shift: true }],\n    [\"G\", { vkCode: VIRTUAL_KEYS.CODE_G, shift: true }],\n    [\"H\", { vkCode: VIRTUAL_KEYS.CODE_H, shift: true }],\n    [\"I\", { vkCode: VIRTUAL_KEYS.CODE_I, shift: true }],\n    [\"J\", { vkCode: VIRTUAL_KEYS.CODE_J, shift: true }],\n    [\"K\", { vkCode: VIRTUAL_KEYS.CODE_K, shift: true }],\n    [\"L\", { vkCode: VIRTUAL_KEYS.CODE_L, shift: true }],\n    [\"M\", { vkCode: VIRTUAL_KEYS.CODE_M, shift: true }],\n    [\"N\", { vkCode: VIRTUAL_KEYS.CODE_N, shift: true }],\n    [\"O\", { vkCode: VIRTUAL_KEYS.CODE_O, shift: true }],\n    [\"P\", { vkCode: VIRTUAL_KEYS.CODE_P, shift: true }],\n    [\"Q\", { vkCode: VIRTUAL_KEYS.CODE_Q, shift: true }],\n    [\"R\", { vkCode: VIRTUAL_KEYS.CODE_R, shift: true }],\n    [\"S\", { vkCode: VIRTUAL_KEYS.CODE_S, shift: true }],\n    [\"T\", { vkCode: VIRTUAL_KEYS.CODE_T, shift: true }],\n    [\"U\", { vkCode: VIRTUAL_KEYS.CODE_U, shift: true }],\n    [\"V\", { vkCode: VIRTUAL_KEYS.CODE_V, shift: true }],\n    [\"W\", { vkCode: VIRTUAL_KEYS.CODE_W, shift: true }],\n    [\"X\", { vkCode: VIRTUAL_KEYS.CODE_X, shift: true }],\n    [\"Y\", { vkCode: VIRTUAL_KEYS.CODE_Y, shift: true }],\n    [\"Z\", { vkCode: VIRTUAL_KEYS.CODE_Z, shift: true }],\n\n    [\"a\", { vkCode: VIRTUAL_KEYS.CODE_A, shift: false }],\n    [\"b\", { vkCode: VIRTUAL_KEYS.CODE_B, shift: false }],\n    [\"c\", { vkCode: VIRTUAL_KEYS.CODE_C, shift: false }],\n    [\"d\", { vkCode: VIRTUAL_KEYS.CODE_D, shift: false }],\n    [\"e\", { vkCode: VIRTUAL_KEYS.CODE_E, shift: false }],\n    [\"f\", { vkCode: VIRTUAL_KEYS.CODE_F, shift: false }],\n    [\"g\", { vkCode: VIRTUAL_KEYS.CODE_G, shift: false }],\n    [\"h\", { vkCode: VIRTUAL_KEYS.CODE_H, shift: false }],\n    [\"i\", { vkCode: VIRTUAL_KEYS.CODE_I, shift: false }],\n    [\"j\", { vkCode: VIRTUAL_KEYS.CODE_J, shift: false }],\n    [\"k\", { vkCode: VIRTUAL_KEYS.CODE_K, shift: false }],\n    [\"l\", { vkCode: VIRTUAL_KEYS.CODE_L, shift: false }],\n    [\"m\", { vkCode: VIRTUAL_KEYS.CODE_M, shift: false }],\n    [\"n\", { vkCode: VIRTUAL_KEYS.CODE_N, shift: false }],\n    [\"o\", { vkCode: VIRTUAL_KEYS.CODE_O, shift: false }],\n    [\"p\", { vkCode: VIRTUAL_KEYS.CODE_P, shift: false }],\n    [\"q\", { vkCode: VIRTUAL_KEYS.CODE_Q, shift: false }],\n    [\"r\", { vkCode: VIRTUAL_KEYS.CODE_R, shift: false }],\n    [\"s\", { vkCode: VIRTUAL_KEYS.CODE_S, shift: false }],\n    [\"t\", { vkCode: VIRTUAL_KEYS.CODE_T, shift: false }],\n    [\"u\", { vkCode: VIRTUAL_KEYS.CODE_U, shift: false }],\n    [\"v\", { vkCode: VIRTUAL_KEYS.CODE_V, shift: false }],\n    [\"w\", { vkCode: VIRTUAL_KEYS.CODE_W, shift: false }],\n    [\"x\", { vkCode: VIRTUAL_KEYS.CODE_X, shift: false }],\n    [\"y\", { vkCode: VIRTUAL_KEYS.CODE_Y, shift: false }],\n    [\"z\", { vkCode: VIRTUAL_KEYS.CODE_Z, shift: false }]\n]);\n","export const enum WireProtocolPacketId {\r\n    MOUSE_GROUP = 0x20,\r\n    RI_PACKET = 0x21,\r\n    RI_NO_SIZE = 0x22,\r\n    SENT_TIMESTAMP = 0x23,\r\n    CHROME_CALLBACK_TIMESTAMP = 0x24,\r\n    INPUT_GROUP = 0xff\r\n}\r\n\r\nexport const CHROME_CALLBACK_LEN = 9;\r\nexport const SENT_TIMESTAMP_LEN = 9;\r\n\r\nexport const MOUSE_GROUP_HEADER_LEN = 19;\r\n\r\nexport const enum PacketId {\r\n    PACKET_HEARTBEAT = 0x00000002,\r\n    PACKET_KEYDOWN = 0x00000003,\r\n    PACKET_KEYUP = 0x00000004,\r\n    PACKET_MOUSEMOVE_ABS = 0x00000005,\r\n    PACKET_MOUSEMOVE_ABS_VIRT = 0x00000006,\r\n    PACKET_MOUSEMOVE_REL = 0x00000007,\r\n    PACKET_MOUSEDOWN = 0x00000008,\r\n    PACKET_MOUSEUP = 0x00000009,\r\n    PACKET_MOUSEWHEEL = 0x0000000a,\r\n    PACKET_GAMEPAD = 0x0000000b,\r\n    PACKET_GAMEPAD_MULTIUSER = 0x0000000c,\r\n    PACKET_HAPTICS_CONTROL = 0x0000000d,\r\n    PACKET_LOCK_KEYS = 0x00000013,\r\n    PACKET_UNICODE = 0x00000017,\r\n    PACKET_TOUCH_LOW_LEVEL = 0x00000018,\r\n    // Legacy server-to-client commands only after here.\r\n    PACKET_HAPTICS_EVENT = 0x0000010b\r\n}\r\n\r\n// Two specific 'legacy' commands for the input channel are sent as-is from server to client (for the RTC transport).\r\nexport const enum ServerCommands {\r\n    STREAMER_SERVER_HAPTICS_EVENT = 0x010b,\r\n    STREAMER_INPUT_CHANNEL_VERSINO_INFO = 0x020e\r\n}\r\n\r\n// See \"struct HapticsCommand\" in Mjolnir/RemoteInput/common/haptics.h\r\nexport const enum HapticsCommands {\r\n    HAPTICS_NOOP = 0,\r\n    HAPTICS_SIMPLE = 1,\r\n    HAPTICS_DURATION = 2\r\n}\r\n\r\nexport const enum InputModifierFlags {\r\n    NVST_MF_NONE = 0x0000,\r\n    NVST_MF_SHIFT = 0x0001,\r\n    NVST_MF_CONTROL = 0x0002,\r\n    NVST_MF_ALT = 0x0004,\r\n    NVST_MF_META = 0x0008,\r\n    NVST_MF_SHIFT_RIGHT = 0x0010,\r\n    NVST_MF_CONTROL_RIGHT = 0x0020,\r\n    NVST_MF_ALT_RIGHT = 0x0040,\r\n    NVST_MF_META_RIGHT = 0x0080,\r\n    NVST_MF_ABSCOORDS = 0x0800,\r\n    NVST_MF_VIRTUAL = 0x1000\r\n}\r\n\r\nexport const enum LockKeyBitMask {\r\n    NVST_LKB_NONE = 0x00,\r\n    NVST_LKB_CAPS = 0x01,\r\n    NVST_LKB_NUM = 0x02,\r\n    NVST_LKB_SCROLL = 0x04,\r\n    // These bits determine if the corresponding bits above are valid.\r\n    // If unset, the state of the corresponding key will not change.\r\n    NVST_LKB_CAPS_VALID = 0x10,\r\n    NVST_LKB_NUM_VALID = 0x20,\r\n    NVST_LKB_SCROLL_VALID = 0x40\r\n}\r\n","import { StreamClient } from \"../streamclient\";\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\nimport {\n    IsWindowsOS,\n    IsChromeOS,\n    IsiDevice,\n    IsMacOS,\n    PlatformDetails,\n    IsTizenOS,\n    IsChromium,\n    IsChromeVersionAtLeast,\n    IsWebOS,\n    Log,\n    IsChromeBrowser,\n    IsFirefox\n} from \"../dependencies\";\nimport { InputConfigFlags, CursorType, Zoneless } from \"../interfaces\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { InputChannel, InputMediaElement, Measurements } from \"./inputinterfaces\";\nimport { BoundaryPair, VideoState } from \"../rinterfaces\";\nimport { LatencyIndicator } from \"../debug/latencyindicator\";\nimport { InputPacketHandler, MoveEventBuffer } from \"./inputpackethandler\";\nimport { GamepadRSDMM } from \"./gamepadrsdmm\";\nimport { SupportsPointerEvents, GetCaptureTimestamp } from \"../util/utils\";\nimport { IMouseFilter, MouseFilter, NullMouseFilter } from \"./mousefilter\";\nimport { WindowStateObserver, WindowStateType } from \"../windowstateobserver\";\n\nconst LOGTAG = \"mousehandler\";\n\ninterface Cursor {\n    imageStr: string;\n    hotspotX: number;\n    hotspotY: number;\n    mimeTypeStr: string;\n    imageElement?: HTMLImageElement;\n    style?: string;\n    scale: number;\n}\n\ninterface CursorState {\n    absPositioning: boolean;\n    confined: boolean;\n    // X coordinate of the cursor, in display-video space\n    absX: number;\n    // Y coordinate of the cursor, in display-video space\n    absY: number;\n    // X offset to be added to next relative movement, in display physical space\n    remX: number;\n    // Y offset to be added to next relative movement, in display physical space\n    remY: number;\n    style: string;\n    imagePendingDecode?: HTMLImageElement;\n    image?: HTMLImageElement;\n    hotspotX: number;\n    hotspotY: number;\n    width: number;\n    height: number;\n    scale: number;\n}\n\ninterface CursorCanvasState {\n    dpiRatio: number;\n    cursorScaling: number;\n    graphicsContext?: CanvasRenderingContext2D;\n    dirty: boolean;\n    imageChanged: boolean;\n    imageDimensionsChanged: boolean;\n    showing: boolean;\n}\n\nconst zIndexDefault = \"200\";\n\ninterface SystemCursor {\n    style: string;\n    imageStr: string;\n    hotspotX: number;\n    hotspotY: number;\n}\n\nfunction createSystemCursor(systemCursor: SystemCursor): Cursor {\n    return {\n        mimeTypeStr: \"image/x-icon\",\n        scale: 1,\n        ...systemCursor\n    };\n}\n\nconst DEFAULT_CURSOR: SystemCursor = {\n    style: \"default\",\n    imageStr:\n        \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAOAAAADAAAABwAAAAYAAAAOAAABDAAAAZwAAAHYAAAB4AAAAf+AAAH/AAAB/gAAAfwAAAH4AAAB8AAAAeAAAAHAAAABgAAAAQAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////////5////8P///+D////h////wf//98P///OD///xh///8Af///AP///wAH//8AD///AB///wA///8Af///AP///wH///8D////B////w////8f////P////3/////////8=\",\n    hotspotX: 2,\n    hotspotY: 1\n};\n\nconst SYSTEM_CURSORS: SystemCursor[] = [\n    { style: \"none\", imageStr: \"\", hotspotX: 0, hotspotY: 0 },\n    // Default - pointer\n    DEFAULT_CURSOR,\n    {\n        // I-beam\n        style: \"text\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfvwAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAfPwAAAAAAAAAAAAAAAAAA/////////////////////////////////////+BA///Agf///z////8/////P////z////8/////P////z////8/////P////z////8/////P////z////8/////P////z////8/////P////z///+BA///Agf////////////8=\",\n        hotspotX: 8,\n        hotspotY: 13\n    },\n    {\n        // Wait\n        style: \"wait\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/8AAAzzAAAHDgAABfoAAAb2AAADbAAAAfgAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAB+AAAA/wAAAaWAAAH/gAABWoAAA//AAAP/wAAAAAAAAAAAAA//////////////////////////////////////////+AAf//gAH//4AB//+AAf//wAP//8AD///gB///8A////gf///8P////D////w////8P////D////gf///wD///4Af//8AD///AA///gAH//4AB//+AAf//gAH///////8=\",\n        hotspotX: 7,\n        hotspotY: 12\n    },\n    {\n        // Crosshair\n        style: \"crosshair\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABjAAABgMAAAQBAAAIAIAACACAABAAQAAAIAAAEABAAAgAgAAIAIAABgMAAAICAAABjAAAAFAAAAAAAAA//////////////////////////////////////////////////////////////////////////////////////4////5T///53P//+97///fff//333//79+//+AAP//v37//999///fff//53P///d3///5T////j////////8=\",\n        hotspotX: 8,\n        hotspotY: 8\n    },\n    {\n        // Wait arrow\n        style: \"progress\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAAAiAAAAPgAAABwAAAYIAAAOCAAADAgAABwcAAAYNgAAOCoABDA+AAZwAAAHYAAAB4AAAAf+AAAH/AAAB/gAAAfwAAAH4AAAB8AAAAeAAAAHAAAABgAAAAQAAAAAAAAAAAAAAAAAAAA///////////////////////+A////gP///4D///+A///5wf//8OP//+Dj///h4///wcH/98OA//ODgP/xh4D/8AeA//AP///wAH//8AD///AB///wA///8Af///AP///wH///8D////B////w////8f////P////3/////////8=\",\n        hotspotX: 2,\n        hotspotY: 1\n    },\n    {\n        // Size up-left down-right (NW-SE)\n        style: \"nwse-resize\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP4AAAB+AAAAPgAAAB4AAABuAAAA5gAAAcIAAEOAAABnAAAAdgAAAHgAAAB8AAAAfgAAAH8AAAAAAAAAAAAAA/////////////////////////////////////////////////////////////////////////////////wA///+AP///wD///+A////gP///wD//34A//88GP//GDz//wB+//8A////Af///wH///8A////AH///wA////////8=\",\n        hotspotX: 9,\n        hotspotY: 8\n    },\n    {\n        // Size up-right down-left (NE-SW)\n        style: \"nesw-resize\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfwAAAH4AAAB8AAAAeAAAAHYAAABnAAAAQ4AAAAHCAAAA5gAAAG4AAAAeAAAAPgAAAH4AAAD+AAAAAAAAAAAAA////////////////////////////////////////////////////////////////////////////////wA///8Af///AP///wH///8B////AP///wB+//8YPP//PBj//34A////AP///4D///+A////AP///gD///wA///////8=\",\n        hotspotX: 9,\n        hotspotY: 9\n    },\n    {\n        // Size left right (E-W)\n        style: \"ew-resize\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEAABgBgAA4AcAAeAHgAPv98AH7/fgA+/3wAHgB4AA4AcAAGAGAAAgBAAAAAAAAAAAAAAAAAA//////////////////////////////////////////////////////////////////////////////////////+/3///P8///j/H//w/w//4P8H/8AAA/+AAAH/AAAA/4AAAf/AAAP/4P8H//D/D//4/x///P8///7/f//////8=\",\n        hotspotX: 13,\n        hotspotY: 8\n    },\n    {\n        // Size up down (N-S)\n        style: \"ns-resize\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADgAAAB8AAAA/gAAAf8AAAP/gAAAAAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAAAAAA/+AAAH/AAAA/gAAAHwAAAA4AAAAEAAAAAAAAAAAAAA//////////////////////////////////////+/////H////g////wH///4A///8AH//+AA///AAH///g////4P///+D////g////4P///+D////g////4P///AAH//4AD///AB///4A////Af///4P////H////7////////8=\",\n        hotspotX: 9,\n        hotspotY: 12\n    },\n    {\n        // Size all (move)\n        style: \"move\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABwAAAA+AAAAHAAAABwAAAAcAAAAHAAAABwAAAgACAAf3fwAP93+AB/d/AAIAAgAABwAAAAcAAAAHAAAABwAAAAcAAAAPgAAABwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////f////j////wf///4D///8Af///wf///8H///vB7//zwef/4AAD/8AAAf+AAAD/wAAB/+AAA//zwef/+8Hv///B////wf///wB///+A////wf///+P////3///////////////////////8=\",\n        hotspotX: 13,\n        hotspotY: 12\n    },\n    // No - slashed circle, crossbones.  Use default instead\n    DEFAULT_CURSOR,\n    {\n        // Hand\n        style: \"pointer\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH+AAAB/gAAA/4AAAP/AAAH/wAAB/8AAA//gAAP/4AAH/+AADttgABzbYAAY2wAAANsAAADYAAAAwAAAAMAAAAAAAAAAAAAA//////////////////////////////////////////////////////////////////////+Af///AD///wA///4AP//+AB///AAf//wAH//4AA//+AAP//AAD//gAA//wAAP/8IAH//mAH///gD///4H///+H////z////////8=\",\n        hotspotX: 8,\n        hotspotY: 3\n    },\n    {\n        // Help - arrow w/ question mark\n        style: \"help\",\n        imageStr:\n            \"AAABAAEAICACAAEAAQAwAQAAFgAAACgAAAAgAAAAQAAAAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAAAABgAAAAYAAAYHAAAOAYAADADAABwwwAAYMMAAODDABDAZgAZwDwAHYAAAB4AAAAf+AAAH/AAAB/gAAAfwAAAH4AAAB8AAAAeAAAAHAAAABgAAAAQAAAAAAAAAAAAAAAAAAAA/////////////+f////D////5//////////n////w///58P//8PB//+D4P//hzB//wYYf98OGH/ODhh/xh8A/8Afgf/AP8P/wAH//8AD///AB///wA///8Af///AP///wH///8D////B////w////8f////P////3/////////8=\",\n        hotspotX: 2,\n        hotspotY: 1\n    }\n];\n\nconst enum RawUpdateState {\n    OFF = 0,\n    ON_4MS,\n    ON_8MS,\n    ON_16MS,\n    COUNT\n}\n\nexport class MouseHandler {\n    private streamClient: StreamClient;\n    private videoTagElement: InputMediaElement;\n    private configFlags: InputConfigFlags;\n    private videoState: VideoState;\n    private mousedownFunc: any;\n    private pointerdownFunc: any;\n    private mouseupFunc: any;\n    private pointerupFunc: any;\n    private mousewheelFunc: any;\n    private pointerMoveFunc: any;\n    private pointerRawUpdateFunc: any;\n    private freeMouseMoveFunc: any;\n    private freePointerMoveFunc: any;\n    private pointerLockEventFunc: any;\n    private pointerLockErrorFunc: any;\n    private focusChangeFunc: any;\n    private fullscreenChangeFunc: any;\n    private cursorType: CursorType;\n    private cursorState: CursorState;\n    private cursorCanvasState: CursorCanvasState;\n    private cursorCache: Cursor[];\n    private systemCursors: Cursor[];\n    private cursorCanvas: HTMLCanvasElement | null;\n    private cursorCanvasId: string;\n    private pointerLockElement: HTMLElement | null;\n    private consecutivePointerLockFailedAttempts: number = 0;\n    private allowPointerLock: boolean = false;\n    private pressedButtons: Set<number> = new Set();\n    private supportsRawUpdate: boolean = false;\n    private supportsPointerEvents: boolean = false;\n    private supportsCoalescedEvents: boolean = false;\n    private isChromium: boolean;\n    private telemetry: TelemetryHandler;\n    private unadjustedMovementAllowed: boolean = false;\n    private unadjustedMovementActive: boolean = false;\n    private pointerLockReturnsPromise: boolean = false;\n    private measurements: Measurements;\n    private rawUpdateState: RawUpdateState = RawUpdateState.OFF;\n    private rawCoalesceInterval: number = 0;\n    private mouseFilter: IMouseFilter;\n    private documentAddEventListener: any;\n    private videoAddEventListener: any;\n    private documentRemoveEventListener: any;\n    private videoRemoveEventListener: any;\n    private rsdmmHandler: GamepadRSDMM;\n    private zoomInProgress: boolean = false;\n    private packetHandler: InputPacketHandler;\n    private moveEventBuffer: MoveEventBuffer;\n    private platformDetails: PlatformDetails;\n    private nonpassiveOptions: AddEventListenerOptions = { passive: false };\n    private scaleMovementByDpr: boolean;\n    private externalShowCursor: boolean = true;\n    private isUserInputEnable: boolean = false;\n\n    constructor(\n        streamClient: StreamClient,\n        videoElement: InputMediaElement,\n        cursorChannel: InputChannel,\n        telemetry: TelemetryHandler,\n        configFlags: InputConfigFlags,\n        platformDetails: PlatformDetails,\n        rsdmmHandler: GamepadRSDMM,\n        measurements: Measurements,\n        moveEventBuffer: MoveEventBuffer,\n        packetHandler: InputPacketHandler,\n        private windowObserver: WindowStateObserver\n    ) {\n        this.platformDetails = platformDetails;\n        this.streamClient = streamClient;\n        this.videoTagElement = videoElement;\n        this.telemetry = telemetry;\n        this.configFlags = configFlags;\n        this.rsdmmHandler = rsdmmHandler;\n        this.measurements = measurements;\n        this.moveEventBuffer = moveEventBuffer;\n        this.packetHandler = packetHandler;\n\n        cursorChannel.onmessage = msg => this.onCursorMessage(msg);\n\n        // Using video element or screen dimensions to start here ensures the cursor's initial position\n        // is correct. If we initialize these to zero, the cursor will only be ble to start at (0, 0).\n        /// TODO: Store our cursor coordinates normalized to 0-65535 so we don't need to change them\n        /// when the video dimensions change.\n        this.videoState = {\n            displayVideoWidth: videoElement.clientWidth || window.screen.width,\n            displayVideoHeight: videoElement.clientHeight || window.screen.height,\n            scalingFactor: 1,\n            leftPadding: 0,\n            topPadding: 0,\n            videoWidth: 0,\n            videoHeight: 0,\n            viewportHeight: 0,\n            offsetX: 0,\n            offsetY: 0,\n            zoomFactor: 1\n        };\n\n        const zoneless = (window as any).zoneless as Zoneless;\n        this.documentAddEventListener =\n            zoneless?.documentAddEventListener?.bind(document) ??\n            document.addEventListener.bind(document);\n        this.documentRemoveEventListener =\n            zoneless?.documentRemoveEventListener?.bind(document) ??\n            document.removeEventListener.bind(document);\n        this.videoAddEventListener =\n            zoneless?.videoAddEventListener?.bind(videoElement) ??\n            zoneless?.documentAddEventListener?.bind(document) ??\n            videoElement.addEventListener.bind(videoElement);\n        this.videoRemoveEventListener =\n            zoneless?.videoRemoveEventListener?.bind(videoElement) ??\n            zoneless?.documentRemoveEventListener?.bind(document) ??\n            videoElement.removeEventListener.bind(videoElement);\n\n        this.mousedownFunc = this.mousedown.bind(this);\n        this.pointerdownFunc = this.pointerdown.bind(this);\n        this.mouseupFunc = this.mouseup.bind(this);\n        this.pointerupFunc = this.pointerup.bind(this);\n        this.mousewheelFunc = this.mousewheel.bind(this);\n        this.pointerMoveFunc = this.pointermove.bind(this);\n        this.pointerRawUpdateFunc = this.pointerrawupdate.bind(this);\n        this.freeMouseMoveFunc = this.freeMouseMove.bind(this);\n        this.freePointerMoveFunc = this.freePointerMove.bind(this);\n        this.pointerLockEventFunc = this.pointerLockChange.bind(this);\n        this.pointerLockErrorFunc = this.pointerLockError.bind(this);\n        this.focusChangeFunc = this.onFocusChange.bind(this);\n        this.fullscreenChangeFunc = this.onFullscreenChange.bind(this);\n\n        this.cursorType = configFlags.cursorType ?? CursorType.SOFTWARE;\n        Log.i(\"{70cc40b}\", \"{3277c0e}\", this.cursorType);\n        this.cursorState = {\n            absPositioning: false,\n            // TODO: allowUnconfined doesn't make much sense. For SW cursor, we only work with it set to true. For HW\n            // cursor, we only work with it set to false. We should probably just remove it\n            confined: this.cursorType === CursorType.SOFTWARE && !configFlags.allowUnconfined,\n            absX: 0,\n            absY: 0,\n            remX: 0,\n            remY: 0,\n            style: \"\",\n            hotspotX: 0,\n            hotspotY: 0,\n            width: 0,\n            height: 0,\n            scale: 1\n        };\n        this.cursorCanvasState = {\n            dpiRatio: 1,\n            cursorScaling: 1,\n            dirty: false,\n            imageChanged: false,\n            imageDimensionsChanged: false,\n            showing: false\n        };\n        this.cursorCache = [];\n        this.cursorCanvasId = \"canvasId1\";\n        if (this.cursorType == CursorType.SOFTWARE) {\n            this.cursorCanvas = this.getCursorCanvas(this.videoTagElement);\n            this.setCursorCanvasPosition(this.cursorCanvas, this.videoTagElement);\n        } else {\n            this.cursorCanvas = null;\n        }\n        this.systemCursors = SYSTEM_CURSORS.map(createSystemCursor);\n\n        this.pointerLockElement = null;\n\n        this.supportsRawUpdate = \"onpointerrawupdate\" in this.videoTagElement;\n        this.supportsPointerEvents = SupportsPointerEvents();\n        // Firefox supports getCoalescedEvents and returns multiple events, but the movementX/Y fields seem to be\n        // absolute values rather than relative. So, make sure we use the non-coalesced path\n        this.supportsCoalescedEvents =\n            this.supportsPointerEvents &&\n            \"getCoalescedEvents\" in PointerEvent.prototype &&\n            !IsFirefox(platformDetails);\n        Log.i(\"{70cc40b}\", \"{f30b8ee}\", (this.supportsCoalescedEvents ? \"supported\" : \"not supported\"));\n\n        this.isChromium = IsChromium();\n\n        if (this.supportsRawUpdate) {\n            const updateOverride = getRawUpdateOverride();\n            if (updateOverride !== undefined) {\n                this.setRawUpdate(updateOverride);\n            } else if (IsChromeOS(platformDetails)) {\n                this.setRawUpdate(RawUpdateState.ON_16MS);\n            } else {\n                this.setRawUpdate(RawUpdateState.ON_4MS);\n            }\n            const overridden = updateOverride !== undefined;\n            Log.i(\"{70cc40b}\", \"{20be0c0}\", this.rawCoalesceInterval, (overridden ? \" (overridden)\" : \"\"));\n        }\n\n        this.unadjustedMovementAllowed =\n            RagnarokSettings.unadjustedMovement ?? this.getDefaultUnadjustedMovement();\n\n        const avoidFilter =\n            IsChromeOS(platformDetails) &&\n            IsChromeVersionAtLeast(this.platformDetails, 84, 0, 4147, 94) &&\n            !IsChromeVersionAtLeast(this.platformDetails, 88, 0, 4324, 139);\n        const needsFilter =\n            IsWindowsOS(this.platformDetails) ||\n            !avoidFilter ||\n            !IsChromeVersionAtLeast(this.platformDetails, 84, 0, 4147, 94);\n\n        if (RagnarokSettings.mouseFilter ?? needsFilter) {\n            this.mouseFilter = new MouseFilter();\n        } else {\n            this.mouseFilter = new NullMouseFilter();\n        }\n\n        [\"pointerlockchange\", \"mozpointerlockchange\"].forEach(eventType =>\n            this.documentAddEventListener(eventType, this.pointerLockEventFunc)\n        );\n        [\"pointerlockerror\", \"mozpointerlockerror\"].forEach(eventType =>\n            this.documentAddEventListener(eventType, this.pointerLockErrorFunc)\n        );\n        this.windowObserver.addStateListener(WindowStateType.FOCUS, this.focusChangeFunc);\n        this.windowObserver.addStateListener(WindowStateType.FULLSCREEN, this.fullscreenChangeFunc);\n\n        // There was an issue until Chrome 99 where movementX/movementY didn't take devicePixelRatio into account, so\n        // we needed to handle it. We were checking for isChromium to enable the WAR, but this makes version checks\n        // hard. So, keep the WAR enabled for TVs (because we know those are old Chromium versions) and older Chrome\n        // versions, and disable it for other Chromium-based browsers regardless of versions. Chromium 99 was released a\n        // year ago, so this should be okay\n        if (IsWebOS(this.platformDetails) || IsTizenOS(this.platformDetails)) {\n            this.scaleMovementByDpr = true;\n        } else if (\n            IsChromeBrowser(platformDetails) &&\n            !IsChromeVersionAtLeast(platformDetails, 99, 0, 4844, 44) &&\n            !IsMacOS(platformDetails)\n        ) {\n            this.scaleMovementByDpr = true;\n        } else {\n            this.scaleMovementByDpr = false;\n        }\n        Log.d(\"{70cc40b}\", \"{ec7c4c5}\");\n    }\n\n    public uninitialize() {\n        [\"pointerlockerror\", \"mozpointerlockerror\"].forEach(eventType =>\n            this.documentRemoveEventListener(eventType, this.pointerLockErrorFunc)\n        );\n        [\"pointerlockchange\", \"mozpointerlockchange\"].forEach(eventType =>\n            this.documentRemoveEventListener(eventType, this.pointerLockEventFunc)\n        );\n        this.windowObserver.removeStateListener(WindowStateType.FOCUS, this.focusChangeFunc);\n        this.windowObserver.removeStateListener(\n            WindowStateType.FULLSCREEN,\n            this.fullscreenChangeFunc\n        );\n    }\n\n    public preRender(_timestamp: number) {\n        if (this.cursorCanvasState.dirty) {\n            this.cursorCanvasState.dirty = false;\n            this.drawCursor(\n                this.cursorState.absPositioning,\n                this.cursorState.absX,\n                this.cursorState.absY\n            );\n        }\n    }\n\n    public postRender() {\n        // When using raw pointer updates, the event handler will manage sending scheduled inputs.\n        if (this.rawUpdateState === RawUpdateState.OFF) {\n            this.packetHandler.sendScheduledPackets();\n        }\n    }\n\n    private pointerdown(evt: PointerEvent) {\n        if (shouldIgnorePointerEvent(evt)) {\n            return;\n        }\n        evt.preventDefault();\n        this.mousedown(evt);\n        if (this.cursorType === CursorType.FREE) {\n            this.videoTagElement.setPointerCapture(evt.pointerId);\n        }\n    }\n\n    private mousedown(evt: MouseEvent) {\n        // If latency is enable then we will create dump on mouse event\n        this.streamClient.eventTriggerLatencyDump();\n\n        // If we get a mousedown, we are for sure in focus. Set it here in case we receive\n        // mousedown before the focus event.\n        this.windowObserver.setWindowFocus(true);\n        this.allowPointerLock = true;\n        const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n        if (this.shouldPointerLock() && !this.isPointerLocked()) {\n            this.updatePointerLock();\n            // Update the cursor position to the new click\n            this.setCursorPosFromOffset(evt.offsetX, evt.offsetY);\n\n            this.scheduleCursorDraw();\n            const coordX = this.cursorState.absX;\n            const coordY = this.cursorState.absY;\n            // Send the position update to the server\n            this.packetHandler.sendCursorPos(true, coordX, coordY, timeStamp); // TODO: handle relative cursor\n            // Ignore the mousedown if we used it to lock the pointer\n            return;\n        }\n\n        LatencyIndicator.getInstance().toggleIndicator();\n        this.sendMouseDown(evt.button, timeStamp);\n    }\n\n    private pointerup(evt: PointerEvent) {\n        if (shouldIgnorePointerEvent(evt)) {\n            return;\n        }\n        evt.preventDefault();\n        this.mouseup(evt);\n        // We don't need to releasePointerCapture() here because it's automatic upon receiving pointerup\n    }\n\n    private mouseup(evt: MouseEvent) {\n        LatencyIndicator.getInstance().toggleIndicator();\n        this.sendMouseUp(evt.button, GetCaptureTimestamp(evt.timeStamp));\n    }\n\n    private mousewheel(evt: WheelEvent) {\n        this.packetHandler.sendMouseWheel(evt.deltaY, GetCaptureTimestamp(evt.timeStamp));\n        evt.preventDefault();\n    }\n\n    private freePointerMove(evt: PointerEvent) {\n        if (shouldIgnorePointerEvent(evt)) {\n            return;\n        }\n        evt.preventDefault();\n\n        // Chorded button presses will come through pointermove\n        if (evt.button !== -1) {\n            // The bit in evt.buttons used for mouse buttons 1 and 2 (middle and right click) is swapped\n            // All others are a normal shift: 1 << evt.button\n            let maskShift: number;\n            switch (evt.button) {\n                case 1:\n                    maskShift = 2;\n                    break;\n                case 2:\n                    maskShift = 1;\n                    break;\n                default:\n                    maskShift = evt.button;\n                    break;\n            }\n            const timeStamp = GetCaptureTimestamp(evt.timeStamp);\n            if (evt.buttons & (1 << maskShift)) {\n                this.sendMouseDown(evt.button, timeStamp);\n            } else {\n                this.sendMouseUp(evt.button, timeStamp);\n            }\n        }\n        this.freeMouseMove(evt);\n    }\n\n    private freeMouseMove(evt: MouseEvent) {\n        this.setCursorPosFromOffset(evt.offsetX, evt.offsetY);\n        this.packetHandler.sendCursorPos(\n            true,\n            this.cursorState.absX,\n            this.cursorState.absY,\n            GetCaptureTimestamp(evt.timeStamp)\n        );\n    }\n\n    private handlePointerEvent(evt: PointerEvent | MouseEvent) {\n        if (evt instanceof PointerEvent) {\n            if (shouldIgnorePointerEvent(evt)) {\n                return;\n            }\n            evt.preventDefault();\n        }\n        let callbackTime = performance.now();\n        if (\n            !this.windowObserver.getWindowFocus() ||\n            (this.shouldPointerLock() && !this.isPointerLocked())\n        ) {\n            // If we don't have the pointer lock that we need, don't move the mouse.\n            return;\n        }\n        if (evt.movementX === 0 && evt.movementY === 0) {\n            return;\n        }\n\n        let eventsPerAggregation = 1;\n        let eventCount = 0;\n        const absolute = this.cursorState.absPositioning;\n        const firstEventIndex = this.moveEventBuffer.moveEventIndex;\n        const processMovement = (ev: MouseEvent) => {\n            // Use event timestamp directly for local processing\n            if (!this.mouseFilter.update(ev.movementX, ev.movementY, ev.timeStamp)) {\n                return;\n            }\n\n            let coordX = this.mouseFilter.getX();\n            let coordY = this.mouseFilter.getY();\n            if (absolute) {\n                if (this.cursorState.confined) {\n                    this.setCursorPosFromMovement(coordX, coordY);\n                } else {\n                    this.setCursorPosFromOffset(ev.offsetX, ev.offsetY);\n                }\n\n                this.cursorCanvasState.dirty = true;\n                coordX = this.cursorState.absX;\n                coordY = this.cursorState.absY;\n            } else {\n                // not absolute\n                if (this.scaleMovementByDpr) {\n                    // Normalize relative co-ordinates on Chromium browsers (incl. Chrome).\n                    // Chromium reports movementX/movementY in physical pixel coordinates,\n                    // not scaling for DPI.\n                    // These should be reported in CSS pixels to use the same coordinate system\n                    // as screenX/screenY do.\n                    // Other browsers (Firefox, Safari) report in CSS pixels.\n                    let dpr = this.cursorCanvasState.dpiRatio;\n\n                    // Apply the previously stored remainder before scaling this event.\n                    coordX += this.cursorState.remX;\n                    coordY += this.cursorState.remY;\n\n                    // Calculate and store the remainder of the scaling from this event, to apply to the next event.\n                    this.cursorState.remX = coordX % dpr;\n                    this.cursorState.remY = coordY % dpr;\n\n                    // Scale this event by the DPI to get CSS pixels.\n                    coordX /= dpr;\n                    coordY /= dpr;\n                }\n            }\n            const aggregate = eventCount % eventsPerAggregation !== 0;\n            this.moveEventBuffer.addMoveEvent(\n                absolute,\n                coordX,\n                coordY,\n                GetCaptureTimestamp(ev.timeStamp),\n                0,\n                callbackTime,\n                aggregate\n            );\n            eventCount++;\n        };\n        if (evt instanceof PointerEvent && this.supportsCoalescedEvents) {\n            const coalesced: PointerEvent[] = (evt as any).getCoalescedEvents();\n            if (coalesced.length == 0) {\n                // No coalesced events in this PointerEvent; treat as a single event.\n                processMovement(evt);\n            } else {\n                const moveBufferSize = this.moveEventBuffer.moveEvents.length;\n                // If we receive too many events at once, aggregate it into one event no matter what.\n                // No matter how we aggregate it, the server won't space it out correctly.\n                const forceOneEvent = coalesced.length > 2 * moveBufferSize;\n                // We try to leave room for 4 mouse events in the buffer so we don't overrun it if we\n                // get a couple more events after a large group.\n                const allowedEvents = forceOneEvent\n                    ? 1\n                    : Math.max(moveBufferSize - this.moveEventBuffer.moveEventIndex - 4, 1);\n                if (coalesced.length > allowedEvents) {\n                    eventsPerAggregation = Math.ceil(coalesced.length / allowedEvents);\n                    this.measurements.aggregatedCount += coalesced.length;\n                }\n                for (let ev of coalesced) {\n                    processMovement(ev);\n                }\n            }\n        } else {\n            processMovement(evt);\n        }\n\n        // We only let the first mouse event in a packet be a group because the group header size is significant\n        // if applied to every mouse event (19 byte header vs 22-26 byte event), which limits the number of mouse\n        // events we can send at once. The group is only used to provide send and callback times for server\n        // telemetry, and including it for the first event in each packet fulfills this usecase without bloating\n        // the packets.\n        if (\n            this.packetHandler.protocolVersion > 1 &&\n            firstEventIndex === 0 &&\n            this.moveEventBuffer.moveEventIndex > firstEventIndex\n        ) {\n            // Mark all the moves we just added as being part of one group.\n            this.moveEventBuffer.setGroupSize(\n                firstEventIndex,\n                this.moveEventBuffer.moveEventIndex - firstEventIndex\n            );\n        }\n    }\n\n    private pointermove(evt: PointerEvent | MouseEvent) {\n        this.handlePointerEvent(evt);\n    }\n\n    private pointerrawupdate(evt: PointerEvent) {\n        // Check if there are scheduled inputs before handlePointerEvent adds any\n        const alreadyScheduled = this.packetHandler.hasScheduledPackets();\n\n        this.handlePointerEvent(evt);\n\n        // If there weren't any inputs scheduled before but there are now, we need to send or\n        // schedule the current batch.\n        if (!alreadyScheduled && this.packetHandler.hasScheduledPackets()) {\n            const msSinceSend = performance.now() - this.packetHandler.lastMoveSendTime;\n\n            // Make sure we don't send events too frequently. We do a similar thing on native because\n            // mouse events can come as fast as 1000 times a second, which can overwhelm the network.\n            if (msSinceSend >= this.rawCoalesceInterval) {\n                this.packetHandler.sendScheduledPackets();\n            } else {\n                this.packetHandler.timeScheduledPackets(this.rawCoalesceInterval - msSinceSend);\n            }\n        }\n    }\n\n    // Sets the cursor position from a CSS offset from the cursor canvas or video element\n    public setCursorPosFromOffset(offsetX: number, offsetY: number) {\n        // The offset includes letterbox/pillarbox padding, so remove it\n        this.setCursorPosFromDisplayVideo(\n            offsetX - this.videoState.leftPadding,\n            offsetY - this.videoState.topPadding\n        );\n    }\n\n    // Sets the cursor position from a relative movementX/Y\n    private setCursorPosFromMovement(movementX: number, movementY: number) {\n        const scale = this.scaleMovementByDpr ? this.cursorCanvasState.dpiRatio : 1.0;\n        this.setCursorPosFromDisplayVideo(\n            this.cursorState.absX + movementX / scale,\n            this.cursorState.absY + movementY / scale\n        );\n    }\n\n    // Sets the cursor position using normalized uint16 coordinates provided by the server\n    private setCursorPosFromServer(normX: number, normY: number) {\n        this.setCursorPosFromDisplayVideo(\n            (normX * this.videoState.displayVideoWidth) / 65535,\n            (normY * this.videoState.displayVideoHeight) / 65535\n        );\n    }\n\n    // Sets the cursor position using display-video space coordinates\n    // They will be clamped to the rectangle that contains the actual displayed video\n    private setCursorPosFromDisplayVideo(x: number, y: number) {\n        this.cursorState.absX = Math.min(Math.max(x, 0), this.videoState.displayVideoWidth);\n        this.cursorState.absY = Math.min(Math.max(y, 0), this.videoState.displayVideoHeight);\n        this.scheduleCursorDraw();\n    }\n\n    private getCursorCanvas(videoTagElement: InputMediaElement): HTMLCanvasElement {\n        let element: HTMLElement | null = document.getElementById(this.cursorCanvasId);\n        if (\n            element &&\n            element instanceof HTMLCanvasElement &&\n            element.parentElement === videoTagElement.parentElement\n        ) {\n            return element;\n        } else {\n            if (element) {\n                // Choose new canvas ID\n                let canvasId: string;\n                do {\n                    canvasId = \"canvasId\" + Math.round(Math.random() * 10000);\n                    element = document.getElementById(canvasId);\n                } while (element);\n                this.cursorCanvasId = canvasId;\n            }\n            return this.createCursorCanvasElement(videoTagElement);\n        }\n    }\n\n    private createCursorCanvasElement(videoTagElement: InputMediaElement): HTMLCanvasElement {\n        let cursorCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n        cursorCanvas.id = this.cursorCanvasId;\n        cursorCanvas.style.touchAction = \"none\";\n        cursorCanvas.style.pointerEvents = \"none\";\n        // This ensures the browser puts the cursor on its own layer, putting transform on the GPU.\n        cursorCanvas.style.willChange = \"transform\";\n        this.setCursorCanvasPosition(cursorCanvas, videoTagElement);\n        videoTagElement.insertAdjacentElement(\"afterend\", cursorCanvas);\n\n        return cursorCanvas;\n    }\n\n    private setCursorCanvasPosition(\n        cursorCanvas: HTMLCanvasElement,\n        videoTagElement: InputMediaElement\n    ): void {\n        const zIndex = zIndexDefault;\n        const bounding = videoTagElement.getBoundingClientRect();\n        const parentBounding =\n            videoTagElement.parentElement?.getBoundingClientRect() ?? new DOMRect(0, 0, 0, 0);\n        const translationLimits = this.getTranslationLimits();\n        const left =\n            bounding.left -\n            parentBounding.left -\n            this.videoState.offsetX +\n            translationLimits.horizontal +\n            (this.videoState.zoomFactor - 1) * this.videoState.leftPadding;\n        const top =\n            bounding.top -\n            parentBounding.top -\n            this.videoState.offsetY +\n            translationLimits.vertical +\n            (this.videoState.zoomFactor - 1) * this.videoState.topPadding;\n\n        cursorCanvas.style.position = \"absolute\";\n        cursorCanvas.style.left = left + \"px\";\n        cursorCanvas.style.top = top + \"px\";\n        cursorCanvas.style.zIndex = zIndex;\n\n        this.updateCursorCanvasState(cursorCanvas);\n    }\n\n    public updateVideoState(videoState: VideoState) {\n        if (this.videoState.displayVideoWidth && this.videoState.displayVideoHeight) {\n            const horizontalScaleFactor =\n                videoState.displayVideoWidth / this.videoState.displayVideoWidth;\n            const verticalScaleFactor =\n                videoState.displayVideoHeight / this.videoState.displayVideoHeight;\n            // Scale our absolute coordinates to the new coordinate space\n            this.cursorState.absX *= horizontalScaleFactor;\n            this.cursorState.absY *= verticalScaleFactor;\n        }\n        this.videoState = videoState;\n\n        if (this.cursorCanvas) {\n            this.setCursorCanvasPosition(this.cursorCanvas, this.videoTagElement);\n        }\n    }\n    private updateCursorCanvasState(cursorCanvas: HTMLCanvasElement) {\n        // Cache the graphics context for efficiency\n        let ctx = cursorCanvas.getContext(\"2d\");\n        if (ctx) {\n            this.cursorCanvasState.graphicsContext = ctx;\n\n            const dpr = window.devicePixelRatio;\n            // Make sure we re-render the cursor if the DPR changed\n            if (this.cursorCanvasState.dpiRatio != dpr) {\n                Log.i(\"{70cc40b}\", \"{b786ba9}\", dpr);\n\n                this.cursorCanvasState.dpiRatio = dpr;\n                this.cursorCanvasState.imageChanged = true;\n                this.cursorCanvasState.imageDimensionsChanged = true;\n                this.scheduleCursorDraw();\n            }\n        }\n    }\n\n    private getCursorScaling(ratio: number): number {\n        // Calculate cursor scaling factor - that is the multiplier used to\n        // convert the cursor's pixel size to physical pixels.\n        // To avoid blurred cursors this should be an integer multiplier\n        // of the cursor's size.\n\n        // Don't factor in the stream size because it will cause a mismatch in cursor size between\n        // the hardware cursor the user is used to and our software cursor.\n        // On Windows, the cursor scale rounds down to 100%, 150%, 200%, 300%, etc. Note there's no 250%.\n        // To avoid non-integer scaling, round down to 100%, 200%, etc. except for the range [150, 200).\n        // These will be too small at 100%, so use 200% for them instead.\n        // On macOS, only 100% or 200% scaling will be visible here, so this algorithm will not change the scaling.\n\n        // Floating point threshold to avoid in-exact numbers messing up these calculations.\n        const threshold = 0.001;\n        // Special case [150, 200) to be 200% since 100% will be too small.\n        if (ratio >= 1.5 - threshold && ratio < 2 - threshold) {\n            return 2;\n        }\n        // Avoid setting the scaling to 0 if dpiRatio < 1\n        return Math.max(1, Math.floor(ratio + threshold));\n    }\n\n    // Input coordinates must be pre-scaled to account for the session size:\n    private drawCursor(absolute: boolean, x: number, y: number) {\n        if (!this.cursorCanvas) {\n            return;\n        }\n        if (this.externalShowCursor && absolute) {\n            const translationLimits = this.getTranslationLimits();\n            this.drawCursorPadded(\n                x * this.videoState.zoomFactor +\n                    this.videoState.offsetX -\n                    translationLimits.horizontal,\n                y * this.videoState.zoomFactor +\n                    this.videoState.offsetY -\n                    translationLimits.vertical,\n                this.videoState.leftPadding,\n                this.videoState.topPadding\n            );\n        } else {\n            this.hideCursor(this.cursorCanvas);\n        }\n    }\n\n    private setCursor(cursor: Cursor) {\n        if (!this.cursorCanvas) {\n            if (!cursor.style) {\n                cursor.style = this.makeCursorStyle(\n                    cursor.imageStr,\n                    cursor.mimeTypeStr,\n                    cursor.hotspotX,\n                    cursor.hotspotY\n                );\n            }\n\n            this.cursorState.style = cursor.style;\n            return;\n        }\n\n        if (!isVisibleCursor(cursor)) {\n            this.hideCursor(this.cursorCanvas);\n            return;\n        }\n\n        const updateImage = () => {\n            const image = cursor.imageElement!;\n            this.cursorCanvasState.imageChanged = true;\n            this.cursorCanvasState.imageDimensionsChanged =\n                !this.cursorState.image ||\n                image.width !== this.cursorState.image.width ||\n                image.height !== this.cursorState.image.height;\n\n            this.cursorState.image = image;\n            this.cursorState.hotspotX = cursor.hotspotX;\n            this.cursorState.hotspotY = cursor.hotspotY;\n            this.cursorState.width = image.width;\n            this.cursorState.height = image.height;\n            this.cursorState.scale = cursor.scale;\n            this.scheduleCursorDraw();\n        };\n\n        if (cursor.imageElement) {\n            if (cursor.imageElement.width !== 0 || cursor.imageElement.height !== 0) {\n                updateImage();\n            } else {\n                // We already started decoding this image. When the existing decode finishes,\n                // that callback will update the cursor. We don't need to do anything else.\n                this.cursorState.imagePendingDecode = cursor.imageElement;\n            }\n        } else {\n            const image = new Image();\n            cursor.imageElement = image;\n            if (!image.decode && image.decoding) {\n                image.decoding = \"sync\";\n            }\n            image.src = this.makeBase64Url(cursor.imageStr, cursor.mimeTypeStr);\n            if (image.decode) {\n                // Mark this image as pending decode. When decode succeeds or fails, the cursor will\n                // only be updated if this image is still the one pending decode.\n                // If this changes in the meantime, that means some other decode callback will update\n                // the cursor or it's been updated with an already-decoded image.\n                this.cursorState.imagePendingDecode = image;\n                // Wait until the image is decoded before using it.\n                image\n                    .decode()\n                    .then(() => {\n                        if (this.cursorState.imagePendingDecode === image) {\n                            this.cursorState.imagePendingDecode = undefined;\n                            updateImage();\n                        }\n                    })\n                    .catch(_encodingError => {\n                        if (this.cursorState.imagePendingDecode === image) {\n                            this.cursorState.imagePendingDecode = undefined;\n                            // Switch to fallback cursor\n                            this.setCursor(this.systemCursors[1]);\n                        }\n                    });\n            } else {\n                this.cursorState.imagePendingDecode = undefined;\n                updateImage();\n            }\n        }\n    }\n\n    // Draws a cursor on the cursor canvas, at position (x, y)\n    // Pass in padding offsets (in CSS pixels) relative to the session element's container.\n    private drawCursorPadded(x: number, y: number, leftPadding: number, topPadding: number) {\n        if (!this.cursorCanvas) {\n            return;\n        }\n\n        const dpr = this.cursorCanvasState.dpiRatio;\n        const cursorScaling = this.getCursorScaling(dpr / this.cursorState.scale);\n        const hotspotScale = cursorScaling / dpr;\n        const adjustedX = x - this.cursorState.hotspotX * hotspotScale + leftPadding;\n        const adjustedY = y - this.cursorState.hotspotY * hotspotScale + topPadding;\n\n        // These coordinates are in CSS pixels, which will eventually be converted by the browser\n        // to screen pixels by multiplying by DPR. Unless a zoom is in progress, make sure our cursor\n        // gets rendered on a pixel boundary so it's not blurry. Do not try to round during a zoom\n        // to avoid cursor wiggle.\n        let scaleX = adjustedX * dpr;\n        let scaleY = adjustedY * dpr;\n        if (!this.zoomInProgress) {\n            scaleX = Math.round(scaleX);\n            scaleY = Math.round(scaleY);\n        }\n\n        scaleX = scaleX / dpr;\n        scaleY = scaleY / dpr;\n\n        if (this.cursorCanvasState.imageChanged && this.cursorState.image) {\n            this.cursorCanvasState.imageChanged = false;\n\n            const cursorPixelWidth = this.cursorState.width * cursorScaling;\n            const cursorPixelHeight = this.cursorState.height * cursorScaling;\n            const ctx = this.cursorCanvasState.graphicsContext!;\n            ctx.clearRect(0, 0, this.cursorCanvas.width, this.cursorCanvas.height);\n            if (this.cursorCanvasState.imageDimensionsChanged) {\n                this.cursorCanvasState.imageDimensionsChanged = false;\n\n                // Style dimensions are in CSS pixels, but the canvas dimensions are in screen pixels.\n                // The style dimensions will be scaled by the browser back up to correct number of\n                // screen pixels\n                this.cursorCanvas.style.width = cursorPixelWidth / dpr + \"px\";\n                this.cursorCanvas.style.height = cursorPixelHeight / dpr + \"px\";\n                // We need an integer number of pixels here, so make sure we don't cut off an edge\n                this.cursorCanvas.width = Math.ceil(cursorPixelWidth);\n                this.cursorCanvas.height = Math.ceil(cursorPixelHeight);\n                // Changing the canvas dimensions resets the context to its default settings.\n                // So, we need to reapply these every time the cursor dimensions change\n                ctx.scale(1, 1);\n                ctx.imageSmoothingEnabled = false;\n            }\n            ctx.drawImage(this.cursorState.image, 0, 0, cursorPixelWidth, cursorPixelHeight);\n        }\n        if (!this.cursorCanvasState.showing) {\n            this.cursorCanvasState.showing = true;\n            this.cursorCanvas.style.visibility = \"visible\";\n        }\n        this.cursorCanvas.style.transform = \"translate(\" + scaleX + \"px, \" + scaleY + \"px)\";\n    }\n\n    private hideCursor(canvas: HTMLCanvasElement) {\n        if (this.cursorCanvasState.showing) {\n            this.cursorCanvasState.showing = false;\n            canvas.style.visibility = \"hidden\";\n            this.cursorState.image = undefined;\n        }\n    }\n\n    private onCursorMessage(msg: MessageEvent): void {\n        let uint8Array = new Uint8Array(msg.data);\n        const SYSTEM_CURSOR = 0;\n        const BITMAP_CURSOR = 1;\n        const CONFINEMENT = 10;\n        switch (uint8Array[0]) {\n            case SYSTEM_CURSOR:\n            case BITMAP_CURSOR:\n                // Set cursor image message\n                let cursorId = uint8Array[1];\n                let hotX = uint8Array[2];\n                let hotY = uint8Array[3];\n                let mimeSize = uint8Array[4];\n                let offset = 5;\n                let read16 = () => {\n                    const result = uint8Array[offset] + (uint8Array[offset + 1] << 8);\n                    offset += 2;\n                    return result;\n                };\n                let mimeType = \"\";\n                if (mimeSize != 0) {\n                    let mimearray = uint8Array.subarray(offset, offset + mimeSize);\n                    offset += mimeSize;\n                    mimeType = new TextDecoder(\"utf-8\").decode(mimearray);\n                }\n\n                const payloadSize = read16();\n                let payload = \"\";\n                if (payloadSize != 0) {\n                    let payloadarray = uint8Array.subarray(offset, offset + payloadSize);\n                    offset += payloadSize;\n                    payload = new TextDecoder(\"utf-8\").decode(payloadarray);\n                }\n\n                let x: number | undefined;\n                let y: number | undefined;\n                if (offset + 4 <= uint8Array.byteLength) {\n                    x = read16();\n                    y = read16();\n                }\n                let scale: number | undefined;\n                if (offset + 2 <= uint8Array.byteLength) {\n                    scale = read16() / 100;\n                }\n                if (uint8Array[0] == SYSTEM_CURSOR) {\n                    this.handleSystemCursor(cursorId, x, y);\n                } else {\n                    this.handleBitmapCursor(cursorId, hotX, hotY, mimeType, payload, x, y, scale);\n                }\n                break;\n            case CONFINEMENT:\n                // If !allowUnconfined, do not change the cursor confinement. It will always be enabled.\n                if (this.configFlags.allowUnconfined) {\n                    // Set cursor confinement message\n                    let confine = uint8Array[1];\n\n                    this.setCursorConfinement(confine == 1);\n                }\n                break;\n        }\n    }\n\n    private handleSystemCursor(id: number, x?: number, y?: number) {\n        if (id >= this.systemCursors.length) {\n            Log.e(\"{70cc40b}\", \"{de8eabe}\", id);\n            return;\n        }\n        this.handleCursorCommon(this.systemCursors[id], x, y);\n    }\n\n    private handleBitmapCursor(\n        id: number,\n        hotspotX: number,\n        hotspotY: number,\n        mimeType: string,\n        image: string,\n        x?: number,\n        y?: number,\n        scale?: number\n    ) {\n        let cursor: Cursor;\n        if (image.length > 0) {\n            // Cache cursor\n            cursor = {\n                imageStr: image,\n                hotspotX: hotspotX,\n                hotspotY: hotspotY,\n                mimeTypeStr: mimeType,\n                // Intentionally check for scale to be not undefined AND not zero.\n                // If the server doesn't support the cursor scale value, it will not include it or set it to zero\n                scale: scale ? scale : 1\n            };\n            this.cursorCache[id] = cursor;\n        } else {\n            cursor = this.cursorCache[id];\n            if (cursor === undefined) {\n                Log.e(\"{70cc40b}\", \"{0196577}\", id);\n                return;\n            }\n        }\n\n        this.handleCursorCommon(cursor, x, y);\n    }\n\n    private handleCursorCommon(cursor: Cursor, x?: number, y?: number) {\n        const isVisible = isVisibleCursor(cursor);\n        if (!this.cursorState.absPositioning && isVisible && x !== undefined && y !== undefined) {\n            // Only accept the new server position if we're transitioning from a hidden to visible cursor.\n            this.setCursorPosFromServer(x, y);\n        }\n\n        this.setCursorMovementAbsolute(isVisible);\n        this.updatePointerLock();\n\n        this.setCursor(cursor);\n        this.updateHardwareCursor();\n    }\n\n    private makeCursorStyle(\n        image: string,\n        mimeType: string,\n        hotspotX: number,\n        hotspotY: number\n    ): string {\n        return `url(${this.makeBase64Url(image, mimeType)}) ${hotspotX} ${hotspotY}, auto`;\n    }\n\n    private makeBase64Url(image: string, mimeType: string): string {\n        return `data:${mimeType};base64,${image}`;\n    }\n\n    private updateHardwareCursor() {\n        const target = this.videoTagElement;\n        const showDefault =\n            !this.isUserInputEnabled() ||\n            (this.shouldPointerLock() && !this.isPointerLocked()) ||\n            this.cursorType == CursorType.FREE;\n        if (showDefault) {\n            // If we're in a case where we're not accepting user input, show the hardware cursor.\n            // This makes sure they can see where their cursor is pointing.\n            target.style.cursor = \"default\";\n        } else if (this.cursorCanvas) {\n            target.style.cursor = \"none\";\n        } else {\n            target.style.cursor = this.cursorState.style;\n        }\n    }\n\n    private scheduleCursorDraw() {\n        this.cursorCanvasState.dirty = true;\n    }\n\n    private setCursorMovementAbsolute(absolute: boolean) {\n        this.cursorState.absPositioning = absolute;\n        if (!absolute) {\n            this.cursorState.remX = 0;\n            this.cursorState.remY = 0;\n        }\n    }\n\n    private setCursorConfinement(confine: boolean) {\n        this.cursorState.confined = confine;\n        this.updatePointerLock();\n    }\n\n    private onFullscreenChange(fullscreen: boolean) {\n        // If we're entering fullscreen, we must be in a user interaction so we can request pointer lock.\n        // If we left fullscreen, don't try to take the pointer lock again until we get a user interaction.\n        this.allowPointerLock = fullscreen;\n        this.updatePointerLock();\n\n        this.updateHardwareCursor();\n    }\n\n    private pointerLockChange(_: Event) {\n        if (document.pointerLockElement instanceof HTMLElement) {\n            this.pointerLockElement = document.pointerLockElement;\n        } else {\n            this.pointerLockElement = null;\n            if (this.shouldPointerLock()) {\n                Log.i(\"{70cc40b}\", \"{d4b3de3}\");\n                // If the user explicitly leaves pointer lock, we won't be able to automatically\n                // go in and out of it without another user interaction\n                this.allowPointerLock = false;\n                // User left pointer lock, so this will display the hardware cursor\n                this.updateHardwareCursor();\n            }\n        }\n    }\n\n    private pointerLockError(_: Event) {\n        // We use the promise for pointer lock errors when possible\n        if (this.pointerLockReturnsPromise) {\n            return;\n        }\n        this.pointerLockElement = null;\n        // We don't know whether we're using the Promise-based requestPointerLock until we actually call it.\n        // If the first call to the non-Promise rPL happens to request unadjustedMovement, it will fail.\n        // Handle that case here by disabling unadjusted movement.\n        if (this.unadjustedMovementAllowed) {\n            this.unadjustedMovementAllowed = false;\n            Log.e(\"{70cc40b}\", \"{7599808}\");\n            this.updatePointerLock();\n        } else {\n            Log.e(\"{70cc40b}\", \"{d633cd1}\");\n            this.handlePointerLockFailed();\n        }\n    }\n\n    private handlePointerLockFailed() {\n        this.updateHardwareCursor();\n    }\n\n    public shouldPointerLock() {\n        return (\n            this.isUserInputEnabled() &&\n            this.cursorType != CursorType.FREE &&\n            this.windowObserver.getWindowFocus() &&\n            (!this.cursorState.absPositioning || this.cursorState.confined) &&\n            (this.streamClient.getLdatHandler()?.allowPointerLock() ?? true)\n        );\n    }\n\n    public isPointerLocked() {\n        return this.pointerLockElement !== null;\n    }\n\n    public updatePointerLock() {\n        const shouldLock = this.shouldPointerLock();\n        const isLocked = this.isPointerLocked();\n        const shouldUnadjusted = this.unadjustedMovementAllowed && !this.cursorState.absPositioning;\n        const isUnadjusted = this.unadjustedMovementActive;\n        if (\n            this.allowPointerLock &&\n            shouldLock &&\n            (!isLocked || shouldUnadjusted !== isUnadjusted)\n        ) {\n            const target = this.videoTagElement;\n            // Optimistically set pointerLockElement before we know pointer lock succeeded.\n            // If pointer lock fails, we'll set it back to null.\n            // This ensures isPointerLocked() returns true as soon as updatePointerLock is called.\n            // This also fixes a bug where we wouldn't exit pointer lock if a request was still pending.\n            this.pointerLockElement = target;\n            // On Android, PointerLock is not supported, but target.rPL returns true. If we see rPL\n            // failing consecutively for 3 times with UnknownError, we take it as unsupported.\n            if (!!target.requestPointerLock && this.consecutivePointerLockFailedAttempts < 3) {\n                if (this.isChromium) {\n                    // Note that for this to be active the flag chrome://flags/#enable-pointer-lock-options\n                    // needs to be enabled.  Otherwise, it will have no effect.\n                    const options = {\n                        unadjustedMovement: shouldUnadjusted\n                    };\n                    const promise = <Promise<void> | undefined>(\n                        (target as any).requestPointerLock(options)\n                    );\n                    if (promise) {\n                        this.pointerLockReturnsPromise = true;\n                        promise\n                            .then(() => {\n                                this.unadjustedMovementActive = shouldUnadjusted;\n                                // Reset the counter\n                                this.consecutivePointerLockFailedAttempts = 0;\n                            })\n                            .catch((ex: DOMException) => {\n                                this.pointerLockElement = null;\n                                // Although we don't rely on it right now, this Promise is rejected before\n                                // pointerlockerror is called\n                                if (ex.name === \"NotSupportedError\" && shouldUnadjusted) {\n                                    Log.i(\"{70cc40b}\", \"{08fd91e}\");\n                                    this.unadjustedMovementAllowed = false;\n                                    this.updatePointerLock();\n                                } else {\n                                    // Android pointer lock fires PointerLockResult::kUnknownError\n                                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1235139\n                                    if (ex.name == \"UnknownError\") {\n                                        this.consecutivePointerLockFailedAttempts++;\n                                        Log.w(\"{70cc40b}\", \"{9f2ba9f}\", this.consecutivePointerLockFailedAttempts);\n                                    } else {\n                                        Log.e(\"{70cc40b}\", \"{4cdd98f}\", ex.name, ex.message);\n                                    }\n                                    this.handlePointerLockFailed();\n                                }\n                            });\n                    }\n                } else {\n                    target.requestPointerLock();\n                }\n            }\n        } else if (!shouldLock && isLocked) {\n            this.pointerLockElement = null;\n            if (document.exitPointerLock) {\n                document.exitPointerLock();\n            }\n        }\n    }\n\n    public enableUserInput(): void {\n        if (this.isUserInputEnable) {\n            return;\n        }\n        this.isUserInputEnable = true;\n        // Do not add mouse click handlers for iOS. Hardware mouse is not supported\n        // and we can't accurately filter out mouse events that the browser converts\n        // from touch events.\n        /// TODO: Look into using pointer events on iOS and other platforms\n        if (!IsiDevice(this.platformDetails)) {\n            this.addClickListeners();\n        }\n        // TODO: We are using CursorType.FREE as a substitute for a real \"windowed mode\" flag. This should really be\n        // done based on windowed mode support.\n        // For windowed mode, only listen to wheel events on the video. We don't do this for fullscreen because of this\n        // bug: https://bugs.chromium.org/p/chromium/issues/detail?id=1054332, which was fixed in Chromium 85. We still\n        // support Chromium versions back to 77 and don't have a good way of detecting the version of all Chromium-based\n        // browsers.\n        const wheelAddEventListener =\n            this.cursorType !== CursorType.FREE\n                ? this.documentAddEventListener\n                : this.videoAddEventListener;\n        wheelAddEventListener(\"wheel\", this.mousewheelFunc, this.nonpassiveOptions);\n        this.addMoveListener();\n        if (this.cursorCanvas) {\n            this.cursorCanvas.style.display = \"block\";\n            this.videoTagElement.style.cursor = \"none\";\n        }\n        this.updatePointerLock();\n    }\n\n    public disableUserInput(): void {\n        if (!this.isUserInputEnable) {\n            return;\n        }\n        this.releasePressedButtons();\n        this.isUserInputEnable = false;\n        if (!IsiDevice(this.platformDetails)) {\n            this.removeClickListeners();\n        }\n        const wheelRemoveEventListener =\n            this.cursorType !== CursorType.FREE\n                ? this.documentRemoveEventListener\n                : this.videoRemoveEventListener;\n        wheelRemoveEventListener(\"wheel\", this.mousewheelFunc, this.nonpassiveOptions);\n        this.removeMoveListener();\n        if (this.cursorCanvas) {\n            this.cursorCanvas.style.display = \"none\";\n            this.videoTagElement.style.cursor = \"default\";\n        }\n        this.updatePointerLock();\n    }\n\n    public isUserInputEnabled(): boolean {\n        return this.isUserInputEnable;\n    }\n\n    private setRawUpdate(newState: RawUpdateState) {\n        if (!this.supportsRawUpdate || this.rawUpdateState === newState) {\n            return;\n        }\n        if (this.isUserInputEnable) {\n            this.removeMoveListener();\n        }\n        this.rawUpdateState = newState;\n        if (this.isUserInputEnable) {\n            this.addMoveListener();\n        }\n        switch (newState) {\n            case RawUpdateState.ON_4MS:\n                this.rawCoalesceInterval = 4;\n                break;\n            case RawUpdateState.ON_8MS:\n                this.rawCoalesceInterval = 8;\n                break;\n            case RawUpdateState.ON_16MS:\n                this.rawCoalesceInterval = 16;\n                break;\n            default:\n                this.rawCoalesceInterval = 0;\n                break;\n        }\n    }\n\n    private addMoveListener() {\n        if (this.cursorType == CursorType.FREE) {\n            this.rsdmmHandler.setMoveType(this.getMoveEventName());\n            this.videoAddEventListener(this.getMoveEventName(), this.getFreeMoveFunc());\n        } else if (this.rawUpdateState !== RawUpdateState.OFF) {\n            this.rsdmmHandler.setMoveType(\"pointerrawupdate\");\n            this.videoAddEventListener(\"pointerrawupdate\", this.pointerRawUpdateFunc);\n        } else {\n            this.rsdmmHandler.setMoveType(this.getMoveEventName());\n            this.videoAddEventListener(this.getMoveEventName(), this.pointerMoveFunc);\n        }\n    }\n\n    private removeMoveListener() {\n        if (this.cursorType == CursorType.FREE) {\n            this.videoRemoveEventListener(this.getMoveEventName(), this.getFreeMoveFunc());\n        } else if (this.rawUpdateState !== RawUpdateState.OFF) {\n            this.videoRemoveEventListener(\"pointerrawupdate\", this.pointerRawUpdateFunc);\n        } else {\n            this.videoRemoveEventListener(this.getMoveEventName(), this.pointerMoveFunc);\n        }\n    }\n\n    private addClickListeners() {\n        if (this.cursorType == CursorType.FREE && this.supportsPointerEvents) {\n            this.rsdmmHandler.setDownUpTypes(\"pointerdown\", \"pointerup\");\n            this.videoAddEventListener(\"pointerdown\", this.pointerdownFunc);\n            this.videoAddEventListener(\"pointerup\", this.pointerupFunc);\n        } else {\n            this.rsdmmHandler.setDownUpTypes(\"mousedown\", \"mouseup\");\n            this.videoAddEventListener(\"mousedown\", this.mousedownFunc);\n            this.videoAddEventListener(\"mouseup\", this.mouseupFunc);\n        }\n    }\n\n    private removeClickListeners() {\n        if (this.cursorType == CursorType.FREE && this.supportsPointerEvents) {\n            this.videoRemoveEventListener(\"pointerdown\", this.pointerdownFunc);\n            this.videoRemoveEventListener(\"pointerup\", this.pointerupFunc);\n        } else {\n            this.videoRemoveEventListener(\"mousedown\", this.mousedownFunc);\n            this.videoRemoveEventListener(\"mouseup\", this.mouseupFunc);\n        }\n    }\n\n    private onFocusChange(focus: boolean): void {\n        // If we receive focus while in fullscreen, the user probably alt tabbed back to us.\n        if (focus) {\n            if (this.windowObserver.getFullscreen()) {\n                this.allowPointerLock = true;\n                this.updatePointerLock();\n            }\n            if (this.cursorCanvas) {\n                this.updateCursorCanvasState(this.cursorCanvas);\n            }\n        }\n    }\n\n    public releasePressedButtons() {\n        if (this.pressedButtons.size > 0) {\n            Log.i(\"{70cc40b}\", \"{041c67f}\", this.pressedButtons.size);\n            for (const button of this.pressedButtons) {\n                // deletes button from cache\n                this.sendMouseUp(button, 0);\n            }\n        }\n    }\n\n    public getMoveEventName() {\n        if (this.supportsPointerEvents) {\n            return \"pointermove\";\n        } else {\n            return \"mousemove\";\n        }\n    }\n\n    private getFreeMoveFunc(): Function {\n        if (this.supportsPointerEvents) {\n            return this.freePointerMoveFunc;\n        } else {\n            return this.freeMouseMoveFunc;\n        }\n    }\n\n    public sendMouseDown(button: number, ts: number) {\n        if (this.pressedButtons.has(button)) {\n            return;\n        }\n        this.pressedButtons.add(button);\n        this.packetHandler.sendMouseDown(button, ts);\n    }\n\n    public sendMouseUp(button: number, ts: number) {\n        if (!this.pressedButtons.has(button)) {\n            return;\n        }\n        this.pressedButtons.delete(button);\n        this.packetHandler.sendMouseUp(button, ts);\n    }\n\n    // TODO: This is copied from InputHandler. This should be in common code for video state handling\n    private getTranslationLimits(): BoundaryPair {\n        return {\n            horizontal: (this.videoState.displayVideoWidth * (this.videoState.zoomFactor - 1)) / 2,\n            vertical: (this.videoState.displayVideoHeight * (this.videoState.zoomFactor - 1)) / 2\n        };\n    }\n\n    public setShowCursor(show: boolean): void {\n        this.externalShowCursor = show;\n        this.updatePointerLock();\n    }\n\n    public setZoomInProgress(zoom: boolean): void {\n        this.zoomInProgress = zoom;\n        this.scheduleCursorDraw();\n    }\n\n    public getCursorState(): CursorState {\n        return this.cursorState;\n    }\n\n    public toggleUnadjustedMovement(): void {\n        this.unadjustedMovementAllowed = !this.unadjustedMovementAllowed;\n        const message = \"UnadjustedMovement: \" + (this.unadjustedMovementAllowed ? \"ON\" : \"OFF\");\n        this.streamClient.showDebugMessage(message);\n        Log.i(\"{70cc40b}\", \"{796c5cb}\", (this.unadjustedMovementAllowed ? \"ON\" : \"OFF\"));\n    }\n\n    public setNextRawUpdate(): void {\n        let status = \"UNSUPPORTED\";\n        if (this.supportsRawUpdate) {\n            this.setRawUpdate((this.rawUpdateState + 1) % RawUpdateState.COUNT);\n            switch (this.rawUpdateState) {\n                case RawUpdateState.ON_4MS:\n                    status = \"4ms\";\n                    break;\n                case RawUpdateState.ON_8MS:\n                    status = \"8ms\";\n                    break;\n                case RawUpdateState.ON_16MS:\n                    status = \"16ms\";\n                    break;\n                default:\n                    status = \"OFF\";\n                    break;\n            }\n        }\n        const message = \"Non-vsync mouse events: \" + status;\n        this.streamClient.showDebugMessage(message);\n        Log.i(\"{70cc40b}\", \"{bac28ff}\", status);\n    }\n\n    private getDefaultUnadjustedMovement(): boolean {\n        // Dynamically enable the origin trial for requestPointerLock unadjustedMovement if we're:\n        // - On Windows and Chrome 84+: Chrome 83 had a bug that broke pointer lock\n        // - On ChromeOS/macOS and Chrome 86+: First version to be fully implemented on ChromeOS/macOS\n        if (IsWindowsOS(this.platformDetails)) {\n            return IsChromeVersionAtLeast(this.platformDetails, 84, 0, 4147, 78);\n        } else if (IsChromeOS(this.platformDetails) || IsMacOS(this.platformDetails)) {\n            return IsChromeVersionAtLeast(this.platformDetails, 86, 0, 4240, 198);\n        } else {\n            return false;\n        }\n    }\n\n    public getMouseMode(): string {\n        // The local and alt here come from Geronimo. \"local\" meaning local cursor is on and \"alt\" meaning alternate\n        // input is active. \"alt\" doesn't make too much sense for Ragnarok, but it will make it easier when referring\n        // to both Geronimo and Ragnarok at once\n        const cursor = this.cursorState.absPositioning ? \"local\" : \"alt\";\n        const locked = this.isPointerLocked() ? \"locked\" : \"unlocked\";\n        return `${cursor} ${locked}`;\n    }\n}\n\nfunction getRawUpdateOverride(): RawUpdateState | undefined {\n    const override = RagnarokSettings.ragnarokConfig.mouseCoalesceInterval;\n    if (override !== undefined) {\n        const SUPPORTED = new Map([\n            [0, RawUpdateState.OFF],\n            [4, RawUpdateState.ON_4MS],\n            [8, RawUpdateState.ON_8MS],\n            [16, RawUpdateState.ON_16MS]\n        ]);\n        return SUPPORTED.get(override);\n    }\n    return undefined;\n}\n\nfunction shouldIgnorePointerEvent(evt: PointerEvent): boolean {\n    if (!evt.isPrimary) {\n        return true;\n    }\n    // GestureHandler/TouchListener is always available to handle touch/pen events, so ignore those here\n    if (evt.pointerType === \"touch\" || evt.pointerType === \"pen\") {\n        return true;\n    }\n    return false;\n}\n\nfunction isVisibleCursor(cursor: Cursor): boolean {\n    // A cursor is always visible unless it's a system cursor with ID zero, which maps to a style of \"none\".\n    // No other cursor will ever have this style\n    return cursor.style !== \"none\";\n}\n","import { VirtualGamepad, VirtualGamepadHandler } from \"./virtualgamepad\";\r\nimport { RagnarokSettings } from \"../util/settings\";\r\nimport { LatencyIndicator } from \"../debug/latencyindicator\";\r\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\r\nimport { GamepadDataHandler, VibrationHandler, Zoneless } from \"../interfaces\";\r\nimport { GamepadRSDMM } from \"./gamepadrsdmm\";\r\nimport { PlatformName, BrowserName, IsXboxEdge, PlatformDetails, Log } from \"../dependencies\";\r\nimport { GetCaptureTimestamp } from \"../util/utils\";\r\n\r\nconst LOGTAG = \"gamepadhandler\";\r\n\r\ninterface ButtonMappingFunc {\r\n    (controller: Gamepad): number;\r\n}\r\ninterface TriggerMappingFunc {\r\n    (controller: Gamepad): number;\r\n}\r\ninterface AxesMappingFunc {\r\n    (controller: Gamepad): readonly number[];\r\n}\r\n\r\ninterface TelemetryData {\r\n    gamepadName: string;\r\n    state: number;\r\n    buttons: number;\r\n    triggers: number;\r\n    axes: number[];\r\n}\r\n\r\ninterface GamepadDetail {\r\n    device: Gamepad;\r\n    standard: boolean;\r\n    getButtonMapping: ButtonMappingFunc;\r\n    getTriggerMapping: TriggerMappingFunc;\r\n    getAxesMapping: AxesMappingFunc;\r\n    telemetryData: TelemetryData;\r\n    simplifiedHaptics?: boolean;\r\n}\r\n\r\ndeclare interface GamepadEvent extends Event {\r\n    readonly gamepad: Gamepad;\r\n}\r\n\r\n/// Timeout for gamepad scanning and updates when no gamepad has been detected.\r\n/// This reduces unnecessary processing when no gamepad is connected.\r\nconst GAMEPAD_TICK_IDLE_MS = 100;\r\nconst GAMEPAD_TICK_DEFAULT_MS = 4;\r\n\r\n// Number of seconds of gamepad inactivity before triggering the inactivity callback\r\nconst GAMPAD_INACTIVITY_S = 5;\r\n\r\n/// Maximum number of 'instant' updates for the gamepad, before increasing the\r\n/// timeout for the next update.\r\nconst MAX_GAMEPAD_INSTANT_UPDATES = 2;\r\n\r\n/// Minimum amount of axis variation before we send an update to the server.\r\n/// Avoids constant updates for 'noisy' axes, which show movement even with no-one touching them.\r\nconst MIN_GAMEPAD_AXIS_VARIATION = 0.01;\r\n\r\n/// Milliseconds between haptics effects changes for controllers that require simplified haptics.\r\nconst MINIMAL_SIMPLIFIED_HAPTICS_DELAY = 500;\r\n\r\n/// (Partial) Duration of a haptic effect that has no specified duration itself.\r\nconst PARTIAL_HAPTIC_DURATION = 1000;\r\n\r\n// Bitmask for gamepad buttons in input protocol\r\n// prettier-ignore\r\nexport const enum BUTTONS {\r\n    A = 0x1000,\r\n    B = 0x2000,\r\n    X = 0x4000,\r\n    Y = 0x8000,\r\n    LB = 0x0100,      // Left bumper\r\n    RB = 0x0200,      // Right bumper\r\n    BACK = 0x0020,\r\n    START = 0x0010,\r\n    THUMBL = 0x0040,  // Left thumbstick\r\n    THUMBR = 0x0080,  // Right thumbstick\r\n    DPADU = 0x0001,   // D-Pad Up\r\n    DPADD = 0x0002,   // D-Pad Down\r\n    DPADL = 0x0004,   // D-Pad Left\r\n    DPADR = 0x0008    // D-Pad Right\r\n}\r\n\r\n// Bitmask for gamepad triggers in input protocol\r\nexport const enum TRIGGERS {\r\n    RT = 0xff00,\r\n    LT = 0x00ff\r\n}\r\n\r\nclass GamepadSnapshot {\r\n    buttons: number;\r\n    axes: readonly number[];\r\n    triggers: number;\r\n    timestamp: number;\r\n\r\n    constructor(controller: GamepadDetail) {\r\n        this.buttons = controller.getButtonMapping(controller.device);\r\n        this.axes = controller.getAxesMapping(controller.device);\r\n        this.triggers = controller.getTriggerMapping(controller.device);\r\n        // Don't use the timestamp given in controller.device because it has an incorrect epoch on Safari.\r\n        // Per the spec, it's supposed to be performance.timing.navigationStart.\r\n        this.timestamp = performance.now();\r\n    }\r\n\r\n    private controllerAxesDiffer(previous: readonly number[], current: readonly number[]): boolean {\r\n        const minVariation = MIN_GAMEPAD_AXIS_VARIATION;\r\n        for (let i = 0; i < previous.length; i++) {\r\n            if (Math.abs(previous[i] - current[i]) > minVariation) {\r\n                // Noticeable variation to previous.\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    equalTo(rhs: GamepadSnapshot): boolean {\r\n        return (\r\n            this.buttons == rhs.buttons &&\r\n            this.triggers == rhs.triggers &&\r\n            !this.controllerAxesDiffer(this.axes, rhs.axes)\r\n        );\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    type GamepadHapticActuatorTypeEnhanced = \"vibration\" | \"dual-rumble\";\r\n\r\n    interface GamepadHapticEffectParameters {\r\n        duration: number; // ms\r\n        startDelay: number; // ms\r\n        weakMagnitude: number; // 0.0 - 1.0\r\n        strongMagnitude: number; // 0.0 - 1.0\r\n    }\r\n\r\n    interface GamepadHapticActuatorEnhanced {\r\n        type: GamepadHapticActuatorTypeEnhanced;\r\n        playEffect?(\r\n            type: GamepadHapticActuatorTypeEnhanced,\r\n            params: GamepadHapticEffectParameters\r\n        ): Promise<any>;\r\n    }\r\n\r\n    interface Gamepad {\r\n        vibrationActuator?: GamepadHapticActuatorEnhanced;\r\n    }\r\n}\r\n\r\nconst EMPTY_EFFECT = {\r\n    startDelay: 0,\r\n    duration: 0,\r\n    weakMagnitude: 0,\r\n    strongMagnitude: 0\r\n};\r\n\r\nexport class GamepadHandler implements VibrationHandler {\r\n    private gamepadDataHandlers: GamepadDataHandler[];\r\n    private telemetry?: TelemetryHandler;\r\n    private gamepadConnectedFunc: any;\r\n    private gamepadDisconnectedFunc: any;\r\n    private gamepadInactivityFunc: any;\r\n    private gamepadDetails: (GamepadDetail | null)[];\r\n    private gamepadBitmap: number = 0;\r\n    private gamepadTimer: number = 0;\r\n    private gamepadPollInterval: number;\r\n    private gamepadTickFunc: any;\r\n    private gamepadSnapshotPrevious: (GamepadSnapshot | null)[];\r\n    private gamepadTimestamps: number[];\r\n    private hapticsStrongMagnitude: number[] = [];\r\n    private hapticsWeakMagnitude: number[] = [];\r\n    private lastHapticsEffect: number[] = [];\r\n    private hapticsSupported: boolean = false;\r\n    private hapticsEnabled: boolean = false;\r\n    private hapticsState: boolean = false;\r\n    private allowHaptics: boolean;\r\n    private isUserInputEnable: boolean = false;\r\n    private firstTimeInputEnabled: boolean = false;\r\n    private inputEnabledStateBeforeUserIdlePendingOverlay: boolean;\r\n    private virtualGamepad: VirtualGamepad;\r\n    private virtualGamepadHandler: VirtualGamepadHandler;\r\n    private windowAddEventListener: any;\r\n    private windowRemoveEventListener: any;\r\n    private gamepadDataSender: GamepadDataHandler | undefined;\r\n    private rsdmmHandler: GamepadRSDMM | undefined;\r\n    private rsdmmActive: boolean = false;\r\n    private prevThumbstickDown: number = 0;\r\n    private seenThumbUp = false;\r\n    private isSafariOlder: boolean = false;\r\n    private isSafari13: boolean = false;\r\n    private isSafari14: boolean = false;\r\n    private isChromeOs: boolean = false;\r\n    private isWebOs: boolean = false;\r\n    private isTizenOs: boolean = false;\r\n    private isAndroid: boolean = false;\r\n    private platformDetails: PlatformDetails;\r\n    private gamepadScannedOnce: boolean = false;\r\n    private virtualGamepadTelemetry?: TelemetryData;\r\n    private previousGamepadTickTs?: number;\r\n    private maxSchedulingDelay: number = 0;\r\n    constructor(platformDetails: PlatformDetails, zoneless?: Zoneless) {\r\n        this.windowAddEventListener =\r\n            zoneless && zoneless.windowAddEventListener\r\n                ? zoneless.windowAddEventListener.bind(window)\r\n                : window.addEventListener.bind(window);\r\n        this.windowRemoveEventListener =\r\n            zoneless && zoneless.windowRemoveEventListener\r\n                ? zoneless.windowRemoveEventListener.bind(window)\r\n                : window.removeEventListener.bind(window);\r\n\r\n        this.gamepadConnectedFunc = this.gamepadConnected.bind(this);\r\n        this.gamepadDisconnectedFunc = this.gamepadDisconnected.bind(this);\r\n        this.gamepadTickFunc = this.gamepadTick.bind(this);\r\n        this.gamepadDetails = [];\r\n        this.gamepadPollInterval = GAMEPAD_TICK_IDLE_MS;\r\n        this.gamepadSnapshotPrevious = [];\r\n        this.gamepadTimestamps = [];\r\n        this.gamepadDataHandlers = [];\r\n\r\n        this.platformDetails = platformDetails;\r\n        const osName = platformDetails.os;\r\n        const osVersion = platformDetails.osVer;\r\n        const isSafari =\r\n            (osName == PlatformName.IOS || osName == PlatformName.IPADOS) &&\r\n            platformDetails.browser == BrowserName.SAFARI;\r\n        this.isSafari13 = isSafari && osVersion.startsWith(\"13\");\r\n        this.isSafari14 = isSafari && osVersion.startsWith(\"14\");\r\n        this.isSafariOlder = isSafari && osVersion == \"12-\";\r\n        this.isChromeOs = osName == PlatformName.CHROME_OS;\r\n        this.isWebOs = osName == PlatformName.WEBOS;\r\n        this.isTizenOs = osName == PlatformName.TIZEN;\r\n        this.isAndroid = osName == PlatformName.ANDROID;\r\n\r\n        this.inputEnabledStateBeforeUserIdlePendingOverlay = true;\r\n\r\n        this.virtualGamepad = {\r\n            v_index: 0,\r\n            v_enabled: false,\r\n            v_connected: false,\r\n            v_buttons: 0,\r\n            v_trigger: 0,\r\n            v_axes: [],\r\n            v_updated: false\r\n        };\r\n\r\n        this.virtualGamepadHandler = new VirtualGamepadHandler(this.virtualGamepad);\r\n\r\n        this.allowHaptics =\r\n            RagnarokSettings.allowHaptics ?? RagnarokSettings.ragnarokConfig.allowHaptics ?? true;\r\n\r\n        Log.d(\"{515a922}\", \"{b0c674b}\");\r\n    }\r\n\r\n    private connectVirtualGamepad(): boolean {\r\n        if (!this.virtualGamepad.v_connected) {\r\n            Log.i(\"{515a922}\", \"{132d93a}\", this.virtualGamepad.v_index);\r\n            this.virtualGamepad.v_connected = true;\r\n            this.virtualGamepadTelemetry = {\r\n                gamepadName: \"Nvidia Virtual Gamepad\",\r\n                state: 0,\r\n                buttons: 0,\r\n                triggers: 0,\r\n                axes: []\r\n            };\r\n            this.addGamepadCommon(this.virtualGamepad.v_index, false);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private sendVirtualGamepadTelemetry() {\r\n        if (this.virtualGamepadTelemetry) {\r\n            this.telemetry?.emitGamepadEvent(\r\n                this.virtualGamepadTelemetry.gamepadName,\r\n                \"0\",\r\n                \"0\",\r\n                0,\r\n                false,\r\n                0,\r\n                true,\r\n                this.virtualGamepadTelemetry.state,\r\n                this.getEventMap(this.virtualGamepadTelemetry)\r\n            );\r\n            this.virtualGamepadTelemetry = undefined;\r\n        }\r\n    }\r\n\r\n    private disconnectVirtualGamepad(): boolean {\r\n        if (this.virtualGamepad.v_connected) {\r\n            Log.i(\"{515a922}\", \"{98ac7c2}\", this.virtualGamepad.v_index);\r\n            this.virtualGamepad.v_connected = false;\r\n            this.sendVirtualGamepadTelemetry();\r\n            return this.removeGamepadCommon(this.virtualGamepad.v_index);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /// The gamepad bitmap is 16 bits. The lower 8 bits indicate if a gamepad is plugged in\r\n    private getGamepadBitMask(index: number): number {\r\n        return 1 << index;\r\n    }\r\n\r\n    /// The gamepad bitmap is 16 bits. The upper 8 bits indicate if a plugged-in gamepad is a Xinput/Microsoft (MS) one\r\n    private getMsBitMask(index: number): number {\r\n        return 1 << (index + 8);\r\n    }\r\n\r\n    private addGamepadCommon(index: number, xinput: boolean) {\r\n        // Common setup for virtual and physical controllers.\r\n        if (this.gamepadBitmap == 0) {\r\n            this.gamepadPollInterval =\r\n                RagnarokSettings.gamepadPollInterval ??\r\n                RagnarokSettings.ragnarokConfig.gamepadPollInterval ??\r\n                GAMEPAD_TICK_DEFAULT_MS;\r\n            this.resetGamepadTimer();\r\n        }\r\n        this.gamepadBitmap |= this.getGamepadBitMask(index);\r\n        const msMask = this.getMsBitMask(index);\r\n        if (xinput) {\r\n            this.gamepadBitmap |= msMask;\r\n        } else {\r\n            this.gamepadBitmap &= ~msMask;\r\n        }\r\n    }\r\n\r\n    private removeGamepadCommon(index: number): boolean {\r\n        if (index === this.virtualGamepad.v_index) {\r\n            // Only continue if both physical and virtual gamepad are gone\r\n            let details = !!this.gamepadDetails[index];\r\n            if (this.virtualGamepad.v_connected || details) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.gamepadBitmap &= ~this.getGamepadBitMask(index);\r\n        this.gamepadBitmap &= ~this.getMsBitMask(index);\r\n        if (this.gamepadBitmap == 0) {\r\n            this.gamepadPollInterval = GAMEPAD_TICK_IDLE_MS;\r\n            this.resetGamepadTimer();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public setGamepadInactiveCallback(callback: any) {\r\n        this.gamepadInactivityFunc = callback;\r\n    }\r\n\r\n    public removeGamepadDataHandler(gamepadDataHandler: GamepadDataHandler) {\r\n        const index = this.gamepadDataHandlers.indexOf(gamepadDataHandler);\r\n        if (index > -1) {\r\n            this.gamepadDataHandlers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public addGamepadDataHandler(gamepadDataHandler: GamepadDataHandler) {\r\n        this.gamepadDataHandlers.push(gamepadDataHandler);\r\n    }\r\n\r\n    private resetGamepadDataHandlerState(gamepadDataHandler: GamepadDataHandler) {\r\n        for (let details of this.gamepadDetails) {\r\n            if (!details) {\r\n                continue;\r\n            }\r\n\r\n            let controller = details.device;\r\n\r\n            if (!this.isSuitableGamepad(controller)) {\r\n                // No support for non-standard mappings yet\r\n                continue;\r\n            }\r\n\r\n            gamepadDataHandler.gamepadStateUpdateHandler(\r\n                0, // 0-based index of gamepad\r\n                controller.index,\r\n                0, // buttons\r\n                0, // triggers\r\n                [0, 0, 0, 0], // axes\r\n                performance.now(), // timestamp\r\n                this.gamepadBitmap,\r\n                controller.id\r\n            );\r\n            gamepadDataHandler.finalizeGamepadData(1);\r\n        }\r\n    }\r\n\r\n    public setGamepadDataSender(gamepadDataSender: GamepadDataHandler) {\r\n        if (this.gamepadDataSender) {\r\n            this.removeGamepadDataHandler(this.gamepadDataSender);\r\n            this.resetGamepadDataHandlerState(this.gamepadDataSender);\r\n        }\r\n        this.gamepadDataSender = gamepadDataSender;\r\n        this.addGamepadDataHandler(this.gamepadDataSender);\r\n    }\r\n\r\n    public setGamepadRSDMM(rsdmmHandler: GamepadRSDMM) {\r\n        if (RagnarokSettings.rsdmm) {\r\n            if (this.rsdmmHandler) {\r\n                this.removeGamepadDataHandler(this.rsdmmHandler);\r\n            }\r\n            this.rsdmmHandler = rsdmmHandler;\r\n            // Don't automatically add the RSDMM handler to the gamepadDataHandler set.\r\n            // That will happen when activating RSDMM mode.\r\n        }\r\n    }\r\n\r\n    public enterRsdmmMode() {\r\n        if (this.gamepadDataSender) {\r\n            this.removeGamepadDataHandler(this.gamepadDataSender);\r\n            this.resetGamepadDataHandlerState(this.gamepadDataSender);\r\n        }\r\n        if (this.rsdmmHandler) {\r\n            this.addGamepadDataHandler(this.rsdmmHandler);\r\n            if (this.isUserInputEnable) {\r\n                this.rsdmmHandler.start();\r\n            }\r\n            this.rsdmmActive = true;\r\n        }\r\n    }\r\n\r\n    public exitRsdmmMode() {\r\n        if (this.rsdmmHandler) {\r\n            this.rsdmmHandler.stop();\r\n            this.rsdmmHandler.reset();\r\n            this.removeGamepadDataHandler(this.rsdmmHandler);\r\n            this.rsdmmActive = false;\r\n        }\r\n        if (this.gamepadDataSender) {\r\n            this.addGamepadDataHandler(this.gamepadDataSender);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle RSDMM state, or set it to the provided state (if different from current).\r\n     */\r\n    public toggleRsdmmMode(enable?: boolean) {\r\n        const alreadyActive = this.rsdmmActive;\r\n\r\n        if (enable == alreadyActive) {\r\n            return;\r\n        }\r\n\r\n        if (alreadyActive) {\r\n            this.exitRsdmmMode();\r\n        } else {\r\n            this.enterRsdmmMode();\r\n        }\r\n    }\r\n\r\n    public isRsdmmActive(): boolean {\r\n        return this.rsdmmActive;\r\n    }\r\n\r\n    public addTelemetry(telemetry: TelemetryHandler) {\r\n        this.telemetry = telemetry;\r\n    }\r\n\r\n    private getPlugState(state: number, onEnd: boolean = false): number {\r\n        if (!this.gamepadScannedOnce) {\r\n            // gamepad is connected in the beginning of stream\r\n            state |= 2;\r\n        }\r\n        if (onEnd) {\r\n            state |= 1;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    private getTelemetryData(controller: Gamepad, gamepadName: string): TelemetryData {\r\n        return {\r\n            gamepadName,\r\n            state: this.gamepadDetails[controller.index]\r\n                ? this.gamepadDetails[controller.index]!.telemetryData.state\r\n                : this.getPlugState(0),\r\n            buttons: this.gamepadDetails[controller.index]\r\n                ? this.gamepadDetails[controller.index]!.telemetryData.buttons\r\n                : 0,\r\n            triggers: this.gamepadDetails[controller.index]\r\n                ? this.gamepadDetails[controller.index]!.telemetryData.triggers\r\n                : 0,\r\n            axes: this.gamepadDetails[controller.index]\r\n                ? this.gamepadDetails[controller.index]!.telemetryData.axes\r\n                : []\r\n        };\r\n    }\r\n\r\n    private getStandardGamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: true,\r\n            getButtonMapping: this.getStandardButtons,\r\n            getTriggerMapping: this.getStandardTrigger,\r\n            getAxesMapping: this.getStandardAxes,\r\n            telemetryData: this.getTelemetryData(controller, \"Standard Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getStandardGamepadSimplifiedHapticsDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: true,\r\n            getButtonMapping: this.getStandardButtons,\r\n            getTriggerMapping: this.getStandardTrigger,\r\n            getAxesMapping: this.getStandardAxes,\r\n            telemetryData: this.getTelemetryData(controller, \"Standard Gamepad\"),\r\n            simplifiedHaptics: true\r\n        };\r\n    }\r\n\r\n    private getShieldGamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: true,\r\n            getButtonMapping: this.getStandardButtons,\r\n            getTriggerMapping: this.getShieldTrigger,\r\n            getAxesMapping: this.getStandardAxes,\r\n            telemetryData: this.getTelemetryData(controller, \"Nvidia Shield Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getSafari13GamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: true, // standard-ish\r\n            getButtonMapping: this.getSafari13Buttons,\r\n            getTriggerMapping: this.getStandardTrigger,\r\n            getAxesMapping: this.getSafari13Axes,\r\n            telemetryData: this.getTelemetryData(controller, \"Standard Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getDualSenseGamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: false,\r\n            getButtonMapping: this.getDualSenseButtons.bind(this),\r\n            getTriggerMapping: this.getAxesTrigger.bind(this, 3, 4),\r\n            getAxesMapping: this.get0125Axes,\r\n            telemetryData: this.getTelemetryData(controller, \"Dual Sense Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getXboxSeriesGamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: false,\r\n            getButtonMapping: this.getXboxSeriesButtons.bind(this),\r\n            getTriggerMapping: this.getAxesTrigger.bind(this, 3, 4),\r\n            getAxesMapping: this.get0125Axes,\r\n            telemetryData: this.getTelemetryData(controller, \"Xbox Series Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getXboxSeriesWiredGamepadDetail(controller: Gamepad): GamepadDetail {\r\n        return {\r\n            device: controller,\r\n            standard: false,\r\n            getButtonMapping: this.getXboxSeriesWiredButtons.bind(this),\r\n            getTriggerMapping: this.getAxesTrigger.bind(this, 2, 5),\r\n            getAxesMapping: this.get0134Axes,\r\n            telemetryData: this.getTelemetryData(controller, \"Xbox Series Wired Gamepad\")\r\n        };\r\n    }\r\n\r\n    private getGamepadDetail(controller: Gamepad): GamepadDetail | null {\r\n        // Must check in the correct order - gamepads that claim 'standard' but aren't must be checked before\r\n        // general 'standard' gamepads, for example.\r\n\r\n        // Safari gamepad support (iOS/iPadOS versions):\r\n        //  12 and earlier - we cannot support\r\n        //  13             - supportable, but not necessarily all controls\r\n        //  14 beta        - supportable, but doesn't claim 'standard' mapping\r\n        //  14 and later   - supportable with 'standard' mapping\r\n\r\n        if (this.isSafari14) {\r\n            // Workaround Safari 14 beta bug:\r\n            // https://bugs.webkit.org/show_bug.cgi?id=215486\r\n            // Just assume all Safari 14 gamepads are standard until this is fixed.\r\n            return this.getStandardGamepadDetail(controller);\r\n        } else if (this.isSafari13) {\r\n            return this.getSafari13GamepadDetail(controller);\r\n        } else if (this.isSafariOlder) {\r\n            // Really can't support older Safari versions.\r\n            return null;\r\n        } else if (this.isShieldGamepad(controller) && !(this.isWebOs || this.isTizenOs)) {\r\n            // Shield gamepad is completely standard on WebOS and Tizen, no need to special case it\r\n            return this.getShieldGamepadDetail(controller);\r\n        } else if (this.isBluetoothXboxWithHapticsProblems(controller)) {\r\n            return this.getStandardGamepadSimplifiedHapticsDetail(controller);\r\n        } else if (this.isStandardGamepad(controller)) {\r\n            return this.getStandardGamepadDetail(controller);\r\n        } else if (this.isDualSenseGamepad(controller)) {\r\n            return this.getDualSenseGamepadDetail(controller);\r\n        } else if (this.isXboxSeries(controller)) {\r\n            return this.getXboxSeriesGamepadDetail(controller);\r\n        } else if (this.isXboxSeriesWired(controller)) {\r\n            return this.getXboxSeriesWiredGamepadDetail(controller);\r\n        } else {\r\n            Log.e(\"{515a922}\", \"{be4bfd9}\", controller);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private gamepadBitmapUpdateHandler() {\r\n        for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n            gamepadDataHandler.gamepadBitmapUpdateHandler(this.gamepadBitmap);\r\n        }\r\n    }\r\n\r\n    private gamepadConnected(evt: GamepadEvent) {\r\n        if (this.addGamepad(evt.gamepad, evt.gamepad.index)) {\r\n            this.gamepadBitmapUpdateHandler();\r\n        }\r\n    }\r\n\r\n    private gamepadDisconnected(evt: GamepadEvent) {\r\n        if (this.deleteGamepad(evt.gamepad.index, true)) {\r\n            this.gamepadBitmapUpdateHandler();\r\n        }\r\n    }\r\n\r\n    private resetGamepadTimer() {\r\n        if (this.gamepadTimer != 0) {\r\n            clearInterval(this.gamepadTimer);\r\n            this.gamepadTimer = 0;\r\n        }\r\n        if (this.isUserInputEnable && !RagnarokSettings.gamepadRaf) {\r\n            this.gamepadTimer = window.setInterval(this.gamepadTickFunc, this.gamepadPollInterval);\r\n        } else {\r\n            this.gamepadTimer = 0;\r\n        }\r\n    }\r\n\r\n    private getDeviceIds(deviceId: string): [string, string] {\r\n        let result: [string, string] = [\"-1\", \"-1\"];\r\n        // string looks like: Logitech Dual Action (STANDARD GAMEPAD Vendor: 046d Product: c216)\r\n        const regex = /Vendor:[ ]+([\\w\\d]+).+Product:[ ]+([\\w\\d]+)/;\r\n        const groups = regex.exec(deviceId);\r\n        if (groups && groups.length >= 3) {\r\n            result = [groups[1], groups[2]];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public disconnectAllGamepads() {\r\n        if (this.gamepadBitmap) {\r\n            let isPrimary = true;\r\n            for (let details of this.gamepadDetails) {\r\n                if (!details) {\r\n                    continue;\r\n                }\r\n                details.telemetryData.state = this.getPlugState(details.telemetryData.state, true);\r\n                this.deleteGamepad(details.device.index, true, isPrimary);\r\n                isPrimary = false;\r\n            }\r\n            this.sendVirtualGamepadTelemetry();\r\n            this.gamepadBitmap = 0;\r\n            this.virtualGamepad.v_connected = false;\r\n            this.gamepadBitmapUpdateHandler();\r\n            this.gamepadPollInterval = GAMEPAD_TICK_IDLE_MS;\r\n            this.resetGamepadTimer();\r\n            this.gamepadDetails = [];\r\n            this.gamepadScannedOnce = false;\r\n        }\r\n    }\r\n\r\n    private isSuitableGamepad(gamepad: Gamepad) {\r\n        if (gamepad.mapping == \"standard\" || this.isSafari14 || this.isSafari13) {\r\n            return true;\r\n        }\r\n        if (this.isDualSenseGamepad(gamepad)) {\r\n            return true;\r\n        }\r\n        if (this.isXboxSeries(gamepad) || this.isXboxSeriesWired(gamepad)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private isStandardGamepad(gamepad: Gamepad) {\r\n        return gamepad.mapping == \"standard\";\r\n    }\r\n\r\n    private isBluetoothXboxWithHapticsProblems(gamepad: Gamepad) {\r\n        // Xbox controllers when connected over Bluetooth can have expensive haptics,\r\n        // so use a more simplified approach for them.\r\n        // NB: This won't match on Windows, but I've not seen the problem on Windows, only macOS.\r\n        // prettier-ignore\r\n        return (\r\n            gamepad.id.includes(\"Vendor: 045e\") &&\r\n            (gamepad.id.includes(\"Product: 0b13\") || // Xbox Series\r\n             gamepad.id.includes(\"Product: 0b20\") || // Xbox One (1708) - updated firmware?\r\n             gamepad.id.includes(\"Product: 0b05\") || // Xbox Elite II\r\n             gamepad.id.includes(\"Product: 02e0\") || // Xbox One S rev 1\r\n             gamepad.id.includes(\"Product: 02fd\"))   // Xbox One S rev 2\r\n        );\r\n    }\r\n\r\n    private isShieldGamepad(gamepad: Gamepad) {\r\n        return gamepad.mapping == \"standard\" && gamepad.id.includes(\"Vendor: 0955\");\r\n    }\r\n\r\n    private isDualSenseGamepad(gamepad: Gamepad) {\r\n        return (\r\n            !this.isAndroid &&\r\n            gamepad.mapping != \"standard\" &&\r\n            gamepad.id.includes(\"Vendor: 054c\") &&\r\n            gamepad.id.includes(\"Product: 0ce6\")\r\n        );\r\n    }\r\n\r\n    private isXboxSeries(gamepad: Gamepad) {\r\n        return (\r\n            gamepad.mapping != \"standard\" &&\r\n            gamepad.id.includes(\"Vendor: 045e\") &&\r\n            gamepad.id.includes(\"Product: 0b13\")\r\n        );\r\n    }\r\n\r\n    private isXboxSeriesWired(gamepad: Gamepad) {\r\n        return (\r\n            this.isChromeOs &&\r\n            gamepad.mapping != \"standard\" &&\r\n            gamepad.id.includes(\"Vendor: 045e\") &&\r\n            gamepad.id.includes(\"Product: 0b12\")\r\n        );\r\n    }\r\n\r\n    private isXinputGamepad(gamepad: Gamepad): boolean {\r\n        return gamepad.id.includes(\"Xbox\") || gamepad.id.includes(\"xinput\");\r\n    }\r\n\r\n    /// Add gamepad details to our set of details, updating gamepad state.\r\n    /// Returns true if this modifies the number of gamepads,\r\n    /// rather than replacing an existing gamepad detail with a new detail.\r\n    private addGamepad(gamepad: Gamepad, index: number): boolean {\r\n        if (this.isSuitableGamepad(gamepad)) {\r\n            const gamepadDetail = this.getGamepadDetail(gamepad);\r\n            if (gamepadDetail) {\r\n                this.hapticsSupported =\r\n                    this.hapticsSupported || this.hasHaptics(gamepadDetail.device);\r\n                this.setAndSendHapticsEnabled();\r\n                const oldBitmap = this.gamepadBitmap;\r\n                const prevGpValid: boolean = !!this.gamepadDetails[index];\r\n                this.gamepadDetails[index] = gamepadDetail;\r\n                if (this.gamepadTimestamps[index] === undefined) {\r\n                    this.gamepadTimestamps[index] = 0;\r\n                }\r\n                const xinput = this.isXinputGamepad(gamepad);\r\n                this.addGamepadCommon(index, xinput);\r\n\r\n                const bitmapChanged = oldBitmap !== this.gamepadBitmap;\r\n                if (bitmapChanged) {\r\n                    const action = prevGpValid ? \"Changing\" : \"Adding\";\r\n                    Log.i(\"{515a922}\", \"{96051ae}\", action, index, xinput, gamepadDetail.device.id);\r\n                }\r\n                return bitmapChanged;\r\n            } else {\r\n                // Handle suitable gamepads for which we cannot get details.\r\n                // These will be those which we deny, due to some quirks in behaviour.\r\n                for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n                    gamepadDataHandler.connectUnsupportedGamepad(gamepad);\r\n                }\r\n\r\n                return this.deleteGamepad(index);\r\n            }\r\n        } else {\r\n            // Gamepad is not supported\r\n            for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n                gamepadDataHandler.connectUnsupportedGamepad(gamepad);\r\n            }\r\n\r\n            // Cope with disconnecting a suitable and connecting an unsuitable gamepad within one update timeout\r\n            return this.deleteGamepad(index);\r\n        }\r\n    }\r\n\r\n    private updateGamepad(gamepad: Gamepad, index: number): void {\r\n        // Known to be suitable.\r\n        // Gamepad detail only needs updating, not re-creating from scratch.\r\n        let detail: GamepadDetail = this.gamepadDetails[index]!;\r\n        detail.device = gamepad;\r\n        // Haptics support is unlikely to change\r\n        this.hapticsSupported = this.hapticsSupported || this.hasHaptics(gamepad);\r\n        this.setAndSendHapticsEnabled();\r\n        // Bitmap will not change.\r\n        // Timestamp wil already be set\r\n    }\r\n\r\n    private isPrimaryGamepad(index: number): boolean {\r\n        let result = false;\r\n        for (const details of this.gamepadDetails) {\r\n            if (details) {\r\n                if (index === details.device.index) {\r\n                    result = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private deleteGamepad(\r\n        index: number,\r\n        reportTelemetry: boolean = false,\r\n        isPrimary: boolean | undefined = undefined\r\n    ): boolean {\r\n        let details = this.gamepadDetails[index];\r\n        if (details) {\r\n            Log.i(\"{515a922}\", \"{1b26b8a}\", index, details.device.id);\r\n            const lastSnapshot = this.gamepadSnapshotPrevious[index];\r\n            if (lastSnapshot) {\r\n                const timeSinceUpdate = performance.now() - lastSnapshot.timestamp;\r\n                if (timeSinceUpdate >= 3000 && lastSnapshot.axes.some(x => Math.abs(x) > 0.5)) {\r\n                    Log.w(\"{515a922}\", \"{fde5612}\", timeSinceUpdate, lastSnapshot.axes.join());\r\n                    this.telemetry?.emitDebugEvent(\r\n                        \"GamepadStuck\",\r\n                        details.device.id,\r\n                        timeSinceUpdate.toString(),\r\n                        lastSnapshot.axes.join()\r\n                    );\r\n                }\r\n            }\r\n            if (reportTelemetry) {\r\n                const [vid, pid] = this.getDeviceIds(details.device.id);\r\n                this.telemetry?.emitGamepadEvent(\r\n                    details.telemetryData.gamepadName,\r\n                    vid,\r\n                    pid,\r\n                    details.device.index,\r\n                    details.device.hapticActuators\r\n                        ? details.device.hapticActuators.length > 0\r\n                        : false,\r\n                    0,\r\n                    isPrimary ?? this.isPrimaryGamepad(details.device.index),\r\n                    details.telemetryData.state,\r\n                    this.getEventMap(details.telemetryData)\r\n                );\r\n            }\r\n            delete this.gamepadDetails[index];\r\n            delete this.gamepadTimestamps[index];\r\n            delete this.gamepadSnapshotPrevious[index];\r\n            this.hapticsSupported = this.isHapticsSupported();\r\n            this.setAndSendHapticsEnabled();\r\n            return this.removeGamepadCommon(index);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private gamepadAlreadySeen(gamepad: Gamepad, index: number): boolean {\r\n        // If we've previously seen a gamepad with the same ID at the same index\r\n        // then assume it's the same gamepad.  Even if it isn't, if the IDs and\r\n        // indices are the same, they are for all intents and purposes\r\n        // identical.\r\n        return gamepad.id != undefined && gamepad.id == this.gamepadDetails[index]?.device?.id;\r\n    }\r\n\r\n    private scangamepads() {\r\n        let sendUpdate: boolean = false;\r\n        if (this.virtualGamepad.v_enabled && !this.virtualGamepad.v_connected) {\r\n            sendUpdate = this.connectVirtualGamepad();\r\n        } else if (!this.virtualGamepad.v_enabled && this.virtualGamepad.v_connected) {\r\n            sendUpdate = this.disconnectVirtualGamepad();\r\n        }\r\n\r\n        let gamepads: (Gamepad | null)[] = navigator.getGamepads();\r\n        for (var i = 0; i < gamepads.length; i++) {\r\n            let gp = gamepads[i];\r\n            if (gp) {\r\n                if (this.gamepadAlreadySeen(gp, i)) {\r\n                    // Already seen this device, so just update rather than add a new gamepad.\r\n                    this.updateGamepad(gp, i);\r\n                } else {\r\n                    if (this.addGamepad(gp, i)) {\r\n                        sendUpdate = true;\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.deleteGamepad(i, true)) {\r\n                    sendUpdate = true;\r\n                }\r\n            }\r\n        }\r\n        if (sendUpdate) {\r\n            this.gamepadBitmapUpdateHandler();\r\n        }\r\n        this.gamepadScannedOnce = true;\r\n    }\r\n\r\n    private getStandardButtons(controller: Gamepad): number {\r\n        let buttons = controller.buttons;\r\n        return (\r\n            (buttons[0].value ? BUTTONS.A : 0) | // A\r\n            (buttons[1].value ? BUTTONS.B : 0) | // B\r\n            (buttons[2].value ? BUTTONS.X : 0) | // X\r\n            (buttons[3].value ? BUTTONS.Y : 0) | // Y\r\n            (buttons[4].value ? BUTTONS.LB : 0) | // LB\r\n            (buttons[5].value ? BUTTONS.RB : 0) | // RB\r\n            //(buttons[6].value ? 0x     : 0) |  // trigger left  (no button)\r\n            //(buttons[7].value ? 0x     : 0) |  // trigger right (no button)\r\n            (buttons[8] && buttons[8].value ? BUTTONS.BACK : 0) | // Back\r\n            (buttons[9] && buttons[9].value ? BUTTONS.START : 0) | // Start\r\n            (buttons[10] && buttons[10].value ? BUTTONS.THUMBL : 0) | // Thumbstick Left\r\n            (buttons[11] && buttons[11].value ? BUTTONS.THUMBR : 0) | // Thumbstick Right\r\n            (buttons[12] && buttons[12].value ? BUTTONS.DPADU : 0) | // D-pad Up\r\n            (buttons[13] && buttons[13].value ? BUTTONS.DPADD : 0) | // D-pad Down\r\n            (buttons[14] && buttons[14].value ? BUTTONS.DPADL : 0) | // D-pad Left\r\n            (buttons[15] && buttons[15].value ? BUTTONS.DPADR : 0) | // D-pad Right\r\n            0\r\n        );\r\n    }\r\n\r\n    private getEventMap(data: TelemetryData): string {\r\n        const buttons = data.buttons;\r\n        const triggers = data.triggers;\r\n        const axes = data.axes;\r\n        return (\r\n            \"A:\" +\r\n            ((BUTTONS.A & buttons) !== 0 ? \"1\" : \"0\") +\r\n            \"_B:\" +\r\n            ((BUTTONS.B & buttons) !== 0 ? \"1\" : \"0\") +\r\n            \"_X:\" +\r\n            ((BUTTONS.X & buttons) !== 0 ? \"1\" : \"0\") +\r\n            \"_Y:\" +\r\n            ((BUTTONS.Y & buttons) !== 0 ? \"1\" : \"0\") +\r\n            \"_LB:\" +\r\n            ((BUTTONS.LB & buttons) !== 0 ? \"1\" : \"0\") + // Left bumber\r\n            \"_LSB:\" +\r\n            ((BUTTONS.THUMBL & buttons) !== 0 ? \"1\" : \"0\") + // Left Stick press\r\n            \"_RB:\" +\r\n            ((BUTTONS.RB & buttons) !== 0 ? \"1\" : \"0\") + // Right bumper\r\n            \"_RSB:\" +\r\n            ((BUTTONS.THUMBR & buttons) !== 0 ? \"1\" : \"0\") + // Right stick press\r\n            \"_LT:\" +\r\n            ((TRIGGERS.LT & triggers) !== 0 ? \"1\" : \"0\") + // Trigger Left\r\n            \"_RT:\" +\r\n            ((TRIGGERS.RT & triggers) !== 0 ? \"1\" : \"0\") + // Trigger right\r\n            \"_DU:\" +\r\n            ((BUTTONS.DPADU & buttons) !== 0 ? \"1\" : \"0\") + // Dpad up\r\n            \"_DD:\" +\r\n            ((BUTTONS.DPADD & buttons) !== 0 ? \"1\" : \"0\") + // Dpad down\r\n            \"_DL:\" +\r\n            ((BUTTONS.DPADL & buttons) !== 0 ? \"1\" : \"0\") + // Dpad left\r\n            \"_DR:\" +\r\n            ((BUTTONS.DPADR & buttons) !== 0 ? \"1\" : \"0\") + // Dpad right\r\n            \"_ST:\" +\r\n            ((BUTTONS.START & buttons) !== 0 ? \"1\" : \"0\") + // Start button\r\n            \"_BA:\" +\r\n            ((BUTTONS.BACK & buttons) !== 0 ? \"1\" : \"0\") + // Back button\r\n            //\"_SE:\" + ((0x8000&buttons) !== 0 ? \"1\" : \"0\") + // select button\r\n            \"_LS:\" +\r\n            (axes.length >= 2 && (axes[0] === 2 || axes[1] === 2) ? \"1\" : \"0\") + // Left stick move\r\n            \"_RS:\" +\r\n            (axes.length === 4 && (axes[2] === 2 || axes[3] === 2) ? \"1\" : \"0\") // Right stick move\r\n        );\r\n    }\r\n\r\n    private getStandardTrigger(controller: Gamepad): number {\r\n        // Triggers are buttons [6,7] in standard gamepad, but axes in nvst protocol\r\n        let buttons = controller.buttons;\r\n        let triggerL = Math.round(buttons[6]?.value * 255);\r\n        let triggerR = Math.round(buttons[7]?.value * 255);\r\n\r\n        return ((triggerR & 0xff) << 8) | (triggerL & 0xff);\r\n    }\r\n\r\n    private getShieldTrigger(controller: Gamepad): number {\r\n        // Triggers are reversed on a Shield controller\r\n        let buttons = controller.buttons;\r\n        let triggerL = Math.round(buttons[7]?.value * 255);\r\n        let triggerR = Math.round(buttons[6]?.value * 255);\r\n\r\n        return ((triggerR & 0xff) << 8) | (triggerL & 0xff);\r\n    }\r\n\r\n    private getAxesTrigger(hIndex: number, vIndex: number, controller: Gamepad): number {\r\n        // Triggers are axes on some controllers, running from -1 (unpressed) to 1 (pressed)\r\n        let triggerL = Math.round((controller.axes[hIndex] + 1.0) * 127.5);\r\n        let triggerR = Math.round((controller.axes[vIndex] + 1.0) * 127.5);\r\n\r\n        return ((triggerR & 0xff) << 8) | (triggerL & 0xff);\r\n    }\r\n\r\n    private getStandardAxes(controller: Gamepad): readonly number[] {\r\n        // Axes in standard Gamepad object are:\r\n        //  0,1 - left stick  X,Y  (-ve left, -ve up)\r\n        //  2,3 - right stick X,Y  (-ve left, -ve up)\r\n        return controller.axes;\r\n    }\r\n\r\n    // Safari 13 Gamepad Layout:\r\n    // https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/platform/gamepad/cocoa/GameControllerGamepad.mm?rev=243901#L59\r\n    private getSafari13Axes(controller: Gamepad): readonly number[] {\r\n        return [controller.axes[0], -controller.axes[1], controller.axes[2], -controller.axes[3]];\r\n    }\r\n\r\n    private get0125Axes(controller: Gamepad): readonly number[] {\r\n        return [controller.axes[0], controller.axes[1], controller.axes[2], controller.axes[5]];\r\n    }\r\n\r\n    private get0134Axes(controller: Gamepad): readonly number[] {\r\n        return [controller.axes[0], controller.axes[1], controller.axes[3], controller.axes[4]];\r\n    }\r\n\r\n    private getSafari13Buttons(controller: Gamepad): number {\r\n        let buttons = controller.buttons;\r\n        let axes = controller.axes;\r\n        return (\r\n            (buttons[0]?.value ? BUTTONS.A : 0) | // A\r\n            (buttons[1]?.value ? BUTTONS.B : 0) | // B\r\n            (buttons[2]?.value ? BUTTONS.X : 0) | // X\r\n            (buttons[3]?.value ? BUTTONS.Y : 0) | // Y\r\n            (buttons[4]?.value ? BUTTONS.LB : 0) | // LB\r\n            (buttons[5]?.value ? BUTTONS.RB : 0) | // RB\r\n            //(buttons[6].value ? 0x     : 0) |  // trigger left  (no button)\r\n            //(buttons[7].value ? 0x     : 0) |  // trigger right (no button)\r\n            // Back doesn't exist in Safari 13. FIXME: Use partial virtual gamepad here\r\n            // Start doesn't exist in Safari 13. \"\"\r\n            // Thumbstick Left doesn't exist in Safari 13. \"\"\r\n            // Thumbstick Right doesn't exist in Safari 13. \"\"\r\n            (axes[5] > 0 ? BUTTONS.DPADU : 0) | // D-pad Up\r\n            (axes[5] < 0 ? BUTTONS.DPADD : 0) | // D-pad Down\r\n            (axes[4] < 0 ? BUTTONS.DPADL : 0) | // D-pad Left\r\n            (axes[4] > 0 ? BUTTONS.DPADR : 0) | // D-pad Right\r\n            0\r\n        );\r\n    }\r\n\r\n    private getDpadFromAxis(axisValue?: number): number {\r\n        let dpadAxis = Number.parseFloat((axisValue ?? 0).toFixed(5));\r\n        switch (dpadAxis) {\r\n            case 0.71429:\r\n                return BUTTONS.DPADL; // Left\r\n            case -0.42857:\r\n                return BUTTONS.DPADR; // Right\r\n            case -1.0:\r\n                return BUTTONS.DPADU; // Up\r\n            case 0.14286:\r\n                return BUTTONS.DPADD; // Down\r\n            case 1.28571:\r\n                return 0; // Centred\r\n            case 1.0:\r\n                return BUTTONS.DPADU | BUTTONS.DPADL; // Up+Left\r\n            case -0.71429:\r\n                return BUTTONS.DPADU | BUTTONS.DPADR; // Up+Right\r\n            case 0.42857:\r\n                return BUTTONS.DPADD | BUTTONS.DPADL; // Down+Left\r\n            case -0.14286:\r\n                return BUTTONS.DPADD | BUTTONS.DPADR; // Down+Right\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    private getDpadFromTwoAxes(horiz: number, vert: number): number {\r\n        return (\r\n            (vert < 0 ? BUTTONS.DPADU : 0) | // D-pad Up\r\n            (vert > 0 ? BUTTONS.DPADD : 0) | // D-pad Down\r\n            (horiz < 0 ? BUTTONS.DPADL : 0) | // D-pad Left\r\n            (horiz > 0 ? BUTTONS.DPADR : 0) | // D-pad Right\r\n            0\r\n        );\r\n    }\r\n\r\n    private getDualSenseButtons(controller: Gamepad): number {\r\n        let buttons = controller.buttons;\r\n\r\n        const dPad = this.isChromeOs\r\n            ? this.getDpadFromTwoAxes(controller.axes[6], controller.axes[7])\r\n            : this.getDpadFromAxis(controller.axes[9]);\r\n        return (\r\n            (buttons[1]?.value ? BUTTONS.A : 0) | // X      => A\r\n            (buttons[2]?.value ? BUTTONS.B : 0) | // Circle => B\r\n            (buttons[0]?.value ? BUTTONS.X : 0) | // Square => X\r\n            (buttons[3]?.value ? BUTTONS.Y : 0) | // Circle => Y\r\n            (buttons[4]?.value ? BUTTONS.LB : 0) | // L1 => LB\r\n            (buttons[5]?.value ? BUTTONS.RB : 0) | // R1 => RB\r\n            //(buttons[6].value ? 0x     : 0) |  // trigger left  (no button)\r\n            //(buttons[7].value ? 0x     : 0) |  // trigger right (no button)\r\n            (buttons[8]?.value ? BUTTONS.BACK : 0) | // Share => Back\r\n            (buttons[9]?.value ? BUTTONS.START : 0) | // Menu  => Start\r\n            (buttons[10]?.value ? BUTTONS.THUMBL : 0) | // Thumbstick Left\r\n            (buttons[11]?.value ? BUTTONS.THUMBR : 0) | // Thumbstick Right\r\n            dPad\r\n        );\r\n    }\r\n\r\n    private getXboxSeriesButtons(controller: Gamepad): number {\r\n        let buttons = controller.buttons;\r\n\r\n        const dPad = this.getDpadFromAxis(controller.axes[9]);\r\n        return (\r\n            (buttons[0]?.value ? BUTTONS.A : 0) | // A\r\n            (buttons[1]?.value ? BUTTONS.B : 0) | // B\r\n            (buttons[3]?.value ? BUTTONS.X : 0) | // X\r\n            (buttons[4]?.value ? BUTTONS.Y : 0) | // Y\r\n            (buttons[6]?.value ? BUTTONS.LB : 0) | // LB\r\n            (buttons[7]?.value ? BUTTONS.RB : 0) | // RB\r\n            //(buttons[].value ? 0x     : 0) |  // trigger left  (no button)\r\n            //(buttons[].value ? 0x     : 0) |  // trigger right (no button)\r\n            (buttons[10]?.value ? BUTTONS.BACK : 0) | // Share => Back\r\n            (buttons[11]?.value ? BUTTONS.START : 0) | // Menu  => Start\r\n            (buttons[13]?.value ? BUTTONS.THUMBL : 0) | // Thumbstick Left\r\n            (buttons[14]?.value ? BUTTONS.THUMBR : 0) | // Thumbstick Right\r\n            dPad\r\n        );\r\n    }\r\n\r\n    private getXboxSeriesWiredButtons(controller: Gamepad): number {\r\n        let buttons = controller.buttons;\r\n\r\n        const dPad = this.getDpadFromTwoAxes(controller.axes[6], controller.axes[7]);\r\n        return (\r\n            (buttons[0]?.value ? BUTTONS.A : 0) | // A\r\n            (buttons[1]?.value ? BUTTONS.B : 0) | // B\r\n            (buttons[2]?.value ? BUTTONS.X : 0) | // X\r\n            (buttons[3]?.value ? BUTTONS.Y : 0) | // Y\r\n            (buttons[4]?.value ? BUTTONS.LB : 0) | // LB\r\n            (buttons[5]?.value ? BUTTONS.RB : 0) | // RB\r\n            (buttons[6]?.value ? BUTTONS.BACK : 0) | // Share => Back\r\n            (buttons[7]?.value ? BUTTONS.START : 0) | // Menu  => Start\r\n            (buttons[9]?.value ? BUTTONS.THUMBL : 0) | // Thumbstick Left\r\n            (buttons[10]?.value ? BUTTONS.THUMBR : 0) | // Thumbstick Right\r\n            //(buttons[].value ? 0x     : 0) |  // trigger left  (no button)\r\n            //(buttons[].value ? 0x     : 0) |  // trigger right (no button)\r\n            dPad\r\n        );\r\n    }\r\n\r\n    public postRender() {\r\n        if (RagnarokSettings.gamepadEnabled && RagnarokSettings.gamepadRaf) {\r\n            this.gamepadTick();\r\n        }\r\n    }\r\n\r\n    public virtualGamepadUpdateHandler() {\r\n        for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n            gamepadDataHandler.virtualGamepadUpdateHandler(\r\n                this.virtualGamepad.v_buttons,\r\n                this.virtualGamepad.v_trigger,\r\n                this.virtualGamepad.v_index,\r\n                this.virtualGamepad.v_axes,\r\n                this.gamepadBitmap\r\n            );\r\n        }\r\n    }\r\n\r\n    public getMainThreadSchedulingDelay(): number {\r\n        return this.maxSchedulingDelay;\r\n    }\r\n\r\n    public resetMainThreadSchedulingDelay() {\r\n        this.maxSchedulingDelay = 0;\r\n    }\r\n\r\n    private updateMainThreadSchedulingDelay() {\r\n        const currentGamepadTickTs = performance.now();\r\n        if (this.previousGamepadTickTs) {\r\n            const schedulingDelay =\r\n                currentGamepadTickTs - this.previousGamepadTickTs - this.gamepadPollInterval;\r\n            this.maxSchedulingDelay = Math.max(this.maxSchedulingDelay, schedulingDelay);\r\n        }\r\n        this.previousGamepadTickTs = currentGamepadTickTs;\r\n    }\r\n\r\n    private gamepadTick() {\r\n        this.updateMainThreadSchedulingDelay();\r\n        this.scangamepads();\r\n        let bitmap = 0;\r\n        let packetCount = 0;\r\n        for (let details of this.gamepadDetails) {\r\n            if (!details) {\r\n                continue;\r\n            }\r\n\r\n            const timestamp = GetCaptureTimestamp(details.device.timestamp);\r\n            let controller = details.device;\r\n\r\n            // To avoid too many spurious updates, don't try to process or send data:\r\n            //  * If the gamepad isn't one we can use\r\n            //  * If the timestamp hasn't changed since last time we polled\r\n            //  * If the details haven't changed (enough) since last time\r\n\r\n            if (!this.isSuitableGamepad(controller)) {\r\n                // No support for non-standard mappings yet\r\n                continue;\r\n            }\r\n\r\n            if (details.device.timestamp <= this.gamepadTimestamps[controller.index]) {\r\n                // check for inactivity\r\n                if (\r\n                    this.gamepadInactivityFunc &&\r\n                    performance.now() - details.device.timestamp >= GAMPAD_INACTIVITY_S * 1000\r\n                )\r\n                    this.gamepadInactivityFunc();\r\n                // No update; skip\r\n                continue;\r\n            } else {\r\n                this.gamepadTimestamps[controller.index] = details.device.timestamp;\r\n            }\r\n\r\n            const prevSnapshot = this.gamepadSnapshotPrevious[controller.index];\r\n            const curSnapshot = new GamepadSnapshot(details);\r\n            if (prevSnapshot && prevSnapshot.equalTo(curSnapshot)) {\r\n                // No difference in state, or not sufficient to send an update\r\n                continue;\r\n            } else {\r\n                this.gamepadSnapshotPrevious[controller.index] = curSnapshot;\r\n            }\r\n\r\n            //\r\n            // !! Keeping but commenting out this code.  For now, when both\r\n            // !! physical and virtual gamepad are active, both are functional\r\n            // !! to match the Android implementation.\r\n            //\r\n            // if (\r\n            //     this.virtualGamepad.v_connected &&\r\n            //     controller.index === this.virtualGamepad.v_index\r\n            // ) {\r\n            //     continue;\r\n            // }\r\n            //\r\n\r\n            // Handle gamepad updates from here on.\r\n            let trigger = details.getTriggerMapping(controller);\r\n            // D-Pad is presented as buttons in standard gamepad, unlike in SDL\r\n            //  (where it's axes).\r\n            // Therefore, just treat it like a set of normal buttons and not\r\n            //  worry about dPadNibble() etc.\r\n            let buttons = details.getButtonMapping(controller);\r\n            let axes = details.getAxesMapping(controller);\r\n\r\n            if (RagnarokSettings.rsdmmThumbstickToggle) {\r\n                const buttonType = IsXboxEdge(this.platformDetails)\r\n                    ? BUTTONS.THUMBL\r\n                    : BUTTONS.THUMBR;\r\n                if (buttons & buttonType) {\r\n                    // Has to be two press/release pairs to toggle.\r\n                    // Otherwise down and movement (which is easy to happen) toggles and the state changes unexpectedly.\r\n\r\n                    if (this.seenThumbUp) {\r\n                        this.seenThumbUp = false;\r\n                        const thumbNow = performance.now();\r\n                        if (thumbNow < this.prevThumbstickDown + 500) {\r\n                            // Toggle RSDMM mode\r\n                            this.toggleRsdmmMode();\r\n                            this.prevThumbstickDown = 0;\r\n                        } else {\r\n                            this.prevThumbstickDown = thumbNow;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.seenThumbUp = true;\r\n                }\r\n            }\r\n\r\n            // Update all data handlers\r\n            for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n                gamepadDataHandler.gamepadStateUpdateHandler(\r\n                    packetCount,\r\n                    controller.index,\r\n                    buttons,\r\n                    trigger,\r\n                    axes,\r\n                    timestamp,\r\n                    this.gamepadBitmap,\r\n                    controller.id\r\n                );\r\n            }\r\n            packetCount++;\r\n            this.updateGamepadTelemetry(details.telemetryData, buttons, trigger, axes);\r\n        }\r\n        if (packetCount) {\r\n            LatencyIndicator.getInstance().toggleIndicator();\r\n            for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n                gamepadDataHandler.finalizeGamepadData(packetCount);\r\n            }\r\n        }\r\n\r\n        if (this.virtualGamepad.v_connected && this.virtualGamepad.v_updated) {\r\n            this.virtualGamepadUpdateHandler();\r\n            this.virtualGamepad.v_updated = false;\r\n            if (this.virtualGamepadTelemetry) {\r\n                this.updateGamepadTelemetry(\r\n                    this.virtualGamepadTelemetry,\r\n                    this.virtualGamepad.v_buttons,\r\n                    this.virtualGamepad.v_trigger,\r\n                    this.virtualGamepad.v_axes\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateGamepadTelemetry(\r\n        telemetry: TelemetryData,\r\n        buttons: number,\r\n        trigger: number,\r\n        axes: ReadonlyArray<number>\r\n    ) {\r\n        telemetry.buttons |= buttons;\r\n        telemetry.triggers |= trigger;\r\n        if (telemetry.axes.length === 0) {\r\n            telemetry.axes = [axes[0], axes[1], axes[2], axes[3]];\r\n        } else {\r\n            telemetry.axes[0] =\r\n                telemetry.axes[0] == 2 ? 2 : telemetry.axes[0] !== axes[0] ? 2 : telemetry.axes[0];\r\n            telemetry.axes[1] =\r\n                telemetry.axes[1] == 2 ? 2 : telemetry.axes[1] !== axes[1] ? 2 : telemetry.axes[1];\r\n            telemetry.axes[2] =\r\n                telemetry.axes[2] == 2 ? 2 : telemetry.axes[2] !== axes[2] ? 2 : telemetry.axes[2];\r\n            telemetry.axes[3] =\r\n                telemetry.axes[3] == 2 ? 2 : telemetry.axes[3] !== axes[3] ? 2 : telemetry.axes[3];\r\n        }\r\n    }\r\n\r\n    private sendGamepadHaptics(enable: boolean) {\r\n        if (this.hapticsState == enable) {\r\n            return;\r\n        } else {\r\n            this.hapticsState = enable;\r\n        }\r\n\r\n        if (this.allowHaptics) {\r\n            for (const gamepadDataHandler of this.gamepadDataHandlers) {\r\n                gamepadDataHandler.sendGamepadHapticsControl?.(enable);\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableUserInput() {\r\n        this.isUserInputEnable = true;\r\n        this.allowHaptics =\r\n            RagnarokSettings.allowHaptics ?? RagnarokSettings.ragnarokConfig.allowHaptics ?? true;\r\n        this.setAndSendHapticsEnabled();\r\n        if (RagnarokSettings.gamepadEnabled) {\r\n            this.windowAddEventListener(\"gamepadconnected\", this.gamepadConnectedFunc);\r\n            this.windowAddEventListener(\"gamepaddisconnected\", this.gamepadDisconnectedFunc);\r\n            this.resetGamepadTimer();\r\n            if (this.rsdmmActive) {\r\n                this.rsdmmHandler!.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    public disableUserInput() {\r\n        this.isUserInputEnable = false;\r\n        this.setAndSendHapticsEnabled();\r\n        if (RagnarokSettings.gamepadEnabled) {\r\n            this.resetGamepadState();\r\n            this.windowRemoveEventListener(\"gamepadconnected\", this.gamepadConnectedFunc);\r\n            this.windowRemoveEventListener(\"gamepaddisconnected\", this.gamepadDisconnectedFunc);\r\n            this.resetGamepadTimer();\r\n            if (this.rsdmmActive) {\r\n                this.rsdmmHandler!.stop();\r\n                this.rsdmmHandler!.reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    public resetGamepadState() {\r\n        if (this.gamepadDataSender) {\r\n            this.resetGamepadDataHandlerState(this.gamepadDataSender);\r\n        }\r\n    }\r\n\r\n    public getVirtualGamepadHandler(): VirtualGamepadHandler {\r\n        return this.virtualGamepadHandler;\r\n    }\r\n\r\n    // VibrationHandler interface\r\n\r\n    private isHapticsSupported(): boolean {\r\n        let supported = false;\r\n        for (let details of this.gamepadDetails) {\r\n            if (details) {\r\n                supported = supported || this.hasHaptics(details.device);\r\n            }\r\n        }\r\n        return supported;\r\n    }\r\n\r\n    private setAndSendHapticsEnabled() {\r\n        this.hapticsEnabled = this.isUserInputEnable && this.hapticsSupported;\r\n        this.sendGamepadHaptics(this.hapticsEnabled);\r\n\r\n        if (!this.hapticsEnabled) {\r\n            // Clear haptics timers and reset the playing effect.\r\n            let gamepads: (Gamepad | null)[] = navigator.getGamepads();\r\n            for (let gamepad of gamepads) {\r\n                if (gamepad) {\r\n                    this.hapticsStrongMagnitude[gamepad.index] = 0;\r\n                    this.hapticsWeakMagnitude[gamepad.index] = 0;\r\n                    gamepad.vibrationActuator?.playEffect?.(\"dual-rumble\", EMPTY_EFFECT);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasHaptics(controller: Gamepad) {\r\n        // TODO Support 'vibration' type controllers (if any exist) as well.\r\n        return controller.vibrationActuator?.type == \"dual-rumble\";\r\n    }\r\n\r\n    public handleSimpleVibration(index: number, leftMotorSpeed: number, rightMotorSpeed: number) {\r\n        // Weidly, seem to get two calls within a few milliseconds with the exact same values.\r\n\r\n        if (!this.hapticsEnabled) {\r\n            return;\r\n        }\r\n\r\n        // Server sends magnitude values but no duration with a simple command.  Therefore,\r\n        // set up a one second effect and, when it finished, play it again until the server\r\n        // sends either new effect values or the end-of-effect values, or the focus is lost\r\n        // or the session ends.\r\n\r\n        let details = this.gamepadDetails[index];\r\n        if (details) {\r\n            let gamepad = details.device;\r\n            if (gamepad) {\r\n                if (leftMotorSpeed != 0 || rightMotorSpeed != 0) {\r\n                    const strongMag = leftMotorSpeed / 65535.0;\r\n                    const weakMag = rightMotorSpeed / 65535.0;\r\n                    const now = performance.now();\r\n\r\n                    let delay = now - this.lastHapticsEffect[index];\r\n\r\n                    this.hapticsStrongMagnitude[index] = strongMag;\r\n                    this.hapticsWeakMagnitude[index] = weakMag;\r\n                    if (!details.simplifiedHaptics || delay > MINIMAL_SIMPLIFIED_HAPTICS_DELAY) {\r\n                        this.lastHapticsEffect[index] = now;\r\n\r\n                        const vibrateController = () => {\r\n                            gamepad.vibrationActuator?.playEffect?.(\"dual-rumble\", {\r\n                                startDelay: 0,\r\n                                duration: PARTIAL_HAPTIC_DURATION,\r\n                                weakMagnitude: this.hapticsWeakMagnitude[index],\r\n                                strongMagnitude: this.hapticsStrongMagnitude[index]\r\n                            });\r\n                        };\r\n                        vibrateController();\r\n                    }\r\n                } else {\r\n                    // Stopping the effect.\r\n                    // Clear any timer.\r\n                    this.lastHapticsEffect[index] = performance.now();\r\n                    this.hapticsStrongMagnitude[index] = 0;\r\n                    this.hapticsWeakMagnitude[index] = 0;\r\n                    // Now reset the effect to off.  (Not strictly needed, will clear within 150 ms anyway.)\r\n                    gamepad.vibrationActuator?.playEffect?.(\"dual-rumble\", EMPTY_EFFECT);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getBitmap(): number {\r\n        this.scangamepads();\r\n\r\n        return this.gamepadBitmap;\r\n    }\r\n}\r\n","import { GamepadDataHandler } from \"../interfaces\";\nimport { BUTTONS, TRIGGERS } from \"./gamepadhandler\";\nimport { IsXboxEdge, PlatformDetails } from \"../dependencies\";\n\n// Bitmask of all buttons pressed for a mousedown/mouseup event.\n// When a button is released, it's entry in the bitfield should be zeroed.\nconst enum BUTTONS_BITMASK {\n    NONE = 0,\n    PRIMARY = 1,\n    SECONDARY = 2,\n    AUXILIARY = 4\n}\n\n// Which button was responsible for the mousedown/mouseup event.\n// Must be set for both down and up events.\n\nconst enum BUTTON_VALUE {\n    MAIN = 0,\n    AUXILIARY = 1,\n    SECONDARY = 2\n}\n\nconst BUTTON_MAP = new Map([\n    [BUTTON_VALUE.MAIN, BUTTONS_BITMASK.PRIMARY],\n    [BUTTON_VALUE.SECONDARY, BUTTONS_BITMASK.SECONDARY],\n    [BUTTON_VALUE.AUXILIARY, BUTTONS_BITMASK.AUXILIARY]\n]);\n\nexport class GamepadRSDMM implements GamepadDataHandler {\n    private rsdmmTimer: number = 0;\n    private rsdmmTickFunc: any;\n    private rsdmmPollInterval: number = 8;\n    private prevH: number = 0;\n    private prevV: number = 0;\n    private accumulatedH: number = 0;\n    private accumulatedV: number = 0;\n    private button1 = false;\n    private button2 = false;\n    private scale = 12;\n    private eventElement: HTMLElement;\n    private moveName: string = \"mousemove\";\n    private downName: string = \"mousedown\";\n    private upName: string = \"mouseup\";\n    // Require near full press of triggers for action\n    // Do not require complete press in case some gamepads do not have complete range\n    private rtThreshold = 0.9 * TRIGGERS.RT;\n    private ltThreshold = 0.9 * TRIGGERS.LT;\n    private stickIndexX: number = 2;\n    private stickIndexY: number = 3;\n    private platformDetails: PlatformDetails;\n\n    constructor(element: HTMLElement, platformDetails: PlatformDetails) {\n        this.platformDetails = platformDetails;\n        this.eventElement = element;\n        this.rsdmmTickFunc = this.rsdmmTick.bind(this);\n        if (IsXboxEdge(this.platformDetails)) {\n            this.stickIndexX = 0;\n            this.stickIndexY = 1;\n        }\n    }\n\n    // Handles the resulting update of the gamepad state\n    public gamepadStateUpdateHandler(\n        count: number,\n        index: number,\n        buttons: number,\n        trigger: number,\n        inputaxes: readonly number[],\n        ts: number,\n        gamepadBitmap: number,\n        name: string\n    ) {\n        // Axes [0,1] are left and [2,3] are right stick X,Y (-ve left, -ve up)\n        const DEAD_ZONE = 0.1;\n        const trimDeadZone = (axes: readonly number[]): readonly number[] => {\n            const trimAxis = (index: number) => {\n                return -DEAD_ZONE < axes[index] && axes[index] < DEAD_ZONE ? 0 : axes[index];\n            };\n\n            const outputAxes: number[] = [];\n\n            outputAxes[0] = trimAxis(0);\n            outputAxes[1] = trimAxis(1);\n            outputAxes[2] = trimAxis(2);\n            outputAxes[3] = trimAxis(3);\n\n            return outputAxes;\n        };\n\n        const axes: readonly number[] = trimDeadZone(inputaxes);\n\n        // Synthesize a mouse event from the right stick:\n        const horiz = axes[this.stickIndexX];\n        const vert = axes[this.stickIndexY];\n\n        // Reduce the deltas of events based on distance from center.\n        const eventScale =\n            // Axes^2 will range from 0..1\n            // Hypot calculation sqrt(axis+axis) would range from 0 to 1.4 if the joystick opening were square, but\n            // since it is round, the diagonals limit the values to make the hypot approximately max 1.0 everywhere\n            // (with some mechanical compliance), so clamp to max of 1.0\n            // 3.0 * min(1.0,hypot(axes)) ranges from 0 to ~3\n            //\n            // We want the opposite range, so that the scaling is greatest closest to center.  So subtract above from 4.\n            //\n\n            4.0 - 3.0 * Math.min(1.0, Math.sqrt(horiz * horiz + vert * vert));\n\n        // Set the values used by the timer to synthesize mouse movement events.\n        // TODO: possibly refine scaling factor further\n        this.prevH = (horiz * this.scale) / eventScale;\n        this.prevV = (vert * this.scale) / eventScale;\n\n        // Now generate any button events,\n        const button1 =\n            !!(buttons & (BUTTONS.A | BUTTONS.THUMBR)) ||\n            (trigger & TRIGGERS.RT) > this.rtThreshold;\n        const button2 = (trigger & TRIGGERS.LT) > this.ltThreshold;\n        const oldButton1 = this.button1;\n        const oldButton2 = this.button2;\n\n        this.button1 = button1;\n        this.button2 = button2;\n\n        if (!button1 && oldButton1) {\n            // Button 1 up event\n            this.sendMouseButtonEvent(BUTTON_VALUE.MAIN, false);\n        }\n        if (!button2 && oldButton2) {\n            // Button 2 up event\n            this.sendMouseButtonEvent(BUTTON_VALUE.SECONDARY, false);\n        }\n        if (button1 && !oldButton1) {\n            // Button 1 down event\n            this.sendMouseButtonEvent(BUTTON_VALUE.MAIN, true);\n        }\n        if (button2 && !oldButton2) {\n            // Button 2 down event\n            this.sendMouseButtonEvent(BUTTON_VALUE.SECONDARY, true);\n        }\n    }\n\n    private rsdmmTick(): void {\n        // reset accumulated values when we cross zero so the fractional movements don't build up\n        // TODO: zero when we stop as well?\n        this.accumulatedH =\n            Math.sign(this.accumulatedH) != Math.sign(this.prevH)\n                ? this.prevH\n                : this.accumulatedH + this.prevH;\n        this.accumulatedV =\n            Math.sign(this.accumulatedV) != Math.sign(this.prevV)\n                ? this.prevV\n                : this.accumulatedV + this.prevV;\n\n        let deltaX: number = 0;\n        let deltaY: number = 0;\n\n        // accumulate fractional values until abs(value) > 1 then we send.\n        if (this.accumulatedH >= 1 || this.accumulatedH <= -1) {\n            deltaX = Math.trunc(this.accumulatedH);\n            this.accumulatedH -= deltaX;\n        }\n\n        if (this.accumulatedV >= 1 || this.accumulatedV <= -1) {\n            deltaY = Math.trunc(this.accumulatedV);\n            this.accumulatedV -= deltaY;\n        }\n\n        if (deltaX != 0 || deltaY != 0) {\n            const init = {\n                movementX: deltaX,\n                movementY: deltaY,\n                isPrimary: true\n            };\n            let event: MouseEvent;\n            if (this.moveName == \"pointerrawupdate\" || this.moveName == \"pointermove\") {\n                event = new PointerEvent(this.moveName, init);\n            } else event = new MouseEvent(\"mousemove\", init);\n\n            this.eventElement.dispatchEvent(event);\n        }\n    }\n\n    private makeButtonMask(): number {\n        return (\n            (this.button1 ? BUTTONS_BITMASK.PRIMARY : 0) |\n            (this.button2 ? BUTTONS_BITMASK.SECONDARY : 0)\n        );\n    }\n\n    private sendMouseButtonEvent(changedButton: number, down: boolean) {\n        let init = {\n            button: changedButton,\n            buttons: this.makeButtonMask()\n        };\n        const event = new MouseEvent(down ? this.downName : this.upName, init);\n        this.eventElement.dispatchEvent(event);\n    }\n\n    public start() {\n        if (this.rsdmmTimer) {\n            this.stop();\n        }\n        this.rsdmmTimer = window.setInterval(this.rsdmmTickFunc, this.rsdmmPollInterval);\n    }\n\n    public stop() {\n        if (this.rsdmmTimer) {\n            clearInterval(this.rsdmmTimer);\n            this.rsdmmTimer = 0;\n        }\n    }\n\n    public setMoveType(moveName: string) {\n        this.moveName = moveName;\n    }\n\n    public setDownUpTypes(downName: string, upName: string) {\n        this.downName = downName;\n        this.upName = upName;\n    }\n\n    public reset() {\n        // clear buttons if held\n        if (this.button1) {\n            this.sendMouseButtonEvent(BUTTON_VALUE.MAIN, false);\n        }\n        if (this.button2) {\n            this.sendMouseButtonEvent(BUTTON_VALUE.SECONDARY, false);\n        }\n\n        this.prevH = this.prevV = 0;\n        this.accumulatedH = this.accumulatedV = 0;\n        this.button1 = this.button2 = false;\n    }\n\n    // Unused GamepadDataHandler functions\n    public gamepadBitmapUpdateHandler(gamepadBitmap: number) {}\n\n    public finalizeGamepadData(count: number) {}\n\n    public virtualGamepadUpdateHandler(\n        buttons: number,\n        trigger: number,\n        index: number,\n        axes: readonly number[],\n        gamepadBitmap: number\n    ) {}\n\n    public connectUnsupportedGamepad(gamepad: Gamepad) {}\n\n    public disconnectUnsupportedGamepad(index: number) {}\n}\n","export interface IMouseFilter {\n    getX(): number;\n    getY(): number;\n    update(x: number, y: number, ts: number): boolean;\n}\n\nexport class NullMouseFilter implements IMouseFilter {\n    x: number = 0;\n    y: number = 0;\n\n    getX(): number {\n        return this.x;\n    }\n\n    getY(): number {\n        return this.y;\n    }\n\n    update(x: number, y: number, _ts: number): boolean {\n        this.x = x;\n        this.y = y;\n        return true;\n    }\n}\n\nexport class MouseFilter implements IMouseFilter {\n    lastX: number = 0;\n    lastY: number = 0;\n    lastTs: number = 0;\n    estimatedAccelX: number = 0;\n    estimatedAccelY: number = 0;\n    ignoredX: number = 0;\n    ignoredY: number = 0;\n    oldX: number = 0;\n    oldY: number = 0;\n    consecutiveZero: boolean = false;\n\n    getX(): number {\n        return this.lastX;\n    }\n\n    getY(): number {\n        return this.lastY;\n    }\n\n    /// This class has logic to block 3 kinds of spurious jumps (here, positive means in the same direction as actual\n    /// mouse moves and negative means in the opposite direction):\n    ///   1. Huge movements caused by Chrome resetting the cursor position to the center, which are usually negative but\n    ///      but are occasionally positive.\n    ///   2. Smaller, negative movements that seem to have the same cause as #1. These always seem to have deltas that\n    ///      are a multiple of a real event.\n    ///   3. Negative movements with timestamps in the past. These have the side-effect of messing up the value of the\n    ///      next event too (except in rare cases).\n    update(x: number, y: number, ts: number): boolean {\n        if (x === 0 && y === 0) {\n            // This isn't a spurious jump, but still needs to be filtered out because it will affect mouse spacing on\n            // the server\n            if (this.consecutiveZero) {\n                // A second consecutive zero will cancel out jump #3\n                this.oldX = 0;\n                this.oldY = 0;\n            } else {\n                this.consecutiveZero = true;\n            }\n            return false;\n        }\n        this.consecutiveZero = false;\n\n        if (this.oldX === 0 && this.oldY === 0) {\n            if (ts < this.lastTs) {\n                // This event is jump #3\n                this.oldX = x;\n                this.oldY = y;\n                return false;\n            }\n        } else {\n            // Handles the event after a jump #3\n            x += this.oldX;\n            y += this.oldY;\n            this.oldX = 0;\n            this.oldY = 0;\n        }\n\n        // We calculate the dot product of this event and last event to determine the relative directions of the two.\n        // Recall, the dot product is defined as a.b = a1b1 + a2b2 = cos(theta)mag(a)mag(b). This means the dot product\n        // is negative if the vectors face away from each other. Going futher, if we want to check for a certain angle\n        // we have a.b > cos(theta)mag(a)mag(b), or if we're working with squared values:\n        // (a.b)^2 > cos(theta)^2 mag(a)^2 mag(b)^2\n        // We will check if the new event is between 155 and 205 degrees away from the last event.\n        const COS_25_DEG_SQUARED = 0.9 * 0.9;\n\n        const dotProduct = x * this.lastX + y * this.lastY;\n        const magSquared = x * x + y * y;\n        const lastMagSquared = this.lastX * this.lastX + this.lastY * this.lastY;\n\n        let allow = true;\n        if (\n            ts - this.lastTs < 0.95 &&\n            dotProduct < 0 &&\n            lastMagSquared !== 0 &&\n            dotProduct * dotProduct > COS_25_DEG_SQUARED * magSquared * lastMagSquared\n        ) {\n            // The negative events always seem to be composed of several real events, so determine how many multiples of\n            // the last event go into this one and take the decimal part. We need the actual magnitudes for this.\n            const mag = Math.sqrt(magSquared);\n            const lastMag = Math.sqrt(lastMagSquared);\n            const mult = mag / lastMag;\n            let frac = Math.abs(mult - Math.trunc(mult));\n            if (frac > 0.5) {\n                frac = 1 - frac;\n            }\n            if (frac < 0.1) {\n                allow = false;\n            }\n        }\n\n        // We calculate a threshold based on how quickly the mouse deltas have changed in the past (acceleration) and\n        // use it to determine if the current event fits. We do everything here with \"squared\" values instead of\n        // sqrt'ing\n        const MULT_PER_MS = 0.1;\n        const MIN_THRESHOLD = 90;\n        const ACCEL_COEF = 0.6;\n\n        const accelX = x - this.lastX;\n        const accelY = y - this.lastY;\n        const accel = accelX * accelX + accelY * accelY;\n        if (allow) {\n            // Spurious jumps tend to come close to a previous event, so reduce our threshold for closer events\n            const timeMult = 1 + MULT_PER_MS * Math.max(1, Math.min(16, ts - this.lastTs));\n            const thresholdX = timeMult * 2 * Math.abs(this.estimatedAccelX);\n            const thresholdY = timeMult * 2 * Math.abs(this.estimatedAccelY);\n            const threshold = Math.max(\n                MIN_THRESHOLD * MIN_THRESHOLD,\n                thresholdX * thresholdX + thresholdY * thresholdY\n            );\n\n            allow = accel < threshold;\n            if (!allow && (this.ignoredX || this.ignoredY)) {\n                // Even if we ignored the last event, use it to give this event a second chance. This helps\n                // if we get a huge, sudden (but real) movement. The first event might get ignored but\n                // if we get a second similar one in a row we will allow it.\n                const ignoredAccelX = x - this.ignoredX;\n                const ignoredAccelY = y - this.ignoredY;\n                const ignoredAccel = ignoredAccelX * ignoredAccelX + ignoredAccelY * ignoredAccelY;\n                allow = ignoredAccel < threshold;\n            }\n        }\n        if (allow) {\n            this.estimatedAccelX = this.estimatedAccelX * (1 - ACCEL_COEF) + accelX * ACCEL_COEF;\n            this.estimatedAccelY = this.estimatedAccelY * (1 - ACCEL_COEF) + accelY * ACCEL_COEF;\n            this.lastX = x;\n            this.lastY = y;\n            this.lastTs = ts;\n            this.ignoredX = 0;\n            this.ignoredY = 0;\n            return true;\n        } else {\n            this.ignoredX = x;\n            this.ignoredY = y;\n            return false;\n        }\n    }\n}\n","import { Zoneless } from \"./interfaces\";\nimport { PlatformDetails, isMobile } from \"./dependencies\";\n\nconst LOGTAG = \"windowstateobserver\";\n\n/**\n * Types of window states that are observed by the WindowStateObserver\n */\nexport const enum WindowStateType {\n    FOCUS,\n    MOUSE_FOCUS,\n    FULLSCREEN\n}\n\n/**\n * This class is a centralized source for window states (e.g. focus, video states, visibility).\n * Other classes in the project should use this class to receive updates about the state and query the current value\n * and should not directly listen for or query them themselves.\n */\nexport class WindowStateObserver {\n    private windowStateListeners: Map<WindowStateType, Function[]> = new Map();\n\n    private focusFunc: Function;\n    private blurFunc: Function;\n    private fullscreenFunc: Function;\n    private mouseEnterFunc: Function;\n    private mouseLeaveFunc: Function;\n\n    private windowFocus: boolean;\n    private fullscreen: boolean = false;\n    private mouseFocus: boolean;\n\n    private isMobile: boolean;\n\n    public constructor(platformDetails: PlatformDetails) {\n        this.isMobile = isMobile(platformDetails);\n        // Assume initial mouse focus is the same as window focus, even though this may not be correct\n        // There are no dedicated APIs to get the current mouse focus at any point in time\n        // Indirect methods, such as mouse events or HTML hover states, have edge cases that they may miss\n        // In most scenarios, the desync will be closed when the user first interacts with the stream\n        this.windowFocus = this.mouseFocus = document.hasFocus();\n\n        const zoneless = (window as any).zoneless as Zoneless;\n        const windowAddEventListener =\n            zoneless?.windowAddEventListener?.bind(window) ?? window.addEventListener.bind(window);\n        const documentAddEventListener =\n            zoneless?.documentAddEventListener?.bind(document) ??\n            document.addEventListener.bind(document);\n\n        this.focusFunc = this.onFocus.bind(this);\n        this.blurFunc = this.onBlur.bind(this);\n        this.fullscreenFunc = this.onFullscreenChange.bind(this);\n        this.mouseEnterFunc = this.onMouseEnter.bind(this);\n        this.mouseLeaveFunc = this.onMouseLeave.bind(this);\n\n        windowAddEventListener(\"focus\", this.focusFunc);\n        windowAddEventListener(\"blur\", this.blurFunc);\n        [\n            \"fullscreenchange\",\n            \"webkitfullscreenchange\",\n            \"mozfullscreenchange\",\n            \"msfullscreenchange\"\n        ].forEach(eventType => documentAddEventListener(eventType, this.fullscreenFunc));\n        documentAddEventListener(\"mouseenter\", this.mouseEnterFunc);\n        documentAddEventListener(\"mouseleave\", this.mouseLeaveFunc);\n\n        this.windowStateListeners.set(WindowStateType.FOCUS, []);\n        this.windowStateListeners.set(WindowStateType.FULLSCREEN, []);\n        this.windowStateListeners.set(WindowStateType.MOUSE_FOCUS, []);\n        // update with current fullscreen state\n        this.onFullscreenChange();\n    }\n\n    /**\n     * Uninitialize the window state observer\n     * @note Must be called before class leaves scope\n     */\n    public uninitialize() {\n        const zoneless = (window as any).zoneless as Zoneless;\n        const windowRemoveEventListener =\n            zoneless?.windowRemoveEventListener?.bind(window) ??\n            window.removeEventListener.bind(window);\n        const documentRemoveEventListener =\n            zoneless?.documentRemoveEventListener?.bind(document) ??\n            document.removeEventListener.bind(document);\n\n        windowRemoveEventListener(\"focus\", this.focusFunc);\n        windowRemoveEventListener(\"blur\", this.blurFunc);\n        [\n            \"fullscreenchange\",\n            \"webkitfullscreenchange\",\n            \"mozfullscreenchange\",\n            \"msfullscreenchange\"\n        ].forEach(eventType => documentRemoveEventListener(eventType, this.fullscreenFunc));\n        documentRemoveEventListener(\"mouseenter\", this.mouseEnterFunc);\n        documentRemoveEventListener(\"mouseleave\", this.mouseLeaveFunc);\n\n        for (const listeners of this.windowStateListeners.values()) {\n            listeners.splice(0);\n        }\n    }\n\n    /**\n     * Get whether or not the application window has focus\n     * @returns Whether the application window has focus\n     */\n    public getWindowFocus(): boolean {\n        return this.windowFocus;\n    }\n\n    /**\n     * Set the window focus state\n     * @param focus Value to set the window focus state to\n     * @note Should only be used in rare cases, where the application is aware of the state before the browser fires the corresponding events.\n     */\n    public setWindowFocus(focus: boolean) {\n        // On mobile devices, the default use case does not have a pointing device connected at all times\n        // Instead of only relying on mouseenter/mouseleave, use window focus as a fallback\n        if (this.isMobile) {\n            this.setMouseFocus(focus);\n        }\n        if (this.windowFocus !== focus) {\n            this.windowFocus = focus;\n            for (const listener of this.windowStateListeners.get(WindowStateType.FOCUS)!) {\n                listener(focus);\n            }\n        }\n    }\n\n    /**\n     * Get whether or not the application window is in fullscreen\n     * @returns Whether the application window is in fullscreen\n     */\n    public getFullscreen(): boolean {\n        return this.fullscreen;\n    }\n\n    private setFullscreen(fullscreen: boolean) {\n        if (this.fullscreen !== fullscreen) {\n            this.fullscreen = fullscreen;\n            for (const listener of this.windowStateListeners.get(WindowStateType.FULLSCREEN)!) {\n                listener(fullscreen);\n            }\n        }\n    }\n    /**\n     * Get whether or not the application window has mouse focus\n     * @returns Whether the application window has mouse focus\n     */\n    public getMouseFocus(): boolean {\n        return this.mouseFocus;\n    }\n\n    private setMouseFocus(focus: boolean) {\n        if (this.mouseFocus !== focus) {\n            this.mouseFocus = focus;\n            for (const listener of this.windowStateListeners.get(WindowStateType.MOUSE_FOCUS)!) {\n                listener(focus);\n            }\n        }\n    }\n\n    /**\n     * Register a listener for a window state\n     * @param type Type of window state to listen for\n     * @param listener Listener that will be called when the state is updated\n     * @note Should be accompanied by a call to removeStateListener before listener goes out of scope to prevent leaks\n     */\n    public addStateListener(type: WindowStateType, listener: Function) {\n        this.windowStateListeners.get(type)!.push(listener);\n    }\n\n    /**\n     * Unregister a listener for a window state\n     * @param type Type of window state to listen for\n     * @param listener Listener that was registered in addStateListener\n     */\n    public removeStateListener(type: WindowStateType, listener: Function) {\n        const listeners = this.windowStateListeners.get(type)!;\n        const index = listeners.indexOf(listener);\n        if (index !== -1) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    private onFocus() {\n        this.setWindowFocus(true);\n    }\n\n    private onBlur() {\n        this.setWindowFocus(false);\n    }\n\n    private onFullscreenChange() {\n        const doc: any = window.document;\n        const fullscreen = !!(\n            document.fullscreen ||\n            doc.webkitIsFullScreen == true ||\n            doc.mozFullScreen ||\n            doc.msFullscreenElement\n        );\n        this.setFullscreen(fullscreen);\n    }\n\n    private onMouseEnter() {\n        this.setMouseFocus(true);\n    }\n\n    private onMouseLeave() {\n        this.setMouseFocus(false);\n    }\n}\n","import { Log } from \"../dependencies\";\r\nimport { Download } from \"../util/utils\";\r\n\r\nconst LOGTAG = \"audiorecorder\";\r\n\r\nexport const enum TriggerState {\r\n    NONE = 0,\r\n    RECORDING,\r\n    LATENCY\r\n}\r\n\r\ndeclare class MediaRecorder extends EventTarget {\r\n    constructor(stream: MediaStream);\r\n    start(): undefined;\r\n    stop(): undefined;\r\n    onstart: () => void;\r\n    onstop: () => void;\r\n    ondataavailable: (msg: MessageEvent) => void;\r\n}\r\n\r\nexport class AudioRecorder {\r\n    private mediaRecorder?: MediaRecorder;\r\n    private isRecording: boolean = false;\r\n    private recordedBlobs: Array<any> = [];\r\n    private recordedBlobsArray: Array<Array<any>> = [];\r\n    private timerID: number = 0;\r\n    private dumpCount: number = 0;\r\n    private audioTriggerState: TriggerState = TriggerState.NONE;\r\n    private audioStream?: MediaStream;\r\n\r\n    public createRecorder() {\r\n        Log.i(\"{4c846ba}\", \"{b11cb24}\");\r\n        if (this.audioStream) {\r\n            try {\r\n                this.mediaRecorder = new MediaRecorder(this.audioStream);\r\n            } catch (error) {\r\n                Log.e(\"{4c846ba}\", \"{0d1420e}\", error);\r\n                return;\r\n            }\r\n        } else {\r\n            Log.e(\"{4c846ba}\", \"{74475ae}\");\r\n            return;\r\n        }\r\n\r\n        if (this.mediaRecorder) {\r\n            this.mediaRecorder.onstart = () => {};\r\n            this.mediaRecorder.onstop = () => {\r\n                Log.i(\"{4c846ba}\", \"{7a944b4}\");\r\n            };\r\n            this.mediaRecorder.ondataavailable = (msg: MessageEvent) => {\r\n                if (msg.data && msg.data.size > 0) {\r\n                    this.recordedBlobs.push(msg.data);\r\n                    this.recordedBlobsArray.push(this.recordedBlobs);\r\n                    ++this.dumpCount;\r\n                    this.recordedBlobs = [];\r\n                }\r\n            };\r\n            Log.i(\"{4c846ba}\", \"{ffb713f}\", this.mediaRecorder);\r\n        }\r\n\r\n        this.isRecording = false;\r\n    }\r\n\r\n    public startRecord() {\r\n        let timeoutMSec;\r\n        if (this.audioTriggerState == TriggerState.RECORDING) {\r\n            timeoutMSec = 30 * 60 * 1000;\r\n        } else if (this.audioTriggerState == TriggerState.LATENCY) {\r\n            timeoutMSec = 3 * 1000;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        if (!this.mediaRecorder || this.isRecording) {\r\n            return;\r\n        }\r\n        this.mediaRecorder.start();\r\n        this.isRecording = true;\r\n        this.timerID = window.setTimeout(() => {\r\n            Log.i(\"{4c846ba}\", \"{2282d21}\");\r\n            this.destroyRecorder();\r\n        }, timeoutMSec);\r\n        Log.i(\"{4c846ba}\", \"{4f438e3}\");\r\n    }\r\n\r\n    private restartRecord() {\r\n        this.destroyRecorder();\r\n        this.createRecorder();\r\n        this.startRecord();\r\n    }\r\n\r\n    public destroyRecorder() {\r\n        this.mediaRecorder?.stop();\r\n        this.mediaRecorder = undefined;\r\n        if (this.timerID !== 0) {\r\n            window.clearTimeout(this.timerID);\r\n            this.timerID = 0;\r\n        }\r\n    }\r\n\r\n    public initialize(stream: MediaStream) {\r\n        this.audioStream = stream;\r\n    }\r\n\r\n    public uninitialize() {\r\n        this.destroyRecorder();\r\n        this.downloadAudio();\r\n        this.audioStream = undefined;\r\n        this.audioTriggerState = TriggerState.NONE;\r\n    }\r\n\r\n    public downloadAudio() {\r\n        if (this.audioTriggerState == TriggerState.NONE) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < this.dumpCount; ++i) {\r\n            const fileName = \"audioCapture_\" + i + \".wmv\";\r\n            if (Download(this.recordedBlobsArray[i], fileName, \"audio/webm\")) {\r\n                Log.i(\"{4c846ba}\", \"{c24ed3b}\");\r\n            }\r\n        }\r\n        this.dumpCount = 0;\r\n        this.recordedBlobsArray = [];\r\n    }\r\n\r\n    public startPcmDump(): Boolean {\r\n        if (this.audioTriggerState == TriggerState.NONE) {\r\n            this.audioTriggerState = TriggerState.RECORDING;\r\n            Log.i(\"{4c846ba}\", \"{008dc86}\");\r\n            this.createRecorder();\r\n            this.startRecord();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public startLatencyDump(): Boolean {\r\n        if (this.audioTriggerState == TriggerState.RECORDING) {\r\n            Log.i(\"{4c846ba}\", \"{1f67b97}\");\r\n            this.audioTriggerState = TriggerState.LATENCY;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public createNewLatencyDump() {\r\n        if (this.audioTriggerState == TriggerState.LATENCY) {\r\n            Log.i(\"{4c846ba}\", \"{89b1a9f}\");\r\n            this.restartRecord();\r\n        }\r\n    }\r\n}\r\n","import { IsiDevice, PlatformDetails, AppLaunchMode } from \"../dependencies\";\nimport { StreamingQuality, MicState, StreamingResolution, StreamUpdateEvent } from \"../interfaces\";\nimport { StreamingStats } from \"../internalinterfaces\";\nimport { ExtendedDebugStats, StaticStreamStats } from \"../rinterfaces\";\nimport { GetResolutionString } from \"../util/utils\";\nimport { RTCInboundRtpStreamExtraStats } from \"./binaryreport\";\n\nconst LOGTAG = \"streamstats\";\n\ninterface PerfOscStats {\n    value: number;\n    count: number;\n    max: number;\n}\n\nclass RollingAverage {\n    prevSum: number = 0;\n    currentSum: number = 0;\n    prevCount: number = 0;\n    currentCount: number = 0;\n\n    public update(sum: number, count: number) {\n        if (this.prevSum == 0 && this.prevCount == 0) {\n            this.prevSum = sum;\n            this.prevCount = count;\n            return;\n        }\n\n        this.currentCount = count;\n        this.currentSum = sum;\n    }\n\n    public getRollingAvg() {\n        const count = this.currentCount - this.prevCount;\n        if (count != 0) {\n            return (this.currentSum - this.prevSum) / count;\n        }\n        return 0;\n    }\n\n    public reset() {\n        this.prevSum = this.currentSum;\n        this.prevCount = this.currentCount;\n    }\n}\n\nconst STATS_OVERLAY_ID = \"overlay-543d9968\";\n\nexport class StreamStats {\n    private overlayElement: HTMLElement;\n    private streamingQuality: StreamingQuality;\n    private fps: number = 0;\n    private avgStreamingRate: number = 0;\n    private bwu: number = 4;\n    private bweMbps: number = 0;\n    private lastInboundVideoRtpTimestamp: number = 0;\n    private framesDecoded_: number = 0;\n    private framesReceived_: number = 0;\n    private framesDropped_: number = 0;\n    private avgVideoJitterBufferDelay: number = 0;\n    private avgGameFps?: number;\n    private rtd: number = 0;\n    private packetsLost_: number = 0;\n    private streamingResolution: StreamingResolution = { width: 0, height: 0 };\n    private interFrameDelayMs: number = 0;\n    private videoElement: HTMLVideoElement;\n    private mainThreadblockedDuration: number = 0;\n    private dcSendDuration: PerfOscStats = { count: 0, max: 0, value: 0 };\n    private getStatsDuration: PerfOscStats = { count: 0, max: 0, value: 0 };\n    private decodeTimeAvg: RollingAverage = new RollingAverage();\n    private cumulativeAvgDecodeTime: number = 0;\n    private framesLost_: number = 0;\n    private prevFramesLost_: number = 0;\n    private extendedDebugStats: ExtendedDebugStats;\n    private staticStreamStats: StaticStreamStats;\n    private platformDetails: PlatformDetails;\n    private codec?: number;\n    private softwareDecodeFallback: boolean = false;\n    private decoder: string = \"\";\n\n    constructor(\n        videoElement: HTMLVideoElement,\n        platformDetails: PlatformDetails,\n        staticStreamStats: StaticStreamStats\n    ) {\n        this.videoElement = videoElement;\n        this.platformDetails = platformDetails;\n        this.staticStreamStats = staticStreamStats;\n\n        this.streamingQuality = {\n            qualityScore: 0,\n            bandwidthScore: 0,\n            networkLossScore: 0,\n            latencyScore: 0\n        };\n        let overlay = document.getElementById(STATS_OVERLAY_ID);\n        if (!overlay) {\n            overlay = this.createOverlayNode();\n            this.videoElement.insertAdjacentElement(\"afterend\", overlay);\n        }\n        this.overlayElement = overlay;\n        this.extendedDebugStats = {\n            isVideoElementPaused: false,\n            isAudioElementPaused: false,\n            isUserInputEnabled: false,\n            isVirtualKeyboardVisible: false,\n            micState: MicState.UNINITIALIZED,\n            isRsdmmActive: false,\n            keyboardLayout: \"\",\n            appLaunchMode: AppLaunchMode.Default,\n            inputMode: \"\"\n        };\n    }\n\n    public updateAvgStreamingRate(\n        currentReport: RTCIceCandidatePairStats,\n        prevReport: RTCIceCandidatePairStats\n    ) {\n        let currentBytesReceived = currentReport.bytesReceived ?? 0;\n        let prevBytesReceived = prevReport.bytesReceived ?? 0;\n\n        let t1 = currentReport.timestamp ?? 0;\n        let t2 = prevReport.timestamp ?? 0;\n        if (t1 == t2) return;\n\n        this.avgStreamingRate = (currentBytesReceived - prevBytesReceived) / ((t1 - t2) * 125);\n    }\n\n    public updateBwu(currentBweMbps: number) {\n        // Make sure to update the bwu ONLY when avgStreamingRate and currentBweMbps are in sync\n        //  avgStreamingRate might not be up to date when currentBweMbps is updated since\n        //  currentBweMbps is updated by the server whereas avgStreamingRate is updated by the\n        //  client. When the bandwidth drops, this leads to a wrong, not consistent values\n        if (currentBweMbps && this.avgStreamingRate <= currentBweMbps) {\n            this.bwu = (this.avgStreamingRate / currentBweMbps) * 100;\n        }\n        this.bweMbps = currentBweMbps;\n        return this.bwu;\n    }\n\n    public updateInboundVideoRtpStats(stats: RTCInboundRtpStreamExtraStats): void {\n        if (stats.frameWidth && stats.frameHeight) {\n            this.streamingResolution = { width: stats.frameWidth, height: stats.frameHeight };\n        }\n        if (stats.framesDecoded) {\n            const t1 = this.lastInboundVideoRtpTimestamp;\n            const t2 = stats.timestamp;\n            if (t1 !== t2) {\n                const fps = ((stats.framesDecoded - this.framesDecoded_) / (t2 - t1)) * 1000;\n                this.fps = Math.floor(fps);\n            }\n            this.framesDecoded_ = stats.framesDecoded;\n\n            if (stats.totalDecodeTime) {\n                this.decodeTimeAvg.update(stats.totalDecodeTime, stats.framesDecoded);\n                this.cumulativeAvgDecodeTime = (stats.totalDecodeTime * 1000) / stats.framesDecoded;\n            }\n        }\n        if (stats.framesReceived) {\n            this.framesReceived_ = stats.framesReceived;\n\n            if (stats.totalInterFrameDelay) {\n                const interFrameDelayMs = stats.totalInterFrameDelay * 1000;\n                this.interFrameDelayMs = interFrameDelayMs / (stats.framesReceived - 1);\n            }\n        }\n        if (stats.framesDropped) {\n            this.framesDropped_ = stats.framesDropped;\n        }\n        if (stats.packetsLost) {\n            this.packetsLost_ = stats.packetsLost;\n        }\n        if (stats.pliCount) {\n            this.framesLost_ = stats.pliCount;\n        }\n        this.lastInboundVideoRtpTimestamp = stats.timestamp;\n    }\n\n    public updateQScore(sq: StreamingQuality) {\n        this.streamingQuality = sq;\n    }\n\n    public updateRtd(rtd: number) {\n        this.rtd = rtd;\n    }\n\n    public updateJitter(jitter: number) {\n        this.avgVideoJitterBufferDelay = jitter;\n    }\n\n    public updateAvgGameFps(fps: number) {\n        this.avgGameFps = fps;\n    }\n\n    public getStreamingStats() {\n        let streamingStats: StreamingStats = {\n            fps: this.fps,\n            cumulativeAvgDecodeTime: this.cumulativeAvgDecodeTime,\n            avgDecodeTime: this.decodeTimeAvg.getRollingAvg() * 1000,\n            bwe: this.bweMbps,\n            bwu: this.bwu,\n            width: this.streamingResolution.width,\n            height: this.streamingResolution.height\n        };\n        return streamingStats;\n    }\n\n    public makeStreamUpdateEvent(): StreamUpdateEvent {\n        const event: StreamUpdateEvent = {\n            /** Average game FPS */\n            avgGameFps: this.avgGameFps ?? 0,\n            /** Streaming FPS */\n            fps: this.fps,\n            /** Round trip delay (ms) */\n            rtd: this.rtd,\n            /** Average decode cost (ms) */\n            avgDecodeTime: this.decodeTimeAvg.getRollingAvg() * 1000,\n            /** Total frame loss since last update */\n            frameLoss: this.framesLost_ - this.prevFramesLost_,\n            /** Total packet loss */\n            packetLoss: this.packetsLost_,\n            /** Available bandwidth (Mbps) */\n            totalBandwidth: this.bweMbps,\n            /** Utilized bandwidth (%) */\n            utilizedBandwidth: this.bwu,\n            /** Streaming resolution */\n            streamingResolution: this.streamingResolution\n        };\n        this.prevFramesLost_ = this.framesLost_;\n        return event;\n    }\n\n    public drawStatsOnScreen(enableDevStats: boolean) {\n        this.overlayElement.innerText = this.getText(enableDevStats);\n        this.dcSendDuration = { value: 0, count: 0, max: 0 };\n        this.getStatsDuration = { value: 0, count: 0, max: 0 };\n        this.decodeTimeAvg.reset();\n    }\n\n    public setShown(show: boolean) {\n        this.overlayElement.style.display = show ? \"block\" : \"none\";\n    }\n\n    private createOverlayNode() {\n        var overlay = document.createElement(\"div\");\n        overlay.id = STATS_OVERLAY_ID;\n        overlay.style.display = \"none\";\n        overlay.style.position = \"fixed\";\n        //@todo think of a way to remove dependency on platformDetails and remove it as class member\n        if (IsiDevice(this.platformDetails)) {\n            overlay.style.top = \"env(safe-area-inset-top, 0)\";\n            overlay.style.left = \"max(24px, env(safe-area-inset-left, 0))\";\n        } else {\n            overlay.style.top = \"0\";\n            overlay.style.left = \"0\";\n        }\n        overlay.style.padding = \"0.5em\";\n        overlay.style.backgroundColor = \"rgba(0,0,0,0.5)\";\n        overlay.style.zIndex = \"300\";\n        overlay.style.fontSize = \"12px\";\n        overlay.style.fontFamily = \"monospace\";\n        overlay.style.color = \"white\";\n        overlay.style.whiteSpace = \"pre\";\n        overlay.style.lineHeight = \"100%\";\n        overlay.style.pointerEvents = \"none\";\n        return overlay;\n    }\n\n    public updateDcSendDuration(time: number) {\n        this.dcSendDuration.value += time;\n        this.dcSendDuration.count += 1;\n        this.dcSendDuration.max = Math.max(time, this.dcSendDuration.max);\n    }\n\n    public updateStatsDuration(time: number) {\n        this.getStatsDuration.value += time;\n        this.getStatsDuration.count += 1;\n        this.getStatsDuration.max = Math.max(time, this.getStatsDuration.max);\n    }\n\n    public updateMainThreadBlockDuration(duration: number) {\n        this.mainThreadblockedDuration = Math.max(duration, this.mainThreadblockedDuration);\n    }\n\n    public updateExtendedDebugStats(stats: ExtendedDebugStats) {\n        this.extendedDebugStats = stats;\n    }\n\n    public updateVideoCodec(codec: string) {\n        // 5 represents H265; 6 represents AV1; 4 represents H264 or unknown\n        codec = codec.toUpperCase();\n        if (codec.includes(\"H265\")) {\n            this.codec = 5;\n        } else if (codec.includes(\"AV1\")) {\n            this.codec = 6;\n        } else {\n            this.codec = 4;\n        }\n    }\n\n    public setSoftwareDecodeFallback(fallback: boolean) {\n        this.softwareDecodeFallback = fallback;\n    }\n\n    public setDecoderImplementation(decoder: string) {\n        this.decoder = decoder;\n    }\n\n    public getText(enableDevStats: boolean): string {\n        const line1 = `Seat: ${this.staticStreamStats.zoneName} (${this.staticStreamStats.requestedRegion}) / ${this.staticStreamStats.gpuType}\\n`;\n\n        let line2 = `Game: CMS ${this.staticStreamStats.appId}`;\n        if (this.avgGameFps !== undefined) {\n            line2 += ` / fps ${this.avgGameFps.toFixed()}`;\n        }\n        line2 += `\\n`;\n\n        const line3 = `Stream: Current ${GetResolutionString(this.streamingResolution)}@${\n            this.fps\n        } / Default: ${this.staticStreamStats.streamInfo.width}x${\n            this.staticStreamStats.streamInfo.height\n        }@${this.staticStreamStats.streamInfo.fps} / Codec ${this.codec ?? \"\"}\\n`;\n\n        const line4 = `Network: RTD ${this.rtd}ms / FL ${this.framesLost_} / PL ${\n            this.packetsLost_\n        } / J ${this.avgVideoJitterBufferDelay.toFixed(\n            2\n        )}ms / Bitrate ${this.avgStreamingRate.toFixed(2)}Mbps / BWU ${this.bwu.toFixed(2)}%\\n`;\n\n        const line5 = `QOS: frame ${this.framesDecoded_} / FT ${this.interFrameDelayMs.toFixed(\n            2\n        )} / D ${(this.decodeTimeAvg.getRollingAvg() * 1000).toFixed(2)} / Q ${Math.floor(\n            this.streamingQuality.qualityScore\n        )}\\n`;\n\n        const line6 = `Client: ${this.platformDetails.os} ${\n            this.staticStreamStats.clientAppVersion\n        } ${this.staticStreamStats.clientLocale} Resolution ${GetResolutionString({\n            width: window.innerWidth * window.devicePixelRatio,\n            height: window.innerHeight * window.devicePixelRatio\n        })}\\n`;\n\n        const line7 = `Input ${this.extendedDebugStats.inputMode}\\n`;\n\n        let text = line1 + line2 + line3 + line4 + line5 + line6 + line7;\n\n        const internalStatsLine1 = `DC ${getAvg(this.dcSendDuration)}ms (${getMax(\n            this.dcSendDuration\n        )}ms) / Blocked ${this.mainThreadblockedDuration}\\n`;\n\n        const internalStatsLine2 = `Stats ${getAvg(this.getStatsDuration)}ms (${getMax(\n            this.getStatsDuration\n        )}ms) / FR ${this.framesReceived_} / FDR ${this.framesDropped_}\\n`;\n\n        const internalStatsLine3 = `Latency ${this.streamingQuality.latencyScore.toFixed(\n            1\n        )} / Network ${this.streamingQuality.networkLossScore.toFixed(\n            1\n        )} / Bandwidth ${this.streamingQuality.bandwidthScore.toFixed(1)}\\n`;\n\n        const internalStatsLine4 = `VP ${boolToString(\n            this.extendedDebugStats.isVideoElementPaused\n        )} / AP ${boolToString(this.extendedDebugStats.isAudioElementPaused)} / UI ${boolToString(\n            this.extendedDebugStats.isUserInputEnabled\n        )} / VKB ${boolToString(this.extendedDebugStats.isVirtualKeyboardVisible)} / MS ${\n            this.extendedDebugStats.micState\n        } / RSDMM ${+this.extendedDebugStats.isRsdmmActive}\\n`;\n\n        const internalStatsLine5 = `KBL ${this.extendedDebugStats.keyboardLayout} / ALM ${+this\n            .extendedDebugStats.appLaunchMode} / SWD ${boolToString(\n            this.softwareDecodeFallback\n        )} / ${this.decoder}`;\n\n        // Enable dev stats for only internal clients\n        if (enableDevStats) {\n            text +=\n                internalStatsLine1 +\n                internalStatsLine2 +\n                internalStatsLine3 +\n                internalStatsLine4 +\n                internalStatsLine5;\n        }\n\n        return text;\n    }\n}\n\nfunction getAvg(stats: PerfOscStats): string {\n    let avg = 0;\n    if (stats.count > 0) {\n        avg = stats.value / stats.count;\n    }\n    return avg.toFixed(2);\n}\n\nfunction getMax(stats: PerfOscStats): string {\n    return stats.max.toFixed(2);\n}\n\n/**\n * Convert boolean to y/n string representation\n */\nfunction boolToString(x: boolean): string {\n    return x ? \"y\" : \"n\";\n}\n","import { CustomMessage } from \"./interfaces\";\nimport { EdgeInsets, GetSafeAreas, IsEqualShallow, GetLogicalResolution } from \"./util/utils\";\nimport { TelemetryHandler } from \"./telemetry/telemetryhandler\";\nimport { RagnarokSettings } from \"./util/settings\";\nimport { PlatformDetails, IsiDevice, Log, IsAndroidOS } from \"./dependencies\";\n\nconst LOGTAG = \"safezonehandler\";\n\nexport declare interface MessageSender {\n    sendCustomMessage(message: CustomMessage): void;\n}\n\nconst MAX_TELEMETRY_EVENT_COUNT = 2;\n\nexport class SafeZoneHandler {\n    private safeZone: EdgeInsets = {\n        top: -1,\n        left: -1,\n        bottom: -1,\n        right: -1\n    };\n    private topPadding: number = 0;\n    private leftPadding: number = 0;\n    private showSafeZone: boolean = false;\n    private debugWindow?: HTMLDivElement;\n    private telemetryEventCount: number = 0;\n\n    constructor(\n        private sender: MessageSender,\n        private videoElement: HTMLVideoElement,\n        private platformDetails: PlatformDetails,\n        private telemetry?: TelemetryHandler\n    ) {\n        if (RagnarokSettings.isInternalUser) {\n            this.debugWindow = this.createDebugWindow();\n            videoElement.insertAdjacentElement(\"afterend\", this.debugWindow);\n        }\n    }\n\n    public uninitialize() {\n        if (this.debugWindow) {\n            this.debugWindow.remove();\n        }\n    }\n\n    /**\n     * @param topPadding top padding of video element\n     * @param leftPadding left padding of video element\n     * Provide information regarding the video's current state.\n     * Should be invoked whenever video state is updated, which accounts for resize and orientation change events.\n     */\n    public updateVideoState(topPadding: number, leftPadding: number): void {\n        this.topPadding = topPadding;\n        this.leftPadding = leftPadding;\n    }\n\n    /**\n     * Calculates safe area inset values and sends updated insets over custom message.\n     */\n    public send(): void {\n        if (this.videoElement.videoHeight <= 0 || this.videoElement.videoWidth <= 0) {\n            // Skip update if no video content yet\n            return;\n        }\n\n        // insets in CSS pixels\n        const insets = GetSafeAreas();\n        const safeZone = this.getSafeZone(insets);\n\n        if (IsEqualShallow(safeZone, this.safeZone)) {\n            // Skip update if insets have not changed\n            return;\n        }\n\n        const normalizedStr = JSON.stringify(safeZone, (_, v) => {\n            return v.toFixed ? Number(v.toFixed(2)) : v;\n        });\n        Log.d(\"{48f82fd}\", \"{054b8b0}\", JSON.stringify(insets), normalizedStr);\n\n        if (\n            (RagnarokSettings.ragnarokConfig.sendInsetValueUpdateEvents ?? false) &&\n            this.telemetryEventCount++ < MAX_TELEMETRY_EVENT_COUNT\n        ) {\n            // Round to nearest integer, replacing NaNs with -1\n            const roundToInt = (obj: Object, multFactor: number = 1): Object => {\n                for (const key of Object.keys(obj)) {\n                    const val = Math.round(obj[key] * multFactor);\n                    obj[key] = isNaN(val) ? -1 : val;\n                }\n                return obj;\n            };\n            const insetsTelemetry = <EdgeInsets>roundToInt(Object.assign({}, insets));\n            // Since normalized values are in the range [0,1] but the schema mandates int values, multiply by 1000\n            const safeZoneTelemetry = <EdgeInsets>roundToInt(Object.assign({}, safeZone), 1000);\n\n            this.telemetry?.emitMetricEvent(\n                \"InsetValueUpdate\",\n                \"Original\",\n                insetsTelemetry.top,\n                insetsTelemetry.left,\n                insetsTelemetry.bottom,\n                insetsTelemetry.right\n            );\n            this.telemetry?.emitMetricEvent(\n                \"InsetValueUpdate\",\n                \"Normalized\",\n                safeZoneTelemetry.top,\n                safeZoneTelemetry.left,\n                safeZoneTelemetry.bottom,\n                safeZoneTelemetry.right\n            );\n        }\n\n        this.safeZone = Object.assign({}, safeZone);\n        for (const key of Object.keys(safeZone)) {\n            safeZone[key] = isNaN(safeZone[key]) ? 0 : safeZone[key];\n        }\n        const data = {\n            \"safeZoneData\": {\n                \"type\": \"InsetValueUpdate\",\n                \"rect\": safeZone\n            }\n        };\n        const message: CustomMessage = {\n            messageType: \"SAFE_ZONE\",\n            messageRecipient: \"NvGridSvc:NGS\",\n            data: JSON.stringify(data)\n        };\n\n        this.sender.sendCustomMessage(message);\n        if (RagnarokSettings.isInternalUser) {\n            this.updateDebugWindow();\n        }\n    }\n\n    /**\n     * Toggles whether safe zone inset values are displayed on screen.\n     * For debugging purposes only.  Not intended for production use.\n     */\n    public toggleDisplaySafeZone(): void {\n        if (!this.debugWindow) {\n            return;\n        }\n        this.showSafeZone = !this.showSafeZone;\n        this.debugWindow.style.display = this.showSafeZone ? \"block\" : \"none\";\n    }\n\n    /**\n     * Returns normalized inset values relative to displayed video\n     * This is the rect within the video view unobscured by notches and bars.\n     */\n    private getSafeZone(insets: EdgeInsets): EdgeInsets {\n        let { width, height } = GetLogicalResolution();\n\n        const isScreenNaturalOrientation = (): boolean => {\n            let angle;\n            if (window.orientation !== undefined) {\n                angle = window.orientation;\n            } else if (screen.orientation) {\n                angle = screen.orientation.angle;\n            }\n            switch (angle) {\n                case 90:\n                case -90:\n                case 270:\n                    return false;\n                case 0:\n                case 180:\n                default:\n                    return true;\n            }\n        };\n\n        // On iOS/iPadOS, adjust screen dimensions for directionality because dimensions based on device's natural orientation\n        // On other platforms, screen dimensions  adjust to account for the current orientation\n        if (IsiDevice(this.platformDetails) && !isScreenNaturalOrientation()) {\n            const _width = width;\n            width = height;\n            height = _width;\n        }\n\n        const getOffsets = (\n            element: HTMLElement\n        ): {\n            top: number;\n            left: number;\n            bottom: number;\n            right: number;\n        } => {\n            let top = element.offsetTop;\n            let left = element.offsetLeft;\n            let parent = element.offsetParent;\n            while (parent) {\n                top += (parent as HTMLElement).offsetTop;\n                left += (parent as HTMLElement).offsetLeft;\n                parent = (parent as HTMLElement).offsetParent;\n            }\n\n            let clientHeight = element.clientHeight;\n            let clientWidth = element.clientWidth;\n\n            // On Android devices, if after an orientation change the window's innerHeight/Width correctly reflect the orientation change but\n            // the video element's clientWidth/Height correspond to the previous orientation, flip the clientHeight and clientWidth.\n            // This has been observed exclusively on Android when handling resize events with a timeout delay.\n            if (\n                IsAndroidOS(this.platformDetails) &&\n                ((window.innerHeight > window.innerWidth &&\n                    element.clientHeight < element.clientWidth) ||\n                    (window.innerHeight < window.innerWidth &&\n                        element.clientHeight > element.clientWidth))\n            ) {\n                Log.w(\"{48f82fd}\", \"{c9d343e}\");\n                clientHeight = element.clientWidth;\n                clientWidth = element.clientHeight;\n            }\n            return {\n                top: top,\n                left: left,\n                bottom: Math.max(window.innerHeight - top - clientHeight, 0),\n                right: Math.max(window.innerWidth - left - clientWidth, 0)\n            };\n        };\n        // offsets of video element relative to layout viewport\n        const offsets = getOffsets(this.videoElement);\n\n        // TODO: Determine why on some Android devices, window.innerHeight/innerWidth is observed to be larger than screen.height/width\n        //       As a WAR for this, set lower bound to 0\n        const screenMinusViewportTopPadding = Math.max(height - window.innerHeight, 0) / 2;\n        const screenMinusViewportLeftPadding = Math.max(width - window.innerWidth, 0) / 2;\n\n        // express insets as percentage of displayed video\n        // account for difference between screen and viewport dimensions\n        // account for video element offsets\n        // account for padding generated by sever-side scaling\n        const safeZone = {\n            top:\n                Math.max(\n                    insets.top - screenMinusViewportTopPadding - offsets.top - this.topPadding,\n                    0\n                ) /\n                (this.videoElement.clientHeight - this.topPadding * 2),\n            left:\n                Math.max(\n                    insets.left - screenMinusViewportLeftPadding - offsets.left - this.leftPadding,\n                    0\n                ) /\n                (this.videoElement.clientWidth - this.leftPadding * 2),\n            bottom:\n                Math.max(\n                    insets.bottom -\n                        screenMinusViewportTopPadding -\n                        offsets.bottom -\n                        this.topPadding,\n                    0\n                ) /\n                (this.videoElement.clientHeight - this.topPadding * 2),\n            right:\n                Math.max(\n                    insets.right -\n                        screenMinusViewportLeftPadding -\n                        offsets.right -\n                        this.leftPadding,\n                    0\n                ) /\n                (this.videoElement.clientWidth - this.leftPadding * 2)\n        };\n\n        return safeZone;\n    }\n\n    private createDebugWindow(): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        div.style.display = \"none\";\n        div.style.position = \"absolute\";\n        div.style.color = \"white\";\n        div.style.backgroundColor = \"rgb(105, 105, 105, 0.7)\";\n        div.style.padding = \"2px\";\n        div.style.bottom = \"0px\";\n        div.style.left = \"0px\";\n        div.style.margin = \"5px\";\n        return div;\n    }\n\n    private updateDebugWindow(): void {\n        if (this.debugWindow) {\n            this.debugWindow.innerText =\n                \"Safe Zone: \\nTop: \" +\n                (Math.max(this.safeZone.top, 0) * 100).toFixed() +\n                \"%\\nRight: \" +\n                (Math.max(this.safeZone.right, 0) * 100).toFixed() +\n                \"%\\nBottom: \" +\n                (Math.max(this.safeZone.bottom, 0) * 100).toFixed() +\n                \"%\\nLeft: \" +\n                (Math.max(this.safeZone.left, 0) * 100).toFixed() +\n                \"%\";\n        }\n    }\n}\n","import { Log } from \"../dependencies\";\nimport {\n    LDATController,\n    FrameLatencyData,\n    DEFAULT_LUMA_THRESHOLD,\n    MOUSE_EVENT_DELAY_MS\n} from \"./ldatcontroller\";\nimport { VideoFrameMetadata } from \"../internalinterfaces\";\nimport { Download, SupportsPointerEvents } from \"../util/utils\";\nimport { WindowStateObserver, WindowStateType } from \"../windowstateobserver\";\n\nconst LOGTAG = \"ldatoverlay\";\n\nconst DEFAULT_SHOT_COUNT = 20;\nconst DEFAULT_SHOT_DELAY_MS = 1000;\n\nconst SHOW_HOTKEYS_LABEL = \"Show hotkeys\";\nconst HIDE_HOTKEYS_LABEL = \"Hide hotkeys\";\n\nexport interface ILDATHandler {\n    stop(): void;\n    reset(): void;\n    toggleVisibility(): void;\n    isVisible(): boolean;\n    toggle(): void;\n    isActive(): boolean;\n    allowPointerLock(): boolean;\n    toggleAutoFire(): void;\n    saveLog(): void;\n    centerLoupe(): void;\n}\n\nexport class LDATOverlay implements ILDATHandler {\n    private visible: boolean = false;\n    private controller: LDATController;\n    private videoElement: HTMLVideoElement;\n    private fullscreenChangeFunc: any;\n    private mouseDownFunc: any;\n    private mouseMoveFunc: any;\n    private overlay: HTMLDivElement;\n    private lumaSlider!: HTMLInputElement;\n    private lumaSpan!: HTMLSpanElement;\n    private startButton!: HTMLInputElement;\n    private helpDialogueButton!: HTMLInputElement;\n    private loupe: HTMLDivElement;\n    private loupeHeader!: HTMLDivElement;\n    private warning: HTMLDivElement;\n    private helpDialogue: HTMLDivElement;\n    private notification: HTMLDivElement;\n    private latencyData: FrameLatencyData[] = [];\n    private autoFireInputs!: HTMLDivElement;\n    private autoFireCheckbox!: HTMLInputElement;\n    private shotCountSlider!: HTMLInputElement;\n    private shotCountSpan!: HTMLSpanElement;\n    private shotDelaySlider!: HTMLInputElement;\n    private shotDelaySpan!: HTMLSpanElement;\n    private autoFireInProgress: boolean = false;\n    private autoFireIntervalId: number = 0;\n    private shotCount: number = 0;\n    private loupePositionX!: HTMLInputElement;\n    private loupePositionY!: HTMLInputElement;\n    private moveOnClickCheckBox!: HTMLInputElement;\n    private prevMoveEvent = { x: 0, y: 0 };\n\n    constructor(videoElement: HTMLVideoElement, private windowObserver: WindowStateObserver) {\n        this.videoElement = videoElement;\n        this.controller = new LDATController(videoElement);\n\n        this.fullscreenChangeFunc = this.onfullscreenchange.bind(this);\n        this.mouseDownFunc = this.onmousedown.bind(this);\n        this.mouseMoveFunc = this.onmousemove.bind(this);\n        this.overlay = this.createOverlay();\n        this.loupe = this.createLoupe();\n        this.warning = this.createWarning();\n        this.helpDialogue = this.createHelpDialogue();\n        this.notification = this.createNotification();\n\n        videoElement.insertAdjacentElement(\"afterend\", this.overlay);\n        this.overlay.insertAdjacentElement(\"afterend\", this.loupe);\n        this.loupe.insertAdjacentElement(\"afterend\", this.warning);\n        this.overlay.insertAdjacentElement(\"beforebegin\", this.helpDialogue);\n        this.helpDialogue.insertAdjacentElement(\"beforebegin\", this.notification);\n\n        this.controller.registerFlashCallback(this.flashCallback.bind(this));\n        this.styleAutoFireOverlay(false);\n        this.setMoveOnClick(false);\n        this.styleLoupe(true);\n    }\n\n    /**\n     * Stop the LDAT.\n     * Should only be invoked during session teardown.\n     */\n    public stop(): void {\n        this.overlay.remove();\n        this.loupe.remove();\n        this.warning.remove();\n        this.helpDialogue.remove();\n        this.notification.remove();\n        this.setVisible(false);\n        this.latencyData = [];\n    }\n\n    /**\n     * Reset the LDAT.\n     * Restores default settings and clears any stored data.\n     */\n    public reset(): void {\n        this.setActive(false);\n        this.setValueAndDispatchInputEvent(this.lumaSlider, DEFAULT_LUMA_THRESHOLD);\n        this.setValueAndDispatchInputEvent(this.shotCountSlider, DEFAULT_SHOT_COUNT);\n        this.setValueAndDispatchInputEvent(this.shotDelaySlider, DEFAULT_SHOT_DELAY_MS);\n        this.styleAutoFireOverlay(false);\n        this.setMoveOnClick(false);\n        this.styleLoupe(true);\n        this.styleHelpDialogue(false);\n        this.loupePositionX.value = \"\";\n        this.loupePositionY.value = \"\";\n        this.latencyData = [];\n    }\n\n    /**\n     * Toggle the LDAT's visibility.\n     * If the LDAT is currently not visible, then display the interface.\n     * If the LDAT is currently visible, then minimize the interface.\n     */\n    public toggleVisibility(): void {\n        this.setVisible(!this.isVisible());\n    }\n\n    private setVisible(visible: boolean): void {\n        if (visible !== this.visible) {\n            Log.i(\"{50c79eb}\", \"{5595c14}\", visible);\n            this.visible = visible;\n\n            for (const element of [this.overlay, this.loupe, this.helpDialogue]) {\n                if (element === this.helpDialogue && visible) {\n                    this.styleHelpDialogue(this.helpDialogueButton.value !== SHOW_HOTKEYS_LABEL);\n                    continue;\n                }\n                element.style.display = visible ? \"block\" : \"none\";\n            }\n            const supportsPointerEvents = SupportsPointerEvents();\n            const mouseDownFuncName = supportsPointerEvents ? \"pointerdown\" : \"mousedown\";\n            const mouseMoveFuncName = supportsPointerEvents ? \"pointermove\" : \"mousemove\";\n\n            if (visible) {\n                this.updateLoupePosition();\n                this.makeDraggable(this.loupe, this.loupeHeader);\n\n                this.lumaSlider.oninput = evt => {\n                    const threshold = parseFloat((evt.target as HTMLInputElement).value);\n                    this.controller.setLuminanceThreshold(threshold);\n                    this.lumaSpan.innerHTML = this.asPercentage(threshold);\n                };\n                this.autoFireCheckbox.oninput = evt => {\n                    this.styleAutoFireOverlay((evt.target as HTMLInputElement).checked);\n                };\n                this.shotCountSlider.oninput = evt => {\n                    this.shotCountSpan.innerHTML = (evt.target as HTMLInputElement).value;\n                };\n                this.shotDelaySlider.oninput = evt => {\n                    this.shotDelaySpan.innerHTML = this.inMilliseconds(\n                        (evt.target as HTMLInputElement).value\n                    );\n                };\n                this.moveOnClickCheckBox.oninput = evt => {\n                    this.setMoveOnClick((evt.target as HTMLInputElement).checked);\n                };\n\n                const onLoupePositionInput = (evt: Event, element: HTMLInputElement) => {\n                    const x = parseInt((evt.target as HTMLInputElement).value);\n                    element.value = Math.max(Math.min(x, 100), 0).toFixed(0);\n                    this.positionLoupeFromUserInput();\n                };\n                this.loupePositionX.oninput = evt => onLoupePositionInput(evt, this.loupePositionX);\n                this.loupePositionY.oninput = evt => onLoupePositionInput(evt, this.loupePositionY);\n\n                this.startButton.onclick = _ => this.setActive(this.startButton.value === \"Start\");\n                this.helpDialogueButton.onclick = _ =>\n                    this.styleHelpDialogue(this.helpDialogueButton.value === SHOW_HOTKEYS_LABEL);\n                this.loupe.onmouseup = this.updateLoupePosition.bind(this);\n                this.loupe.onmousedown = _ => {\n                    if (this.isActive()) {\n                        // When the LDAT is active, the video element must be positioned behind the loupe\n                        // Send mouse click to video element so that pointer can be locked if need be\n                        this.controller.sendMouseClickEvent();\n                    }\n                };\n                this.windowObserver.addStateListener(\n                    WindowStateType.FULLSCREEN,\n                    this.fullscreenChangeFunc\n                );\n                this.videoElement.addEventListener(mouseDownFuncName, this.mouseDownFunc);\n                this.videoElement.addEventListener(mouseMoveFuncName, this.mouseMoveFunc);\n            } else {\n                this.setActive(false);\n                this.lumaSlider.oninput = null;\n                this.autoFireCheckbox.oninput = null;\n                this.shotCountSlider.oninput = null;\n                this.shotDelaySlider.oninput = null;\n                this.moveOnClickCheckBox.oninput = null;\n                this.loupePositionX.oninput = null;\n                this.loupePositionY.oninput = null;\n                this.startButton.onclick = null;\n                this.helpDialogueButton.onclick = null;\n                this.loupe.onmouseup = null;\n                this.loupe.onmousedown = null;\n                this.loupeHeader.onmousedown = null;\n                this.windowObserver.removeStateListener(\n                    WindowStateType.FULLSCREEN,\n                    this.fullscreenChangeFunc\n                );\n                this.videoElement.removeEventListener(mouseDownFuncName, this.mouseDownFunc);\n                this.videoElement.removeEventListener(mouseMoveFuncName, this.mouseMoveFunc);\n            }\n        }\n    }\n\n    /**\n     * @return True if LDAT overlay is visible, false otherwise.\n     */\n    public isVisible(): boolean {\n        return this.visible;\n    }\n\n    /**\n     * Toggle whether the LDAT is active by starting or stopping the LDAT.\n     * If the LDAT is currently inactive, then start the LDAT.\n     * If the LDAT is currently active, then stop the LDAT.\n     * When active, the area under the loupe is continuously sampled for changes in luminance.\n     */\n    public toggle(): void {\n        this.setActive(!this.isActive());\n    }\n\n    private setActive(active: boolean): void {\n        if (active && !this.controller.isLoupeInPosition()) {\n            this.showLoupePositionWarning();\n            return;\n        }\n\n        if (active && this.autoFireInProgress) {\n            Log.e(\"{50c79eb}\", \"{89742e9}\");\n            return;\n        }\n\n        this.controller.setActive(active);\n        this.styleLoupe();\n\n        if (active) {\n            this.startButton.value = \"Stop\";\n            if (this.isAutoFire()) {\n                Log.i(\"{50c79eb}\", \"{5974b2c}\");\n                this.autoFireInProgress = true;\n                this.shotCount = parseInt(this.shotCountSlider.value);\n                const shotDelayMs = parseInt(this.shotDelaySlider.value);\n                this.autoFireIntervalId = window.setInterval(() => this.autoFire(), shotDelayMs);\n            }\n        } else {\n            this.startButton.value = \"Start\";\n            if (this.autoFireInProgress) {\n                if (this.autoFireIntervalId) {\n                    Log.i(\"{50c79eb}\", \"{d340c50}\");\n                    this.resetAutoFire();\n                } else {\n                    Log.w(\"{50c79eb}\", \"{6d8948b}\");\n                }\n            }\n        }\n    }\n\n    /**\n     * @return True if the LDAT is active, false otherwise.\n     */\n    public isActive(): boolean {\n        return this.controller.isActive();\n    }\n\n    /**\n     * @return True if requesting pointer lock on the video element is allowed.\n     * Returns false if pointer lock should not occur on the video element.\n     * Pointer lock is prevented when the LDAT should interact with mouse events.\n     */\n    public allowPointerLock(): boolean {\n        return !this.isVisible() || this.isActive();\n    }\n\n    /**\n     * Toggle whether the LDAT is in autofire mode.\n     */\n    public toggleAutoFire(): void {\n        this.styleAutoFireOverlay(!this.isAutoFire());\n    }\n\n    private isAutoFire(): boolean {\n        return this.autoFireCheckbox.checked;\n    }\n\n    /**\n     * Save latency measurements to log file.\n     * File is located in downloads folder.\n     */\n    public saveLog(): void {\n        if (!this.latencyData.length) {\n            Log.w(\"{50c79eb}\", \"{2884507}\");\n            return;\n        }\n        const fileName = `LDAT_${new Date().toISOString()}.csv`;\n        const content = [\n            [\n                \"Sample #\",\n                \"Total\",\n                \"Render\",\n                \"Decode\",\n                \"Begin\",\n                \"Server + Rtd + Receive\",\n                \"Input Callback\"\n            ].join(\",\")\n        ];\n\n        for (let i = 0; i < this.latencyData.length; i++) {\n            const data = this.latencyData[i];\n            const decodeTime = data.processingDuration ?? \"\";\n            const beginTime =\n                data.receiveTime && data.processingDuration\n                    ? data.presentationTime - data.processingDuration - data.receiveTime\n                    : \"\";\n            const serverRtdReceiveTime = data.receiveTime\n                ? data.receiveTime - data.mouseClickCallbackTime\n                : \"\";\n\n            content.push(\n                [\n                    i,\n                    data.videoFrameCallbackTime - data.mouseClickTime,\n                    data.videoFrameCallbackTime - data.presentationTime,\n                    decodeTime,\n                    beginTime,\n                    serverRtdReceiveTime,\n                    data.mouseClickCallbackTime - data.mouseClickTime\n                ].join(\",\")\n            );\n        }\n\n        if (Download([content.join(\"\\n\")], fileName, \"text/plain\")) {\n            Log.i(\"{50c79eb}\", \"{690879e}\", fileName);\n        }\n    }\n\n    /**\n     * Position loupe in center of video element.\n     * Accounts for padding.\n     */\n    public centerLoupe(): void {\n        Log.i(\"{50c79eb}\", \"{d2811a7}\");\n        this.loupePositionX.value = \"50\";\n        this.loupePositionY.value = \"50\";\n        this.positionLoupe(0.5, 0.5);\n    }\n\n    /**\n     * When LDAT is active, inform controller of frame timing data.\n     * Controller will use this data to compute latency statistics when a flash occurs.\n     * Should only be invoked when LDAT is active.\n     */\n    public onVideoFrame(now: DOMHighResTimeStamp, metadata: VideoFrameMetadata): void {\n        this.controller.onVideoFrame(now, metadata);\n    }\n\n    private createDiv(): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        div.style.display = \"none\";\n        div.style.position = \"absolute\";\n        div.style.color = \"white\";\n        div.style.backgroundColor = \"rgb(105, 105, 105, 0.7)\";\n        div.style.padding = \"2px\";\n        return div;\n    }\n\n    private createTitleDiv(title: string): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        div.style.width = \"100%\";\n        div.style.borderBottom = \"1px dashed darkgray\";\n        div.style.paddingBottom = \"2px\";\n        div.innerHTML = title;\n        return div;\n    }\n\n    private createButton(value: string): HTMLInputElement {\n        const element = document.createElement(\"input\");\n        element.type = \"button\";\n        element.value = value;\n        element.style.margin = \"5px\";\n        element.style.backgroundColor = \"rgb(132, 130, 143, .7)\";\n        element.style.color = \"white\";\n        element.style.padding = \"8px 40px\";\n        element.style.border = \"none\";\n        element.style.borderRadius = \"4px\";\n        element.style.cursor = \"pointer\";\n        return element;\n    }\n\n    private createCheckBox(): HTMLInputElement {\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        return element;\n    }\n\n    private createLabel(label: string): HTMLLabelElement {\n        const element = document.createElement(\"label\");\n        element.innerHTML = label;\n        return element;\n    }\n\n    private createRangeInput(\n        value: number,\n        min: number,\n        max: number,\n        step: number = 1\n    ): HTMLInputElement {\n        const input = document.createElement(\"input\");\n        input.type = \"range\";\n        input.min = min.toString();\n        input.max = max.toString();\n        input.step = step.toString();\n        input.value = value.toString();\n        return input;\n    }\n\n    private createOverlay(): HTMLDivElement {\n        const div = this.createDiv();\n        const title = this.createTitleDiv(\"Latency Display Analysis Tool (LDAT)\");\n        this.startButton = this.createButton(\"Start\");\n        this.helpDialogueButton = this.createButton(SHOW_HOTKEYS_LABEL);\n\n        div.style.bottom = \"0px\";\n        div.style.left = \"0px\";\n        div.style.margin = \"5px\";\n\n        this.helpDialogueButton.style.border = \"1px solid white\";\n        this.helpDialogueButton.style.fontSize = \"10px\";\n        this.helpDialogueButton.style.padding = \"5px\";\n        this.helpDialogueButton.style.position = \"absolute\";\n        this.helpDialogueButton.style.right = \"0px\";\n\n        div.appendChild(title);\n        div.appendChild(this.startButton);\n        div.appendChild(this.helpDialogueButton);\n        div.appendChild(this.createLumaThreshold());\n        div.appendChild(this.createAutoFireOverlay());\n        div.appendChild(this.createLoupePositionOverlay());\n\n        this.moveOnClickCheckBox = this.createCheckBox();\n        const moveOnClickInfo = document.createElement(\"span\");\n\n        moveOnClickInfo.title =\n            \"Simulate mouse move event whenever a mouse click is detected.  Introduces two 300 ms delays between move events and requires a minimum shot delay of 1 sec.\";\n        moveOnClickInfo.innerHTML = \"<sup> i </sup>\";\n\n        div.appendChild(this.createLabel(\"Move On Click\"));\n        div.appendChild(moveOnClickInfo);\n        div.appendChild(this.moveOnClickCheckBox);\n\n        return div;\n    }\n\n    private createLumaThreshold(): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        const defaultThreshold = this.controller.getLuminanceThreshold();\n        this.lumaSlider = this.createRangeInput(defaultThreshold, 0.01, 0.2, 0.01);\n        this.lumaSpan = document.createElement(\"span\");\n        const label = this.createLabel(\"Activation Level\");\n        const lumaInfo = document.createElement(\"span\");\n\n        this.lumaSpan.innerHTML = this.asPercentage(defaultThreshold);\n\n        lumaInfo.style.paddingRight = \"2px\";\n        lumaInfo.title = \"% increase in luminance used to determine whether a flash occurred\";\n        lumaInfo.innerHTML = \"<sup> i </sup>\";\n\n        div.appendChild(label);\n        div.appendChild(lumaInfo);\n        div.appendChild(this.lumaSlider);\n        div.appendChild(this.lumaSpan);\n\n        return div;\n    }\n\n    private createAutoFireOverlay(): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        this.autoFireInputs = document.createElement(\"div\");\n        this.autoFireCheckbox = this.createCheckBox();\n        this.shotCountSlider = this.createRangeInput(DEFAULT_SHOT_COUNT, 5, 100, 5);\n        this.shotDelaySlider = this.createRangeInput(\n            DEFAULT_SHOT_DELAY_MS,\n            MOUSE_EVENT_DELAY_MS,\n            5000,\n            100\n        );\n        const labelCheckbox = this.createLabel(\"Autofire\");\n        const labelShotCount = this.createLabel(\"# Shots\");\n        const labelShotDelay = this.createLabel(\"Shot Delay\");\n        this.shotCountSpan = document.createElement(\"span\");\n        this.shotDelaySpan = document.createElement(\"span\");\n\n        this.shotCountSpan.innerHTML = this.shotCountSlider.value;\n        this.shotDelaySpan.innerHTML = this.inMilliseconds(this.shotDelaySlider.value);\n\n        this.autoFireInputs.appendChild(labelShotCount);\n        this.autoFireInputs.appendChild(this.shotCountSlider);\n        this.autoFireInputs.appendChild(this.shotCountSpan);\n        this.autoFireInputs.appendChild(document.createElement(\"br\"));\n        this.autoFireInputs.appendChild(labelShotDelay);\n        this.autoFireInputs.appendChild(this.shotDelaySlider);\n        this.autoFireInputs.appendChild(this.shotDelaySpan);\n\n        div.appendChild(labelCheckbox);\n        div.appendChild(this.autoFireCheckbox);\n        div.appendChild(this.autoFireInputs);\n\n        return div;\n    }\n\n    private styleAutoFireOverlay(autoFire: boolean) {\n        this.autoFireCheckbox.checked = autoFire;\n        this.shotCountSlider.disabled = !autoFire;\n        this.shotDelaySlider.disabled = !autoFire;\n        this.autoFireInputs.style.color = autoFire ? \"white\" : \"gray\";\n    }\n\n    private createLoupePositionOverlay(): HTMLDivElement {\n        const div = document.createElement(\"div\");\n        const label = this.createLabel(\"Loupe Position:\");\n        const labelX = this.createLabel(\"X\");\n        const labelY = this.createLabel(\"Y\");\n\n        labelX.style.paddingLeft = \"10px\";\n        labelY.style.paddingLeft = \"10px\";\n        labelX.style.paddingRight = \"2px\";\n        labelY.style.paddingRight = \"2px\";\n\n        const createNumberInput = () => {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.min = \"0\";\n            input.max = \"100\";\n            input.step = \"1\";\n            input.placeholder = \"Int\";\n            input.style.width = \"40px\";\n            return input;\n        };\n        this.loupePositionX = createNumberInput();\n        this.loupePositionY = createNumberInput();\n\n        div.appendChild(label);\n        div.appendChild(labelX);\n        div.appendChild(this.loupePositionX);\n        div.appendChild(this.createLabel(\"%\"));\n        div.appendChild(labelY);\n        div.appendChild(this.loupePositionY);\n        div.appendChild(this.createLabel(\"%\"));\n\n        return div;\n    }\n\n    private createLoupe(): HTMLDivElement {\n        const div = this.createDiv();\n        const title = this.createTitleDiv(\"Loupe\");\n        this.loupeHeader = document.createElement(\"div\");\n\n        this.loupeHeader.style.cursor = \"move\";\n        this.loupeHeader.style.width = \"100%\";\n        this.loupeHeader.style.height = \"100%\";\n        this.loupeHeader.innerHTML =\n            \"Click here to drag the loupe to the area of the screen where flashes will occur.  Then, press start.\";\n\n        div.appendChild(title);\n        div.appendChild(this.loupeHeader);\n\n        return div;\n    }\n\n    /**\n     * Positions loupe centered at (x, y), where x and y are normalized values 0.0 - 1.0 in video coordinate space\n     */\n    private positionLoupe(x: number, y: number): void {\n        const videoRect = this.videoElement.getBoundingClientRect();\n        const loupeRect = this.loupe.getBoundingClientRect();\n        const { paddingTop, paddingRight, paddingBottom, paddingLeft } = this.getPadding(\n            this.videoElement\n        );\n\n        const videoPannelHeight = videoRect.height - paddingTop - paddingBottom;\n        const videoPanelWidth = videoRect.width - paddingLeft - paddingRight;\n\n        // Position loupe relative to computed video panel dimensions.  Includes padding to account for black bars if present.\n        const top = videoRect.top + paddingTop + videoPannelHeight * y - loupeRect.height * y;\n        const left = videoRect.left + paddingLeft + videoPanelWidth * x - loupeRect.width * x;\n\n        this.loupe.style.top = top.toString() + \"px\";\n        this.loupe.style.left = left.toString() + \"px\";\n        this.updateLoupePosition();\n    }\n\n    private positionLoupeFromUserInput() {\n        const asInt = (x: string): number => {\n            // If input cannot be converted to numeric representation, select midpoint, i.e. 50%\n            return parseInt(x || \"50\") / 100;\n        };\n        this.positionLoupe(asInt(this.loupePositionX.value), asInt(this.loupePositionY.value));\n    }\n\n    private styleLoupe(defaultPosition: boolean = false): void {\n        if (defaultPosition) {\n            this.loupe.style.bottom = \"5px\";\n            this.loupe.style.left = \"300px\";\n            this.loupe.style.top = \"\";\n            this.loupe.style.right = \"\";\n            this.loupe.style.width = \"150px\";\n            this.loupe.style.height = \"150px\";\n        }\n\n        if (this.isActive()) {\n            this.loupeHeader.style.display = \"none\";\n            this.loupe.style.border = \"2px rgb(76, 175, 80) solid\";\n            this.loupe.style.backgroundColor = \"transparent\";\n        } else {\n            this.loupeHeader.style.display = \"block\";\n            this.loupe.style.border = \"none\";\n            this.loupe.style.backgroundColor = \"rgb(105, 105, 105, 0.7)\";\n        }\n    }\n\n    private setMoveOnClick(enable: boolean) {\n        this.moveOnClickCheckBox.checked = enable;\n    }\n\n    private onmousedown(evt: MouseEvent | PointerEvent): void {\n        if (this.moveOnClickCheckBox.checked && this.isActive() && !(evt as any).fromSelf) {\n            const MOVE_UNITS = 64;\n            const enum eventType {\n                UP,\n                DOWN,\n                MOVE\n            }\n\n            const dispatchEvent = (type: eventType, options: any) => {\n                switch (type) {\n                    case eventType.UP:\n                        this.videoElement.dispatchEvent(new PointerEvent(\"pointerup\", options));\n                        this.videoElement.dispatchEvent(new MouseEvent(\"mouseup\", options));\n                        break;\n                    case eventType.DOWN:\n                        const pointerDownEvent = new PointerEvent(\"pointerdown\", options);\n                        const mouseDownEvent = new MouseEvent(\"mousedown\", options);\n                        (pointerDownEvent as any).fromSelf = true;\n                        (mouseDownEvent as any).fromSelf = true;\n                        this.videoElement.dispatchEvent(pointerDownEvent);\n                        this.videoElement.dispatchEvent(mouseDownEvent);\n                        break;\n                    case eventType.MOVE:\n                        this.videoElement.dispatchEvent(\n                            new PointerEvent(\"pointerrawupdate\", options)\n                        );\n                        this.videoElement.dispatchEvent(new PointerEvent(\"pointermove\", options));\n                        this.videoElement.dispatchEvent(new MouseEvent(\"mousemove\", options));\n                        break;\n                    default:\n                        break;\n                }\n            };\n\n            const upDownOptions = { button: 2, isPrimary: true, pointerId: 1 };\n            const moveOptions = {\n                clientX: (Math.max(evt.clientX, 0) || this.prevMoveEvent.x) + MOVE_UNITS,\n                clientY: Math.max(evt.clientY, 0) || this.prevMoveEvent.y,\n                movementX: MOVE_UNITS,\n                isPrimary: true\n            };\n\n            // Press secondary mouse button\n            dispatchEvent(eventType.DOWN, upDownOptions);\n            // Delay required to ensure applications can handle each input event and do so sequentially\n            const DELAY_MS = 300;\n            window.setTimeout(() => {\n                // Move right MOVE_UNITS\n                dispatchEvent(eventType.MOVE, moveOptions);\n                window.setTimeout(() => {\n                    moveOptions.clientX -= MOVE_UNITS;\n                    moveOptions.movementX = -MOVE_UNITS;\n                    // Move left MOVE_UNITS\n                    dispatchEvent(eventType.MOVE, moveOptions);\n                    // Release secondary mouse button\n                    window.setTimeout(() => dispatchEvent(eventType.UP, upDownOptions), DELAY_MS);\n                }, DELAY_MS);\n            }, DELAY_MS);\n        }\n    }\n\n    private onmousemove(evt: MouseEvent | PointerEvent): void {\n        this.prevMoveEvent = { x: evt.clientX, y: evt.clientY };\n    }\n\n    private createWarning(): HTMLDivElement {\n        const div = this.createDiv();\n        div.style.position = \"relative\";\n        div.style.backgroundColor = \"gray\";\n        div.style.textAlign = \"center\";\n        div.innerHTML =\n            \"Warning: Must place loupe over video element to activate the LDAT.  Please reposition the loupe and then click start.\";\n        return div;\n    }\n\n    private createHelpDialogue(): HTMLDivElement {\n        const div = this.createDiv();\n        const title = this.createTitleDiv(\"LDAT Hot Keys\");\n        const list = document.createElement(\"ul\");\n\n        div.style.bottom = \"195px\";\n        div.style.left = \"0px\";\n        div.style.margin = \"5px\";\n        list.style.listStyle = \"none\";\n        list.style.paddingLeft = \"2px\";\n        list.style.margin = \"5px\";\n\n        for (const item of [\n            \"Enter - Start/Stop\",\n            \"R - Reset\",\n            \"A - Turn On/Off Auto-Fire Mode\",\n            \"S - Save Log File\",\n            \"C - Center Loupe on Screen\"\n        ]) {\n            const li = document.createElement(\"li\");\n            li.innerHTML = item;\n            list.append(li);\n        }\n\n        div.appendChild(title);\n        div.appendChild(list);\n\n        return div;\n    }\n\n    private styleHelpDialogue(visible: boolean): void {\n        if (visible) {\n            this.helpDialogueButton.value = HIDE_HOTKEYS_LABEL;\n            this.helpDialogue.style.display = \"block\";\n        } else {\n            this.helpDialogueButton.value = SHOW_HOTKEYS_LABEL;\n            this.helpDialogue.style.display = \"none\";\n        }\n    }\n\n    private createNotification(): HTMLDivElement {\n        const div = this.createDiv();\n        div.style.bottom = \"325px\";\n        div.style.left = \"0px\";\n        div.style.margin = \"5px\";\n        return div;\n    }\n\n    private updateLoupePosition(): void {\n        const videoRect = this.videoElement.getBoundingClientRect();\n        const loupeRect = this.loupe.getBoundingClientRect();\n\n        if (\n            this.videoElement.style.paddingTop ||\n            this.videoElement.style.paddingRight ||\n            this.videoElement.style.paddingBottom ||\n            this.videoElement.style.paddingLeft\n        ) {\n            const { paddingTop, paddingRight, paddingBottom, paddingLeft } = this.getPadding(\n                this.videoElement\n            );\n\n            videoRect.x += paddingLeft;\n            videoRect.y += paddingTop;\n            videoRect.width -= paddingLeft + paddingRight;\n            videoRect.height -= paddingTop + paddingBottom;\n        }\n\n        loupeRect.x = (loupeRect.x - videoRect.x) / videoRect.width;\n        loupeRect.y = (loupeRect.y - videoRect.y) / videoRect.height;\n        loupeRect.width /= videoRect.width;\n        loupeRect.height /= videoRect.height;\n\n        this.controller.setLoupePosition(loupeRect);\n    }\n\n    private showLoupePositionWarning(): void {\n        this.warning.style.display = \"block\";\n        window.setTimeout(() => (this.warning.style.display = \"none\"), 5000);\n    }\n\n    private onfullscreenchange(fullscreen: boolean) {\n        this.updateLoupePosition();\n    }\n\n    private flashCallback(data: FrameLatencyData) {\n        this.latencyData.push(data);\n        const latency = (data.videoFrameCallbackTime - data.mouseClickTime).toFixed();\n        const msg = `Flash occurred at frame\n            ${data.presentedFrames}. Latency: ${latency} ms`;\n        Log.i(\"{50c79eb}\", \"{0b0c6f9}\", msg);\n        this.notification.innerHTML = msg;\n        this.notification.style.display = \"block\";\n\n        window.setTimeout(() => {\n            this.notification.innerHTML = \"\";\n            this.notification.style.display = \"none\";\n        }, 5000);\n    }\n\n    private autoFire() {\n        if (this.shotCount-- > 0) {\n            this.controller.sendMouseClickEvent();\n        } else {\n            Log.i(\"{50c79eb}\", \"{d37e51d}\");\n            this.resetAutoFire();\n            this.setActive(false);\n        }\n    }\n\n    private resetAutoFire(): void {\n        window.clearInterval(this.autoFireIntervalId);\n        this.autoFireIntervalId = 0;\n        this.autoFireInProgress = false;\n    }\n\n    private makeDraggable(element: HTMLDivElement, header: HTMLDivElement): void {\n        let x = 0,\n            y = 0,\n            dx = 0,\n            dy = 0;\n        const onmouseup = document.onmouseup;\n        const onmousemove = document.onmousemove;\n\n        header.onmousedown = (evt: MouseEvent) => {\n            evt.preventDefault();\n            x = evt.clientX;\n            y = evt.clientY;\n            document.onmouseup = () => {\n                document.onmouseup = onmouseup;\n                document.onmousemove = onmousemove;\n            };\n            document.onmousemove = (evt: MouseEvent) => {\n                evt.preventDefault();\n                dx = x - evt.clientX;\n                dy = y - evt.clientY;\n                x = evt.clientX;\n                y = evt.clientY;\n                element.style.top = element.offsetTop - dy + \"px\";\n                element.style.left = element.offsetLeft - dx + \"px\";\n            };\n        };\n    }\n\n    private asPercentage(x: number): string {\n        return (x * 100).toFixed() + \"%\";\n    }\n\n    private inMilliseconds(x: string): string {\n        return x + \" ms\";\n    }\n\n    private setValueAndDispatchInputEvent(element: HTMLInputElement, value: number) {\n        element.value = value.toString();\n        element.dispatchEvent(new Event(\"input\"));\n    }\n\n    private getPadding(element: HTMLElement): {\n        paddingTop: number;\n        paddingRight: number;\n        paddingBottom: number;\n        paddingLeft: number;\n    } {\n        const paddingToInt = (padding?: string): number => {\n            if (!padding) {\n                return 0;\n            }\n            const n = padding.length;\n            if (padding.substring(n - 1) === \"%\") {\n                return parseInt(padding.substring(0, n - 1));\n            } else if (padding.substring(n - 2) === \"px\") {\n                return parseInt(padding.substring(0, n - 2));\n            } else {\n                Log.w(\"{50c79eb}\", \"{3351f27}\", padding);\n                return 0;\n            }\n        };\n        return {\n            paddingTop: paddingToInt(element.style.paddingTop),\n            paddingRight: paddingToInt(element.style.paddingRight),\n            paddingBottom: paddingToInt(element.style.paddingBottom),\n            paddingLeft: paddingToInt(element.style.paddingLeft)\n        };\n    }\n}\n","import { StreamingQuality } from \"../interfaces\";\n\nconst LOGTAG = \"qoscalculator\";\n\nexport class QosCalculator {\n    private maxBitrate: number;\n    private minBitrate: number;\n    private maxLatency: number;\n    private minLatency: number;\n    private maxQosScore: number;\n    //Calculate Scores\n    private latencyScore: number;\n    private networkLossScore: number;\n    private bandwidthScore: number;\n    private iirFilterFactor: number;\n    private qualityScore: number;\n    private lowBandwidthUtilThreshold: number;\n\n    constructor(maxBitRate: number) {\n        this.maxBitrate = maxBitRate / 1000;\n        this.minBitrate = 0;\n        this.maxLatency = 250;\n        this.minLatency = 10;\n        this.iirFilterFactor = 16;\n        this.qualityScore = 100;\n        this.latencyScore = 100;\n        this.bandwidthScore = 100;\n        this.networkLossScore = 100;\n        this.maxQosScore = 100;\n        this.lowBandwidthUtilThreshold = 25;\n    }\n\n    public calculateLatencyScore(currentReport: RTCIceCandidatePairStats) {\n        if ((<any>currentReport).currentRoundTripTime > this.maxLatency) {\n            this.latencyScore = 0;\n        } else {\n            let currentRttInMs = (<any>currentReport).currentRoundTripTime * 1000;\n            let currentScore =\n                (100 * (this.maxLatency - currentRttInMs)) / (this.maxLatency - this.minLatency);\n            if (currentScore === undefined || isNaN(currentScore)) return;\n            this.latencyScore = this.applyIIRFilter(\n                this.latencyScore,\n                currentScore,\n                this.iirFilterFactor\n            );\n            this.latencyScore = Math.min(this.latencyScore, this.maxQosScore);\n        }\n    }\n\n    public calculateLatencyScoreV2(rtd: number) {\n        let currentScore = 0;\n        if (rtd < this.maxLatency) {\n            let currentRttInMs = rtd;\n            currentScore =\n                (100 * (this.maxLatency - currentRttInMs)) / (this.maxLatency - this.minLatency);\n            if (currentScore === undefined || isNaN(currentScore)) currentScore = 0;\n        }\n        this.latencyScore = this.applyIIRFilter(\n            this.latencyScore,\n            currentScore,\n            this.iirFilterFactor\n        );\n        this.latencyScore = Math.min(this.latencyScore, this.maxQosScore);\n    }\n\n    public calculateBandwidthScoreV2(bandwidthMbps: number, bwu: number) {\n        let currentScore = 100;\n        if (bwu >= this.lowBandwidthUtilThreshold) {\n            currentScore =\n                ((bandwidthMbps - this.minBitrate) / (this.maxBitrate - this.minBitrate)) * 100;\n        }\n        if (currentScore > 100) currentScore = 100;\n        if (currentScore === undefined || isNaN(currentScore)) return 0;\n        this.bandwidthScore = this.applyIIRFilter(\n            this.bandwidthScore,\n            currentScore,\n            this.iirFilterFactor\n        );\n        this.bandwidthScore = Math.min(this.bandwidthScore, this.maxQosScore);\n    }\n\n    public calculateNetworkLossScore(\n        currInboundVideo: RTCInboundRtpStreamStats,\n        prevInboundVideo: RTCInboundRtpStreamStats\n    ) {\n        let prevPacketReceived = prevInboundVideo.packetsReceived!;\n        let prevPacketLost = prevInboundVideo.packetsLost!;\n        let intervalPacketReceived = currInboundVideo.packetsReceived! - prevPacketReceived;\n        let intervalPacketLost = currInboundVideo.packetsLost! - prevPacketLost;\n        let fractionPacketLost = intervalPacketLost / (intervalPacketReceived + intervalPacketLost);\n        let currentScore = 100 - fractionPacketLost * 100;\n        if (isNaN(currentScore) || currentScore === undefined) currentScore = 0;\n        let prevPliCount = prevInboundVideo.pliCount!;\n        let currentPliCount = currInboundVideo.pliCount!;\n\n        let frameLost = currentPliCount - prevPliCount;\n        // Frames can be dropped due to multiple reason, here consider only network related drops\n        if (frameLost > 0 && intervalPacketLost) currentScore = 0;\n        for (let i = 0; i < frameLost + 1; i++) {\n            this.networkLossScore = this.applyIIRFilter(\n                this.networkLossScore,\n                currentScore,\n                this.iirFilterFactor / 2\n            );\n        }\n    }\n\n    public GetStreamQuality() {\n        let currentScore = Math.min(this.latencyScore, this.networkLossScore, this.bandwidthScore);\n\n        this.qualityScore = this.applyIIRFilter(\n            this.qualityScore,\n            currentScore,\n            this.iirFilterFactor / 4\n        );\n        let streamQuality: StreamingQuality = {\n            latencyScore: this.latencyScore,\n            networkLossScore: this.networkLossScore,\n            bandwidthScore: this.bandwidthScore,\n            qualityScore: this.qualityScore\n        };\n        return streamQuality;\n    }\n\n    private applyIIRFilter(avgValue: number, input: number, coeff: number) {\n        return (avgValue * (coeff - 1)) / coeff + input / coeff;\n    }\n}\n","import { WebrtcStats, StatsType } from \"./statsinterfaces\";\n\nexport const ChunkHeaderSize = 9;\nexport const statsConfig = {\n    depr: {\n        size: 70,\n        version: 1,\n        name: \"DEPR\"\n    },\n    rtpv: {\n        size: 80,\n        version: 3,\n        name: \"RTPV\"\n    },\n    rtpa: {\n        size: 48,\n        version: 1,\n        name: \"RTPA\"\n    },\n    traa: {\n        size: 88,\n        version: 1,\n        name: \"TRAA\"\n    },\n    trav: {\n        size: 44,\n        version: 1,\n        name: \"TRAV\"\n    },\n    vfmd: {\n        size: 12,\n        version: 1,\n        name: \"VFMD\"\n    },\n    pfda: {\n        size: 20,\n        version: 1,\n        name: \"PFDA\"\n    },\n    none: {\n        size: 0,\n        version: 1,\n        name: \"\"\n    }\n};\n\nexport class WebrtcBinaryStats {\n    private statsMap = new Map<StatsType, ArrayBuffer[]>();\n    constructor() {\n        this.resetLists();\n    }\n\n    public size() {\n        let totalSize = 0;\n        for (let [key, array] of this.statsMap) {\n            for (let value of array) {\n                totalSize += value.byteLength;\n            }\n        }\n        totalSize += this.statsMap.size * ChunkHeaderSize;\n        return totalSize;\n    }\n\n    public addReport(report: WebrtcStats) {\n        let buffer = this.statsMap.get(report.type);\n        if (!buffer) {\n            buffer = new Array();\n            this.statsMap.set(report.type, buffer);\n        }\n        for (const element of report.stats) {\n            buffer!.push(element);\n        }\n    }\n\n    public write(dest: Uint8Array, startOffset: number): number {\n        let offset = startOffset;\n        for (let [key, arrayBuffer] of this.statsMap) {\n            offset += this.createHeader(dest, offset, key, arrayBuffer.length);\n            offset += this.writeStatsToBuffer(dest, arrayBuffer, offset);\n        }\n        return offset;\n    }\n\n    public resetLists() {\n        this.statsMap.clear();\n    }\n\n    private createHeader(\n        dest: Uint8Array,\n        offset: number,\n        type: StatsType,\n        elementCount: number\n    ): number {\n        let config = this.getStatsConfig(type);\n        let chunkType = config.name;\n        let dataBufferView = new DataView(dest.buffer);\n        for (let i = 0; i < 4; i++) {\n            dataBufferView.setUint8(offset + i, chunkType.charCodeAt(i));\n        }\n        dataBufferView.setUint8(offset + 4, config.version);\n        dataBufferView.setUint16(offset + 5, elementCount, true);\n        dataBufferView.setUint16(offset + 7, config.size, true);\n        return ChunkHeaderSize;\n    }\n\n    private getStatsConfig(type: StatsType) {\n        switch (type) {\n            case StatsType.DEPR:\n                return statsConfig.depr;\n            case StatsType.RTPV:\n                return statsConfig.rtpv;\n            case StatsType.RTPA:\n                return statsConfig.rtpa;\n            case StatsType.TRAV:\n                return statsConfig.trav;\n            case StatsType.TRAA:\n                return statsConfig.traa;\n            case StatsType.VFMD:\n                return statsConfig.vfmd;\n            case StatsType.PFDA:\n                return statsConfig.pfda;\n            default:\n                return statsConfig.none;\n        }\n    }\n\n    private writeStatsToBuffer(dest: Uint8Array, source: ArrayBuffer[], offset: number): number {\n        let byteCount = 0;\n        for (let value of source) {\n            let arr = new Uint8Array(value);\n            dest.set(arr, offset + byteCount);\n            byteCount += value.byteLength;\n        }\n        return byteCount;\n    }\n}\n","import { PlatformDetails, IsTizenOS, StreamInfo, IsWebOS, Log } from \"../dependencies\";\nimport { RagnarokSettings } from \"./settings\";\nimport {\n    CalculateMaxBitrateKbps,\n    IsResolution4k,\n    IsResolution1440p,\n    RunTaskOnInit,\n    GetStreamingSettingsExceptions,\n    StreamingSettingsException,\n    MakeLandscapeResolution,\n    GetSupportedAudioChannelCountAsync\n} from \"./utils\";\n\nconst LOGTAG = \"devicecapabilities\";\n\n/**\n * Determines and returns the current device's capabilities\n *\n * @param platformDetails Platform details, obtained from GetPlatformDetails\n * @param candidateVideoModes List of possible video modes to choose from, which can help with selecting a resolution.\n *                            Currently unused in Ragnarok\n * @returns Device capabilities\n */\nexport async function GetDeviceCapabilities(\n    platformDetails: PlatformDetails,\n    candidateVideoModes?: VideoMode[]\n): Promise<DeviceCapabilities> {\n    return GetDeviceCapabilitiesImpl(\n        GetStreamingSettingsExceptions(platformDetails),\n        screen.width,\n        screen.height,\n        window.devicePixelRatio,\n        candidateVideoModes\n    );\n}\n\nexport async function GetDeviceCapabilitiesImpl(\n    exception: StreamingSettingsException,\n    screenWidth: number,\n    screenHeight: number,\n    dpr: number,\n    _candidateVideoModes?: VideoMode[]\n): Promise<DeviceCapabilities> {\n    const iPad = !!(exception & StreamingSettingsException.IPAD);\n    const tizen4k = !!(exception & StreamingSettingsException.TIZEN4K);\n    const webOs4k = !!(exception & StreamingSettingsException.WEBOS4K);\n\n    // only consider 120+ FPS settings if allowed (and there are non-120 FPS options)\n    const shouldAllow120Fps = false;\n\n    [screenWidth, screenHeight] = MakeLandscapeResolution([screenWidth, screenHeight]);\n    const displayMode: ScaledVideoMode = {\n        width: Math.round(screenWidth * dpr),\n        height: Math.round(screenHeight * dpr),\n        fps: shouldAllow120Fps ? 120 : 60,\n        scaleFactor: Math.round(dpr * 100)\n    };\n\n    let maxAutoMode: VideoMode | undefined = undefined;\n    if (tizen4k || webOs4k) {\n        maxAutoMode = {\n            width: 3840,\n            height: 2160,\n            fps: displayMode.fps\n        };\n    } else if (iPad && screenWidth >= 1366) {\n        // 13\" iPads aren't large enough to get 1600x1200 normally, but it is the best resolution since i devices are pixel dense\n        // override the dimensions to get the right resolution\n        // TODO: This can be removed when we have DPI-aware streaming\n        maxAutoMode = {\n            width: 1600,\n            height: 1200,\n            fps: displayMode.fps\n        };\n    }\n    // TODO: We should use our own CapabilitiesHelper to determine this\n    const maxSupportedMode: SupportedVideoMode = {\n        width: 3840,\n        height: 2400,\n        fps: 120\n    };\n    const audioChannelCount = await GetSupportedAudioChannelCountAsync();\n    return {\n        displayMode,\n        maxAutoMode,\n        maxSupportedModes: [maxSupportedMode],\n        features: {\n            vsync: true,\n            vvsync: false,\n            hdr: false,\n            reflex: false,\n            audioChannelCount\n        }\n    };\n}\n\n// The below interfaces are standard mode selection interfaces that match or are subsets of the main definitions in:\n// https://gitlab-master.nvidia.com/gamestream/client/client-mode-selection/-/blob/main/js/src/index.ts\n\nexport declare interface VideoMode {\n    width: number;\n    height: number;\n    fps: number;\n}\n\nexport declare interface ScaledVideoMode extends VideoMode {\n    /**\n     * Scale factor between physical and logical resolutions as an integer percentage. If specified, this mode\n     * represents a physical resolution and applying this scale factor to the width and height will yield the logical\n     * resolution\n     * @example 2x scaling would be represented as 200. A physical resolution of 3840x2160 would yield a logical\n     *          resolution of 1920x1080\n     * @example 1.5x scaling would be represented as 150. A physical resolution of 1920x1080 would yield a logical\n     *          resolution of 1280x720\n     */\n    scaleFactor?: number;\n}\n\nexport declare interface SupportedVideoMode extends VideoMode {\n    /**\n     * Indicates this mode is supported only for the specified value of HDR. If undefined, this mode applies whether\n     * HDR is enabled or disabled\n     * @example hdr = true indicates this mode should only be considered if HDR is enabled\n     * @example hdr = false indicates this mode should only be considered if HDR is disabled\n     * @example hdr = undefined indicate this mode should always be considered\n     */\n    hdr?: boolean;\n}\n\nexport declare interface DeviceCapabilities {\n    /**\n     * The current physical display mode of the device. The width/height should be set to the number of physical pixels\n     * in each dimension and FPS set according to the display's refresh rate. The DPI should be set to the scaling\n     * factor between the current physical and logical resolution\n     */\n    displayMode: ScaledVideoMode;\n    /**\n     * Indicates support for streaming features\n     */\n    features: StreamFeatures;\n    /**\n     * List of max modes the client device can handle streaming at without significant loss of QOS or performance.\n     * For example, max decode resolutions\n     */\n    maxSupportedModes: SupportedVideoMode[];\n    /**\n     * The highest mode the client device should stream at without any overrides. Higher resolution/FPS streams may\n     * have minor QOS or performance issues, but will still work.\n     * If undefined or set to all zeroes, this will be inferred from the displayMode\n     */\n    maxAutoMode?: VideoMode;\n    /**\n     * List of max modes the client device can handle encoding video at without significant loss of QOS or performance\n     */\n    maxEncodeModes?: VideoMode[];\n}\n\nexport declare interface StreamFeatures {\n    /**\n     * Whether vvsync is supported\n     */\n    vvsync?: boolean;\n    /**\n     * Whether enabling/disabling vsync is supported\n     */\n    vsync?: boolean;\n    /**\n     * Whether HDR is supported\n     */\n    hdr?: boolean;\n    /**\n     * The number of audio channels to stream with\n     */\n    audioChannelCount?: number;\n    /**\n     * Whether reflex is supported\n     */\n    reflex?: boolean;\n}\n\n// End mode selection interfaces\n\ndeclare interface VideoConfiguration {\n    bitrate: number;\n    contentType: string;\n    framerate: number;\n    height: number;\n    width: number;\n}\n\ndeclare interface MediaConfiguration {\n    video: VideoConfiguration;\n}\n\ndeclare type MediaDecodingType = \"file\" | \"media-source\" | \"webrtc\";\n\ndeclare interface MediaDecodingConfiguration extends MediaConfiguration {\n    type: MediaDecodingType;\n}\n\nexport declare interface MediaCapabilitiesDecodingInfo {\n    supported: boolean;\n    smooth: boolean;\n    powerEfficient: boolean;\n}\n\ndeclare interface MediaCapabilities {\n    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingInfo>;\n}\n\nexport function ConvertCapabilityToNumber(capability?: MediaCapabilitiesDecodingInfo): number {\n    let numCapability = 0;\n    if (capability?.supported) {\n        numCapability |= 1;\n    }\n    if (capability?.smooth) {\n        numCapability |= 2;\n    }\n    if (capability?.powerEfficient) {\n        numCapability |= 4;\n    }\n    return numCapability;\n}\n\nexport function IsMediaCapabilitiesSupported(): boolean {\n    const mediaCapabilities: MediaCapabilities = (navigator as any).mediaCapabilities;\n    return !!mediaCapabilities;\n}\n\nexport class CapabilitiesHelperImpl {\n    private supportsAv1?: MediaCapabilitiesDecodingInfo;\n    private supportsH265?: MediaCapabilitiesDecodingInfo;\n    private checkAv1?: Promise<MediaCapabilitiesDecodingInfo | undefined>;\n    private checkH265?: Promise<MediaCapabilitiesDecodingInfo | undefined>;\n    private refreshRate?: number;\n    private refreshRatePromise?: Promise<number>;\n    public constructor() {\n        RunTaskOnInit(this.refresh120FpsSupport.bind(this));\n        RunTaskOnInit(this.refreshAv1Support.bind(this));\n        RunTaskOnInit(this.refreshH265Support.bind(this));\n    }\n\n    public refreshAv1Support(): Promise<MediaCapabilitiesDecodingInfo | undefined> {\n        this.checkAv1 = this.getDecodeCapability(\"av1\").then(\n            (capability?: MediaCapabilitiesDecodingInfo) => {\n                this.supportsAv1 = capability;\n                return this.supportsAv1;\n            }\n        );\n        return this.checkAv1;\n    }\n\n    public getAv1Capabilities(): Promise<MediaCapabilitiesDecodingInfo | undefined> {\n        if (this.supportsAv1) {\n            return Promise.resolve(this.supportsAv1);\n        } else if (this.checkAv1) {\n            return this.checkAv1;\n        } else {\n            return this.refreshAv1Support();\n        }\n    }\n\n    public getAv1SupportSync(): MediaCapabilitiesDecodingInfo | undefined {\n        return this.supportsAv1;\n    }\n\n    /*\n     * TODO: it is unknown what different platforms would return for HEVC check,\n     * so leave this to be undefined and fill out details later.\n     */\n    public refreshH265Support(): Promise<MediaCapabilitiesDecodingInfo | undefined> {\n        this.checkH265 = Promise.resolve(undefined);\n        return this.checkH265;\n    }\n\n    public getH265Capabilities(): Promise<MediaCapabilitiesDecodingInfo | undefined> {\n        if (this.supportsH265) {\n            return Promise.resolve(this.supportsH265);\n        } else if (this.checkH265) {\n            return this.checkH265;\n        } else {\n            return this.refreshH265Support();\n        }\n    }\n\n    public getH265SupportSync(): MediaCapabilitiesDecodingInfo | undefined {\n        return this.supportsH265;\n    }\n\n    public getDecodeCapability(\n        codec: string,\n        width: number = 1920,\n        height: number = 1080,\n        framerate: number = 60\n    ): Promise<MediaCapabilitiesDecodingInfo | undefined> {\n        const mediaCapabilities: MediaCapabilities = (navigator as any).mediaCapabilities;\n        if (!mediaCapabilities) {\n            return Promise.resolve(undefined);\n        }\n\n        const config: MediaDecodingConfiguration = {\n            type: \"webrtc\",\n            video: {\n                contentType: \"video/\" + codec,\n                width: width,\n                height: height,\n                framerate: framerate,\n                bitrate: CalculateMaxBitrateKbps(width, height, framerate) * 1000\n            }\n        };\n\n        return mediaCapabilities.decodingInfo(config).catch(error => {\n            Log.w(\"{5083445}\", \"{f5c2155}\", codec, error);\n            return undefined;\n        });\n    }\n\n    // Initiates a recalculation of the monitor refresh rate\n    public async refresh120FpsSupport(): Promise<boolean> {\n        const refreshRate = await this.getRefreshRate(true);\n        return this.is120Fps(refreshRate);\n    }\n\n    // If monitor refresh rate exists in the cache, it will be used\n    public async is120FpsSupported(): Promise<boolean> {\n        const refreshRate = await this.getRefreshRate(false);\n        return this.is120Fps(refreshRate);\n    }\n\n    public getRefreshRate(reCalculate?: boolean): Promise<number> {\n        if (reCalculate) {\n            // reset the cached value\n            this.refreshRate = undefined;\n        }\n        if (this.refreshRate) {\n            return Promise.resolve(this.refreshRate);\n        } else if (this.refreshRatePromise) {\n            return this.refreshRatePromise;\n        } else {\n            return this.fetchRefreshRate();\n        }\n    }\n\n    private is120Fps(refreshRate: number) {\n        // The refresh rate might not be exact as the number of RAF callbacks might\n        //  vary based on the page load. Hence including an error rate of 3fps\n        if (refreshRate >= 117) {\n            return true;\n        }\n        return false;\n    }\n\n    private fetchRefreshRate(): Promise<number> {\n        // Number of seconds to monitor the RAF callbacks. If the page load is heavy, the measurement is not accurate\n        const scanIntervalMs: number = 2000;\n        // Timeout can occur if the window is resizing continously. Should be greater than monitorInterval\n        const timeoutMs: number = 4000;\n        this.refreshRatePromise = this.calcRefreshRate(scanIntervalMs, timeoutMs).then(\n            (refreshRate: number) => {\n                this.refreshRate = refreshRate;\n                return this.refreshRate;\n            },\n            () => {\n                // On error, return the cached value if any\n                return this.refreshRate ?? 0;\n            }\n        );\n        return this.refreshRatePromise;\n    }\n\n    private calcRefreshRate(scanIntervalMs: number, timeoutMs: number): Promise<number> {\n        const promise = new Promise<number>((resolve_, reject_) => {\n            let aborted = false;\n            const timeOutId = window.setTimeout(() => {\n                aborted = true;\n            }, timeoutMs);\n            const resolve = (response: number) => {\n                window.clearTimeout(timeOutId);\n                resolve_(response);\n            };\n            const reject = (x?: any) => {\n                Log.w(\"{5083445}\", \"{0b0c6f9}\", x);\n                window.clearTimeout(timeOutId);\n                reject_();\n            };\n\n            if (scanIntervalMs > timeoutMs) {\n                reject(\"Specified timeout less than the scan interval\");\n            }\n            const times: Array<number> = [];\n            let refreshRate;\n            // Keep a track of the window dimensions and restart the refreshRate calculation if the\n            // window size changes. If the window stays in continuous resize, we should timeout\n            let width = window.innerWidth;\n            let height = window.innerHeight;\n            let screenX = window.screenX;\n            let screenY = window.screenY;\n            const isWindowPosChanged = () => {\n                if (\n                    window.innerWidth != width ||\n                    window.innerHeight != height ||\n                    screenX != window.screenX ||\n                    screenY != window.screenY\n                ) {\n                    width = window.innerWidth;\n                    height = window.innerHeight;\n                    screenX = window.screenX;\n                    screenY = window.screenY;\n                    return true;\n                }\n                return false;\n            };\n            const refreshRateLoop = () => {\n                window.requestAnimationFrame(() => {\n                    if (aborted) {\n                        reject(\"Timed out during the refreshRate loop\");\n                    } else {\n                        if (isWindowPosChanged()) {\n                            Log.w(\"{5083445}\", \"{824b461}\");\n                            times.length = 0;\n                            refreshRateLoop();\n                        } else {\n                            const now = performance.now();\n                            // If we have data over scanIntervalMs\n                            if (times.length && times[0] <= now - scanIntervalMs) {\n                                refreshRate = Math.floor(times.length / (scanIntervalMs / 1000));\n                                Log.d(\"{5083445}\", \"{8c3d290}\", refreshRate, \n                                        times[times.length - 1] - times[0]\n                                    );\n                                resolve(refreshRate);\n                            } else {\n                                times.push(now);\n                                refreshRateLoop();\n                            }\n                        }\n                    }\n                });\n            };\n            refreshRateLoop();\n        });\n        return promise;\n    }\n}\n\n// Create one instance of video capabilities used by all Ragnarok classes.\nexport let CapabilitiesHelper = new CapabilitiesHelperImpl();\n\n/** Bitwise configuration to allow Av1 for specific streaming resolutions and frame rates */\nconst EnableAv1Config = {\n    None: 0x0000,\n    Allow120Fps: 0x0001,\n    Allow1440p: 0x0002,\n    Allow4k: 0x0004,\n    All: 0x0007\n};\n\nasync function IsAv1Supported(\n    streamInfo: StreamInfo,\n    platformDetails: PlatformDetails\n): Promise<boolean> {\n    const allowAv1 =\n        RagnarokSettings.enableAv1Support ??\n        RagnarokSettings.ragnarokConfig.enableAv1Support ??\n        false;\n    const allowAv1ByResolutionAndFps =\n        RagnarokSettings.ragnarokConfig.enableAv1ByResolutionAndFps ?? EnableAv1Config.All;\n\n    if (!allowAv1) {\n        return false;\n    }\n    if (\n        (IsResolution4k(streamInfo.width, streamInfo.height) &&\n            !(allowAv1ByResolutionAndFps & EnableAv1Config.Allow4k)) ||\n        (IsResolution1440p(streamInfo.width, streamInfo.height) &&\n            !(allowAv1ByResolutionAndFps & EnableAv1Config.Allow1440p)) ||\n        (streamInfo.fps === 120 && !(allowAv1ByResolutionAndFps & EnableAv1Config.Allow120Fps))\n    ) {\n        return false;\n    }\n    if (IsWebOS(platformDetails) && window[\"lge_webrtc_av1_support\"] != undefined) {\n        return window[\"lge_webrtc_av1_support\"];\n    }\n    const result = await CapabilitiesHelper.getAv1Capabilities();\n    if (result?.powerEfficient) {\n        return true;\n    }\n    return false;\n}\n\nasync function IsH265Supported(platformDetails: PlatformDetails): Promise<boolean> {\n    if (IsWebOS(platformDetails) && window[\"lge_webrtc_hevc_support\"] != undefined) {\n        return window[\"lge_webrtc_hevc_support\"];\n    }\n    if (IsTizenOS(platformDetails)) {\n        return true;\n    }\n    const result = await CapabilitiesHelper.getH265Capabilities();\n    if (result?.powerEfficient) {\n        return true;\n    }\n    return false;\n}\n\nexport declare const enum SdpCodecType {\n    H264 = \"H264\",\n    H265 = \"H265\",\n    AV1 = \"AV1\",\n    UNKNOWN = \"UNKNOWN\"\n}\n\nexport async function GetCodecList(\n    streamInfo: StreamInfo,\n    platformDetails: PlatformDetails\n): Promise<SdpCodecType[]> {\n    let codecs = [];\n    const codecList = RagnarokSettings.codecList ?? RagnarokSettings.ragnarokConfig.codecList;\n\n    if (codecList) {\n        for (const codec of codecList) {\n            codecs.push(<SdpCodecType>codec);\n        }\n    } else {\n        const av1Check = IsAv1Supported(streamInfo, platformDetails);\n        const h265Check = IsH265Supported(platformDetails);\n        if (await av1Check) {\n            codecs.push(SdpCodecType.AV1);\n        }\n        if (await h265Check) {\n            codecs.push(SdpCodecType.H265);\n        }\n        codecs.push(SdpCodecType.H264);\n    }\n    return codecs;\n}\n","import { Log } from \"../dependencies\";\nimport { VideoFrameMetadata } from \"../internalinterfaces\";\n\nconst LOGTAG = \"ldatcontroller\";\n\nexport interface FrameLatencyData {\n    /** Number of frames submitted for composition */\n    presentedFrames: number;\n    /** Time video frame callback fired.  Occurs after CompositorFrame produced by renderer is submitted to browser process */\n    videoFrameCallbackTime: DOMHighResTimeStamp;\n    /** Time user agent submitted frame for composition */\n    presentationTime: DOMHighResTimeStamp;\n    /** Time encoded frame received by platform, i.e. last packet belonging to frame received over network */\n    receiveTime?: DOMHighResTimeStamp;\n    /** Duration from submission of encoded packet to decoder until decoded frame ready for presentation */\n    processingDuration?: number;\n    /** Time browser received mouse input event from OS */\n    mouseClickTime: DOMHighResTimeStamp;\n    /** Time mousedown callback occurred */\n    mouseClickCallbackTime: DOMHighResTimeStamp;\n}\n\nexport interface FlashCallback {\n    (x: FrameLatencyData): void;\n}\n\nexport const DEFAULT_LUMA_THRESHOLD = 0.06;\nexport const MOUSE_EVENT_DELAY_MS = 100;\nconst MAX_HISTORY = 32;\n\ninterface FrameTimingData {\n    presentedFrames: number;\n    videoFrameCallbackTime: DOMHighResTimeStamp;\n    presentationTime: DOMHighResTimeStamp;\n    receiveTime?: DOMHighResTimeStamp;\n    processingDuration?: number;\n    luma?: number;\n}\n\ninterface MouseClickData {\n    mouseClickTime: DOMHighResTimeStamp;\n    mouseClickCallbackTime: DOMHighResTimeStamp;\n}\n\n/**\n* Responsible for interpreting mouse click data, luminance data, and frame timing data to compute latency statistics.\n  Controls whether operations necessary for the LDAT to run should be performed.\n */\nexport class LDATController {\n    private active: boolean = false;\n    private lumaThreshold: number = DEFAULT_LUMA_THRESHOLD;\n    private loupePosition: DOMRect = new DOMRect(0, 0, 0, 0);\n    private frameTimings: FrameTimingData[] = [];\n    private mouseClickData: MouseClickData[] = [];\n    private flashCallback?: FlashCallback;\n    private videoElement: HTMLVideoElement;\n    private mousedownFunc: any;\n\n    constructor(videoElement: HTMLVideoElement) {\n        this.videoElement = videoElement;\n        this.mousedownFunc = this.onmousedown.bind(this);\n    }\n\n    /**\n     * Activate or deactivate the LDAT.\n     * When active, luminance should be calculated on a per-frame basis to compute latency statistics.\n     * @param active\n     */\n    public setActive(active: boolean): void {\n        if (this.active === active) {\n            return;\n        }\n        this.active = active;\n\n        if (active) {\n            Log.i(\"{0c7ed7c}\", \"{b56e30d}\");\n            this.videoElement.dispatchEvent(new Event(\"focus\", { bubbles: true }));\n            this.videoElement.addEventListener(\"pointerdown\", this.mousedownFunc);\n            this.videoElement.addEventListener(\"mousedown\", this.mousedownFunc);\n        } else {\n            Log.i(\"{0c7ed7c}\", \"{00425c2}\");\n            this.videoElement.removeEventListener(\"pointerdown\", this.mousedownFunc);\n            this.videoElement.removeEventListener(\"mousedown\", this.mousedownFunc);\n            this.frameTimings = [];\n            this.mouseClickData = [];\n        }\n    }\n\n    /**\n     * @return True if the LDAT is active, false otherwise.\n     */\n    public isActive(): boolean {\n        return this.active;\n    }\n\n    /**\n     * Set the luminance threshold used to determine whether a flash occurred.\n     * Default threshold defined as 6% increase in luminance relative to the prior frame's value\n     * @param threshold - Percent increase in luminance between 0 and 1\n     */\n    public setLuminanceThreshold(threshold: number): void {\n        if (threshold <= 0 || threshold >= 1) {\n            Log.e(\"{0c7ed7c}\", \"{1cbd879}\", threshold.toFixed(2));\n            return;\n        }\n        this.lumaThreshold = threshold;\n    }\n\n    /**\n     * @return The luminance threshold used to determine whether a flash occurred, expressed as percentage.\n     */\n    public getLuminanceThreshold(): number {\n        return this.lumaThreshold;\n    }\n\n    /**\n     * Set the region to be sampled for luminance changes\n     * @param rect Region in abstract 0.0-1.0 coordinate space\n     */\n    public setLoupePosition(rect: DOMRect): void {\n        if (rect.width <= 0 || rect.height <= 0) {\n            Log.e(\"{0c7ed7c}\", \"{3e0eb8f}\", rect.width, rect.height);\n            return;\n        }\n        this.loupePosition = rect;\n    }\n\n    /**\n     * @return The region to sample for luminance changes in abstract 0.0-1.0 coordinate space\n     */\n    public getLoupePosition(): DOMRect {\n        return this.loupePosition;\n    }\n\n    /**\n     * Register callback to be invoked when flash is detected in region under the loupe.\n     */\n    public registerFlashCallback(callback: FlashCallback): void {\n        this.flashCallback = callback;\n    }\n\n    /**\n     * When LDAT is active, use frame timing data to compute latency statistics when a flash occurs.\n     * If a flash has been detected for this frame, invoke registered callback and clear stale video frame data from cache.\n     */\n    public onVideoFrame(now: DOMHighResTimeStamp, metadata: VideoFrameMetadata): void {\n        this.frameTimings.push({\n            presentedFrames: metadata.presentedFrames,\n            videoFrameCallbackTime: now,\n            presentationTime: metadata.presentationTime,\n            receiveTime: metadata.receiveTime,\n            processingDuration: metadata.processingDuration\n        });\n\n        const rect = this.convertToVideoCoordinateSpace(this.loupePosition);\n        LDATController.GetAvgLuminance(\n            this.videoElement,\n            rect.x,\n            rect.y,\n            rect.width,\n            rect.height\n        ).then((luma: number) => this.recordLuminance(luma, metadata.presentedFrames));\n    }\n\n    private onmousedown(evt: MouseEvent | PointerEvent): void {\n        if (!this.frameTimings.length) {\n            Log.w(\"{0c7ed7c}\", \"{fe08a50}\");\n            return;\n        }\n\n        // Limit how often mouse clicks are processed to avoid ambiguity in determining which mouse click caused the flash\n        if (\n            this.mouseClickData.length &&\n            evt.timeStamp - this.mouseClickData[this.mouseClickData.length - 1].mouseClickTime <\n                MOUSE_EVENT_DELAY_MS\n        ) {\n            return;\n        }\n\n        this.mouseClickData.push({\n            mouseClickTime: evt.timeStamp,\n            mouseClickCallbackTime: performance.now()\n        });\n        while (this.mouseClickData.length > MAX_HISTORY) {\n            this.mouseClickData.shift();\n        }\n    }\n\n    /**\n     * Calculates average luminance across all pixels in specified region of video frame.\n     * @param source element that holds the video frame data\n     * @param x coordinate of region's top-left corner, in coordinate space of source element\n     * @param y  coordinate of region's top left corner, in coordinate space of source element\n     * @param width of source region to read\n     * @param height of source region to read\n     * @param callback the function to call when average calculation finished\n     * @return Luminance as normalized value between 0 and 1.  Result is delivered asynchronously as Promise.\n     * Rejects with -1 if failed to calculate luminance or if functionality not supported on given platform.\n     */\n    public static GetAvgLuminance(\n        source: CanvasImageSource,\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    ): Promise<number> {\n        return new Promise((resolve, reject) => {\n            window.setTimeout(() => {\n                const luma = LDATController.GetAvgLuminanceImpl(source, x, y, width, height);\n                if (luma === -1) {\n                    reject(-1);\n                }\n                resolve(luma);\n            }, 0);\n        });\n    }\n\n    private static GetAvgLuminanceImpl(\n        source: CanvasImageSource,\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    ): number {\n        if (width <= 0 || height <= 0) {\n            return -1;\n        }\n\n        const canvas = new OffscreenCanvas(width, height);\n        const context = canvas.getContext(\"2d\");\n\n        if (!context) {\n            Log.e(\"{0c7ed7c}\", \"{b72639c}\");\n            return -1;\n        }\n\n        let data;\n        try {\n            context.drawImage(source, x, y, width, height, 0, 0, width, height);\n            data = context.getImageData(0, 0, width, height).data;\n        } catch (err) {\n            Log.e(\"{0c7ed7c}\", \"{b16b792}\", err);\n            return -1;\n        }\n\n        let sum = 0;\n        let count = 0;\n        for (let i = 0; i < data.length - 3; i += 4) {\n            // See https://en.wikipedia.org/wiki/Relative_luminance#Relative_luminance_and_%22gamma_encoded%22_colorspaces\n            const luma = 0.2126 * data[i] + 0.7152 * data[i + 1] + 0.0722 * data[i + 2];\n            sum += luma;\n            count++;\n        }\n\n        const luminance = sum / count / 255;\n        return luminance;\n    }\n\n    private recordLuminance(luma: number, presentedFrames: number) {\n        const frameTimingData = this.frameTimings[this.frameTimings.length - 1];\n\n        if (presentedFrames !== frameTimingData.presentedFrames) {\n            Log.d(\"{0c7ed7c}\", \"{06323ea}\", presentedFrames);\n            return;\n        }\n\n        frameTimingData.luma = luma;\n\n        while (this.frameTimings.length > MAX_HISTORY) {\n            this.frameTimings.shift();\n        }\n\n        if (this.frameTimings.length == 1) {\n            return;\n        }\n\n        const prevFrameTimingData = this.frameTimings[this.frameTimings.length - 2];\n\n        // If prior frame missing, compare current frame to two frames prior.\n        // Cannot determine whether flash occurred at this frame if prior two frames missing or if luminance data not yet recorded\n        if (\n            prevFrameTimingData.presentedFrames < presentedFrames - 2 ||\n            prevFrameTimingData.luma === undefined ||\n            prevFrameTimingData.luma === -1\n        ) {\n            return;\n        }\n\n        const changeInLuma = frameTimingData.luma - prevFrameTimingData.luma;\n        if (changeInLuma > this.lumaThreshold) {\n            let mouseClickCount = 0;\n            let mostRecentMouseClick;\n            const frameLatencyData = {\n                presentedFrames: presentedFrames,\n                videoFrameCallbackTime: frameTimingData.videoFrameCallbackTime,\n                presentationTime: frameTimingData.presentationTime,\n                receiveTime: frameTimingData.receiveTime,\n                processingDuration: frameTimingData.processingDuration,\n                mouseClickTime: 0,\n                mouseClickCallbackTime: 0\n            };\n\n            while (\n                this.mouseClickData.length &&\n                this.mouseClickData[0].mouseClickTime <\n                    (frameTimingData.receiveTime ?? frameTimingData.presentationTime)\n            ) {\n                mouseClickCount++;\n                mostRecentMouseClick = this.mouseClickData.shift();\n            }\n\n            if (!mostRecentMouseClick) {\n                return;\n            }\n\n            if (mouseClickCount > 1) {\n                Log.d(\"{0c7ed7c}\", \"{a4b8c55}\", presentedFrames, mouseClickCount);\n            }\n\n            frameLatencyData.mouseClickTime = mostRecentMouseClick.mouseClickTime;\n            frameLatencyData.mouseClickCallbackTime = mostRecentMouseClick.mouseClickCallbackTime;\n\n            if (this.flashCallback) {\n                this.flashCallback(frameLatencyData);\n            }\n        }\n    }\n\n    /**\n     * @return True if entire loupe is positioned over the video element.\n     * Returns false if any portion of loupe is outside bounds of video element.\n     */\n    public isLoupeInPosition() {\n        const rect = this.convertToVideoCoordinateSpace(this.loupePosition);\n        if (\n            rect.x < 0 ||\n            rect.y < 0 ||\n            rect.x + rect.width > this.videoElement.videoWidth ||\n            rect.y + rect.height > this.videoElement.videoHeight\n        ) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Converts DOMRect from abstract 0.0-1.0 coordinate space to video coordinate space\n     */\n    private convertToVideoCoordinateSpace(rect: DOMRect): DOMRect {\n        const videoWidth = this.videoElement.videoWidth;\n        const videoHeight = this.videoElement.videoHeight;\n        return new DOMRect(\n            rect.x * videoWidth,\n            rect.y * videoHeight,\n            rect.width * videoWidth,\n            rect.height * videoHeight\n        );\n    }\n\n    /**\n     *  Simulates mouse click by dispatching mouse or pointer events on the video element.\n     */\n    public sendMouseClickEvent(): void {\n        const options = { isPrimary: true, pointerId: 1, button: 0 };\n        this.videoElement.dispatchEvent(new PointerEvent(\"pointerdown\", options));\n        this.videoElement.dispatchEvent(new MouseEvent(\"mousedown\"));\n        this.videoElement.dispatchEvent(new PointerEvent(\"pointerup\", options));\n        this.videoElement.dispatchEvent(new MouseEvent(\"mouseup\"));\n    }\n}\n","import {\n    IsiOSVersionAtLeast,\n    IsiPhone,\n    IsSafari,\n    PlatformDetails,\n    SdrHdrMode,\n    StreamInfo,\n    Log\n} from \"./dependencies\";\nimport { RErrorCode } from \"./rerrorcode\";\nimport { RagnarokSettings } from \"./util/settings\";\nimport { IsResolution1440p, IsResolution4k, ShouldEnableCPM } from \"./util/utils\";\n\nconst LOGTAG = \"nvstconfig\";\n\nconst ENABLE_SPLIT_ENCODE = 0x1;\nconst ENABLE_4K_2PASS_RC = 0x2;\nconst FEATURE_4K_1x_VBV = 0x4;\nconst FEATURE_SPATIAL_AQ = 0x8;\nconst NVST_STC_QOS_STATS = 0x00000002;\nconst DFC_ALGO_VERSION_1 = 1;\nconst FEATURE_FAKE_ENCODE_FPS = 0x20;\nconst NVSC_ENC_PRESET_LOW_LATENCY_HP = 6;\nconst NVST_CSCM_LIMITED_YCBCR_BT2020 = 4;\n\nexport const enum NvscStreamCaptureModeFlags {\n    NONE = 0x00000000,\n    VIDEO = 0x00000001,\n    AUDIO = 0x00000002,\n    VOICE = 0x00000004\n}\n\n// Any fields added here should also be added to generateAnswerSdp and updateConfig\nexport interface NvstVideoConfig {\n    clientViewportWd: number;\n    clientViewportHt: number;\n    maxFps: number;\n    maximumBitrateKbps: number;\n    initialBitrateKbps: number;\n    initialPeakBitrateKbps: number;\n    minimumBitrateKbps: number;\n    mapRtpTimestampsToFrames: boolean;\n    drcDfcEnabled?: boolean;\n    sdrHdrMode?: SdrHdrMode;\n}\n\nexport interface NvstConfig {\n    video: NvstVideoConfig[];\n    clientCapture: number;\n}\n\nexport function getDefaultNvstVideoConfig(\n    param: StreamInfo,\n    maxBitrate: number,\n    mapRtpTimestampsToFrames: boolean,\n    drcDfcEnabled?: boolean\n): NvstVideoConfig {\n    const MIN_BITRATE = 4000;\n    maxBitrate = Math.max(MIN_BITRATE, maxBitrate);\n    const initialBitrate = Math.max(MIN_BITRATE, Math.round(maxBitrate / 4));\n    return {\n        clientViewportWd: param.width,\n        clientViewportHt: param.height,\n        maxFps: param.fps,\n        drcDfcEnabled: drcDfcEnabled,\n        maximumBitrateKbps: maxBitrate,\n        initialBitrateKbps: initialBitrate,\n        initialPeakBitrateKbps: initialBitrate,\n        mapRtpTimestampsToFrames,\n        minimumBitrateKbps: MIN_BITRATE,\n        sdrHdrMode: param.sdrHdrMode\n    };\n}\n\nexport interface NvstAnswer {\n    config?: NvstConfig;\n    answer?: string;\n    error?: RErrorCode;\n}\n\nexport function handleNvstOffer(\n    config: NvstConfig,\n    serverSdpStr: string,\n    serverOverride: string,\n    platformDetails: PlatformDetails\n): NvstAnswer {\n    // We handle the offer in several steps:\n    // 1. Parse the offer SDP\n    // 2. Generate an initial answer SDP that contains all streams the server sent us and applies any modifications\n    //    that we need based on NvstConfig and other client variables. The localSdp variable will only contain\n    //    attributes that our client changed\n    // 3. Apply overrides from RemoteConfig, server CSR/config file, and client confile text box. These all modify\n    //    our localSdp\n    // 4. Update our NvstConfig based on the new localSdp. This allows overrides that are intended to affect client\n    //    behavior to work\n    // 5. Serialize localSdp, which contains all the fields we changed, into a string to send back to the server\n    const remoteSdp = parseOfferSdp(serverSdpStr);\n    if (!remoteSdp) {\n        return { error: RErrorCode.StreamerNvstSdpParseFailure };\n    }\n    const localSdp = generateAnswerSdp(remoteSdp, config, platformDetails);\n    // Don't fail on remote config or server overrides. These overrides can apply to multiple server versions, some of\n    // which will be too old to include the fields. For client overrides, we should fail because this can only be set\n    // directly by the user, and this gives them immediate feedback that their overrides are wrong\n    overrideSdp(getRemoteConfigOverride(), localSdp, remoteSdp, \"remoteconfig\");\n    overrideSdp(serverOverride, localSdp, remoteSdp, \"server\");\n    if (RagnarokSettings.isInternalUser) {\n        if (!overrideSdp(RagnarokSettings.clientConfigOverride, localSdp, remoteSdp, \"client\")) {\n            return { error: RErrorCode.StreamerInvalidClientOverride };\n        }\n    }\n    if (!updateConfig(config, localSdp)) {\n        return { error: RErrorCode.StreamerConfigUpdateFailure };\n    }\n\n    return {\n        config,\n        answer: serializeAnswer(localSdp, remoteSdp)\n    };\n}\n\nconst enum MediaType {\n    VIDEO = \"video\",\n    AUDIO = \"audio\",\n    APPLICATION = \"application\",\n    MIC = \"mic\"\n}\n\ntype AttributeMap = Map<string, string>;\n\ninterface Media {\n    mediaType: MediaType;\n    msid: string;\n    attributes: AttributeMap;\n}\n\ninterface Sdp {\n    origin: string;\n    time: string;\n    generalAttributes: AttributeMap;\n    media: Media[];\n}\n\nfunction splitLines(s: string): string[] {\n    return s.split(/\\r?\\n/);\n}\n\n// Parses the given SDP, only caring about the subset of the standard used by NVST.\n// Whats implemented:\n// - Validating origin (o=) and time (t=) are included so we can pass them back to the server\n// - Media descriptions\n// - Attributes with values\n// Differences from spec:\n// - a=msid is required for each media description\n// - Session-level attributes don't cascade to media-level\n// - m= lines are not validated; only the type is checked\n// Example NVST SDP:\n//   v=0\n//   o=SdpTest test_id_13 14 IN IPv4 127.0.0.1\n//   s=VideoStreamConfig test session\n//   a=general.test:0\n//   t=0 0\n//   m=video 0 RTP/AVP\n//   i=DeviceString, DeviceName\n//   a=msid:stream_1\n//   a=video.perfIndicatorEnabled:0\nfunction parseOfferSdp(sdpStr: string): Sdp | undefined {\n    let sdp: Sdp = {\n        origin: \"\",\n        time: \"\",\n        generalAttributes: new Map<string, string>(),\n        media: []\n    };\n    let attributes = new Map<string, string>();\n    let msid: string | undefined = undefined;\n    let mediaType: MediaType | undefined = undefined;\n    let inMedia = false;\n    const handleDescEnd = (): boolean => {\n        if (inMedia) {\n            if (mediaType && msid) {\n                sdp.media.push({\n                    mediaType,\n                    msid,\n                    attributes\n                });\n                mediaType = undefined;\n                msid = undefined;\n            } else {\n                Log.e(\"{eb7c2d0}\", \"{adc37a7}\");\n                return false;\n            }\n        } else {\n            sdp.generalAttributes = attributes;\n            inMedia = true;\n        }\n        attributes = new Map<string, string>();\n        return true;\n    };\n\n    for (const line of splitLines(sdpStr)) {\n        if (line.length < 2 || line[1] !== \"=\") {\n            continue;\n        }\n\n        const type = line[0];\n        const value = line.substr(2);\n        if (type == \"m\") {\n            // A m= line marks the start of a media description. Flush all the variables we've set\n            // for the current media description (or session description).\n            if (!handleDescEnd()) {\n                return undefined;\n            }\n\n            const parts = value.split(\" \");\n            mediaType = <MediaType>parts[0];\n        } else if (type == \"a\") {\n            // Attributes are of the form \"a=name:value\". The \":value\" is optional\n            const parts = value.split(\":\", 2);\n            if (parts.length === 1) {\n                // Flag attributes are valid but not used in NVST\n                continue;\n            }\n            if (parts.length !== 2) {\n                Log.e(\"{eb7c2d0}\", \"{f6bdb84}\", value);\n                return undefined;\n            }\n            const attribute = parts[0];\n            const attributeValue = parts[1];\n            // MSID is used by NVST to identify streams. We'll need it to generate the answer\n            if (attribute === \"msid\") {\n                if (msid === undefined) {\n                    msid = attributeValue;\n                } else {\n                    Log.e(\"{eb7c2d0}\", \"{dc7fbec}\", attributeValue);\n                    return undefined;\n                }\n            } else {\n                attributes.set(attribute, attributeValue);\n            }\n        } else if (type == \"t\") {\n            if (inMedia) {\n                Log.e(\"{eb7c2d0}\", \"{14fc069}\");\n                return undefined;\n            }\n            sdp.time = value;\n        } else if (type == \"o\") {\n            if (inMedia) {\n                Log.e(\"{eb7c2d0}\", \"{eb0287a}\");\n                return undefined;\n            }\n            sdp.origin = value;\n        }\n    }\n\n    if (!handleDescEnd()) {\n        return undefined;\n    }\n    if (sdp.time === \"\" || sdp.origin === \"\") {\n        Log.e(\"{eb7c2d0}\", \"{8e7e486}\");\n        return undefined;\n    }\n\n    return sdp;\n}\n\n/**\n * Apply the given override string to the local SDP, using the remote SDP to know which fields exist.\n * @returns True if all overrides were successfully applied or false if at least one override wasn't present in the\n *          server SDP\n */\nfunction overrideSdp(override: string, localSdp: Sdp, remoteSdp: Sdp, source: string): boolean {\n    const regex = /^([^[.]+)(?:\\[(\\d+)\\])?\\.([^:]+): *(.+)$/;\n\n    // When we hit an issue, we set this to false and continue through the rest of the config instead of stopping\n    let success = true;\n    for (const line of splitLines(override)) {\n        const groups = regex.exec(line);\n        if (groups) {\n            // Given \"video[0].abc.def: ghi\", groups would be:\n            // prefix: video, index: 0, name: abc.def, value: ghi\n            const prefix = groups[1];\n            const index = groups[2] !== undefined ? Number.parseInt(groups[2]) : undefined;\n            const name = groups[3];\n            const value = groups[4];\n            const path = prefix + \".\" + name;\n\n            const media = getMediaTypeForPrefix(prefix);\n            const localConfig = getMediaConfig(localSdp, media, index);\n            const remoteConfig = getMediaConfig(remoteSdp, media, index);\n            if (!localConfig || !remoteConfig) {\n                Log.w(\"{eb7c2d0}\", \"{a649ad8}\", source, media, index);\n                success = false;\n                continue;\n            }\n            if (!remoteConfig.has(path)) {\n                Log.w(\"{eb7c2d0}\", \"{cc4fdef}\", source, path, value);\n                success = false;\n                continue;\n            }\n            Log.d(\"{eb7c2d0}\", \"{2beb68f}\", source, path, value);\n\n            localConfig.set(path, value);\n        }\n    }\n    return success;\n}\n\nfunction getMediaTypeForPrefix(prefix: string): MediaType | undefined {\n    switch (prefix) {\n        case \"video\":\n        case \"vqos\":\n        case \"qscore\":\n        case \"bwe\":\n        case \"clientPerfBr\":\n        case \"packetPacing\":\n            return MediaType.VIDEO;\n        case \"audio\":\n        case \"aqos\":\n        case \"audioBitrate\":\n            return MediaType.AUDIO;\n        case \"ri\":\n            return MediaType.APPLICATION;\n        case \"mic\":\n            return MediaType.MIC;\n        default:\n            return undefined;\n    }\n}\n\nfunction setVideoProfile(\n    attributes: Map<string, string>,\n    video: NvstVideoConfig,\n    platformDetails: PlatformDetails\n) {\n    // Subset of GFN gaming VCT profile that is needed for browser streaming\n    // ref: https://beagle.nvidia.com/xref/gcomp_dev/src/Mjolnir/StreamSdk/source/common/config/NvscClientConfigDefaults.cpp?r=31198832#293\n    attributes.set(\"vqos.fec.rateDropWindow\", \"10\");\n    // Set a minimum number of FEC packets to apply to a frame. This will help the problem of normal FEC percentages\n    // only producing a single repair packet for small frames.\n    attributes.set(\"vqos.fec.minRequiredFecPackets\", \"2\");\n    attributes.set(\"vqos.drc.minRequiredBitrateCheckEnabled\", \"1\");\n    // Enable Unified Blit for all GFN sessions\n    attributes.set(\"video.dx9EnableNv12\", \"1\");\n    attributes.set(\"vqos.qpg.enable\", \"1\");\n    // Enable OWD Congestion control only for GFN use case\n    attributes.set(\"bwe.useOwdCongestionControl\", \"1\");\n    // Enable Nack only for GFN use case\n    attributes.set(\"video.enableRtpNack\", \"1\");\n    attributes.set(\"vqos.bw.txRxLag.minFeedbackTxDeltaMs\", \"200\");\n    // Enable 5 groups, 1msec sleep, 10 packets packet pacing config for 1440p/4k streaming.\n    attributes.set(\"vqos.fec.repairMinPercent\", \"5\");\n    attributes.set(\"vqos.fec.repairPercent\", \"5\");\n    attributes.set(\"vqos.fec.repairMaxPercent\", \"35\");\n    attributes.set(\"vqos.drc.bitrateIirFilterFactor\", \"18\");\n    // Needs to be in sync with MAXIMUM_PACKETIZATION_SIZE in WebRtcVideoRtpSender\n    attributes.set(\"video.packetSize\", \"1140\");\n    attributes.set(\"packetPacing.minNumPacketsPerGroup\", \"15\");\n    attributes.set(\"vqos.bllFec.enable\", \"0\");\n\n    const b120FpsOrHigher = video.maxFps >= 120;\n    const b120Fps = video.maxFps === 120;\n    const b240Fps = video.maxFps === 240;\n\n    const b1440pResolution = IsResolution1440p(video.clientViewportWd, video.clientViewportHt);\n    const b4kResolution = IsResolution4k(video.clientViewportWd, video.clientViewportHt);\n    const b1440pOr4kResolution = b1440pResolution || b4kResolution;\n    const bShouldEnableCPM = ShouldEnableCPM(platformDetails);\n\n    if (bShouldEnableCPM) {\n        attributes.set(\"vqos.resControl.cpmRtc.featureMask\", \"3\");\n    }\n\n    if (b120FpsOrHigher) {\n        // Cap refresh rate to 60 to avoid allocating higher bitrates to Turbo Mode.\n        //sm.RefreshRate = 60;\n        attributes.set(\"bwe.iirFilterFactor\", \"8\");\n        attributes.set(\"vqos.drc.enable\", \"0\");\n        attributes.set(\"vqos.dfc.enable\", \"1\");\n        attributes.set(\"vqos.dfc.decodeFpsAdjPercent\", \"85\");\n        attributes.set(\"vqos.dfc.targetDownCooldownMs\", \"250\");\n        // Use DFC 1.0, which will set the minimum target fps to 60 for resolutions > 720p\n        attributes.set(\"vqos.dfc.dfcAlgoVersion\", DFC_ALGO_VERSION_1.toString());\n        attributes.set(\"vqos.dfc.minTargetFps\", \"60\");\n        if (bShouldEnableCPM) {\n            // Flag is used in DFC algo (which is only enabled in turbo mode), does not control CPM in browser client\n            attributes.set(\"vqos.cpm.flags\", \"1\");\n        }\n\n        attributes.set(\n            \"video.encoderFeatureSetting\",\n            (\n                ENABLE_SPLIT_ENCODE |\n                ENABLE_4K_2PASS_RC |\n                FEATURE_4K_1x_VBV |\n                FEATURE_FAKE_ENCODE_FPS |\n                FEATURE_SPATIAL_AQ\n            ).toString()\n        );\n        // Use LLHP preset for Turbo Mode sessions.\n        attributes.set(\"video.encoderPreset\", NVSC_ENC_PRESET_LOW_LATENCY_HP.toString());\n        // Disallow DFC based on decode timings\n        attributes.set(\"vqos.resControl.dfc.useClientFpsPerf\", \"0\");\n        // Control conditions when CPM can kick in\n        attributes.set(\"vqos.resControl.cpmRtc.badNwSkipFramesCount\", \" 600\");\n        attributes.set(\"vqos.resControl.cpmRtc.decodeTimeThresholdMs\", \"9\");\n        if (b120Fps) {\n            // Delink streamingFps from gameFps\n            attributes.set(\"video.fbcDynamicFpsGrabTimeoutMs\", \"6\");\n\n            attributes.set(\"vqos.resControl.cpmRtc.serverResolutionUpdateCoolDownCount\", \"6000\");\n        } else if (b240Fps) {\n            attributes.set(\"video.fbcDynamicFpsGrabTimeoutMs\", \"18\");\n\n            attributes.set(\"vqos.resControl.cpmRtc.serverResolutionUpdateCoolDownCount\", \"12000\");\n            // Disable wait for next grab when NVIDIA FRL is ON.\n            attributes.set(\"video.enableNextCaptureMode\", \"1\");\n            // TODO: Set IIR filter factor, do not have data for it yet\n            attributes.set(\"vqos.maxStreamFpsEstimate\", \"240\");\n            // Enable Split Encode for 240Hz sessions and allow split encode to be turned off dynamically\n            // based on resolution\n            attributes.set(\"video.videoSplitEncodeStripsPerFrame\", \"3\");\n            attributes.set(\"video.updateSplitEncodeStateDynamically\", \"1\");\n        }\n    }\n\n    const MAX_BITRATE_KBPS_LIMIT_FOR_1440P_BELOW_RESOLUTIONS = 42000;\n\n    if (\n        b1440pOr4kResolution ||\n        video.maximumBitrateKbps >= MAX_BITRATE_KBPS_LIMIT_FOR_1440P_BELOW_RESOLUTIONS\n    ) {\n        if (b120Fps) {\n            attributes.set(\"packetPacing.numGroups\", \"3\");\n        } else {\n            attributes.set(\"packetPacing.numGroups\", \"5\");\n        }\n        attributes.set(\"packetPacing.maxDelayUs\", \"1000\");\n        attributes.set(\"packetPacing.minNumPacketsFrame\", \"10\");\n        attributes.set(\"video.rtpNackQueueLength\", \"1024\");\n        attributes.set(\"video.rtpNackQueueMaxPackets\", \"512\");\n        attributes.set(\"video.rtpNackMaxPacketCount\", \"25\");\n        // Non-4K resolutions >= 1440p need DRC tweaks to help maintain a high resolution.\n        attributes.set(\"vqos.drc.qpMaxResThresholdAdj\", \"4\");\n        attributes.set(\"vqos.grc.qpMaxResThresholdAdj\", \"4\");\n        attributes.set(\"vqos.drc.iirFilterFactor\", \"100\");\n        attributes.set(\"vqos.qpg.enable\", \"0\");\n        // 4k/1440p HEVC/AV1 uses split encode with 3-strips on ADA GPU for GFN use case.\n        // TODO: Would be nice to tie to HEVC/AV1 instead, but we don't know which codec the server will use for each stream\n        // It Has no effect when H264 is used, so we can set it generally here\n        if (b1440pOr4kResolution) {\n            attributes.set(\"video.videoSplitEncodeStripsPerFrame\", \"3\");\n            attributes.set(\"video.updateSplitEncodeStateDynamically\", \"1\");\n        }\n        // 4k GFN streaming modifications\n        if (b4kResolution) {\n            attributes.set(\"video.encoderPreset\", NVSC_ENC_PRESET_LOW_LATENCY_HP.toString());\n            attributes.set(\"vqos.drc.add1440pResLevelFor4kDrcTable\", \"1\");\n            // Higher QP is generally less noticeable at high resolutions, so raise the DRC thresholds.\n            attributes.set(\"vqos.drc.minAdaptiveQpThreshold\", \"40\");\n            attributes.set(\"vqos.grc.minAdaptiveQpThreshold\", \"40\");\n            attributes.set(\"vqos.drc.upperQpThreshold\", \"40\");\n            attributes.set(\"vqos.grc.upperQpThreshold\", \"40\");\n            attributes.set(\"vqos.drc.qpMaxResThresholdAdj\", \"5\");\n            attributes.set(\"vqos.grc.qpMaxResThresholdAdj\", \"5\");\n            // Be less aggressive in downgrades to help maintain 4K resolution.\n            attributes.set(\"vqos.drc.iirFilterFactor\", \"100\");\n            // Lowering the min FEC percent leaves more bandwidth available for video.\n            attributes.set(\"vqos.fec.repairMinPercent\", \"0\");\n            // Disable QPG for 4K resolution.\n            attributes.set(\"vqos.qpg.enable\", \"0\");\n        }\n    }\n    // core streaming configs\n    attributes.set(\"video.clientViewportWd\", video.clientViewportWd.toString());\n    attributes.set(\"video.clientViewportHt\", video.clientViewportHt.toString());\n    attributes.set(\"video.maxFPS\", video.maxFps.toString());\n    attributes.set(\"video.initialBitrateKbps\", video.initialBitrateKbps.toString());\n    attributes.set(\"video.initialPeakBitrateKbps\", video.initialPeakBitrateKbps.toString());\n    attributes.set(\"vqos.bw.maximumBitrateKbps\", video.maximumBitrateKbps.toString());\n    attributes.set(\"vqos.bw.minimumBitrateKbps\", video.minimumBitrateKbps.toString());\n    // OneSDK defaults to 16 ref frames, force 4 for all browser clients to keep parity with RTC SDK\n    // Using 16 ref frames effectively requires special client support which is only in our native clients\n    attributes.set(\"video.maxNumReferenceFrames\", \"4\");\n    // We will send RTP timestamps to the server so it can generate client frame numbers for us\n    attributes.set(\"video.mapRtpTimestampsToFrames\", video.mapRtpTimestampsToFrames ? \"1\" : \"0\");\n    // Force CSC mode to 3 (NVST_CSCM_FULL_YCBCR_BT709) to keep parity with RTC SDK when using OneSDK\n    attributes.set(\"video.encoderCscMode\", \"3\");\n    if (IsiPhone()) {\n        attributes.set(\"vqos.drc.stepDownMinHeight\", \"480\");\n        // Enable x16 DRC alignment on old iOS versions. This probably isn't necessary,\n        // but we can't test anything this old because QA has no phones with these versions\n        if (!IsiOSVersionAtLeast(platformDetails, 14, 5)) {\n            const aspect = (video.clientViewportWd / video.clientViewportHt) * 100;\n            attributes.set(\"vqos.drc.stepDownResolutionAlignment\", \"16\");\n            attributes.set(\"vqos.drc.stepDownTargetAspectRatioX100\", aspect.toFixed(0));\n        }\n    }\n    if (video.drcDfcEnabled !== undefined) {\n        // Configs for \"adjust for poor network condition\"\n        // https://gitlab-master.nvidia.com/nvrtcclient/nvrtcclient/-/merge_requests/1720#note_12600645\n        const enabled = video.drcDfcEnabled ? \"1\" : \"0\";\n        if (b120FpsOrHigher) {\n            attributes.set(\"vqos.dfc.adjustResAndFps\", enabled);\n        } else {\n            attributes.set(\"vqos.drc.enable\", enabled);\n        }\n    }\n    // Only allow HDR via internal settings\n    if (RagnarokSettings.hdr && video.sdrHdrMode === SdrHdrMode.HDR) {\n        attributes.set(\"video.encoderCscMode\", NVST_CSCM_LIMITED_YCBCR_BT2020.toString());\n        attributes.set(\"video.dynamicRangeMode\", \"1\");\n    }\n}\n\nfunction generateAnswerSdp(\n    remoteSdp: Sdp,\n    config: NvstConfig,\n    platformDetails: PlatformDetails\n): Sdp {\n    const localSdp: Sdp = {\n        origin: remoteSdp.origin,\n        time: remoteSdp.time,\n        generalAttributes: new Map<string, string>(),\n        media: []\n    };\n\n    localSdp.generalAttributes.set(\n        \"general.clientSupportsIntraRefresh\",\n        !IsSafari(platformDetails) ? \"1\" : \"0\"\n    );\n    localSdp.generalAttributes.set(\n        \"general.clientCapture\",\n        remoteSdp.generalAttributes.get(\"general.clientCapture\") ?? \"0\"\n    );\n    localSdp.generalAttributes.set(\"runtime.serverTraceCapture\", NVST_STC_QOS_STATS.toString());\n\n    let videoIdx = 0;\n    for (const stream of remoteSdp.media) {\n        const attributes = new Map<string, string>();\n        // The server can send multiple video streams. Set the config for all video streams sent.\n        if (stream.mediaType === MediaType.VIDEO && videoIdx < config.video.length) {\n            setVideoProfile(attributes, config.video[videoIdx], platformDetails);\n            videoIdx++;\n        }\n        localSdp.media.push({\n            mediaType: stream.mediaType,\n            msid: stream.msid,\n            attributes\n        });\n    }\n    return localSdp;\n}\n\nfunction updateConfig(config: NvstConfig, sdp: Sdp): boolean {\n    let success = true;\n    const getNumber = (attributes: AttributeMap, name: string): number => {\n        const value = attributes.get(name);\n        if (value) {\n            const num = parseInt(value);\n            if (!Number.isNaN(num)) {\n                return num;\n            }\n        }\n        Log.e(\"{eb7c2d0}\", \"{0a60213}\", name);\n        success = false;\n        return 0;\n    };\n    const getBool = (attributes: AttributeMap, name: string): boolean => {\n        return getNumber(attributes, name) > 0;\n    };\n\n    config.clientCapture = getNumber(sdp.generalAttributes, \"general.clientCapture\");\n\n    // In situations where multiple video streams exist, update config for all streams\n    let videoIdx = 0;\n    for (const stream of sdp.media) {\n        if (stream.mediaType === MediaType.VIDEO && videoIdx < config.video.length) {\n            const video = config.video[videoIdx];\n            const attributes = stream.attributes;\n            video.clientViewportWd = getNumber(attributes, \"video.clientViewportWd\");\n            video.clientViewportHt = getNumber(attributes, \"video.clientViewportHt\");\n            video.maxFps = getNumber(attributes, \"video.maxFPS\");\n            video.initialBitrateKbps = getNumber(attributes, \"video.initialBitrateKbps\");\n            video.initialPeakBitrateKbps = getNumber(attributes, \"video.initialPeakBitrateKbps\");\n            video.maximumBitrateKbps = getNumber(attributes, \"vqos.bw.maximumBitrateKbps\");\n            video.minimumBitrateKbps = getNumber(attributes, \"vqos.bw.minimumBitrateKbps\");\n            video.mapRtpTimestampsToFrames = getBool(attributes, \"video.mapRtpTimestampsToFrames\");\n            videoIdx++;\n        }\n    }\n    return success;\n}\n\nfunction getMediaConfig(sdp: Sdp, mediaType?: MediaType, index?: number): AttributeMap | undefined {\n    if (mediaType === undefined) {\n        return sdp.generalAttributes;\n    } else {\n        return sdp.media.filter(x => x.mediaType === mediaType)[index ?? 0]?.attributes;\n    }\n}\n\nfunction getRemoteConfigOverride(): string {\n    return RagnarokSettings.ragnarokConfig.nvscClientConfigFields?.join(\"\\n\") ?? \"\";\n}\n\nfunction serializeAnswer(localSdp: Sdp, remoteSdp: Sdp): string {\n    let answer = `v=0\no=${localSdp.origin}\ns=-\nt=${localSdp.time}\n`;\n    const addConfigs = (localConfigs: AttributeMap, remoteConfigs: AttributeMap) => {\n        for (const [name, value] of localConfigs) {\n            if (value !== remoteConfigs.get(name)) {\n                answer += `a=${name}:${value}\\n`;\n            }\n        }\n    };\n    addConfigs(localSdp.generalAttributes, remoteSdp.generalAttributes);\n    for (const stream of localSdp.media) {\n        answer += `m=${stream.mediaType} 0 RTP/AVP\\n`;\n        answer += `a=msid:${stream.msid}\\n`;\n        const remoteMedia = remoteSdp.media.find(x => x.msid === stream.msid);\n        addConfigs(stream.attributes, remoteMedia!.attributes);\n    }\n    return answer;\n}\n","import {\n    WebSocketMsg,\n    WebSocketImplCallbacks,\n    LogCallbackType,\n    WebSocketHandler\n} from \"./rinterfaces\";\n\nexport class WebSocketImpl {\n    private ws?: WebSocket;\n    private wsHadError: boolean = false;\n    private serverSupportsAck = false;\n    private cacheMsgsForAck: WebSocketMsg[] = [];\n    private wsQueue: WebSocketMsg[] = []; // Queue for data to be sent when the WebSocket reconnects.\n    private wsLogger: LogCallbackType;\n    private wsException: LogCallbackType;\n    private wsHandler: WebSocketHandler;\n    private heartBeatTimeoutId: number = 0;\n    private maxReceivedAckId: number = 0;\n    private url: string = \"\";\n    constructor(\n        private sessionId: string,\n        private accessToken: string,\n        webSocketImplCallbacks: WebSocketImplCallbacks\n    ) {\n        this.wsLogger = webSocketImplCallbacks.logCallback.info;\n        this.wsException = webSocketImplCallbacks.logCallback.exception;\n        this.wsHandler = webSocketImplCallbacks.wsHandler;\n    }\n\n    public initialize(\n        url: string,\n        maxReceivedAckId: number,\n        serverSupportsAck: boolean,\n        reconnect: boolean = false\n    ) {\n        this.url = url;\n        this.maxReceivedAckId = maxReceivedAckId;\n        this.serverSupportsAck = serverSupportsAck;\n        this.createWebSocket(reconnect);\n        this.wsLogger(\"{f4b05a4}\");\n    }\n\n    public uninitialize(closeCode?: number) {\n        this.maxReceivedAckId = 0;\n        this.serverSupportsAck = false;\n        this.cacheMsgsForAck = [];\n        this.wsQueue = [];\n        this.clearHeartBeatTimeout();\n        this.ws?.close(closeCode);\n        this.wsLogger(\"{986b258}\"+ closeCode);\n    }\n\n    public reconnect() {\n        this.createWebSocket(true);\n    }\n\n    private checkWebsocketConnectionPeriodically() {\n        this.wsLogger(\"{6c3505a}\"+ this.ws?.readyState);\n        if (!this.ws) {\n            this.createWebSocket(true);\n        }\n        this.setHeartBeatTimeout();\n    }\n\n    private clearHeartBeatTimeout() {\n        if (this.heartBeatTimeoutId !== 0) {\n            self.clearTimeout(this.heartBeatTimeoutId);\n            this.heartBeatTimeoutId = 0;\n        }\n    }\n\n    private setHeartBeatTimeout() {\n        this.clearHeartBeatTimeout();\n        this.heartBeatTimeoutId = self.setTimeout(\n            () => this.checkWebsocketConnectionPeriodically(),\n            3000\n        );\n    }\n\n    private deleteFromAckCache(ack: number) {\n        for (let i = this.cacheMsgsForAck.length - 1; i >= 0; i--) {\n            if (this.cacheMsgsForAck[i].ackid! <= ack) {\n                //this.wsLogger(\"{72e9db8}\"+ this.cacheMsgsForAck[i].ackid!);\n                this.cacheMsgsForAck.splice(i, 1);\n            }\n        }\n    }\n\n    private addInAckCache(data: WebSocketMsg) {\n        if (data.ackid !== undefined) {\n            //this.wsLogger(\"{8fae9a4}\"+ data.ackid);\n            this.cacheMsgsForAck.push(data);\n        }\n    }\n\n    private sendOnWsReliablyIfNeeded(data: WebSocketMsg) {\n        if (data.ackid !== undefined && this.serverSupportsAck) {\n            this.addInAckCache(data);\n        }\n        if (this.ws) {\n            if (data.stats) {\n                this.ws.send(data.stats);\n            } else {\n                this.ws.send(JSON.stringify(data));\n            }\n        }\n    }\n\n    public send(data: WebSocketMsg) {\n        if (!this.serverSupportsAck && !this.ws) {\n            this.createWebSocket(true);\n        }\n\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            this.sendOnWsReliablyIfNeeded(data);\n        } else {\n            this.wsQueue.push(data);\n        }\n    }\n\n    private sendAckToServer() {\n        if (this.ws) {\n            let ackmsg: WebSocketMsg = {\n                ack: this.maxReceivedAckId\n            };\n            let ack = JSON.stringify(ackmsg);\n            this.wsLogger(\"{903be10}\"+ ack);\n            this.ws.send(ack);\n        }\n    }\n\n    public createWebSocket(reconnect: boolean = false) {\n        try {\n            let header;\n            if (this.url.includes(\"wss\")) {\n                header = \"x-nv-sessionid.\" + this.sessionId;\n\n                if (this.accessToken) {\n                    // Client wants to pass JWT to the reverse proxy here. Since there is no browser option\n                    // for adding a websocket auth header or custom header, we concatenate the token on the\n                    // session value. The structure will be:\n                    //      x-nv-sessionid.<sessionid>-Authorization.Bearer-<JWT>\n                    header += \"-Authorization.Bearer-\" + this.accessToken;\n                }\n            }\n            let websocketUrl = this.url;\n            if (reconnect) {\n                websocketUrl += \"&reconnect=1\";\n            }\n            let localWs = new WebSocket(websocketUrl, header);\n            localWs.onopen = event => {\n                this.wsLogger(\"{aaf44dc}\");\n                this.wsHandler.openHandler();\n                if (localWs === this.ws) {\n                    for (const pendingMessage of this.cacheMsgsForAck) {\n                        if (pendingMessage.stats) {\n                            localWs.send(pendingMessage.stats);\n                        } else {\n                            localWs.send(JSON.stringify(pendingMessage));\n                        }\n                    }\n                    for (const pendingMessage of this.wsQueue) {\n                        this.sendOnWsReliablyIfNeeded(pendingMessage);\n                    }\n                    this.wsQueue = [];\n                }\n            };\n            localWs.onclose = event => {\n                this.wsLogger(\"{7a09ad8}\");\n                this.wsHandler.closeHandler({\n                    error: this.wsHadError,\n                    code: event.code,\n                    reason: event.reason,\n                    wasClean: event.wasClean\n                });\n                if (localWs === this.ws) {\n                    this.ws = undefined;\n                }\n                this.wsHadError = false;\n            };\n            localWs.onerror = event => {\n                this.wsLogger(\"{418a180}\");\n                this.wsHadError = true;\n            };\n            localWs.onmessage = event => {\n                let wsMsg = <WebSocketMsg>JSON.parse(event.data); //@todo do we need try-catch?\n                if (this.serverSupportsAck) {\n                    this.setHeartBeatTimeout();\n                }\n                if (wsMsg.ackid !== undefined && !this.serverSupportsAck) {\n                    this.serverSupportsAck = true;\n                    this.wsLogger(\"{523f5b9}\");\n                    this.setHeartBeatTimeout();\n                }\n                if (wsMsg.hb) {\n                    // don't pass heartbeat to main thread\n                    return;\n                }\n\n                if (this.serverSupportsAck) {\n                    if (wsMsg.ack !== undefined) {\n                        this.deleteFromAckCache(wsMsg.ack);\n                    }\n                    // check if this msg need ack\n                    if (wsMsg.ackid !== undefined) {\n                        //check for a reapeated msg and ignore if true\n                        if (this.maxReceivedAckId < wsMsg.ackid) {\n                            this.wsHandler.messageHandler(wsMsg);\n                            this.maxReceivedAckId = wsMsg.ackid;\n                        }\n                        this.sendAckToServer();\n                    } else if (wsMsg.ack === undefined) {\n                        //this msg don;t need ack\n                        // only pass non-ack msgs to main thread\n                        this.wsHandler.messageHandler(wsMsg);\n                    }\n                } else {\n                    this.wsHandler.messageHandler(wsMsg);\n                }\n            };\n            this.ws = localWs;\n        } catch (exp) {\n            this.ws = undefined;\n            this.wsException(\"WebSocket creation exception: \" + exp);\n        }\n    }\n}\n","import { NvscStreamCaptureModeFlags, NvstConfig } from \"../nvstconfig\";\nimport { setUint8Array, Download } from \"../util/utils\";\nimport { Log } from \"../dependencies\";\nimport { SdpCodecType } from \"../util/devicecapabilities\";\n\nconst LOGTAG = \"bitstreamdump\";\n\nconst VIDEO_BITSTREAM_MAX_SIZE = 1024 * 1024 * 200;\n\ndeclare interface RTCInsertableStreams {\n    readable: ReadableStream;\n    writable: WritableStream;\n}\n\ndeclare interface RTCRtpReceiver extends globalThis.RTCRtpReceiver {\n    createEncodedStreams?(): RTCInsertableStreams;\n}\n\ndeclare interface RTCRtpSender extends globalThis.RTCRtpSender {\n    createEncodedStreams?(): RTCInsertableStreams;\n}\n\ndeclare const enum RTCEncodedVideoFrameType {\n    \"empty\",\n    \"key\",\n    \"delta\"\n}\n\ndeclare interface RTCEncodedVideoFrameMetadata {\n    frameId: number;\n    dependencies: number[];\n    width: number;\n    height: number;\n    spatialIndex: number;\n    temporalIndex: number;\n    synchronizationSource: number;\n    contributingSources: number[];\n}\n\ndeclare interface RTCEncodedVideoFrame {\n    readonly type: RTCEncodedVideoFrameType;\n    readonly timestamp: number;\n    data: ArrayBuffer;\n    getMetadata: () => RTCEncodedVideoFrameMetadata;\n}\n\ndeclare interface RTCEncodedAudioFrameMetadata {\n    synchronizationSource: number;\n    contributingSources: number[];\n}\n\ndeclare interface RTCEncodedAudioFrame {\n    readonly timestamp: number;\n\n    data: ArrayBuffer;\n    getMetadata: () => RTCEncodedAudioFrameMetadata;\n}\n\ndeclare interface RTCConfiguration extends globalThis.RTCConfiguration {\n    encodedInsertableStreams?: boolean;\n}\n\n// These definitions are for the newer version of RTC insertable streams: RTC encoded transforms:\n// https://w3c.github.io/webrtc-encoded-transform/\n// These aren't yet supported in browsers\n\n// declare interface SFrameTransform {}\n// declare interface RTCRtpScriptTransform {}\n\n// declare var RTCRtpScriptTransform: {\n//     new (worker: Worker, options?: any, transfer?: any[]): RTCRtpScriptTransform;\n// };\n\n// declare interface RTCTransformEvent extends Event {\n//     readonly transformer: RTCRtpScriptTransformer;\n// }\n\n// declare interface RTCRtpReceiver extends globalThis.RTCRtpReceiver {\n//     transform?: RTCRtpTransform;\n// }\n\n// declare interface RTCRtpSender extends globalThis.RTCRtpSender {\n//     transform?: RTCRtpTransform;\n// }\n\n// type RTCRtpTransform = SFrameTransform | RTCRtpScriptTransform;\n\n// declare interface Worker extends globalThis.Worker {\n//     onrtctransform: ((event: RTCTransformEvent) => void) | null | undefined;\n// }\n\n// declare interface RTCRtpScriptTransformer {\n//     readonly readable: ReadableStream;\n//     readonly writable: WritableStream;\n//     readonly options: any;\n// }\n\ninterface InsertedStream {\n    data: DataView;\n    size: number;\n    namePrefix: string;\n    extension: string;\n    isFull: boolean;\n}\n\nfunction getVideoCodecExtension(codec: SdpCodecType): string {\n    switch (codec) {\n        case SdpCodecType.H264:\n            return \"h264\";\n        case SdpCodecType.H265:\n            return \"hevc\"; // For parity with native\n        case SdpCodecType.AV1:\n            return \"av1\";\n        default:\n            return \"video\";\n    }\n}\n\nexport class BitstreamDump {\n    private streams: InsertedStream[] = [];\n\n    // We shouldn't really take video codec in here since it could theoretically be different for different\n    // video streams, but this is just a debugging class, so leave it for now\n    constructor(private nvstConfig: NvstConfig, private videoCodec: SdpCodecType) {}\n\n    public maybeUpdateRtcConfig(config: RTCConfiguration): void {\n        if (this.nvstConfig.clientCapture) {\n            config.encodedInsertableStreams = true;\n        }\n    }\n\n    public start(peerConnection: RTCPeerConnection): void {\n        if (this.nvstConfig.clientCapture & NvscStreamCaptureModeFlags.VIDEO) {\n            const videoTransceiver = peerConnection\n                .getTransceivers()\n                .find(x => x.receiver?.track?.kind === \"video\");\n            if (videoTransceiver) {\n                const stream: InsertedStream = {\n                    data: new DataView(new ArrayBuffer(VIDEO_BITSTREAM_MAX_SIZE)),\n                    size: 0,\n                    namePrefix: \"video\",\n                    extension: getVideoCodecExtension(this.videoCodec),\n                    isFull: false\n                };\n                this.setupStream(videoTransceiver.receiver, stream);\n            }\n        }\n        // TODO: Audio and voice capture\n    }\n\n    public save(): void {\n        for (const stream of this.streams) {\n            const now = new Date().toISOString();\n            const fileName = `ragnarok-${stream.namePrefix}-${now}.${stream.extension}`;\n            const content = [new DataView(stream.data.buffer, 0, stream.size)];\n            if (Download(content, fileName, \"text/plain\")) {\n                Log.i(\"{d7392d2}\", \"{4b3378a}\", fileName);\n            }\n        }\n        this.streams = [];\n    }\n\n    private setupStream(target: RTCRtpReceiver | RTCRtpSender, stream: InsertedStream): void {\n        const { readable, writable } = target.createEncodedStreams!();\n        const transform = new TransformStream<\n            RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n            RTCEncodedVideoFrame | RTCEncodedAudioFrame\n        >({\n            start: () => {\n                Log.i(\"{d7392d2}\", \"{b96b3ec}\", stream.namePrefix);\n            },\n            flush: () => {},\n            transform: (encodedFrame, controller) => {\n                if (!stream.isFull) {\n                    const from = new Uint8Array(encodedFrame.data);\n                    if (stream.size + from.byteLength <= stream.data.byteLength) {\n                        setUint8Array(stream.data, stream.size, from);\n                        stream.size += from.byteLength;\n                    } else {\n                        stream.isFull = true;\n                        Log.w(\"{d7392d2}\", \"{f35b2f4}\", stream.size, stream.namePrefix);\n                    }\n                }\n                controller.enqueue(encodedFrame);\n            }\n        });\n        readable.pipeThrough(transform).pipeTo(writable);\n\n        this.streams.push(stream);\n    }\n}\n","import {\n    IEventEmitter,\n    TelemetryHttpEvent,\n    TelemetryEventPayload,\n    GSModuleName,\n    HTTPVerb,\n    IPVersion,\n    GS_HttpCallResultDef,\n    GS_ExceptionInfoDef,\n    GS_DebugInfoDef,\n    GS_ClientMetricEventDef,\n    GS_Sleep_EventDef,\n    GS_FeatureDef,\n    FeatureSupportStatus,\n    Log\n} from \"../dependencies\";\nimport {\n    RagnarokTelemetryConfig,\n    Streamer_StartDef,\n    Streamer_InputDeviceDef,\n    InputDeviceType,\n    StreamExitEventData\n} from \"./telemetryinterfaces\";\nimport { EVENTS } from \"../interfaces\";\nimport { TelemetryEventProcessor } from \"./telemetryeventprocessor\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { GetCodecType, ToBooleanType, ToResumeType } from \"../util/utils\";\nimport { clientShutDownCallbackType } from \"../interfaces\";\nimport { NetworkDetector } from \"../util/networkdetector\";\nconst LOGTAG = \"telemetryhandler\";\nexport class TelemetryHandler {\n    private sessionId: string = \"\";\n    private subSessionId: string = \"\";\n    private cmsId: string = \"\";\n    private eventEmitter: IEventEmitter;\n    private totalGamepadEventsCount: number = 0;\n    private telemetryEventProcessor: TelemetryEventProcessor;\n    private exceptionCounts: Map<string, number> = new Map<string, number>();\n    private totalExceptionCount: number = 0;\n    private clientShutDownCallback?: clientShutDownCallbackType;\n\n    constructor(_eventEmitter: IEventEmitter, telemetryEventProcessor: TelemetryEventProcessor) {\n        this.eventEmitter = _eventEmitter;\n        this.telemetryEventProcessor = telemetryEventProcessor;\n        this.telemetryEventProcessor.setExceptionHandler(this.emitExceptionEvent.bind(this));\n    }\n\n    public setClientShutDownCallback(clientShutDownCallback?: clientShutDownCallbackType) {\n        this.clientShutDownCallback = clientShutDownCallback;\n    }\n\n    public dispatchEvent(event: TelemetryEventPayload) {\n        if (this.eventEmitter.hasListener(EVENTS.TELEMETRY_EVENT)) {\n            // Emit the event to the upper layer\n            this.eventEmitter.emit(EVENTS.TELEMETRY_EVENT, event);\n        } else {\n            this.telemetryEventProcessor.sendTelemetryEvent(event);\n        }\n    }\n\n    public emitLaunchEvent(\n        sessionId: string,\n        subSessionId: string,\n        isResume: boolean,\n        zoneAddress: string,\n        launchDuration: number,\n        result: string,\n        codec: string,\n        cmsId: string,\n        networkSessionId: string\n    ) {\n        const launchAnalyticsEvent: Streamer_StartDef = new Streamer_StartDef({\n            zoneAddress: zoneAddress,\n            networkSessionId: networkSessionId,\n            sessionId: sessionId,\n            subSessionId: subSessionId,\n            resumeType: ToResumeType(isResume),\n            overrideConfigType: RagnarokSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: RagnarokSettings.remoteOverrideInfo.version,\n            result: result,\n            codec: GetCodecType(codec),\n            ipVersion: IPVersion.UNKNOWN,\n            launchDuration: Math.round(launchDuration),\n            networkType: NetworkDetector.getNetworkType(),\n            streamingProfileGuid: this.telemetryEventProcessor.getStreamingProfileGuid(),\n            systemInfoGuid: this.telemetryEventProcessor.getSystemInfoGuid(),\n            cmsId: cmsId\n        });\n        this.dispatchEvent({\n            name: launchAnalyticsEvent.name,\n            gdprLevel: launchAnalyticsEvent.gdprLevel,\n            parameters: launchAnalyticsEvent.parameters,\n            ts: launchAnalyticsEvent.ts,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    /**\n     * Exit event handling follows the below precedence:\n     * 1. If the client has registered for ShutDownCallback, we call it with the eventPayload\n     * 2. If ShutDownCallback not available or fails to send the evnet, send the Exit event using beacon API\n     */\n    private processExitEvent(eventPayload: TelemetryEventPayload) {\n        let eventSent = false;\n        if (this.clientShutDownCallback) {\n            eventSent = this.clientShutDownCallback(eventPayload);\n            Log.d(\"{9838627}\", \"{caf81d9}\", eventSent);\n        }\n        if (!eventSent) {\n            Log.d(\"{9838627}\", \"{e939db1}\");\n            this.telemetryEventProcessor.sendExitEvent(eventPayload);\n        }\n    }\n\n    public sendExitAnalyticsEvent(exitEventData: StreamExitEventData, pollingDone: boolean) {\n        let eventPayload: TelemetryEventPayload;\n        eventPayload = this.telemetryEventProcessor.getStreamerExitEventPayload(exitEventData);\n        this.processExitEvent(eventPayload);\n        this.telemetryEventProcessor.clearExitEventStore(pollingDone);\n    }\n\n    // We cache the exit events periodically. If the client has opted to handle exit events (registered clientShutdownCallback),\n    // we should relay these back to the client. If not we send them from within\n    public sendCachedExitEvent(pollingDone: boolean): Promise<void> {\n        if (this.clientShutDownCallback) {\n            Log.d(\"{9838627}\", \"{c7dcc4e}\");\n            return this.telemetryEventProcessor\n                .getCachedExitEvents()\n                .then(exitEventPayloads => {\n                    for (const payload of exitEventPayloads) {\n                        this.processExitEvent(payload);\n                    }\n                    this.telemetryEventProcessor.clearExitEventStore(pollingDone);\n                })\n                .catch(() => {\n                    Log.d(\"{9838627}\", \"{41cf828}\");\n                });\n        } else {\n            Log.d(\"{9838627}\", \"{77df598}\");\n            return this.telemetryEventProcessor.sendCachedExitEvent(pollingDone);\n        }\n    }\n\n    public emitExceptionEvent(\n        error: Error | DOMException | undefined,\n        msg: string,\n        file: string,\n        lineno: number,\n        colno: number,\n        handled: boolean,\n        category?: string\n    ) {\n        if (!this.canSendExceptionEvent(msg)) {\n            return;\n        }\n        if (error instanceof DOMException) {\n            error = { name: error.name, message: error.message };\n        }\n\n        const event = new GS_ExceptionInfoDef({\n            filename: file,\n            lineno: lineno,\n            stacktrace: error?.stack ?? \"\",\n            colno: colno,\n            handled: ToBooleanType(handled),\n            category: category ?? \"\",\n            message: msg,\n            moduleName: GSModuleName.RAGNAROK,\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            parameters: event.parameters,\n            ts: event.ts,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitHttpEvent(event: TelemetryHttpEvent) {\n        const gsHttpEvent: GS_HttpCallResultDef = new GS_HttpCallResultDef({\n            callDuration: event.callDuration,\n            verb: <HTTPVerb>event.verb,\n            sessionId: event.sessionId,\n            subSessionId: event.subSessionId,\n            serverId: event.serverId,\n            url: event.url,\n            overrideConfigType: RagnarokSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: RagnarokSettings.remoteOverrideInfo.version,\n            requestStatusCode: event.statusCode,\n            requestId: event.requestId,\n            networkType: NetworkDetector.getNetworkType(),\n            statusCode: event.statusCode,\n            cmsId: String(this.cmsId),\n            moduleName: GSModuleName.RAGNAROK\n        });\n        this.dispatchEvent({\n            name: gsHttpEvent.name,\n            gdprLevel: gsHttpEvent.gdprLevel,\n            parameters: gsHttpEvent.parameters,\n            ts: gsHttpEvent.ts,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitGsFeatureEvent(\n        featureName: string,\n        supported: boolean,\n        defaultEnabled: boolean,\n        enabled: boolean,\n        reason: string\n    ) {\n        const event: GS_FeatureDef = new GS_FeatureDef({\n            featureName: featureName,\n            supported: supported\n                ? FeatureSupportStatus.SUPPORTED\n                : FeatureSupportStatus.UNSUPPORTED,\n            defaultEnabled: ToBooleanType(defaultEnabled),\n            enabled: ToBooleanType(enabled),\n            reason: reason,\n            moduleName: GSModuleName.RAGNAROK,\n            networkType: NetworkDetector.getNetworkType(),\n            overrideConfigType: RagnarokSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: RagnarokSettings.remoteOverrideInfo.version,\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            parameters: event.parameters,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitDebugEvent(\n        key1?: string,\n        key2?: string,\n        key3?: string,\n        key4?: string,\n        key5?: string\n    ) {\n        const event: GS_DebugInfoDef = new GS_DebugInfoDef({\n            key1: key1 ?? \"\",\n            key2: key2 ?? \"\",\n            key3: key3 ?? \"\",\n            key4: key4 ?? \"\",\n            key5: key5 ?? \"\",\n            moduleName: GSModuleName.RAGNAROK,\n            networkType: NetworkDetector.getNetworkType(),\n            overrideConfigType: RagnarokSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: RagnarokSettings.remoteOverrideInfo.version,\n            cmsId: String(this.cmsId),\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            parameters: event.parameters,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitMetricEvent(\n        metricName: string,\n        valueString: string,\n        valueDouble: number,\n        valueInt1: number,\n        valueInt2: number,\n        valueInt3: number\n    ) {\n        const event: GS_ClientMetricEventDef = new GS_ClientMetricEventDef({\n            metricName: metricName,\n            moduleName: GSModuleName.RAGNAROK,\n            valueInt1: valueInt1,\n            valueInt2: valueInt2,\n            valueInt3: valueInt3,\n            valueString: valueString,\n            valueDouble: valueDouble,\n            networkType: NetworkDetector.getNetworkType(),\n            cmsId: String(this.cmsId),\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            parameters: event.parameters,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitGamepadEvent(\n        gamepadName: string,\n        vid: string,\n        pid: string,\n        index: number,\n        hapticsSupported: boolean,\n        hapticsFeedbackCount: number,\n        primary: boolean,\n        state: number,\n        eventMap: string\n    ) {\n        const MAX_GAMEPAD_EVENTS_TOTAL: number = 50;\n\n        if (this.totalGamepadEventsCount >= MAX_GAMEPAD_EVENTS_TOTAL) {\n            return;\n        }\n        this.totalGamepadEventsCount++;\n        const event: Streamer_InputDeviceDef = new Streamer_InputDeviceDef({\n            deviceName: gamepadName,\n            deviceType: InputDeviceType.GAMEPAD,\n            vendorId: vid,\n            productId: pid,\n            deviceIndex: index,\n            reportIndex: primary ? 0 : index,\n            hapticsSupported: ToBooleanType(hapticsSupported),\n            hapticsFeedbackCount: hapticsFeedbackCount,\n            state: state,\n            eventMapReceived: eventMap,\n            eventMapProcessed: eventMap,\n            sessionId: this.sessionId,\n            subSessionId: this.subSessionId,\n            cmsId: String(this.cmsId)\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            parameters: event.parameters,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public emitSleepEvent(\n        sleepTime: number,\n        timeToSleep: number,\n        sleepSequence: string,\n        error: string,\n        sessionId: string,\n        subSessionId: string\n    ) {\n        const event: GS_Sleep_EventDef = new GS_Sleep_EventDef({\n            eventSequence: sleepSequence,\n            sleepTime: sleepTime,\n            error: error,\n            timeToSleep: timeToSleep,\n            moduleName: GSModuleName.RAGNAROK,\n            cmsId: String(this.cmsId),\n            sessionId: sessionId,\n            subSessionId: subSessionId\n        });\n        this.dispatchEvent({\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            ts: event.ts,\n            parameters: event.parameters,\n            clientConfig: RagnarokTelemetryConfig\n        });\n    }\n\n    public setSessionId(sessionId: string) {\n        this.sessionId = sessionId;\n        this.totalGamepadEventsCount = 0;\n    }\n\n    public setSubSessionId(subSessionId: string) {\n        this.subSessionId = subSessionId;\n        this.exceptionCounts.clear();\n        this.totalExceptionCount = 0;\n    }\n\n    public setGameDetails(cmsId: string, name: string) {\n        this.cmsId = cmsId;\n        this.telemetryEventProcessor.setGameDetails(cmsId, name);\n    }\n\n    private canSendExceptionEvent(message: string) {\n        const MAX_EXCEPTIONS_PER_MSG: number = 10;\n        const MAX_EXCEPTIONS_TOTAL: number = 50;\n\n        if (this.totalExceptionCount >= MAX_EXCEPTIONS_TOTAL) {\n            return false;\n        }\n        const count = this.exceptionCounts.get(message) ?? 0;\n        if (count >= MAX_EXCEPTIONS_PER_MSG) {\n            return false;\n        }\n        this.totalExceptionCount++;\n        this.exceptionCounts.set(message, count + 1);\n        return true;\n    }\n}\n","import { NetworkTypeEnum, Log } from \"../dependencies\";\n\nconst LOGTAG = \"NetworkDetector\";\n\ndeclare interface NetworkUpdateCallback {\n    (network: NetworkTypeEnum): void;\n}\n\ndeclare interface LGNetworkEvent extends Event {\n    detail: {\n        state: string;\n    };\n}\n\nclass NetworkDetectorImpl {\n    private networkTypeMap: Map<string, NetworkTypeEnum> = new Map<string, NetworkTypeEnum>([\n        [\"Ethernet\", NetworkTypeEnum.ETHERNET],\n        [\"5GHz_WiFi\", NetworkTypeEnum.WIFI_5_0],\n        [\"2.4GHz_WiFi\", NetworkTypeEnum.WIFI_2_4],\n        [\"Others\", NetworkTypeEnum.OTHER],\n        [\"disconnected\", NetworkTypeEnum.UNKNOWN]\n    ]);\n    private network: NetworkTypeEnum = NetworkTypeEnum.UNKNOWN;\n    private networkUpdateCallbacks: NetworkUpdateCallback[] = [];\n\n    constructor() {\n        window.addEventListener(\"GFNNetworkInfo\", (evt: Event) => {\n            const e = evt as LGNetworkEvent;\n            Log.d(\"{aac1655}\", \"{2925c9d}\", e.detail.state);\n            this.updateNetwork(e.detail.state);\n        });\n    }\n\n    // Invoke callbacks to update network status\n    private updateNetwork(net: string) {\n        const networkType = this.networkTypeMap.get(net);\n        if (networkType) {\n            this.network = networkType;\n            for (const callback of this.networkUpdateCallbacks) {\n                callback(this.getNetworkType());\n            }\n        } else {\n            Log.d(\"{aac1655}\", \"{ed2fb91}\", net);\n        }\n    }\n\n    public registerNetworkCallback(callback: NetworkUpdateCallback) {\n        this.networkUpdateCallbacks.push(callback);\n    }\n\n    public unregisterNetworkCallback(callback: NetworkUpdateCallback) {\n        const idx = this.networkUpdateCallbacks.findIndex(e => e == callback);\n        if (idx !== -1) {\n            this.networkUpdateCallbacks.splice(idx, 1);\n        }\n    }\n\n    public getNetworkType(): NetworkTypeEnum {\n        return this.network;\n    }\n}\n\nexport const NetworkDetector = new NetworkDetectorImpl();\n","//import RagnarokSchema from \"./EventsSchema-Ragnarok.json\";\n\nimport {\n    GdprLevel,\n    ResumeType,\n    OverrideConfigTypeEnum,\n    CodecType,\n    IPVersion,\n    NetworkTypeEnum,\n    BooleanType,\n    TelemetryEventIds,\n    TelemetryEventBase,\n    ClientTelemetryConfig,\n    TelemetryEventPayload\n} from \"../dependencies\";\n\n// This config needs to be fetched from EventsSchema-Ragnarok.json\nexport const RagnarokTelemetryConfig: ClientTelemetryConfig = {\n    clientName: \"Ragnarok\",\n    clientId: \"62677554106929725\",\n    eventSchemaVer: \"3.0\"\n};\n\nexport declare const enum InputDeviceType {\n    UNKNOWN = \"UNKNOWN\",\n    GAMEPAD = \"GAMEPAD\",\n    KEYBOARD = \"KEYBOARD\",\n    MOUSE = \"MOUSE\",\n    TOUCH_INPUT = \"TOUCH_INPUT\"\n}\n\nexport declare const enum HotPlugType {\n    PLUG = \"PLUG\",\n    UNPLUG = \"UNPLUG\"\n}\n\nexport declare const enum HdrStatus {\n    UNKNOWN = \"UNKNOWN\",\n    SUPPORTED = \"SUPPORTED\",\n    SUPPORTED_DISABLED = \"SUPPORTED_DISABLED\",\n    UNSUPPORTED = \"UNSUPPORTED\"\n}\n\nexport declare interface Resolution {\n    refreshRate: number;\n    width: number;\n    height: number;\n}\n/////// Event interface Declarations ////////\nexport declare interface Streamer_Start {\n    zoneAddress: string;\n    networkSessionId: string;\n    sessionId: string;\n    subSessionId: string;\n    resumeType: ResumeType;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    result: string;\n    codec: CodecType;\n    ipVersion: IPVersion;\n    launchDuration: number;\n    networkType: NetworkTypeEnum;\n    streamingProfileGuid: string;\n    systemInfoGuid: string;\n    cmsId: string;\n}\n\nexport declare interface Streamer_Exit {\n    zoneAddress: string;\n    networkSessionId: string;\n    sessionId: string;\n    subSessionId: string;\n    resumeType: ResumeType;\n    overrideConfigType: OverrideConfigTypeEnum;\n    overrideConfigVersion: string;\n    exitReason: string;\n    result: string;\n    frameCount: number;\n    codec: CodecType;\n    ipVersion: IPVersion;\n    streamDuration: number;\n    networkType: NetworkTypeEnum;\n    streamingProfileGuid: string;\n    systemInfoGuid: string;\n    cmsId: string;\n}\n\nexport declare interface Streamer_InputDevice {\n    deviceName: string;\n    deviceType: InputDeviceType;\n    vendorId: string;\n    productId: string;\n    deviceIndex: number;\n    reportIndex: number;\n    hapticsSupported: BooleanType;\n    hapticsFeedbackCount: number;\n    state: number;\n    eventMapReceived: string;\n    eventMapProcessed: string;\n    sessionId: string;\n    subSessionId: string;\n    cmsId: string;\n}\n\nexport declare interface Streamer_HotPlugEvent {\n    deviceType: InputDeviceType;\n    deviceIndex: number;\n    reportIndex: number;\n    bitmap: number;\n    action: HotPlugType;\n    sessionId: string;\n    subSessionId: string;\n}\n\nexport declare interface Streamer_DecoderCaps {\n    codec: CodecType;\n    resolutions: Resolution[];\n    maxBitrateMbps: number;\n    profile: string;\n    level: string;\n    systemInfoGuid: string;\n    isHardwareCodec: BooleanType;\n}\n\nexport declare interface Streamer_DisplayCaps {\n    displayModes: Resolution[];\n    hdrStatus: HdrStatus;\n    systemInfoGuid: String;\n}\n\nexport declare interface Streamer_EncoderCaps {\n    codec: CodecType;\n    resolutions: Resolution[];\n    maxBitrateMbps: number;\n    profile: String;\n    level: String;\n    systemInfoGuid: String;\n}\n\n/////// Event Type Declarations ////////\nexport const EventTypes = {\n    Streamer_Start: {\n        name: \"Streamer_Start\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_Exit: {\n        name: \"Streamer_Exit\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_InputDevice: {\n        name: \"Streamer_InputDevice\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_HotPlugEvent: {\n        name: \"Streamer_HotPlugEvent\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_DecoderCaps: {\n        name: \"Streamer_DecoderCaps\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_DisplayCaps: {\n        name: \"Streamer_DisplayCaps\",\n        gdprLevel: GdprLevel.Functional\n    },\n    Streamer_EncoderCaps: {\n        name: \"Streamer_EncoderCaps\",\n        gdprLevel: GdprLevel.Functional\n    }\n};\n\n/////// Event Class Declarations ////////\nexport class Streamer_StartDef extends TelemetryEventBase<Streamer_Start> {\n    readonly name: string = EventTypes.Streamer_Start.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_Start.gdprLevel;\n    constructor(info: Streamer_Start) {\n        super(info);\n    }\n}\n\nexport class Streamer_ExitDef extends TelemetryEventBase<Streamer_Exit> {\n    readonly name: string = EventTypes.Streamer_Exit.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_Exit.gdprLevel;\n    constructor(info: Streamer_Exit) {\n        super(info);\n    }\n}\n\nexport class Streamer_InputDeviceDef extends TelemetryEventBase<Streamer_InputDevice> {\n    readonly name: string = EventTypes.Streamer_InputDevice.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_InputDevice.gdprLevel;\n    constructor(info: Streamer_InputDevice) {\n        super(info);\n    }\n}\n\nexport class Streamer_HotPlugEventDef extends TelemetryEventBase<Streamer_HotPlugEvent> {\n    readonly name: string = EventTypes.Streamer_HotPlugEvent.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_HotPlugEvent.gdprLevel;\n    constructor(info: Streamer_HotPlugEvent) {\n        super(info);\n    }\n}\n\nexport class Streamer_DecoderCapsDef extends TelemetryEventBase<Streamer_DecoderCaps> {\n    readonly name: string = EventTypes.Streamer_DecoderCaps.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_DecoderCaps.gdprLevel;\n    constructor(info: Streamer_DecoderCaps) {\n        super(info);\n    }\n}\n\nexport class Streamer_DisplayCapsDef extends TelemetryEventBase<Streamer_DisplayCaps> {\n    readonly name: string = EventTypes.Streamer_DisplayCaps.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_DisplayCaps.gdprLevel;\n    constructor(info: Streamer_DisplayCaps) {\n        super(info);\n    }\n}\n\nexport class Streamer_EncoderCapsDef extends TelemetryEventBase<Streamer_EncoderCaps> {\n    readonly name: string = EventTypes.Streamer_EncoderCaps.name;\n    readonly gdprLevel: GdprLevel = EventTypes.Streamer_EncoderCaps.gdprLevel;\n    constructor(info: Streamer_EncoderCaps) {\n        super(info);\n    }\n}\n\n//////////// Common telemetry interfaces ////////////\nexport declare interface FormattedEventDetail {\n    name: string;\n    ts: string;\n    parameters: object;\n    experiments?: object;\n}\n\n/**\n * This interface represents all the common data which ragnarok needs to send telemetry events independently to telemetry server.\n */\nexport declare interface JsEventsCommonData {\n    clientId?: string;\n    clientVer?: string;\n    eventSchemaVer?: string;\n    eventSysVer?: string;\n    eventProtocol?: string;\n    deviceId?: string;\n    userId?: string;\n    externalUserId?: string;\n    idpId?: string;\n    sessionId?: string;\n    platform?: string;\n    sentTs?: string;\n    events?: FormattedEventDetail[];\n    gdprFuncOptIn?: string; // this comes from starfleet via client\n    gdprTechOptIn?: string;\n    gdprBehOptIn?: string;\n    deviceGdprFuncOptIn?: string; // this comes from EULA before login. Full when agree.\n    deviceGdprTechOptIn?: string;\n    deviceGdprBehOptIn?: string;\n    deviceOS?: string;\n    deviceOSVersion?: string;\n    deviceType?: string;\n    deviceModel?: string;\n    deviceMake?: string;\n    clientType?: string;\n    clientVariant?: string;\n    integrationId?: string;\n    browserType?: string;\n}\n\nexport declare interface JsEventsConfig {\n    server: string; // telemetry server url\n    version: string;\n}\n\n/**\n * This is the root interface used by client to pass common telemetry data to ragnarok.\n */\nexport declare interface EventDataElements {\n    commonData?: JsEventsCommonData;\n    experiments?: object; // This needs to be written to events in JsEventsCommonData\n    config?: JsEventsConfig;\n    telemetryEventIds?: TelemetryEventIds;\n}\n\n// db schema\nexport declare interface TelemetryEventDbSchema {\n    userId: string;\n    sessionId: string;\n    name: string;\n    eventPayload?: TelemetryEventPayload;\n}\n\n/**\n * Internal interface that describes all the required information to dispatch the exit event telemetry\n */\nexport declare interface StreamExitEventData {\n    exitErrorCode: string;\n    sessionId: string;\n    subSessionId: string;\n    zoneAddress: string;\n    streamDuration: number;\n    frameCount: number;\n    codec: string; // in legacy format 'video/H264'\n    isResume: boolean;\n    connectivity: string;\n    sleep: boolean;\n    networkTestSessionId: string;\n}\n\nexport const enum Connectivity {\n    UNDEFINED = \"undefined\",\n    ONLINE = \"online\",\n    OFFLINE = \"offline\",\n    OFFLINE_WRONG_STATUS = \"offline_wrong_status\",\n    TIMEOUT = \"timeout\"\n}\n","import {\n    IPVersion,\n    GdprLevel,\n    ErrorDetails,\n    GetHexString,\n    RequestHttpOptions,\n    performHttpRequest,\n    Response,\n    TelemetryEventPayload,\n    Log\n} from \"../dependencies\";\nimport {\n    RagnarokTelemetryConfig,\n    JsEventsConfig,\n    EventDataElements,\n    TelemetryEventDbSchema,\n    FormattedEventDetail,\n    Streamer_ExitDef,\n    StreamExitEventData,\n    Connectivity\n} from \"./telemetryinterfaces\";\nimport { IndexedDb, StoreDetails } from \"../util/indexdb\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { GetCodecType, ToResumeType } from \"../util/utils\";\nimport { NetworkDetector } from \"../util/networkdetector\";\n\nconst LOGTAG = \"telemetryeventprocessor\";\n\nconst EXIT_EVENT_STORE_NAME = \"exit-events\";\nconst TELEMETRY_EVENTS_STORE_NAME = \"telemetry-events\";\n\nexport declare interface exceptionHandlerCallbackType {\n    (\n        error: Error | DOMException | undefined,\n        msg: string,\n        file: string,\n        lineno: number,\n        colno: number,\n        handled: boolean,\n        category?: string\n    ): void;\n}\n\nexport class TelemetryEventProcessor {\n    private cachedExitEvent: TelemetryEventDbSchema = {\n        userId: \"\",\n        sessionId: \"\",\n        eventPayload: undefined,\n        name: \"\"\n    };\n\n    private eventDataElements: EventDataElements = {};\n    private exceptionHandler?: exceptionHandlerCallbackType;\n    private idb: IndexedDb;\n    private openPromise: Promise<void>;\n    // Below 4 flags are needed to avoid infinite indexdb operation failure and exception cycle\n    private cacheExitEventInDbExceptionSentOnce = false;\n    private clearExitEventStoreInDbExceptionSentOnce = false;\n    private cacheTelemetryEventInDbExceptionSentOnce = false;\n    private clearTelemetryEventStoreInDbExceptionSentOnce = false;\n    private gameShortName: string = \"\";\n    private gameCmsId: string = \"\";\n    private pendingTelemetry: any[] = [];\n    constructor() {\n        const storeDetails: StoreDetails[] = [\n            {\n                storeName: EXIT_EVENT_STORE_NAME,\n                storeOptions: { keyPath: [\"userId\", \"sessionId\", \"name\"] },\n                storeIndexName: \"exit-event-index\"\n            },\n            {\n                storeName: TELEMETRY_EVENTS_STORE_NAME,\n                storeOptions: {\n                    keyPath: [\"userId\", \"sessionId\", \"name\", \"eventPayload.ts\"]\n                },\n                storeIndexName: \"telemetry-event-index\"\n            }\n        ];\n        this.idb = new IndexedDb(\"ragnarok\", storeDetails);\n        this.openPromise = this.idb.open();\n    }\n\n    public setExceptionHandler(handler: exceptionHandlerCallbackType) {\n        this.exceptionHandler = handler;\n    }\n\n    private haveConsentToSend(consent: string): boolean {\n        let canSend = false;\n        if (this.eventDataElements.commonData) {\n            if (\n                consent === GdprLevel.Functional &&\n                (this.eventDataElements.commonData.deviceGdprFuncOptIn === \"Full\" ||\n                    this.eventDataElements.commonData.deviceGdprFuncOptIn === \"Temp\")\n            ) {\n                canSend = true;\n            } else if (\n                consent === GdprLevel.Technical &&\n                this.eventDataElements.commonData.gdprTechOptIn === \"Full\"\n            ) {\n                canSend = true;\n            } else if (\n                consent === GdprLevel.Behavioral &&\n                this.eventDataElements.commonData.gdprBehOptIn === \"Full\"\n            ) {\n                canSend = true;\n            }\n        }\n        return canSend;\n    }\n\n    public sendTelemetryEvent(event: TelemetryEventPayload) {\n        if (!this.eventDataElements.commonData) {\n            this.pendingTelemetry.push(event);\n            return;\n        }\n        if (!this.haveConsentToSend(event.gdprLevel)) {\n            return;\n        }\n\n        if (window.navigator.onLine) {\n            this.sendHttpTelemetryRequest(this.constructEventDataElements(event));\n        } else {\n            const eventDbFormat: TelemetryEventDbSchema = {\n                userId: this.eventDataElements.commonData!.userId!,\n                sessionId: this.eventDataElements.commonData!.sessionId!,\n                name: event.name,\n                eventPayload: event\n            };\n            this.cacheTelemetryEventInDb(eventDbFormat);\n        }\n    }\n\n    private constructEventDataElements(event: TelemetryEventPayload): EventDataElements {\n        let localEventObj: EventDataElements = {};\n        if (!this.eventDataElements.commonData) {\n            return localEventObj;\n        }\n        const formattedEventDetail: FormattedEventDetail = {\n            name: event.name,\n            ts: event.ts!,\n            parameters: event.parameters!,\n            experiments: this.eventDataElements.experiments\n        };\n\n        // Make a deep copy of common data before modifying any properties\n        this.copyCommonEventDataElements(localEventObj, this.eventDataElements);\n        const commonData = localEventObj.commonData!;\n        // Use the incoming event's schema config details to dispatch the event\n        commonData.clientId = event.clientConfig.clientId;\n        commonData.eventSchemaVer = event.clientConfig.eventSchemaVer;\n        commonData.sentTs = new Date().toISOString();\n        commonData.events = [formattedEventDetail];\n        return localEventObj;\n    }\n\n    private sendHttpTelemetryRequest(telemetryEventData: EventDataElements) {\n        if (telemetryEventData.config?.server && telemetryEventData.config?.version) {\n            const options: RequestHttpOptions = {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Event-Protocol\": telemetryEventData.commonData?.eventProtocol ?? \"1.4\"\n                },\n                body: JSON.stringify(telemetryEventData.commonData),\n                retryCount: 3,\n                timeout: 2000\n            };\n            Log.i(\"{f7c1592}\", \"{4d9b16c}\", RagnarokSettings.allowSendingTelemetry, options.body);\n            if (RagnarokSettings.allowSendingTelemetry) {\n                performHttpRequest(this.getTelemetryServerUrl(telemetryEventData.config), options)\n                    .then((response: Response) => {})\n                    .catch(err => {});\n            }\n        }\n    }\n\n    public setGameDetails(cmsId: string, name: string) {\n        this.gameCmsId = cmsId;\n        this.gameShortName = name;\n    }\n\n    public sendExitEvent(eventPayload: TelemetryEventPayload) {\n        Log.d(\"{f7c1592}\", \"{01dcfe5}\", eventPayload.parameters?.sessionId);\n        this.updateCachedExitEventData(eventPayload);\n        this.sendExitEventUsingBeacon(\n            this.constructEventDataElements(this.cachedExitEvent.eventPayload!)\n        );\n    }\n\n    public clearExitEventStore(pollingDone: boolean) {\n        Log.d(\"{f7c1592}\", \"{badefed}\", pollingDone);\n        this.clearExitEventStoreInDb(pollingDone);\n        this.cachedExitEvent.eventPayload = undefined;\n    }\n\n    /// Helper function to manage the EventDataElements copy. Assignment causes all these point\n    // to the same reference and the cached events gets messed up.\n    private copyCommonEventDataElements(target: EventDataElements, source: EventDataElements) {\n        // Deep copy commonData\n        target.commonData = source.commonData ? Object.assign({}, source.commonData) : undefined;\n\n        // The following fields are common properties and will be same across all events.\n        // Shallow copy is sufficient.\n        target.experiments = []; // Do not send the experiments' data with the events\n        target.config = source.config;\n        target.telemetryEventIds = source.telemetryEventIds;\n    }\n\n    // Called by the gridapp relayed from the UI layer to update the telemetry common fields\n    public updateEventDataElements(eventDataElements: EventDataElements) {\n        // Make a copy of commonData so we don't modify the incoming object's references\n        this.copyCommonEventDataElements(this.eventDataElements, eventDataElements);\n        if (this.eventDataElements.commonData) {\n            // If there are pending events, flush them\n            Log.d(\"{f7c1592}\", \"{66f209c}\");\n            for (let event of this.pendingTelemetry) {\n                this.sendTelemetryEvent(event);\n            }\n            this.pendingTelemetry = [];\n        }\n        this.cachedExitEvent.userId = this.eventDataElements.commonData?.userId!;\n    }\n\n    private updateCachedExitEventData(event: TelemetryEventPayload) {\n        this.cachedExitEvent.userId = this.eventDataElements.commonData?.userId ?? \"\";\n        this.cachedExitEvent.sessionId = event.parameters.sessionId ?? \"\";\n        this.cachedExitEvent.name = event.name;\n        this.cachedExitEvent.eventPayload = event;\n    }\n\n    public updateCachedExitEvent(\n        exitErrorCode: string,\n        sessionId: string,\n        subSessionId: string,\n        zoneAddress: string,\n        streamDuration: number,\n        frameCount: number,\n        codec: string, // in legacy format 'video/H264'\n        isResume: boolean\n    ) {\n        const exitData: StreamExitEventData = {\n            exitErrorCode: exitErrorCode,\n            sessionId: sessionId,\n            subSessionId: subSessionId,\n            zoneAddress: zoneAddress,\n            streamDuration: streamDuration,\n            frameCount: frameCount,\n            codec: codec,\n            isResume: isResume,\n            connectivity: \"\",\n            sleep: false,\n            networkTestSessionId: \"\"\n        };\n        const eventPayload = this.getStreamerExitEventPayload(exitData);\n        this.updateCachedExitEventData(eventPayload);\n    }\n\n    public getStreamerExitEventPayload(exitData: StreamExitEventData): TelemetryEventPayload {\n        let exitReason = exitData.exitErrorCode ?? \"\";\n        if (exitData.sleep) {\n            exitReason = \"SleepExit\";\n        } else if (exitData.connectivity?.startsWith(Connectivity.ONLINE)) {\n            exitReason = exitData.connectivity ?? \"\";\n        }\n        const event: Streamer_ExitDef = new Streamer_ExitDef({\n            zoneAddress: exitData.zoneAddress,\n            networkSessionId: exitData.networkTestSessionId ?? \"\",\n            sessionId: exitData.sessionId,\n            subSessionId: exitData.subSessionId,\n            resumeType: ToResumeType(exitData.isResume),\n            overrideConfigType: RagnarokSettings.remoteOverrideInfo.type,\n            overrideConfigVersion: RagnarokSettings.remoteOverrideInfo.version,\n            exitReason: exitReason,\n            result: exitData.exitErrorCode,\n            frameCount: exitData.frameCount,\n            codec: GetCodecType(exitData.codec),\n            ipVersion: IPVersion.UNKNOWN,\n            streamDuration: Math.round(exitData.streamDuration),\n            networkType: NetworkDetector.getNetworkType(),\n            streamingProfileGuid: this.getStreamingProfileGuid(),\n            systemInfoGuid: this.getSystemInfoGuid(),\n            cmsId: String(this.gameCmsId)\n        });\n        return {\n            name: event.name,\n            gdprLevel: event.gdprLevel,\n            parameters: event.parameters,\n            ts: event.ts,\n            clientConfig: RagnarokTelemetryConfig\n        };\n    }\n\n    private handleCatch(err: ErrorDetails, funcName: string, shouldSendException: boolean) {\n        Log.e(\"{f7c1592}\", \"{146ec91}\", funcName, GetHexString(err.code), err.description);\n        if (shouldSendException) {\n            const msg = err.error?.message ?? err.description ?? `Exception in ${funcName}`;\n            const filename = LOGTAG + \".ts\";\n            if (this.exceptionHandler) {\n                this.exceptionHandler(err.error, msg, filename, err.code, 0, true, err.error?.name);\n            } else {\n                Log.w(\"{f7c1592}\", \"{12e0846}\");\n            }\n        }\n    }\n\n    private isPrimaryKeyValid(telemetryEvent: TelemetryEventDbSchema): boolean {\n        return !!telemetryEvent.userId && !!telemetryEvent.sessionId && !!telemetryEvent.name;\n    }\n\n    private cacheTelemetryEventInDb(cachedTelemetryEvent: TelemetryEventDbSchema) {\n        if (!this.isPrimaryKeyValid(cachedTelemetryEvent)) {\n            return;\n        }\n        // intentionally resolving it, as we want to not block anything\n        this.openPromise\n            .then(() => this.idb.set(TELEMETRY_EVENTS_STORE_NAME, cachedTelemetryEvent))\n            .then(() => {\n                Log.i(\"{f7c1592}\", \"{f03d70b}\");\n            })\n            .catch((err: ErrorDetails) => {\n                // only try to send an exception if we have not tried it yet, to prevent an infinite loop\n                const shouldHandleException = !this.cacheTelemetryEventInDbExceptionSentOnce;\n                this.cacheTelemetryEventInDbExceptionSentOnce = true;\n                this.handleCatch(err, \"cacheTelemetryEventInDb\", shouldHandleException);\n            });\n    }\n\n    public cacheExitEventInDb(): Promise<void> {\n        if (!this.isPrimaryKeyValid(this.cachedExitEvent)) {\n            return Promise.resolve();\n        }\n        // intentionally resolving it, as we want to not block anything\n        return this.openPromise\n            .then(() => this.idb.set(EXIT_EVENT_STORE_NAME, this.cachedExitEvent))\n            .then(() => {\n                Log.i(\"{f7c1592}\", \"{5d026f8}\");\n            })\n            .catch((err: ErrorDetails) => {\n                this.handleCatch(\n                    err,\n                    \"cacheExitEventInDb\",\n                    !this.cacheExitEventInDbExceptionSentOnce\n                );\n                if (!this.cacheExitEventInDbExceptionSentOnce) {\n                    this.cacheExitEventInDbExceptionSentOnce = true;\n                }\n            });\n    }\n\n    private getTelemetryServerUrl(config: JsEventsConfig): string {\n        return config.server + \"/\" + config.version + \"/events/json\";\n    }\n\n    private sendExitEventUsingBeacon(eventDataElements: EventDataElements) {\n        if (\n            eventDataElements.config?.server &&\n            eventDataElements.config?.version &&\n            eventDataElements.experiments\n        ) {\n            if (eventDataElements.commonData) {\n                eventDataElements.commonData.sentTs = new Date().toISOString();\n            }\n            const blobData = JSON.stringify(eventDataElements.commonData);\n            const formData = new Blob([blobData], {\n                type: \"text/plain\"\n            });\n            let result = false;\n            if (RagnarokSettings.allowSendingTelemetry) {\n                result = navigator.sendBeacon(\n                    this.getTelemetryServerUrl(eventDataElements.config),\n                    formData\n                );\n            }\n            Log.i(\"{f7c1592}\", \"{f797b28}\", result, RagnarokSettings.allowSendingTelemetry, blobData);\n        }\n    }\n\n    private clearExitEventStoreInDb(pollingDone: boolean) {\n        if (pollingDone) {\n            // This is little tricky, we don't want to unintenaionally clear cache with valid case.\n            // we need to think about multitab, launch error in next session, error in current session during stream cases etc\n            this.openPromise\n                .then(() => this.idb.clear(EXIT_EVENT_STORE_NAME))\n                .then(() => {\n                    Log.i(\"{f7c1592}\", \"{1b8f127}\");\n                })\n                .catch((err: ErrorDetails) => {\n                    this.handleCatch(\n                        err,\n                        \"clearExitEventStoreInDb\",\n                        !this.clearExitEventStoreInDbExceptionSentOnce\n                    );\n                    if (!this.clearExitEventStoreInDbExceptionSentOnce) {\n                        this.clearExitEventStoreInDbExceptionSentOnce = true;\n                    }\n                });\n        }\n    }\n\n    public getCachedExitEvents(): Promise<TelemetryEventPayload[]> {\n        return this.openPromise\n            .then(() => this.idb.getAll(EXIT_EVENT_STORE_NAME))\n            .then((exitEvents: TelemetryEventDbSchema[]) => {\n                Log.i(\"{f7c1592}\", \"{d938300}\", exitEvents.length);\n                let eventPayloads: TelemetryEventPayload[] = [];\n                if (exitEvents.length > 0) {\n                    for (const telemetryEvent of exitEvents) {\n                        if (telemetryEvent.eventPayload) {\n                            eventPayloads.push(telemetryEvent.eventPayload);\n                        }\n                    }\n                }\n                return eventPayloads;\n            })\n            .catch((err: ErrorDetails) => {\n                this.handleCatch(err, \"getCachedExitEvents\", true);\n                return Promise.reject();\n            });\n    }\n\n    public sendCachedExitEvent(pollingDone: boolean): Promise<void> {\n        // intentionally always resolve, as we don't want to block anything\n        return this.openPromise\n            .then(() => this.idb.getAll(EXIT_EVENT_STORE_NAME))\n            .then((exitEvents: TelemetryEventDbSchema[]) => {\n                Log.i(\"{f7c1592}\", \"{ca568ff}\", exitEvents.length);\n                if (exitEvents.length > 0) {\n                    for (const telemetryEvent of exitEvents) {\n                        if (telemetryEvent.eventPayload) {\n                            this.sendExitEventUsingBeacon(\n                                this.constructEventDataElements(telemetryEvent.eventPayload)\n                            );\n                        }\n                    }\n                    this.clearExitEventStore(pollingDone);\n                }\n            })\n            .catch((err: ErrorDetails) => {\n                this.handleCatch(err, \"sendCachedExitEvent\", true);\n            });\n    }\n\n    private clearTelemetryEventStoreInDb() {\n        this.openPromise\n            .then(() => this.idb.clear(TELEMETRY_EVENTS_STORE_NAME))\n            .then(() => {\n                Log.i(\"{f7c1592}\", \"{8f62936}\");\n            })\n            .catch((err: ErrorDetails) => {\n                this.handleCatch(\n                    err,\n                    \"clearEventStoreInDb\",\n                    !this.clearTelemetryEventStoreInDbExceptionSentOnce\n                );\n                if (!this.clearTelemetryEventStoreInDbExceptionSentOnce) {\n                    this.clearTelemetryEventStoreInDbExceptionSentOnce = true;\n                }\n            });\n    }\n\n    public sendAllCachedTelemetryEvents() {\n        if (window.navigator.onLine) {\n            this.openPromise\n                .then(() => this.idb.getAll(TELEMETRY_EVENTS_STORE_NAME))\n                .then((telemetryEvents: TelemetryEventDbSchema[]) => {\n                    Log.i(\"{f7c1592}\", \"{d4e574c}\", telemetryEvents.length);\n                    if (telemetryEvents.length > 0) {\n                        this.clearTelemetryEventStoreInDb();\n                        for (const telemetryEvent of telemetryEvents) {\n                            if (telemetryEvent.eventPayload) {\n                                this.sendTelemetryEvent(telemetryEvent.eventPayload);\n                            }\n                        }\n                    }\n                })\n                .catch((err: ErrorDetails) => {\n                    Log.e(\"{f7c1592}\", \"{aaaa3de}\", err.code, err.description);\n                });\n        }\n    }\n\n    public resetDataOnNewSubSession(sessionId: string, subSessionId: string) {\n        this.cacheExitEventInDbExceptionSentOnce = false;\n        this.clearExitEventStoreInDbExceptionSentOnce = false;\n        this.cacheTelemetryEventInDbExceptionSentOnce = false;\n        this.clearTelemetryEventStoreInDbExceptionSentOnce = false;\n    }\n\n    public getOsName() {\n        return this.eventDataElements?.commonData?.deviceOS ?? \"\";\n    }\n\n    public getOsVer() {\n        return this.eventDataElements?.commonData?.deviceOSVersion ?? \"\";\n    }\n\n    public getStreamingProfileGuid() {\n        return this.eventDataElements?.telemetryEventIds?.streamingProfileGuid ?? \"\";\n    }\n\n    public getSystemInfoGuid() {\n        return this.eventDataElements?.telemetryEventIds?.systemInfoGuid ?? \"\";\n    }\n}\n","import { EVENTS, MicState } from \"./interfaces\";\nimport {\n    IEventEmitter,\n    IsChromeOS,\n    IsiDevice,\n    PlatformDetails,\n    IsiOSVersionAtLeast,\n    IsWebOS,\n    IsTizenOS,\n    Log\n} from \"./dependencies\";\nimport { RagnarokSettings } from \"./util/settings\";\nimport { TelemetryHandler } from \"./telemetry/telemetryhandler\";\nimport { LowAudioVolumeType } from \"./rinterfaces\";\nimport { GetAudioContext } from \"./util/utils\";\n\n/**\n *This class has all the logic to capture mic audio. Gridapp provides\n * the reference of this class for clients to resume and pause mic audio capture.\n */\n\nconst LOGTAG = \"miccapturer\";\n\nconst enum AudioInputType {\n    NO_AUDIO_INPUT = \"No Audio Input\",\n    BUILT_IN_MIC = \"Built-in Microphone\",\n    HEADSET_MIC = \"Headset Microphone\"\n}\n\nexport class MicCapturer {\n    private eventEmitter: IEventEmitter | null = null;\n    private peerConnection: any;\n    // Contains actual microphone stream, if any\n    private micCaptureStream: MediaStream | null;\n    // Prevent capture being started multiple times (in case callback is called\n    // multiple times\n    private micCaptureStarting: boolean;\n    // Prevent race between two subsequent pause/resume calls\n    private paused: boolean;\n    // Whether mic capture is supported (will be disabled in case client is on\n    // non-https origins (except localhost) or if AudioContext is not supported)\n    // Note: navigator.mediaDevices is null for non-HTTPS origins except localhost\n    // (can be enabled temporarily by adding IP to \"Insecure origins treated as secure\"\n    // inside chrome://flags)\n    private static micSupported: boolean =\n        navigator.mediaDevices != null &&\n        ((<any>window).AudioContext || (<any>window).webkitAudioContext || false);\n    // Current state of mic permission\n    private currentState: MicState = MicState.UNINITIALIZED;\n    // Set mic enabled/disabled, will determine whether to automatically start\n    // mic capture when initializing (eg. in case of resume)\n    private micEnabled: boolean = false;\n    private videoElement: HTMLVideoElement | null;\n    private audioElement: HTMLAudioElement | null;\n    private brokenMics: Set<string> = new Set();\n    private platformDetails: PlatformDetails;\n    private telemetry: TelemetryHandler;\n    private ios15: boolean = false;\n    private initialized: boolean = false;\n    private trackEndedTime: number = 0;\n    private audioVolumeLow: boolean = false;\n    private willAudioVolumeBeLow: boolean = false;\n    private userDisabledMic: boolean = false;\n    private audioInputType?: AudioInputType;\n    private audioInputCounts = { noAudioInput: 0, builtInMic: 0, headsetMic: 0 };\n    private lowAudioVolumeCounts: Map<LowAudioVolumeType, number> = new Map([\n        [LowAudioVolumeType.PERMISSION_DENIED, 0],\n        [LowAudioVolumeType.VISIBILITY_CHANGE, 0],\n        [LowAudioVolumeType.DEVICE_CHANGE, 0]\n    ]);\n    private micHasBeenStarted: boolean = false;\n    constructor(platformDetails: PlatformDetails, telemetry: TelemetryHandler) {\n        this.platformDetails = platformDetails;\n        this.telemetry = telemetry;\n        this.peerConnection = null;\n        this.micCaptureStream = null;\n        this.micCaptureStarting = false;\n        this.paused = false;\n        this.videoElement = null;\n        this.audioElement = null;\n\n        if (IsiOSVersionAtLeast(platformDetails, 15)) {\n            this.ios15 = true;\n        }\n    }\n\n    private getMicStateEnum(state: string): MicState {\n        let micState: MicState = MicState.PERMISSION_DENIED;\n        if (state == \"granted\") {\n            micState = MicState.STOPPED;\n        } else if (state == \"prompt\") {\n            micState = MicState.PERMISSION_PENDING;\n        }\n        return micState;\n    }\n\n    public getCurrentMicStatus(): Promise<MicState> {\n        if (RagnarokSettings.micEnabled === false) {\n            return Promise.resolve(MicState.UNINITIALIZED);\n        }\n        if (window.navigator.permissions) {\n            return window.navigator.permissions\n                .query({ name: <PermissionName>\"microphone\" })\n                .then((permissionStatus: PermissionStatus) => {\n                    return this.getMicStateEnum(permissionStatus.state);\n                })\n                .catch(ex => {\n                    return MicState.UNINITIALIZED;\n                });\n        } else {\n            return Promise.resolve(MicState.UNINITIALIZED);\n        }\n    }\n\n    /**\n     * Emits current mic permission state to client via MIC_CAPTURER event.\n     * It could result in mic popup to get user permission.\n     **/\n    public emitMicState() {\n        if (RagnarokSettings.micEnabled === false) {\n            return;\n        }\n        // Return current state if starting/in stable state\n        // Else, query current state and report\n        if (\n            this.micCaptureStarting ||\n            this.currentState == MicState.STARTED ||\n            this.currentState == MicState.PERMISSION_DENIED ||\n            this.currentState == MicState.UNSUPPORTED ||\n            this.currentState == MicState.ERROR\n        ) {\n            this.updateState(this.currentState);\n        } else {\n            // Query current state using browser API\n            this.getCurrentMicStatus().then(state => {\n                if (state !== MicState.UNINITIALIZED) {\n                    this.updateState(state);\n                }\n            });\n        }\n    }\n\n    public static isMicSupported() {\n        return MicCapturer.micSupported;\n    }\n\n    private updateState(status: MicState, shouldEmit: boolean = true) {\n        this.currentState = status;\n        if (this.currentState === MicState.STARTED) {\n            this.micHasBeenStarted = true;\n        }\n        if (this.eventEmitter && shouldEmit) {\n            this.eventEmitter.emit(EVENTS.MIC_CAPTURE, { state: this.currentState });\n        }\n    }\n\n    private async getUserMedia(audioOptions: MediaTrackConstraints): Promise<void> {\n        this.micCaptureStarting = true;\n        return navigator.mediaDevices\n            .getUserMedia({ audio: audioOptions })\n            .then((media_obj: MediaStream) => {\n                Log.d(\"{223689a}\", \"{b204737}\");\n                // will emit update once track is replaced\n                this.updateState(MicState.STOPPED, false);\n                this.micCaptureStarting = false;\n                this.micCaptureStream = media_obj;\n\n                if (IsiDevice(this.platformDetails)) {\n                    const micTrack = media_obj.getTracks()[0];\n                    micTrack.onended = () => {\n                        this.trackEndedTime = performance.now();\n                        Log.i(\"{223689a}\", \"{6b60d82}\");\n                        this.stopMicRecording();\n                    };\n                }\n\n                // TODO: Remove use of this deprecated API\n                (this.micCaptureStream as any).oninactive = () => {\n                    // This is triggered when mic is unplugged, will be handled by ondeviceChange callback\n                    Log.d(\"{223689a}\", \"{eee54f1}\");\n                    this.brokenMics.clear();\n                    this.micCaptureStream = null;\n                };\n\n                if (!this.paused) {\n                    var sender = this.peerConnection.getSenders()[0];\n                    if (!sender) {\n                        Log.e(\"{223689a}\", \"{f7f0250}\");\n                        this.micCaptureStream = null;\n                    } else {\n                        sender\n                            .replaceTrack(media_obj.getTracks()[0])\n                            .then(() => {\n                                Log.i(\"{223689a}\", \"{6c92139}\");\n                                // War for low audio volume issue\n                                // Playing the audio/video element again fixes it\n                                if (\n                                    IsiDevice(this.platformDetails) &&\n                                    !IsiOSVersionAtLeast(this.platformDetails, 15, 4) &&\n                                    this.videoElement!.muted == false\n                                ) {\n                                    let playPromise = null;\n                                    if (this.audioElement!.srcObject) {\n                                        playPromise = this.audioElement!.play();\n                                    } else if (this.videoElement!.srcObject) {\n                                        playPromise = this.videoElement!.play();\n                                        Log.i(\"{223689a}\", \"{ef4dea7}\");\n                                    }\n\n                                    if (playPromise) {\n                                        playPromise\n                                            .then(() => {\n                                                Log.d(\"{223689a}\", \"{5593cbe}\");\n\n                                                this.resetAudio();\n                                            })\n                                            .catch((error: any) => {\n                                                this.resetAudio();\n                                                try {\n                                                    this.telemetry.emitDebugEvent(\n                                                        \"WAR: Play Error\",\n                                                        error?.name,\n                                                        error?.message\n                                                    );\n                                                    Log.e(\"{223689a}\", \"{69aae72}\", error?.name, error?.message);\n                                                } catch (ex) {}\n                                            });\n                                    } else {\n                                        Log.e(\"{223689a}\", \"{b6a6508}\");\n                                    }\n                                }\n                                this.updateState(MicState.STARTED);\n                                this.userDisabledMic = false;\n                                if (IsiOSVersionAtLeast(this.platformDetails, 15, 4)) {\n                                    // Enabling the mic resolves the low audio volume issues\n                                    this.audioVolumeLow = false;\n                                    this.setWillAudioVolumeBeLow(false);\n                                }\n                            })\n                            .catch((err: any) => {\n                                Log.e(\"{223689a}\", \"{5c42246}\", err);\n                                this.micCaptureStream = null;\n                                this.updateState(MicState.ERROR);\n                            });\n                    }\n                } else {\n                    Log.d(\"{223689a}\", \"{21e76e1}\");\n                    this.micCaptureStream = null;\n                    this.updateState(MicState.ERROR);\n                }\n            })\n            .catch((err: any) => {\n                if (\n                    IsiDevice(this.platformDetails) &&\n                    !IsiOSVersionAtLeast(this.platformDetails, 15, 4)\n                ) {\n                    this.resetAudio();\n                }\n\n                this.micCaptureStarting = false;\n                if (err instanceof DOMException && (<DOMException>err).name === \"NotAllowedError\") {\n                    Log.e(\"{223689a}\", \"{3f9bd66}\");\n                    this.updateState(MicState.PERMISSION_DENIED);\n                    if (this.willAudioVolumeBeLow && !this.audioVolumeLow) {\n                        this.recordLowAudioDebugEvent(LowAudioVolumeType.PERMISSION_DENIED);\n                    }\n                } else if (\n                    err instanceof DOMException &&\n                    (<DOMException>err).name === \"NotFoundError\"\n                ) {\n                    Log.e(\"{223689a}\", \"{7f04869}\");\n                    this.updateState(MicState.NO_SUITABLE_DEVICE);\n                } else if (\n                    err instanceof DOMException &&\n                    (<DOMException>err).name === \"NotReadableError\"\n                ) {\n                    this.brokenMics.add((audioOptions.deviceId as string) ?? \"default\");\n                    Log.e(\"{223689a}\", \"{af7e08c}\", (audioOptions.deviceId as string) ?? \"default\", \n                            err.name\n                        , err.message);\n                    navigator.mediaDevices\n                        .enumerateDevices()\n                        .then(devices => {\n                            for (const device of devices) {\n                                if (\n                                    device.kind === \"audioinput\" &&\n                                    device.deviceId !== \"default\" &&\n                                    !this.brokenMics.has(device.deviceId)\n                                ) {\n                                    Log.d(\"{223689a}\", \"{655d8b0}\", device.deviceId, device.label);\n                                    audioOptions.deviceId = device.deviceId;\n                                    this.getUserMedia(audioOptions);\n                                    break;\n                                }\n                            }\n                        })\n                        .catch(err => {\n                            Log.e(\"{223689a}\", \"{930e826}\", err.name, err.message);\n                        });\n                    this.updateState(MicState.ERROR);\n                } else {\n                    Log.e(\"{223689a}\", \"{c361fc5}\", err.name, err.message);\n                    this.updateState(MicState.ERROR);\n                }\n            });\n    }\n\n    /**\n     * Start capturing audio on default device (async).\n     * State will be emitted on the EventEmitter\n     **/\n    public async startMicCaptureOnDefaultDeviceWithFallback(): Promise<void> {\n        if (!this.initialized) {\n            return;\n        }\n        if (!MicCapturer.micSupported) {\n            Log.e(\"{223689a}\", \"{999b07b}\");\n            this.updateState(MicState.UNSUPPORTED);\n            return;\n        }\n\n        this.micEnabled = true;\n\n        if (this.micCaptureStream != null || this.micCaptureStarting) {\n            // Mic capture has already started/is starting, possibly on a callback\n            // Just return here, and let the callback update state\n            return;\n        }\n\n        this.paused = false;\n        // will emit update once we get the mic media\n        this.updateState(MicState.PERMISSION_PENDING, false);\n\n        let audioOptions: MediaTrackConstraints = {\n            sampleRate: 48000\n        };\n\n        // Disabling the AGC2 in microphone capture\n        // This is causing high CPU usage on Chromebooks\n        // https://issuetracker.google.com/issues/172340627\n        if (IsChromeOS(this.platformDetails)) {\n            (<any>audioOptions).googAutoGainControl2 = false;\n        }\n\n        navigator.mediaDevices.ondevicechange = (ev: Event) => {\n            Log.i(\"{223689a}\", \"{50d0169}\", !!this.micCaptureStream, this.micCaptureStarting);\n            if (this.micCaptureStream == null && !this.micCaptureStarting) {\n                Log.d(\"{223689a}\", \"{c849290}\");\n                this.startMicCaptureOnDefaultDeviceWithFallback();\n            }\n        };\n\n        await this.getUserMedia(audioOptions);\n\n        if (!this.audioInputType) {\n            this.extractAudioInputType();\n        }\n    }\n\n    /**\n     * Create MediaStream which generates silence.\n     * The AudioContext for the track is stopped immediately.\n     **/\n    private getSilenceMediaStream(): MediaStream {\n        let ctx = GetAudioContext(48000);\n        if (ctx) {\n            let dst = ctx.createMediaStreamDestination();\n            let track = dst.stream.getAudioTracks()[0];\n            ctx.close();\n            track.enabled = true;\n            let stream: MediaStream = new MediaStream([track]);\n            return stream;\n        }\n\n        // Should never reach here, as we would set mic supported false before\n        throw new Error(\"Mic stream is not supported\");\n    }\n\n    public initialize(\n        pc: any,\n        eventEmitter: IEventEmitter,\n        videoElement: HTMLVideoElement,\n        audioElement: HTMLAudioElement\n    ) {\n        if (RagnarokSettings.micEnabled === false) {\n            return;\n        }\n\n        this.peerConnection = pc;\n        this.eventEmitter = eventEmitter;\n        this.videoElement = videoElement;\n        this.audioElement = audioElement;\n        if (MicCapturer.micSupported) {\n            // Initially open the track with a generative AudioContext\n            // This allows the initial connection to continue without waiting for getUserMedia\n            // which seems to take a large amount of time (~ 5-15 sec)\n            let silenceStream = this.getSilenceMediaStream();\n            if (silenceStream == null) {\n                Log.w(\"{223689a}\", \"{360f38b}\");\n                return;\n            }\n            this.peerConnection.addTrack(silenceStream.getAudioTracks()[0], silenceStream);\n            if (this.micEnabled) {\n                this.startMicCaptureOnDefaultDeviceWithFallback();\n            }\n        } else {\n            Log.w(\"{223689a}\", \"{5813c2b}\");\n        }\n\n        this.initialized = true;\n    }\n\n    /**\n     * Stop mic capture.\n     * This method will stop any ongoing mic capture and replace the sender\n     * with a silence stream. Mic capture will always be stopped, even if the\n     * replacement fails.\n     * This method will emit an event on the eventStream to indicate that\n     * stream has stopped\n     **/\n    public stopMicRecording() {\n        if (!this.initialized) {\n            return;\n        }\n        if (!MicCapturer.micSupported) {\n            this.updateState(MicState.UNSUPPORTED);\n            return;\n        }\n        this.micEnabled = false;\n        this.paused = true;\n        const prevState = this.currentState;\n\n        // Reset callback\n        navigator.mediaDevices.ondevicechange = () => {};\n\n        if (this.peerConnection) {\n            Log.d(\"{223689a}\", \"{6faf5bb}\");\n            let stream = this.getSilenceMediaStream();\n            var sender = this.peerConnection.getSenders()[0];\n            if (!sender) {\n                Log.e(\"{223689a}\", \"{f7f0250}\");\n                this.micCaptureStream = null;\n            } else {\n                sender\n                    .replaceTrack(stream.getTracks()[0])\n                    .then(() => {\n                        Log.d(\"{223689a}\", \"{797fa55}\");\n                        // will emit update state once we stop the tracks\n                        this.updateState(MicState.STOPPED, false);\n                        if (prevState === MicState.STARTED) {\n                            this.userDisabledMic = true;\n                        }\n                    })\n                    .catch((err: any) => {\n                        Log.e(\"{223689a}\", \"{79f26cc}\", err);\n                        // will emit update state once we stop the tracks\n                        this.updateState(MicState.ERROR, false);\n                    })\n                    .finally(() => {\n                        let stream = this.micCaptureStream;\n                        this.micCaptureStream = null;\n\n                        if (stream) {\n                            stream.getTracks().forEach((track: MediaStreamTrack) => {\n                                track.stop();\n                            });\n                        }\n                        this.updateState(this.currentState);\n                        if (\n                            IsiDevice(this.platformDetails) &&\n                            !IsiOSVersionAtLeast(this.platformDetails, 15, 4)\n                        ) {\n                            this.resetAudio();\n                        }\n                    });\n            }\n        } else {\n            Log.e(\"{223689a}\", \"{9e75fa2}\");\n            this.updateState(MicState.UNINITIALIZED);\n        }\n    }\n\n    /**\n     * Client shouldn't call this method, ragnarok will shutdown capture.\n     **/\n    public shutdown() {\n        if (RagnarokSettings.micEnabled === false) {\n            return;\n        }\n\n        if (this.micCaptureStream != null) {\n            let stream = this.micCaptureStream;\n            this.brokenMics.clear();\n            this.micCaptureStream = null;\n\n            // Reset callback\n            if (navigator.mediaDevices) {\n                navigator.mediaDevices.ondevicechange = () => {};\n            }\n\n            stream.getTracks().forEach((track: MediaStreamTrack) => {\n                track.stop();\n            });\n        }\n        this.micEnabled = false;\n        this.updateState(MicState.STOPPED);\n\n        this.telemetry.emitMetricEvent(\n            \"AudioInputType\",\n            this.micHasBeenStarted ? \"started\" : \"not started\",\n            0,\n            this.audioInputCounts.noAudioInput,\n            this.audioInputCounts.builtInMic,\n            this.audioInputCounts.headsetMic\n        );\n\n        if (IsiOSVersionAtLeast(this.platformDetails, 15, 4)) {\n            this.telemetry.emitMetricEvent(\n                \"LowAudioVolume\",\n                \"\",\n                0,\n                this.lowAudioVolumeCounts.get(LowAudioVolumeType.PERMISSION_DENIED)!,\n                this.lowAudioVolumeCounts.get(LowAudioVolumeType.VISIBILITY_CHANGE)!,\n                this.lowAudioVolumeCounts.get(LowAudioVolumeType.DEVICE_CHANGE)!\n            );\n        }\n\n        this.peerConnection = null;\n        this.eventEmitter = null;\n        this.videoElement = null;\n        this.audioElement = null;\n\n        this.initialized = false;\n\n        this.audioInputCounts = { noAudioInput: 0, builtInMic: 0, headsetMic: 0 };\n        for (const [key, _] of this.lowAudioVolumeCounts) {\n            this.lowAudioVolumeCounts.set(key, 0);\n        }\n        this.audioVolumeLow = false;\n        this.userDisabledMic = false;\n        this.setWillAudioVolumeBeLow(false);\n        this.micHasBeenStarted = false;\n    }\n\n    public resetAudio() {\n        if (!RagnarokSettings.allowAudioReset) {\n            return;\n        }\n        if (!this.ios15) {\n            return;\n        }\n        const stream = <MediaStream | undefined>(\n            (this.audioElement?.srcObject ?? this.videoElement?.srcObject)\n        );\n        if (!stream) {\n            return;\n        }\n        Log.i(\"{223689a}\", \"{ad4b8c2}\");\n        const audioTrack = stream.getAudioTracks()[0];\n        audioTrack.enabled = false;\n        setTimeout(() => {\n            audioTrack.enabled = true;\n        }, 0);\n    }\n\n    public getMicState(): MicState {\n        return this.currentState;\n    }\n\n    public getTrackEndedTime(): number {\n        return this.trackEndedTime;\n    }\n\n    /**\n     * @param low - if true, inform the miccapturer that the audio volume will be low if mic permission are denied.\n     * This is due to an iOS 15.4+ bug and used to provide telemetry that tracks the bug's user impact.\n     * @see Bug 3560855\n     */\n    public setWillAudioVolumeBeLow(low: boolean): void {\n        this.willAudioVolumeBeLow = low;\n    }\n\n    /**\n     * @returns True if the audio volume is currently low, false otherwise\n     */\n    public isAudioVolumeLow(): boolean {\n        return this.audioVolumeLow;\n    }\n\n    /**\n     * @returns True if the mic has been disabled by the user. Returns false when the mic is capturing and when the mic has never been enabled.\n     */\n    public didUserDisableMic(): boolean {\n        return this.userDisabledMic;\n    }\n\n    public extractAudioInputType(): Promise<void> {\n        return navigator.mediaDevices\n            .enumerateDevices()\n            .then((devices: MediaDeviceInfo[]) => {\n                let audioInputDeviceCount = 0;\n                Log.d(\"{223689a}\", \"{fa1ec18}\", JSON.stringify(devices));\n                for (const device of devices) {\n                    if (device.kind == \"audioinput\") {\n                        audioInputDeviceCount++;\n                    }\n                }\n\n                switch (audioInputDeviceCount) {\n                    case 0:\n                        this.audioInputType = AudioInputType.NO_AUDIO_INPUT;\n                        this.audioInputCounts.noAudioInput++;\n                        break;\n                    case 1:\n                        this.audioInputType = AudioInputType.BUILT_IN_MIC;\n                        this.audioInputCounts.builtInMic++;\n                        break;\n                    default:\n                        this.audioInputType = AudioInputType.HEADSET_MIC;\n                        this.audioInputCounts.headsetMic++;\n                        break;\n                }\n                Log.d(\"{223689a}\", \"{0d14ab6}\", this.audioInputType);\n            })\n            .catch((err: any) => {\n                Log.e(\"{223689a}\", \"{21131d5}\");\n            });\n    }\n\n    /**\n     * @returns True if audio input type is built-in microphone\n     */\n    public isUsingBuiltInMic(): boolean {\n        return this.audioInputType === AudioInputType.BUILT_IN_MIC;\n    }\n\n    /**\n     * Emit debug event to idenitfy that user has run into low audio volume issue.\n     * @key - Specifies type of low audio volume event\n     */\n    public recordLowAudioDebugEvent(key: LowAudioVolumeType): void {\n        this.audioVolumeLow = true;\n        this.lowAudioVolumeCounts.set(key, (this.lowAudioVolumeCounts.get(key) ?? 0) + 1);\n        Log.d(\"{223689a}\", \"{30f8637}\", key);\n    }\n\n    public onDeviceChange(deviceChangeCount: number) {\n        this.extractAudioInputType().then(() => {\n            if (\n                deviceChangeCount !== 0 &&\n                IsiOSVersionAtLeast(this.platformDetails, 15, 4) &&\n                !this.isAudioVolumeLow() &&\n                this.isUsingBuiltInMic() &&\n                (this.micEnabled || this.didUserDisableMic())\n            ) {\n                this.recordLowAudioDebugEvent(LowAudioVolumeType.DEVICE_CHANGE);\n            }\n        });\n    }\n\n    public shouldDefaultEnableMic() {\n        const defaultDisabledOnPlatform =\n            IsWebOS(this.platformDetails) ||\n            IsTizenOS(this.platformDetails) ||\n            IsiDevice(this.platformDetails);\n        return !defaultDisabledOnPlatform;\n    }\n}\n","import { GetHexString, Log } from \"../dependencies\";\nimport { RErrorCode } from \"../rerrorcode\";\nimport { TelemetryHandler } from \"../telemetry/telemetryhandler\";\n\nconst LOGTAG = \"sleepdetector\";\n// Choose short enough time so that last errorcode doesn't get updated when user opens the lid by immediately clicking on play\n// and long enough time so that setTimeout call doesn't happening too frequently.\nconst PERIODIC_CALLBACK_INTERVAL_MS = 10 * 1000;\n// 1-2 secs delay was observed between 2 calls. This also means system should be let to sleep for minimum 10 secs\nconst DELTA_SELF_PING_MS = 10 * 1000;\nconst MAX_TIMEOUT_ALLOWED = 1 * 60 * 60 * 1000; //1 hour\nconst DELTA_SLEEP_PING_ERROR_CASE = 20 * 1000;\n\nexport class SleepDetector {\n    private sessionId: string = \"\";\n    private subSessionId: string = \"\";\n    private lastTimeSelfPing: number = 0;\n    private lastSubSessionIdSentOnSleep: string = \"\";\n    private lastSessionErrorCode: number = 0;\n    private lastSessionErrorTs: number = 0;\n    private sleepDetectIntervalId: number = 0;\n    private lastSleepDetectionTs: number = 0;\n    private sleepTime: number = 0;\n    private telemetry: TelemetryHandler;\n    constructor(telemetry: TelemetryHandler) {\n        this.telemetry = telemetry;\n    }\n\n    startSleepDetectionTimer() {\n        this.stopSleepDetectionTimer();\n        this.lastTimeSelfPing = new Date().getTime();\n        this.lastSessionErrorCode = 0;\n        this.lastSessionErrorTs = 0;\n        this.lastSleepDetectionTs = 0;\n        this.sleepTime = 0;\n        Log.i(\"{0f7a7d0}\", \"{d5ff5ba}\");\n        this.sleepDetectIntervalId = window.setInterval(\n            () => this.periodicSelfPing(),\n            PERIODIC_CALLBACK_INTERVAL_MS\n        );\n    }\n\n    stopSleepDetectionTimer() {\n        Log.i(\"{0f7a7d0}\", \"{206f492}\");\n        if (this.sleepDetectIntervalId) {\n            window.clearInterval(this.sleepDetectIntervalId);\n            this.sleepDetectIntervalId = 0;\n        }\n    }\n\n    private reportSleepEvent(sleepCaseMsg: string) {\n        if (this.lastSubSessionIdSentOnSleep !== this.subSessionId) {\n            this.telemetry.emitSleepEvent(\n                this.sleepTime,\n                this.lastTimeSelfPing - this.lastSessionErrorTs, //approx time taken to sleep after lid close, granularity is PERIODIC_CALLBACK_INTERVAL_MS unfortunatley\n                sleepCaseMsg,\n                GetHexString(this.lastSessionErrorCode),\n                this.sessionId,\n                this.subSessionId\n            );\n            this.lastSubSessionIdSentOnSleep = this.subSessionId;\n        }\n        this.stopSleepDetectionTimer();\n    }\n\n    private didSleep(currentTime: number): boolean {\n        return (\n            currentTime - this.lastTimeSelfPing - PERIODIC_CALLBACK_INTERVAL_MS > DELTA_SELF_PING_MS\n        );\n    }\n\n    private setSleepTime() {\n        this.sleepTime =\n            this.lastSleepDetectionTs - this.lastTimeSelfPing - PERIODIC_CALLBACK_INTERVAL_MS;\n    }\n\n    periodicSelfPing() {\n        try {\n            let currentTime = new Date().getTime();\n            if (this.didSleep(currentTime)) {\n                this.lastSleepDetectionTs = currentTime;\n                this.setSleepTime();\n            }\n\n            // handle cases:\n            // pings -> error -> sleep -> ping\n            // error -> pings -> sleep -> ping\n            if (this.didSleep(currentTime) && this.lastSessionErrorCode != 0) {\n                this.reportSleepEvent(\n                    this.lastTimeSelfPing - this.lastSessionErrorTs > 0 ? \"epsp\" : \"esp\"\n                );\n            } else if (currentTime - this.lastTimeSelfPing > MAX_TIMEOUT_ALLOWED) {\n                this.stopSleepDetectionTimer();\n            }\n            this.lastTimeSelfPing = currentTime;\n        } catch (ex) {}\n    }\n\n    // it returns false for pesp and epsp cases\n    wasSleepExit(errorCode: number): boolean {\n        if (\n            errorCode === RErrorCode.ServerDisconnectedIntended ||\n            errorCode === RErrorCode.Success\n        ) {\n            this.stopSleepDetectionTimer();\n            return false;\n        }\n        let currentTime = new Date().getTime();\n        this.lastSessionErrorCode = errorCode;\n        this.lastSessionErrorTs = currentTime;\n        Log.i(\"{0f7a7d0}\", \"{425293a}\", String(currentTime - this.lastTimeSelfPing), this.lastSleepDetectionTs);\n        // pings -> sleep -> error\n        if (this.didSleep(currentTime)) {\n            this.lastSleepDetectionTs = currentTime;\n            this.setSleepTime(); //could be off by PERIODIC_CALLBACK_INTERVAL_MS\n            this.reportSleepEvent(\"pse\");\n        }\n        // handle case:\n        // pings -> sleep -> ping -> error -> ping, only consider sleep in last DELTA_SLEEP_PING_ERROR_CASE secs\n        else if (\n            this.lastSleepDetectionTs !== 0 &&\n            currentTime - this.lastSleepDetectionTs < DELTA_SLEEP_PING_ERROR_CASE\n        ) {\n            this.reportSleepEvent(\"pspe\");\n        }\n        // sleep already detected by another mechanism\n        // e.g. pc signaling state set to closed\n        else if (\n            errorCode === RErrorCode.SystemSleepDuringSessionSetup ||\n            errorCode === RErrorCode.SystemSleepDuringStreaming\n        ) {\n            this.lastSleepDetectionTs = currentTime;\n            this.reportSleepEvent(\"other\");\n        }\n        return this.lastSleepDetectionTs !== 0;\n    }\n\n    setSessionId(sessionId: string) {\n        this.sessionId = sessionId;\n    }\n\n    setSubSessionId(subSessionId: string) {\n        this.subSessionId = subSessionId;\n    }\n}\n","import { GamepadDataHandler } from \"../interfaces\";\nimport { InputMediaElement } from \"../input/inputinterfaces\";\nimport { RagnarokSettings } from \"../util/settings\";\nimport { Log } from \"../dependencies\";\n\nconst LOGTAG = \"gamepadTester\";\nconst SUPPORTED_BUTTON_COUNT = 16;\nconst SUPPORTED_GAMEPAD_COUNT = 4;\n\ninterface GamepadData {\n    index: number;\n    buttons: number;\n    trigger: number;\n    axes: readonly number[];\n    name: string;\n}\n\n/**\n * This is the main class which provides ability to test multiple connected gamepads.\n */\nexport class GamepadTester implements GamepadDataHandler {\n    private gamepadTesterElementId: string = \"gamepadTester\";\n    private visible: boolean = false;\n    private gamepads: (GamepadData | null)[] = [];\n    private unsupportedGamepads: (GamepadData | null)[] = [];\n\n    constructor() {\n        if (RagnarokSettings.gamepadTesterEnabled) {\n            document.body.appendChild(this.initGamepadTesterElement());\n            this.start();\n        }\n    }\n\n    public gamepadBitmapUpdateHandler(gamepadBitmap: number) {\n        for (let gamepadIndex = 0; gamepadIndex < SUPPORTED_GAMEPAD_COUNT; gamepadIndex++) {\n            if ((gamepadBitmap & (1 << gamepadIndex)) == 0) {\n                this.gamepads[gamepadIndex] = null; // Remove gamepad from cache\n            }\n        }\n    }\n\n    public gamepadStateUpdateHandler(\n        count: number,\n        index: number,\n        buttons: number,\n        trigger: number,\n        axes: readonly number[],\n        ts: number,\n        gamepadBitmap: number,\n        name: string\n    ) {\n        this.gamepads[index] = {\n            index: index,\n            buttons: buttons,\n            trigger: trigger,\n            axes: axes,\n            name: name\n        };\n    }\n\n    public connectUnsupportedGamepad(gamepad: Gamepad) {\n        if (gamepad.index <= 3) {\n            this.unsupportedGamepads[gamepad.index] = {\n                index: gamepad.index,\n                buttons: -1,\n                trigger: -1,\n                axes: [-1],\n                name: gamepad.id\n            };\n        }\n    }\n\n    public disconnectUnsupportedGamepad(index: number) {\n        if (index <= 3) {\n            this.unsupportedGamepads[index] = null;\n        }\n    }\n\n    private initGamepadTesterElement(): HTMLElement {\n        let gamepadTester = document.createElement(\"div\");\n        gamepadTester.id = this.gamepadTesterElementId;\n        gamepadTester.className = \"genericdiv\";\n        gamepadTester.style.display = \"block\";\n        this.visible = true;\n\n        let connectedGamepadsText = document.createElement(\"p\");\n        connectedGamepadsText.style.color = \"white\";\n        connectedGamepadsText.style.position = \"relative\";\n        connectedGamepadsText.innerHTML = `Connected GamePads:`;\n        gamepadTester.appendChild(connectedGamepadsText);\n\n        let style = document.createElement(\"style\");\n        style.appendChild(\n            document.createTextNode(\".gamepad:nth-child(even) { float:left; clear: left; }\")\n        );\n        style.appendChild(\n            document.createTextNode(\".gamepad:nth-child(odd) { float:right; clear: right; }\")\n        );\n\n        document.head.appendChild(style);\n        return gamepadTester;\n    }\n\n    public toggleGamepadTester(videoTagElement: InputMediaElement) {\n        let gamepadTesterElement = document.getElementById(this.gamepadTesterElementId);\n        if (gamepadTesterElement) {\n            gamepadTesterElement.remove();\n            this.gamepads = []; // Clear the cache\n            this.visible = false;\n        } else {\n            // Create a new GamepadTester element to be a sibling of the Stream Video\n            videoTagElement.insertAdjacentElement(\"afterend\", this.initGamepadTesterElement());\n            this.start();\n        }\n    }\n\n    private start() {\n        let animationFrame: number;\n        let gamepadTesterContainer = document.getElementById(this.gamepadTesterElementId)!;\n        if (gamepadTesterContainer == null) {\n            Log.e(\"{e13a879}\", \"{0c955af}\");\n            return;\n        }\n\n        //Analog Stick Positions\n        let gamepadWidth = window.innerWidth * 0.49;\n        let gamepadHeight = window.innerHeight * 0.4;\n        let leftJoyX = gamepadWidth * 0.3;\n        let rightJoyX = gamepadWidth * 0.7;\n        let leftJoyY = gamepadHeight * 0.8;\n        let rightJoyY = gamepadHeight * 0.8;\n        let joyStickMultiplier = gamepadWidth * 0.07;\n\n        const getJoystickPosition = (gamepad: GamepadData) => {\n            if (gamepad)\n                return {\n                    left: {\n                        X: gamepad.axes![0],\n                        Y: gamepad.axes![1]\n                    },\n                    right: {\n                        X: gamepad.axes![2],\n                        Y: gamepad.axes![3]\n                    }\n                };\n            else return null;\n        };\n\n        const initJoystickCSS = (joystick: HTMLElement) => {\n            joystick.style.position = \"absolute\";\n            joystick.style.width = \"2%\";\n            joystick.style.height = \"3.5%\";\n            joystick.style.backgroundColor = \"red\";\n            joystick.style.borderRadius = \"50%\";\n            joystick.style.transform = \"translate(-50%, -50%)\";\n        };\n\n        const setJoyStickPositions = (gamepad: GamepadData) => {\n            // Obtain current joystick position\n            let axes = getJoystickPosition(gamepad);\n\n            if (\n                // Check for Joystick Leftstick Element\n                gamepadTesterContainer\n                    .querySelector(`.gamepad${gamepad.index}`)!\n                    .querySelector(\".leftStick\") === null\n            ) {\n                // Create Joystick Leftstick Element\n                let newJoystick = document.createElement(\"div\");\n                newJoystick.className = \"gamepadJoystickPointer leftStick\";\n                initJoystickCSS(newJoystick);\n                newJoystick.style.left = `${\n                    leftJoyX + <number>axes!.left.X * joyStickMultiplier\n                }px`;\n                newJoystick.style.top = `${leftJoyY + <number>axes!.left.Y * joyStickMultiplier}px`;\n                gamepadTesterContainer\n                    .querySelector(`.gamepad${gamepad.index}`)!\n                    .querySelector(\".gamepadContainer\")!\n                    .appendChild(newJoystick);\n            } else {\n                // Update Joystick Leftstick Element\n                let joystick = gamepadTesterContainer\n                    .querySelector<HTMLElement>(`.gamepad${gamepad.index}`)!\n                    .querySelector<HTMLElement>(\".leftStick\")!;\n                joystick.style.opacity = \"1\";\n                joystick.style.left = `${leftJoyX + joyStickMultiplier * <number>axes!.left.X}px`;\n                joystick.style.top = `${leftJoyY + <number>axes!.left.Y * joyStickMultiplier}px`;\n            }\n\n            if (\n                // Check for Joystick Rightstick Element\n                gamepadTesterContainer\n                    .querySelector<HTMLElement>(`.gamepad${gamepad.index}`)!\n                    .querySelector(\".rightStick\") === null\n            ) {\n                // Create Joystick Rightstick Element\n                let newJoystick = document.createElement(\"div\");\n                newJoystick.className = \"gamepadJoystickPointer rightStick\";\n                initJoystickCSS(newJoystick);\n                newJoystick.style.left = `${\n                    rightJoyX + <number>axes!.right.X * joyStickMultiplier\n                }px`;\n                newJoystick.style.top = `${\n                    rightJoyY + <number>axes!.right.Y * joyStickMultiplier\n                }px`;\n                gamepadTesterContainer\n                    .querySelector(`.gamepad${gamepad.index}`)!\n                    .querySelector(\".gamepadContainer\")!\n                    .appendChild(newJoystick);\n            } else {\n                // Update Joystick Rightstick Element\n                let joystick = gamepadTesterContainer\n                    .querySelector<HTMLElement>(`.gamepad${gamepad.index}`)!\n                    .querySelector<HTMLElement>(\".rightStick\")!;\n                joystick.style.opacity = \"1\";\n                joystick.style.left =\n                    (rightJoyX + <number>axes!.right.X * joyStickMultiplier).toString() + \"px\";\n                joystick.style.top =\n                    (rightJoyY + <number>axes!.right.Y * joyStickMultiplier).toString() + \"px\";\n            }\n        };\n\n        const renderButtons = (canvas: HTMLCanvasElement, buttonIndex: number, fill: boolean) => {\n            var ctx = canvas.getContext(\"2d\");\n            ctx!.beginPath();\n            if (fill) {\n                ctx!.fillStyle = \"green\";\n            } else {\n                ctx!.fillStyle = \"grey\";\n            }\n\n            /**\n             * The below decimals multiplied by the canvas.width represent the position on the screen.\n             * Thus, canvas.width * 0.50 would be halfway across the width of the screen and\n             * canvas.height * 0.50 would be halfway across the height of the screen.\n             */\n            switch (buttonIndex) {\n                case 0:\n                    // D-pad Up\n                    ctx!.moveTo(canvas.width * 0.14, canvas.height * 0.48);\n                    ctx!.lineTo(canvas.width * 0.19, canvas.height * 0.48);\n                    ctx!.lineTo(canvas.width * 0.165, canvas.height * 0.54);\n                    ctx!.lineTo(canvas.width * 0.14, canvas.height * 0.48);\n                    break;\n                case 1:\n                    // D-pad Down\n                    ctx!.moveTo(canvas.width * 0.14, canvas.height * 0.66);\n                    ctx!.lineTo(canvas.width * 0.19, canvas.height * 0.66);\n                    ctx!.lineTo(canvas.width * 0.165, canvas.height * 0.61);\n                    ctx!.lineTo(canvas.width * 0.14, canvas.height * 0.66);\n                    break;\n                case 2:\n                    // D-pad Left\n                    ctx!.moveTo(canvas.width * 0.09, canvas.height * 0.55);\n                    ctx!.lineTo(canvas.width * 0.09, canvas.height * 0.61);\n                    ctx!.lineTo(canvas.width * 0.135, canvas.height * 0.57);\n                    ctx!.lineTo(canvas.width * 0.09, canvas.height * 0.55);\n                    break;\n                case 3:\n                    // D-pad Right\n                    ctx!.moveTo(canvas.width * 0.24, canvas.height * 0.55);\n                    ctx!.lineTo(canvas.width * 0.24, canvas.height * 0.61);\n                    ctx!.lineTo(canvas.width * 0.195, canvas.height * 0.57);\n                    ctx!.lineTo(canvas.width * 0.24, canvas.height * 0.55);\n                    break;\n                case 4:\n                    // Start\n                    ctx!.arc(\n                        canvas.width * 0.7,\n                        canvas.height * 0.4,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 5:\n                    // Back\n                    ctx!.arc(\n                        canvas.width * 0.3,\n                        canvas.height * 0.4,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 6:\n                    // Thumstick Left\n                    ctx!.arc(\n                        canvas.width * 0.3,\n                        canvas.height * 0.8,\n                        canvas.width * 0.07,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 7:\n                    // Thumbstick Right\n                    ctx!.arc(\n                        canvas.width * 0.7,\n                        canvas.height * 0.8,\n                        canvas.width * 0.07,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 8:\n                    // Left Bumper\n                    ctx!.rect(\n                        canvas.width * 0.13,\n                        canvas.height * 0.23,\n                        canvas.width * 0.07,\n                        canvas.height * 0.05\n                    );\n                    break;\n                case 9:\n                    // Right Bumper\n                    ctx!.rect(\n                        canvas.width * 0.815,\n                        canvas.height * 0.23,\n                        canvas.width * 0.07,\n                        canvas.height * 0.05\n                    );\n                    break;\n                case 12:\n                    // A\n                    ctx!.arc(\n                        canvas.width * 0.85,\n                        canvas.height * 0.65,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 13:\n                    // B\n                    ctx!.arc(\n                        canvas.width * 0.9,\n                        canvas.height * 0.55,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 14:\n                    // X\n                    ctx!.arc(\n                        canvas.width * 0.8,\n                        canvas.height * 0.55,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case 15:\n                    // Y\n                    ctx!.arc(\n                        canvas.width * 0.85,\n                        canvas.height * 0.45,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n                    break;\n                case -1:\n                    // Left Trigger\n                    ctx!.rect(\n                        canvas.width * 0.155,\n                        canvas.height * 0.07,\n                        canvas.width * 0.02,\n                        canvas.height * 0.12\n                    );\n                    break;\n                case -2:\n                    // Right Trigger\n                    ctx!.rect(\n                        canvas.width * 0.84,\n                        canvas.height * 0.07,\n                        canvas.width * 0.02,\n                        canvas.height * 0.12\n                    );\n                    break;\n                /*\n                B16 - MENU | Currently Unsupported DNE\n                    ctx!.arc(\n                        canvas.width * 0.5,\n                        canvas.height * 0.65,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n\n                B17 - TOUCHPAD | Currently Unsupported DNE\n                    ctx!.arc(\n                        canvas.width * 0.5,\n                        canvas.height * 0.5,\n                        canvas.width * 0.02,\n                        0,\n                        2 * Math.PI\n                    );\n\n                */\n            }\n            ctx!.closePath();\n            ctx!.fill();\n        };\n\n        const initGamepadDiv = (gamepad: GamepadData) => {\n            // Create Gamepad Field if DNE\n            if (gamepadTesterContainer.querySelector(`.gamepad${gamepad.index}`) === null) {\n                // Gamepad Parent\n                let gamepadElement = document.createElement(\"div\");\n                gamepadElement.className = `gamepad gamepad${gamepad.index}`;\n\n                // Gamepad Description\n                let gamepadID = document.createElement(\"p\");\n                gamepadID.className = \"active\";\n                gamepadID.style.margin = \"0px\";\n                let gamepadIDText = document.createElement(\"span\");\n                gamepadIDText.className = \"gamepadPlayerNumber\";\n                gamepadIDText.style.color = \"white\";\n                gamepadIDText.style.position = \"relative\";\n                gamepadIDText.innerHTML = `P${gamepad.index + 1}|${gamepad.name}`;\n                gamepadIDText.style.fontSize = \"1.5vw\";\n                gamepadID.appendChild(gamepadIDText);\n                gamepadElement.appendChild(gamepadID);\n\n                // Create the Gamepad container for Gamepad display\n                let gamepadContainer = document.createElement(\"div\");\n                gamepadContainer.className = \"gamepadContainer\";\n                gamepadContainer.style.position = \"relative\";\n                gamepadContainer.style.width = `${gamepadWidth + 2 /*canvas border*/}px`;\n                gamepadContainer.style.height = `${gamepadHeight}px`;\n\n                // Create the Canvas to Draw the Gamepad Layout\n                let canvas = document.createElement(\"canvas\");\n                canvas.className = \"canvas\";\n                canvas.style.width = `${gamepadWidth}px`;\n                canvas.style.height = `${gamepadHeight}px`;\n                canvas.style.border = \"1px solid white\";\n\n                gamepadContainer.appendChild(canvas);\n\n                // Add Gamepad Display to Gamepad Div\n                gamepadElement.appendChild(gamepadContainer);\n\n                // Add Gamepad Div to DOM\n                gamepadTesterContainer.appendChild(gamepadElement);\n            }\n        };\n\n        const gameLoop = () => {\n            if (this.visible) {\n                for (let i = 0; i < this.gamepads.length; i++) {\n                    let gamepad = this.gamepads[i];\n\n                    if (gamepad) {\n                        if (\n                            // Check HTML Element for the Gamepad Exists\n                            !gamepadTesterContainer.querySelector<HTMLElement>(\n                                `.gamepad${gamepad.index}`\n                            )\n                        ) {\n                            initGamepadDiv(gamepad);\n                        }\n                        setJoyStickPositions(gamepad);\n\n                        let canvas = gamepadTesterContainer\n                            .querySelector<HTMLElement>(`.gamepad${gamepad.index}`)!\n                            .querySelector<HTMLCanvasElement>(\"canvas\")!;\n                        for (\n                            let buttonIndex = 0;\n                            buttonIndex < SUPPORTED_BUTTON_COUNT;\n                            buttonIndex++\n                        ) {\n                            // Check for pressed buttons\n                            if ((gamepad.buttons & (1 << buttonIndex)) != 0) {\n                                renderButtons(canvas, buttonIndex, /*fill*/ true);\n                            } else {\n                                renderButtons(canvas, buttonIndex, /*fill*/ false);\n                            }\n                        }\n\n                        // Left Trigger\n                        if ((gamepad.trigger & 0xff) != 0) {\n                            renderButtons(canvas, -1, /*fill*/ true);\n                        } else {\n                            renderButtons(canvas, -1, /*fill*/ false);\n                        }\n                        // Right Trigger\n                        if ((gamepad.trigger & (0xff << 8)) != 0) {\n                            renderButtons(canvas, -2, /*fill*/ true);\n                        } else {\n                            renderButtons(canvas, -2, /*fill*/ false);\n                        }\n                    } else {\n                        if (this.unsupportedGamepads[i]) {\n                            // Gamepad exists, but is unsupported\n                            if (\n                                // Check HTML Element for the Gamepad Exists\n                                !gamepadTesterContainer.querySelector<HTMLElement>(`.gamepad${i}`)\n                            ) {\n                                initGamepadDiv(this.unsupportedGamepads[i]!);\n\n                                let canvas = gamepadTesterContainer\n                                    .querySelector<HTMLElement>(`.gamepad${i}`)!\n                                    .querySelector<HTMLCanvasElement>(\"canvas\")!;\n                                let ctx = canvas.getContext(\"2d\")!;\n                                ctx.font = \"20px Arial\";\n                                ctx.fillStyle = \"white\";\n                                ctx.textAlign = \"center\";\n                                ctx.fillText(\n                                    \"Unsupported Gamepad\",\n                                    canvas.width / 2,\n                                    canvas.height / 2\n                                );\n                            }\n                        } else {\n                            // Disconnected constroller - remove containers\n                            let child = gamepadTesterContainer.querySelector(`.gamepad${i}`);\n                            if (child) {\n                                gamepadTesterContainer.removeChild(child);\n                            }\n                        }\n                    }\n                }\n\n                animationFrame = window.requestAnimationFrame(gameLoop);\n            } else {\n                // If not visible, stop the animation loop\n                window.cancelAnimationFrame(animationFrame);\n            }\n        };\n\n        gameLoop();\n    }\n\n    // Unused interface functions\n    public finalizeGamepadData(count: number) {}\n\n    public virtualGamepadUpdateHandler(\n        buttons: number,\n        trigger: number,\n        index: number,\n        axes: readonly number[],\n        gamepadBitmap: number\n    ) {}\n}\n","import { LatencyIndicator } from \"../debug/latencyindicator\";\n\n/**\n * All buttons which virtual gamepad can have.\n */\nexport const enum VirtualButton {\n    A = 0x1000,\n    B = 0x2000,\n    X = 0x4000,\n    Y = 0x8000,\n    LB = 0x0100,\n    RB = 0x0200,\n    LT = 0xff,\n    RT = 0xff00,\n    BACK = 0x0020,\n    START = 0x0010,\n    STICK_LEFT = 0x0040,\n    STICK_RIGHT = 0x0080,\n    DPAD_UP = 0x0001,\n    DPAD_DOWN = 0x0002,\n    DPAD_LEFT = 0x0004,\n    DPAD_RIGHT = 0x0008\n}\n\n/**\n * VirtualGamepad represents the storage for virtual gamepad events passed\n * from client.\n */\nexport interface VirtualGamepad {\n    v_index: number;\n    v_enabled: boolean;\n    v_connected: boolean;\n    v_buttons: number;\n    v_trigger: number;\n    v_axes: number[];\n    v_updated: boolean;\n}\n\n/**\n * This is the virtual gamepad interface for client. Gridapp provides the\n * reference of this class for clients to enable/disable and pass input.\n *\n * The interface defines the protocol to interact with VirtualGamepadHandler.\n * The actual instance could be obtained by using the call:\n * const virtualGamepadHandler: VirtualGamepadHandler = gridApp.getVirtualGamepadHandler();\n *\n * We need this way for client to pass gamepad input because we want to keep\n * all UI things out of the Ragnarok library.\n */\ndeclare interface IVirtualGamepadHandler {\n    /**\n     * Client should call this when virtual gamepad UI is shown.\n     */\n    enable(): void;\n\n    /**\n     * Client should call this when virtual gamepad UI is hidden.\n     */\n    disable(): void;\n\n    /**\n     * Clients should call this when virtual gamepad buttons/triggers/axes are\n     * pressed or released, and virtual gamepad input is to be sent to server.\n     * Clients should pass all valid arguments and must clear all values to\n     * return to controls to a neutral state.\n     * @param buttons - buttons that need to be updated. Accept multiple buttons at a time.\n     * @param trigger - triggers that need to be updated. Accept multiple triggers at a time.\n     * @param axes - axes that need to be updated. Accept mutiple axes at a time.\n     */\n    updateInput(buttons: number, trigger: number, axes: number[]): void;\n}\n\nexport class VirtualGamepadHandler implements IVirtualGamepadHandler {\n    private virtualGamepad: VirtualGamepad;\n    constructor(virtualGamepad: VirtualGamepad) {\n        this.virtualGamepad = virtualGamepad;\n    }\n\n    enable() {\n        this.virtualGamepad.v_enabled = true;\n    }\n\n    disable() {\n        this.virtualGamepad.v_enabled = false;\n    }\n\n    updateInput(buttons: number, trigger: number, axes: number[]) {\n        if (this.virtualGamepad.v_enabled) {\n            LatencyIndicator.getInstance().toggleIndicator();\n\n            this.virtualGamepad.v_buttons = buttons;\n            this.virtualGamepad.v_trigger = trigger;\n            this.virtualGamepad.v_axes = axes;\n            this.virtualGamepad.v_updated = true;\n        }\n    }\n}\n","import { ErrorDetails, getRErrorDetails, Log } from \"../dependencies\";\n\nconst LOGTAG = \"indexdb\";\n\nexport const enum IndexDbErrorCode {\n    //DbCommon Errors\n    DbNotYetOpen = 0x01,\n    DbClosing = 0x02,\n\n    //DbOpen Errors\n    IndexDbObjectNotFound = 0x11,\n    DbOpenfailed = 0x12,\n    DbOpenBlocked = 0x13,\n    DbExceptionInOpen = 0x14,\n\n    //Db Get Errors\n    DbGetFailed = 0x20,\n    DbExceptionInGet = 0x21,\n\n    //Db Put Errors\n    DbPutFailed = 0x30,\n    DbExceptionInPut = 0x31,\n\n    //Db Delete Errors\n    DbDeleteFailed = 0x40,\n    DbExceptionInDelete = 0x41,\n\n    // Db clear Errors\n    DbClearFailed = 0x50,\n    DbExceptionInClear = 0x51,\n\n    // Db GetAll Errors\n    DbGetAllFailed = 0x60,\n    DbExceptionInGetAll = 0x61\n}\n\nexport interface StoreDetails {\n    storeName: string;\n    storeOptions: IDBObjectStoreParameters;\n    storeIndexName: string;\n}\n\nexport class IndexedDb {\n    private indexedDb: IDBFactory = window[\"indexedDB\"];\n    private version: number = 2;\n    private name: string;\n    private storeDetails: StoreDetails[];\n    private dbInstance?: IDBDatabase;\n    private isDbClosing: boolean = false;\n    private didDbCloseUnexpectedly: boolean = false;\n\n    constructor(dbName: string, storeDetails: StoreDetails[]) {\n        this.name = dbName;\n        this.storeDetails = storeDetails;\n    }\n\n    public open(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            try {\n                if (!!this.indexedDb) {\n                    let request: IDBOpenDBRequest = this.indexedDb.open(this.name, this.version);\n                    request.onerror = (event: Event) => {\n                        reject(\n                            getRErrorDetails(\n                                IndexDbErrorCode.DbOpenfailed,\n                                `${this.name} db opening failed`,\n                                request.error\n                            )\n                        );\n                    };\n\n                    request.onsuccess = (event: Event) => {\n                        this.createDbInstance(request.result);\n                        resolve();\n                    };\n\n                    request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n                        Log.i(\"{10dc2cc}\", \"{1f70767}\", event.oldVersion, event.newVersion);\n                        this.createDbInstance(request.result);\n                        // @todo make sure createObjectStore is called with store name that doesn't exist. So possibly copy data and delete if it exists\n                        // and write in new store but that change is only needed when the upgrade is done in future.\n                        const createObjectStoreFunc = (storeDetails: StoreDetails) => {\n                            const objectStore = this.dbInstance?.createObjectStore(\n                                storeDetails.storeName,\n                                storeDetails.storeOptions\n                            );\n                            if (storeDetails.storeOptions.keyPath) {\n                                objectStore?.createIndex(\n                                    storeDetails.storeIndexName,\n                                    storeDetails.storeOptions.keyPath,\n                                    {\n                                        unique: true\n                                    }\n                                );\n                            }\n                        };\n                        switch (event.oldVersion) {\n                            case 0:\n                                createObjectStoreFunc(this.storeDetails[0]);\n                            case 1:\n                                createObjectStoreFunc(this.storeDetails[1]);\n                                break;\n                        }\n                    };\n\n                    request.onblocked = (event: Event) => {\n                        reject(\n                            getRErrorDetails(\n                                IndexDbErrorCode.DbOpenBlocked,\n                                `${this.name} db blocked during opening`,\n                                request.error\n                            )\n                        );\n                    };\n                } else {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.IndexDbObjectNotFound,\n                            \"Indexdb object not found\"\n                        )\n                    );\n                }\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInOpen,\n                        `Unexpected Exception in open`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    private getDbStateError(): ErrorDetails | undefined {\n        if (!this.indexedDb) {\n            return getRErrorDetails(\n                IndexDbErrorCode.IndexDbObjectNotFound,\n                \"Indexdb object not found\"\n            );\n        } else if (!this.dbInstance) {\n            return getRErrorDetails(IndexDbErrorCode.DbNotYetOpen, \"Db not yet open\");\n        } else if (this.isDbClosing) {\n            const isVisibilityStateHidden = document.visibilityState === \"hidden\";\n            return getRErrorDetails(\n                IndexDbErrorCode.DbClosing,\n                \"Db is closing, unexpectedly: \" +\n                    this.didDbCloseUnexpectedly +\n                    \", visibility state hidden: \" +\n                    isVisibilityStateHidden\n            );\n        }\n        return undefined;\n    }\n\n    public get(storeName: string, key: string[]): Promise<any> {\n        const error = this.getDbStateError();\n        if (error) {\n            return Promise.reject(error);\n        }\n        return new Promise<any>((resolve, reject) => {\n            try {\n                const tx = this.dbInstance!.transaction(storeName, \"readonly\");\n                const store = tx.objectStore(storeName);\n\n                tx.oncomplete = event => {\n                    Log.i(\"{10dc2cc}\", \"{82638ba}\");\n                };\n\n                const queriedObject = store.get(key);\n                queriedObject.onsuccess = () => {\n                    resolve(queriedObject.result);\n                };\n                queriedObject.onerror = event => {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.DbGetFailed,\n                            `get method failed`,\n                            tx.error\n                        )\n                    );\n                };\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInGet,\n                        `Unexpected Exception happened in get`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    public set(storeName: string, data: any): Promise<void> {\n        const error = this.getDbStateError();\n        if (error) {\n            return Promise.reject(error);\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                const tx = this.dbInstance!.transaction(storeName, \"readwrite\");\n                const store = tx.objectStore(storeName);\n\n                tx.oncomplete = event => {\n                    Log.i(\"{10dc2cc}\", \"{f993875}\");\n                };\n\n                const result = store.put(data);\n                result.onsuccess = () => {\n                    resolve();\n                };\n                result.onerror = event => {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.DbPutFailed,\n                            `put method failed`,\n                            tx.error\n                        )\n                    );\n                };\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInPut,\n                        `Unexpected Exception happened in set`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    public delete(storeName: string, key: string[]): Promise<void> {\n        const error = this.getDbStateError();\n        if (error) {\n            return Promise.reject(error);\n        }\n        return new Promise<void>((resolve, reject) => {\n            try {\n                const tx = this.dbInstance!.transaction(storeName, \"readwrite\");\n                const store = tx.objectStore(storeName);\n\n                tx.oncomplete = event => {\n                    Log.i(\"{10dc2cc}\", \"{bc32bd7}\");\n                };\n\n                const result = store.delete(key);\n                result.onsuccess = () => {\n                    resolve();\n                };\n                result.onerror = event => {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.DbDeleteFailed,\n                            `delete method failed`,\n                            tx.error\n                        )\n                    );\n                };\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInDelete,\n                        `Unexpected Exception in delete`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    public clear(storeName: string): Promise<void> {\n        const error = this.getDbStateError();\n        if (error) {\n            return Promise.reject(error);\n        }\n        return new Promise<void>((resolve, reject) => {\n            try {\n                const tx = this.dbInstance!.transaction(storeName, \"readwrite\");\n                const store = tx.objectStore(storeName);\n\n                tx.oncomplete = event => {\n                    Log.i(\"{10dc2cc}\", \"{30f23d1}\");\n                };\n\n                const result = store.clear();\n                result.onsuccess = () => {\n                    resolve();\n                };\n                result.onerror = event => {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.DbClearFailed,\n                            `clear method failed)`,\n                            tx.error\n                        )\n                    );\n                };\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInClear,\n                        `Unexpected Exception happened in clear`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    public getAll(storeName: string): Promise<any[]> {\n        const error = this.getDbStateError();\n        if (error) {\n            return Promise.reject(error);\n        }\n        return new Promise<any[]>((resolve, reject) => {\n            try {\n                const tx = this.dbInstance!.transaction(storeName, \"readonly\");\n                const store = tx.objectStore(storeName);\n\n                tx.oncomplete = event => {\n                    Log.i(\"{10dc2cc}\", \"{59d1f78}\");\n                };\n\n                const queriedObject = store.getAll();\n                queriedObject.onsuccess = () => {\n                    resolve(queriedObject.result);\n                };\n                queriedObject.onerror = event => {\n                    reject(\n                        getRErrorDetails(\n                            IndexDbErrorCode.DbGetAllFailed,\n                            `getAll method failed`,\n                            tx.error\n                        )\n                    );\n                };\n            } catch (err) {\n                reject(\n                    getRErrorDetails(\n                        IndexDbErrorCode.DbExceptionInGetAll,\n                        `Unexpected Exception in getAll`,\n                        err\n                    )\n                );\n            }\n        });\n    }\n\n    public close() {\n        this.isDbClosing = true;\n        this.dbInstance?.close();\n    }\n\n    private createDbInstance(instance: IDBDatabase) {\n        this.isDbClosing = false;\n        this.didDbCloseUnexpectedly = false;\n        this.dbInstance = instance;\n        this.dbInstance.onversionchange = (event: Event) => {\n            Log.w(\"{10dc2cc}\", \"{65276d8}\");\n            this.close();\n            this.dbInstance = undefined;\n        };\n        this.dbInstance.onclose = (event: Event) => {\n            Log.w(\"{10dc2cc}\", \"{342f7f8}\");\n            this.isDbClosing = true;\n            this.didDbCloseUnexpectedly = true;\n        };\n    }\n}\n","//@todo how to eliminate this piece of code in production ?\n\nimport { GridServer, GsInitParams, Log } from \"../dependencies\";\n\nconst LOGTAG = \"mockpmgridserver\";\n\n// these will be useless data in production build\nexport class MockPMGridServer extends GridServer {\n    constructor() {\n        super();\n        this.overrideSignallingInfo = false; // Only http support as supported in this semi passthru mode.\n    }\n\n    initialize(initParams: GsInitParams) {\n        super.initialize(initParams);\n        this.protocol = \"http://\";\n    }\n\n    generateAuthToken() {\n        // Fake auth token.\n        return new Promise((resolve, reject) => {\n            window.setTimeout(() => {\n                Log.d(\"{3660ed9}\", \"{d80a6e8}\");\n                resolve(\"JARVIS auth =testauthToken\");\n            }, 0);\n        });\n    }\n}\n","(window as any)[\"Ragnarok\"] = (window as any)[\"Ragnarok\"] || {};\n\n/* Typings to be exposed to library user */\nexport { GridApp } from \"./output/gridapp\";\nexport * from \"./output/interfaces\";\nexport * from \"./output/rerrorcode\";\nexport {\n    EdgeInsets,\n    ChooseStreamingSettings,\n    ChooseStreamingResolution,\n    CalculateMaxBitrateKbps,\n    CalculateDataUsage,\n    InitializeUtils,\n    IsFeatureSupported,\n    GetSupportedAudioChannelCount\n} from \"./output/util/utils\";\nexport {\n    VideoMode,\n    ScaledVideoMode,\n    DeviceCapabilities,\n    StreamFeatures,\n    GetDeviceCapabilities\n} from \"./output/util/devicecapabilities\";\nexport { VirtualButton, VirtualGamepad, VirtualGamepadHandler } from \"./output/input/virtualgamepad\";\nexport * from \"./output/util/settings\";\nexport * from \"../gridserver-core/index-output\";\nexport {\n    CHANGELIST,\n    CLIENT_VERSION,\n    CLIENT_IDENTIFICATION,\n    BrowserName,\n    PlatformName,\n    DeviceType,\n    DeviceOS,\n    DeviceModel,\n    DeviceVendor,\n    getPlatformDetails,\n    PlatformDetails,\n    LogLevel,\n    LogEvent,\n    authTokenCallbackType,\n    AuthType,\n    AuthInfo,\n    // Dev client is still relying on these interfaces, so export them intentionally\n    performHttpRequest,\n    RequestHttpOptions,\n    Response,\n    AddPlatformTelemetry,\n    LogImpl,\n    PayloadPlatformDetails,\n    ClientHeaderPlatformDetails,\n    PayloadOSType,\n    PayloadBrowserType,\n    PayloadDeviceType,\n    ClientHeaderOSType,\n    ClientHeaderBrowserType,\n    ClientHeaderDeviceType,\n    translatePlatformDetailsForPayload,\n    translatePlatformDetailsForClientHeader\n} from \"../rtcutils-core/index-output\";\n","/**\n * @fileoverview added by tsickle\n * Generated from: gridserver-core/index-output.ts\n * @suppress {checkTypes,const,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode}\n */\ngoog.module('gridserver_core.index_output');\nvar module = module || { id: 'index-output.ts' };\ngoog.require('tslib');\nconst tsickle_interfaces_1 = goog.requireType(\"gridserver_core.output.interfaces\");\nconst tsickle_gridserver_2 = goog.requireType(\"gridserver_core.output.gridserver\");\nconst tsickle_settings_3 = goog.requireType(\"gridserver_core.output.settings\");\nconst tsickle_gserrorcode_4 = goog.requireType(\"gridserver_core.output.gserrorcode\");\nconst tsickle_dependencies_5 = goog.requireType(\"gridserver_core.output.dependencies\");\nconst tsickle_gstelemetryinterfaces_6 = goog.requireType(\"gridserver_core.output.gstelemetryinterfaces\");\nconst tsickle_gstelemetryhandler_7 = goog.requireType(\"gridserver_core.output.gstelemetryhandler\");\n((/** @type {?} */ (window)))[\"GridServer\"] = ((/** @type {?} */ (window)))[\"GridServer\"] || {};\n/* Typings to be exposed to library user */\nconst interfaces_1 = goog.require('gridserver_core.output.interfaces');\n/** @typedef {!tsickle_interfaces_1.GsInitParams} */\nexports.GsInitParams; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.MetaData} */\nexports.MetaData; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ActiveSessionInfo} */\nexports.ActiveSessionInfo; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.StreamParam} */\nexports.StreamParam; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.SessionParams} */\nexports.SessionParams; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ActiveSessionResultEvent} */\nexports.ActiveSessionResultEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.SessionProgressUpdateEvent} */\nexports.SessionProgressUpdateEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.SessionUpdateEvent} */\nexports.SessionUpdateEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.TelemetryHttpEvent} */\nexports.TelemetryHttpEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.TelemetryDebugEvent} */\nexports.TelemetryDebugEvent; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ClientTelemetryConfig} */\nexports.ClientTelemetryConfig; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.TelemetryEventPayload} */\nexports.TelemetryEventPayload; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.TelemetryEventIds} */\nexports.TelemetryEventIds; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ServerInfo} */\nexports.ServerInfo; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.StreamInfo} */\nexports.StreamInfo; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.GridSession} */\nexports.GridSession; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ServerError} */\nexports.ServerError; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.ConnectionInfo} */\nexports.ConnectionInfo; // re-export typedef\n/** @typedef {!tsickle_interfaces_1.MonitorSettings} */\nexports.MonitorSettings; // re-export typedef\nconst gridserver_1 = goog.require('gridserver_core.output.gridserver');\nexports.GridServer = gridserver_1.GridServer;\nexports.PassThruServer = gridserver_1.PassThruServer;\nconst settings_1 = goog.require('gridserver_core.output.settings');\nexports.ConfigureGridServerSettings = settings_1.ConfigureGridServerSettings;\nexports.GridServerSettings = settings_1.GridServerSettings;\n/** @typedef {!tsickle_settings_3.CommonConfig} */\nexports.CommonConfig; // re-export typedef\n/** @typedef {!tsickle_settings_3.RemoteOverrideInfo} */\nexports.RemoteOverrideInfo; // re-export typedef\n/** @typedef {!tsickle_settings_3.GxtRemoteConfigData} */\nexports.GxtRemoteConfigData; // re-export typedef\n/** @typedef {!tsickle_settings_3.GridServerConfigData} */\nexports.GridServerConfigData; // re-export typedef\nconst gserrorcode_1 = goog.require('gridserver_core.output.gserrorcode');\nconst dependencies_1 = goog.require('gridserver_core.output.dependencies');\nexports.getPlatformDetails = dependencies_1.getPlatformDetails;\n/** @typedef {!tsickle_dependencies_5.PlatformDetails} */\nexports.PlatformDetails; // re-export typedef\nconst gstelemetryinterfaces_1 = goog.require('gridserver_core.output.gstelemetryinterfaces');\nexports.TelemetryEventBase = gstelemetryinterfaces_1.TelemetryEventBase;\nexports.GridServer_GameLaunch_RequestDef = gstelemetryinterfaces_1.GridServer_GameLaunch_RequestDef;\nexports.GS_FeatureDef = gstelemetryinterfaces_1.GS_FeatureDef;\nexports.GS_SystemAPICallResultDef = gstelemetryinterfaces_1.GS_SystemAPICallResultDef;\nexports.GS_DebugInfoDef = gstelemetryinterfaces_1.GS_DebugInfoDef;\nexports.GS_ExceptionInfoDef = gstelemetryinterfaces_1.GS_ExceptionInfoDef;\nexports.GS_ClientMetricEventDef = gstelemetryinterfaces_1.GS_ClientMetricEventDef;\nexports.GS_ConnectivityCheckDef = gstelemetryinterfaces_1.GS_ConnectivityCheckDef;\nexports.GS_Sleep_EventDef = gstelemetryinterfaces_1.GS_Sleep_EventDef;\nexports.GS_HttpCallResultDef = gstelemetryinterfaces_1.GS_HttpCallResultDef;\nexports.GS_PropertyChange_EventDef = gstelemetryinterfaces_1.GS_PropertyChange_EventDef;\nexports.GS_CodecError_EventDef = gstelemetryinterfaces_1.GS_CodecError_EventDef;\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GridServer_GameLaunch_Request} */\nexports.GridServer_GameLaunch_Request; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_Feature} */\nexports.GS_Feature; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_SystemAPICallResult} */\nexports.GS_SystemAPICallResult; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_DebugInfo} */\nexports.GS_DebugInfo; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_ExceptionInfo} */\nexports.GS_ExceptionInfo; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_ClientMetricEvent} */\nexports.GS_ClientMetricEvent; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_ConnectivityCheck} */\nexports.GS_ConnectivityCheck; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_Sleep_Event} */\nexports.GS_Sleep_Event; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_HttpCallResult} */\nexports.GS_HttpCallResult; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_PropertyChange_Event} */\nexports.GS_PropertyChange_Event; // re-export typedef\n/** @typedef {!tsickle_gstelemetryinterfaces_6.GS_CodecError_Event} */\nexports.GS_CodecError_Event; // re-export typedef\nconst gstelemetryhandler_1 = goog.require('gridserver_core.output.gstelemetryhandler');\nexports.GsTelemetryHandler = gstelemetryhandler_1.GsTelemetryHandler;\n","export const CHANGELIST = \"Local\";\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","module.exports = require(\"@opentelemetry/api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const addIceCandidateNullSupported =\n    window.RTCPeerConnection.prototype.addIceCandidate.length === 0;\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!addIceCandidateNullSupported && !arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions. Native support planned for Chrome M77.\n      if (browserDetails.version < 78 &&\n        arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window) {\n  const browserDetails = utils.detectBrowser(window);\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    const nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        var params = origGetParameters.apply(this, arguments);\n        if (!('sendEncodings' in this)) {\n          return params;\n        }\n        return Object.assign({}, {encodings: this.sendEncodings}, params);\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n      firefoxShim.shimAddTransceiver(window);\n      firefoxShim.shimGetParameters(window);\n      firefoxShim.shimCreateOffer(window);\n      firefoxShim.shimCreateAnswer(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      safariShim.shimAudioContext(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","export var GridApp = Ragnarok.GridApp\nexport var defaultInputConfigFlags = Ragnarok.defaultInputConfigFlags\nexport var ChooseStreamingSettings = Ragnarok.ChooseStreamingSettings\nexport var ChooseStreamingResolution = Ragnarok.ChooseStreamingResolution\nexport var CalculateMaxBitrateKbps = Ragnarok.CalculateMaxBitrateKbps\nexport var CalculateDataUsage = Ragnarok.CalculateDataUsage\nexport var InitializeUtils = Ragnarok.InitializeUtils\nexport var IsFeatureSupported = Ragnarok.IsFeatureSupported\nexport var GetSupportedAudioChannelCount = Ragnarok.GetSupportedAudioChannelCount\nexport var GetDeviceCapabilities = Ragnarok.GetDeviceCapabilities\nexport var VirtualGamepadHandler = Ragnarok.VirtualGamepadHandler\nexport var ConfigureRagnarokSettings = Ragnarok.ConfigureRagnarokSettings\nexport var RagnarokSettings = Ragnarok.RagnarokSettings\nexport var GridServer = Ragnarok.GridServer\nexport var PassThruServer = Ragnarok.PassThruServer\nexport var ConfigureGridServerSettings = Ragnarok.ConfigureGridServerSettings\nexport var GridServerSettings = Ragnarok.GridServerSettings\nexport var TelemetryEventBase = Ragnarok.TelemetryEventBase\nexport var GridServer_GameLaunch_RequestDef = Ragnarok.GridServer_GameLaunch_RequestDef\nexport var GS_FeatureDef = Ragnarok.GS_FeatureDef\nexport var GS_SystemAPICallResultDef = Ragnarok.GS_SystemAPICallResultDef\nexport var GS_DebugInfoDef = Ragnarok.GS_DebugInfoDef\nexport var GS_ExceptionInfoDef = Ragnarok.GS_ExceptionInfoDef\nexport var GS_ClientMetricEventDef = Ragnarok.GS_ClientMetricEventDef\nexport var GS_ConnectivityCheckDef = Ragnarok.GS_ConnectivityCheckDef\nexport var GS_Sleep_EventDef = Ragnarok.GS_Sleep_EventDef\nexport var GS_HttpCallResultDef = Ragnarok.GS_HttpCallResultDef\nexport var GS_PropertyChange_EventDef = Ragnarok.GS_PropertyChange_EventDef\nexport var GS_CodecError_EventDef = Ragnarok.GS_CodecError_EventDef\nexport var GsTelemetryHandler = Ragnarok.GsTelemetryHandler\nexport var CHANGELIST = Ragnarok.CHANGELIST\nexport var CLIENT_VERSION = Ragnarok.CLIENT_VERSION\nexport var CLIENT_IDENTIFICATION = Ragnarok.CLIENT_IDENTIFICATION\nexport var getPlatformDetails = Ragnarok.getPlatformDetails\nexport var performHttpRequest = Ragnarok.performHttpRequest\nexport var AddPlatformTelemetry = Ragnarok.AddPlatformTelemetry\nexport var LogImpl = Ragnarok.LogImpl\nexport var translatePlatformDetailsForPayload = Ragnarok.translatePlatformDetailsForPayload\nexport var translatePlatformDetailsForClientHeader = Ragnarok.translatePlatformDetailsForClientHeader\n","import \"webrtc-adapter\"\r\nimport \"@gamestream/ragnarok-core\"\r\nexport * from \"@gamestream/ragnarok-core/dist/shim\"\r\n"],"names":["module$exports$rtcutils_core$output$eventemitter.EventEmitter","constructor","emitSynchronously","handlers","Map","addListener","eventname","handler","handles","get","undefined","add","newHandles","Set","set","removeListener","delete","removeAllListenersOfEvent","removeAllListeners","clear","hasListener","size","emit","args","window","setTimeout","err","console","log","loggingEnabled","consoleLoggingEnabled","toBool","value","ConfigureRtcUtilsSettings","data","_a","_b","overrideData","settingsMap","URLSearchParams","toLowerCase","settings","module$exports$rtcutils_core$output$settings.RtcUtilsSettings.loggingEnabled","getSettingBool","key","module$exports$rtcutils_core$output$settings.RtcUtilsSettings.consoleLoggingEnabled","emitLogMsg","level","tag","msg","logmsg","stringifyArgs","logevent","logModule","timeStamp","renderDate","logLevel","logtag","logstr","commit","formatString","str","replace","match","number","date","Date","lpad","chars","padWith","howMany","length","res","i","ds","getFullYear","toString","dateSeparator","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","JSON","stringify","module$exports$rtcutils_core$output$logger.LogImpl","queue","_nop","this._nop","_d","jsonObject","this._d","_i","this._i","_w","this._w","_e","this._e","_f","this._f","debug","bind","warn","info","error","sanitize","sanitizationGroups","secretBlock","replaceStr","group","push","module$exports$rtcutils_core$output$logger.Log","_opentelemetry.api","getInstance","module$exports$rtcutils_core$output$tracingmanager.TracingManager.instance","module$exports$rtcutils_core$output$tracingmanager.TracingManager","createSpan","operationName","fn","span","tracer","startSpan","_opentelemetry.api.context.with","context","with","_opentelemetry.api.trace.setSpan","trace","setSpan","_opentelemetry.api.context.active","active","wrapper","result","Promise","end","_opentelemetry.api.trace.getTracer","getTracer","module$exports$rtcutils_core$output$cancellablewait.CancellableWait","waitTimeInMS","signal","timerId","aborted","timedOut","promise","resolve","reject","promiseResolve","promiseReject","abortSignal","onAbortFunc","onAbort","addEventListener","onTimeout","cancel","removeEventListener","clearTimeout","SplitLines","blob","trim","split","map","line","SplitSections","parts","part","index","MatchPrefix","prefix","module$exports$rtcutils_core$output$sdp.SDPUtils.SplitLines","filter","indexOf","ParseFingerprint","substr","algorithm","toUpperCase","IsXboxEdge","platform","os","browser","IsiDevice","IsValidIPv4","ipaddress","test","GetHexString","code","slice","hex","IsiPhone","platformDetails","navigator","userAgent","IsWebOS","IsChromeOS","IsWindowsOS","IsMacOS","module$exports$rtcutils_core$output$utils.DefaultHttpRequestOptions","method","headers","body","retryCount","timeout","keepalive","addErrorAttributes","_opentelemetry.api.trace.getActiveSpan","getActiveSpan","setAttribute","performHttpRequest","url","options","authInfo","abortController","module$exports$rtcutils_core$output$tracingmanager.TracingManager.getInstance","request","httpRequestAttributes","name","version","URL","protocol","hostname","pathname","module$exports$rtcutils_core$output$logger.Log.e","e","key__tsickle_destructured_1","value__tsickle_destructured_2","setAttributes","performHttpRequestImpl","max_retry_count","backOffIncrement","backOffDelay","backOffTime","requestHeaders","Headers","controller","AbortController","addReqHeaders","type","token","Object","keys","forEach","carrier","_opentelemetry.api.propagation.inject","propagation","inject","key__tsickle_destructured_3","value__tsickle_destructured_4","entries","resolve_","reject_","x","performRequest","retryRequest","errorCode","module$exports$rtcutils_core$output$logger.Log.d","d","wait","then","catch","retries","module$exports$rtcutils_core$output$logger.Log.w","w","onLine","reqInit","mode","fetchResponseStatus","retryCodes","FETCH_GENERIC_ERR","DOMException","NETWORK_ERR","TIMEOUT_ERR","fetchTimeoutWait","promises","fetch","race","response","message","globalThis","Response","status","text","includes","getUtilsErrorCode","fetchError","ABORT_ERR","errCode","getFetchErrorCode","rejectReason","finally","description","IsTouchDevice","matchMedia","call","matches","IsTouchCapable","IsTV","getNewGuid","array","Uint8Array","crypto","getRandomValues","guid","randomNumber","module$exports$rtcutils_core$output$logger.Log.i","VersionListIsAtLeast","actual","desired","actualPart","desiredPart","IsChromeVersionAtLeast","major","minor","build","patch","browserFullVer","Number","parseInt","_ex","IsiOSVersionHelper","exact","osVer","numericalVersion","every","val","customFetch","timeoutMs","abort","getRErrorDetails","makeWorkerUrlFromInterface","interfaceRef","connectHandler","messageHandler","commonMessageHandler","errorHandler","commonErrorHandler","blobStrings","classes","getPrototypeOf","reverse","klaz","onconnectStr","onmessageStr","onerrorStr","createObjectURL","workerBlob","Blob","makeWorkerFromInterface","callback","errorCallback","prototype","doWork","Error","workerUrl","worker","Worker","revokeObjectURL","setupWorkerAndCallback","makeSharedWorkerFromInterface","workerCloseTimers","stopWorkerInternal","workerPort","has","postMessage","cmd","timer","terminateWorker","terminate","MessagePort","close","port","hadError","errHandler","onmessage","event","workerPort.onmessage","cmdMsg","func","thisObj","ports","self","msgHandlers","messagePoster","msgHandler","getDeviceType","platformName","deviceModel","getDetectorPromise","start","performance","now","performedChecks","beginChecking","all","checkGlDebugInfo","checkHighEntropy","checkAvif","checkVoices","checkUserAgentVersion","checkWindowProperties","checkPlatform","checkApplePay","checkPlugins","maxTouchPoints","checkMobile","isMobileNavigator","checkMediaQueries","checkTvDevices","validateChecks","hasUaData","isPlatformMacIntel","isHEPlatformMac","isPlatformWin","isHEPlatformWindows","isUaDataSpoofed","isHEPlatformChromeOS","isHEPlatformChromiumOS","isHEPlatformAndroid","isHEPlatformLinux","isPlatformLinux","browserVersion","compareBrowserVersions","isBrandOpera","chromiumVersion","isBrandChrome","isBrandChromium","voiceIsChrome","voiceIsMicrosoft","voiceIsApple","voiceIsChromeOS","voiceIsFirefox","useUaData","ignoreUaData","_c","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","createPlatformDetails","hasGL","isBrowserChrome","osName","browserName","isForged","confidenceLevel","osVersion","UNKNOWN_VERSION","setChromeDetails","deviceVendor","getCurrentLinuxOsName","isPlatformFreeBsdX86","setFirefoxDetails","voiceIsFirefoxAndroid","determineAndroidDeviceType","voiceIsEdge","voiceIsWindows","isHEModelXbox","isGLXbox","isGLXboxSeries","devModel","voiceIsAndroid","isPlatAndroid","determineWindowsBrowser","determineAppleBrowser","determineAndroidBrowser","isPlatformiPad","isPlatformiPhone","isPlatCcOS","isMobileUAD","determineDesktopBrowser","isPlatWebOS","isPlatTizen","webapis","productinfo","getFirmware","deviceName","getRealModel","deviceVendorFull","getLicensedVendor","browserTizenRe","uaString","btMatch","chromeUaVersion","majorVer","chromeUaMajorVer","isBrowserFirefoxTV","devType","isBrowserSamsungChromium","isPluginChromiumPDF","isPluginChromePDF","isPluginEdgePDF","isBrowserNetscape","isBrowserChromeiOS","isBrowserFirefoxiOS","isBrowserEdgeiOS","finish","osRawVer","osRawVersion","browserVer","confidence","wereHeChecksLate","forging","spoofing","vendor","vendorFull","deviceOS","isGLSteamDeck","deviceType","totalTime","checkVoicesInternal","voices","performedVoiceChecks","voice","voiceID","startsWith","voiceIsAppleEllen","voiceWasKnown","synthesis","getVoices","curVoices","startedVoiceChecking","checkVoicesLambda","MAX_VOICE_CHECK_TOTAL_TIME","voiceCheckTimer","FALLBACK_TIMEOUT","INVALID_TIMER_ID","INSTANT_TIMEOUT","glCheckFallbackCompleted","handleGlInfo","glDbgInfo","glCheckTimer","emitWorkerOverlongTelemetry","workerName","glCheckFallbackTime","performedGlChecks","renderer","rendererName","exec","present","glCheckWithWorker","glCheckWithWorkerFailed","handleGlError","emitWorkerErrorStringTelemetry","emitWorkerMessageErrorTelemetry","emitWorkerErrorTelemetry","timeoutDelay","GLWorker","ex","emitWorkerCreationErrorTelemetry","emitWorkerTimeoutTelemetry","emitWorkerUnusedTelemetry","userAgentData","setHEBasedFlags","heValues","performedHEChecks","model","platformVer","platformVersion","uaVer","uaFullVersion","bitness","isBrowserOperaTouch","isHEModelFireTV","isHEKnownTVDevice","isHEModelBraviaTV","isHEModelChromecastTV","isHEModelShieldTV","isHEModelMiTV","isHEModelTVision","isHEPlatformOverridden","sanitiseVer","deriveWindowsVer","verComponents","derivePlatformVer","brands","internalCheckUserAgentData","handleHEValues","heCheckTimer","heCheckWithWorker","heCheckWithWorkerFailed","handleHEError","HighEntropyWorker","LONG_FALLBACK_TIMEOUT","supportsAvif","avifSupported","chromeRe","majorMatches","ownProp","navi","isBrowserEdgeLegacy","isBrowserSafari","isBrowserOpera","isBrowserOperaiOS","isBrowserBrave","isBrowserYandex","isBrowserReactBased","intl","supportsDecodingInfo","supportsBigInt","supportsBigInt64Array","supportsPerformanceNavigationTiming","supportsWebAssemblyExceptions","supportsBroadcastChannel","supportsGpuBuffer","supportsSharedWorker","supportsMediaRecorder","supportsCSSCounterStyleRule","supportsDeviceLightEvent","supportsAbortSignalAbort","supportsBeforeInputEvent","supportsIntlDisplayNames","supportsIntlCollationOptions","resolvedOptions","col","collation","supportsCredential","supportsBrowserRuntime","supportsLargestContentfulPaint","supportsCSSregisterProperty","supportsXR","supportsGetInstalledRelatedApps","supportsBarcodeDetector","supportsWakeLock","supportsPromiseAny","supportsFileSystemHandle","supportsAtomicsWaitAsync","supportsCSSaspectRatio","supportsWebHID","supportsOverflowClip","platCheckFallbackCompleted","handlePlatInfo","platInfo","platCheckTimer","platCheckFallbackTime","performedNavigatorPlatformChecks","platCheckWithWorker","platCheckWithWorkerFailed","handlePlatError","NavigatorPlatformWorker","supportsApplePay","plugins","plugin","pluginName","mediaPrimaryHover","mediaPrimaryNonHover","mediaPrimaryCoarsePointer","mediaPrimaryFinePointer","handleTvValues","smartTVInfo","smartTvCheckTimer","isKnownTVDevice","isKnownTVDeviceUA","UADeviceVendor","vendorName","UADeviceModel","modelName","tvCheckWithWorker","tvCheckWithWorkerFailed","handleTvError","SmartTVWorker","tvValues","delay","telemetry","emitDebugEvent","queuedTelemetry","filename","lineno","colno","exception","stack","uad","mobile","unknownBrands","brand","brandName","brandVersion","isBrandEdge","isBrandYandex","isBrandUnknown","createImageBitmap","avifData","r","simpleVer","fullVer","re","simpleResult","fullResult","screen","width","shortest","height","determineIOSBrowser","setTvDeviceVendorDetails","setIOSVersion","missingCredential","missingSafariExtension","setTelemetryHandler","platformImplSingleton","queuedEvent","Platform","glCtx","getContext","offscreenCanvasConstructor","canvas","OffscreenCanvas","document","createElement","glDbgExt","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","getHighEntropyValues","smartTvInfo","knownTvUAModels","knownTvVendors","RegExp","tvFieldsRegex","join","module$exports$rtcutils_core$output$logqueueingeventemitter.LogQueueingEventEmitter","logQueue","onLogEvent","logEvent","logEventName","getMappedDeviceType","platformDeviceType","getMappedBrowserName","getMappedDeviceOS","platformOS","TranslatedPlatformDetails","details","_platformDetails","_gxtDetails","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.getMappedDeviceOS","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.getMappedBrowserName","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.getMappedDeviceType","translateForClientHeaders","_lcarsDetails","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.mapOSPlatformNameToSupportedDeviceOs","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.extractBrowserTypeForBrowserClient","module$contents$rtcutils_core$output$translateplatform_TranslatedPlatformDetails.extractDeviceTypeForBrowserClient","osPlatformName","TranslatedPlatformDetails.mapOSPlatformNameToSupportedDeviceOs","deviceTypeFromPlatfromAPI","TranslatedPlatformDetails.extractDeviceTypeForBrowserClient","TranslatedPlatformDetails.extractBrowserTypeForBrowserClient","lastTranslatedDetails","module$exports$gridserver_core$output$settings.GridServerSettings","commonConfig","remoteOverrideInfo","webSocketSignaling","webRtcStreamer","ConfigureGridServerSettings","gxtOverrideData","configData","parse","params","element","module$exports$gridserver_core$output$settings.GridServerSettings.commonConfig.pmCommunication","pmCommunication","module$exports$gridserver_core$output$settings.GridServerSettings.remoteOverrideInfo","remoteConfigData","common","module$exports$gridserver_core$output$settings.GridServerSettings.commonConfig","module$exports$gridserver_core$output$settings.GridServerSettings.loggingEnabled","module$exports$gridserver_core$output$settings.GridServerSettings.consoleLoggingEnabled","module$exports$gridserver_core$output$settings.GridServerSettings.webSocketSignaling","module$exports$gridserver_core$output$settings.GridServerSettings.webRtcStreamer","module$exports$gridserver_core$output$settings.GridServerSettings.hdr","hdr","module$exports$gridserver_core$output$gstelemetryinterfaces.TelemetryEventBase","gdprLevel","parameters","ts","toISOString","module$exports$gridserver_core$output$gstelemetryinterfaces.GridServer_GameLaunch_RequestDef","GridServer_GameLaunch_Request","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_FeatureDef","GS_Feature","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_SystemAPICallResultDef","GS_SystemAPICallResult","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_DebugInfoDef","GS_DebugInfo","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_ExceptionInfoDef","GS_ExceptionInfo","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_ClientMetricEventDef","GS_ClientMetricEvent","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_ConnectivityCheckDef","GS_ConnectivityCheck","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_Sleep_EventDef","GS_Sleep_Event","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_HttpCallResultDef","GS_HttpCallResult","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_PropertyChange_EventDef","GS_PropertyChange_Event","module$exports$gridserver_core$output$gstelemetryinterfaces.GS_CodecError_EventDef","GS_CodecError_Event","emitEvent","eventEmitter","clientConfig","telemetryConfig","getTelemetryHttpEvent","verb","sessionId","statusCode","requestStatusCode","subSessionId","requestId","serverId","callDuration","getGameLaunchRequestEvent","serverAddress","isResume","networkSessionId","requestedZoneAddress","zoneName","resumeType","overrideConfigType","module$exports$gridserver_core$output$settings.GridServerSettings.remoteOverrideInfo.type","overrideConfigVersion","module$exports$gridserver_core$output$settings.GridServerSettings.remoteOverrideInfo.version","codec","ipVersion","launchDuration","networkType","streamingProfileGuid","systemInfoGuid","cmsId","String","emitHttpEvent","httpEvent","moduleName","emitGameLaunchRequestEvent","eventData","telemetryEventIds","emitExceptionEvent","category","MAX_EXCEPTIONS_TOTAL","canSendExceptionEvent","totalExceptionCount","count","exceptionCounts","MAX_EXCEPTIONS_PER_MSG","file","stacktrace","handled","module$exports$gridserver_core$output$gstelemetryhandler.GsTelemetryHandler","_eventEmitter","clientId","clientName","eventSchemaVer","updateTelemetryEventIds","telemetryIds","key1","key2","key3","key4","key5","setNetworkType","network","convertSessionStateToString","getResultCodeDescription","extractSessionInformation","jsonSession","gridSession","getSessionId","getSubSessionId","signalConnectionInfo","ip","mediaConnectionInfo","streamInfo","appId","state","module$exports$gridserver_core$output$gridserver.GridServer.convertSessionStateToString","appLaunchMode","zoneAddress","gpuType","clientLocale","jconnInfo","usage","appLevelProtocol","overrideSignallingInfo","addressParts","substring","domainUrlIndex","monitorSettings","monitor","widthInPixels","heightInPixels","fps","framesPerSecond","sdrHdrMode","newServerIp","newServerPort","sessionControlServerMap","currentServer","server","extractSessionList","jsonSessions","sessionList","item","activeSession","sessionControlInfo","addServerOperationAttributes","serverOperationAttributes","initParams","clientIdentification","clientVersion","deviceOs","deviceOsVer","getAllActiveSessionsImpl","performSessionRequest","GET_ACTIVE_SESSIONS","module$exports$gridserver_core$output$gridserver.GridServer.getResultCodeDescription","gsTelemetryHandler","requestType","shouldSendAnalyticsEvent","GET_SESSIONINFO","getHttpMethodForRequestType","CREATE_SESSION","DELETE_SESSION","RESUME_SESSION","AD_UPDATE","httpRequestOptions","startTime","httpAnalyticsEvent","endTime","Math","round","SyntaxError","responseJSON","module$exports$rtcutils_core$output$logger.Log.sanitize","requestStatus","sessionResponse","jsonResponse","session","gsCode","TypeError","resetSubSessionId","subSessionsIdMap","putOrPostSessionImpl","startParams","addErrorAttributesAndReject","putOrPostRequestController","launchRequestInfo","createSessionRequestURL","getSessionRequestData","updateSessionZoneInfo","launchRequestInfoMap","getUrlForSession","keyboardLayout","resume","stream","streamParams","monitorSetting","srd","remoteControllersBitmap","deviceHashId","clientPlatformName","clientTimeZoneOffset","getTimezoneOffset","accountLinked","partnerCustomData","enablePersistingInGameSettings","userAge","requestedAudioFormat","metaData","sessionRequestObj","sessionModifyObj","getSessionImpl","_sessionId","isPoll","seatSetupStep","getSessionRequestController","sendLaunchRequestInfo","onSessionSetupCancelled","performGetSessionRequest","_state","sendSessionUpdateEvent","queuePosition","sessionUpdateEventData","eta","progressState","pollingInterval","getPollingInterval","pollingOptions","minInterval","queueSizePerStep","floor","step","min","maxInterval","MAX_VALUE","sessionUrl","sendDeleteRequestImpl","module$exports$gridserver_core$output$gridserver.GridServer","emitEventsSynchronously","logHandler","module$exports$rtcutils_core$output$logger.Log.hasListener","module$exports$rtcutils_core$output$logger.Log.addListener","remoteConfigTimeout","httpConnectionTimeout","module$exports$gridserver_core$output$settings.GridServerSettings.commonConfig.pmCommunication.httpConnectionTimeout","httpDataReceiveTimeout","module$exports$gridserver_core$output$settings.GridServerSettings.commonConfig.pmCommunication.httpDataReceiveTimeout","httpRetryCount","httpBackOffDelay","location","pollingIntervalMin","pollingIntervalMax","pollingIntervalStep","pollingQueueSizePerStep","initialize","module$exports$rtcutils_core$output$genversion.version","httpHeaders","deviceMake","clientType","clientAppVersion","clientStreamer","ecomEnabled","acceptLanguage","browserType","clientHeaders","key__tsickle_destructured_5","value__tsickle_destructured_6","uninitialize","cancelSessionSetup","module$exports$rtcutils_core$output$logger.Log.removeListener","getAllActiveSessions","putOrPostSession","action","getSession","sendDeleteRequest","setAuthInfo","getZoneName","getZoneAddress","getGpuType","module$exports$gridserver_core$output$gridserver.PassThruServer","sendEmptySessionlist","accessToken","connectionInfo","module$exports$output$interfaces.defaultInputConfigFlags","allowUnconfined","preventNavigation","module$exports$output$rinterfaces.AckIdGenerator","ackId","getClientTerminationReason","SERVER_TERMINATED_INTENDED","clientTerminationReason","CLIENT_DISCONNECT_UNINTENDED","CLIENT_DISCONNECT_END_SESSION","CLIENT_DISCONNECT_UNINTENDED_STUN_FAILED","CLIENT_DISCONNECT_UNINTENDED_CONTROL_SOCKET_ERROR","CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_PACKETS_EVER","CLIENT_DISCONNECT_UNINTENDED_NO_VIDEO_FRAMES_LOSSY_NETWORK","CLIENT_DISCONNECT_KEEP_SESSION_ALIVE","getRErrorCodeForExitMessage","exitMessage","stopData","reason","getStopDataReason","getRErrorCode","nvstResult","clientErr","NVST_DISCONN_INTENDED","NVST_DISCONN_HOTKEY","NVST_DISCONN_TIMEOUT","NVST_DISCONN_LAUNCH_FAILED","NVST_DISCONN_USER_CHANGED","NVST_DISCONN_WINDOWED_MODE","NVST_DISCONN_USER_IDLE","NVST_DISCONN_UNKNOWN_FROM_PM","NVST_DISCONN_USER_ENTITLEMENT_TIMEOUT","NVST_DISCONN_CLIENT_RECONNECT_TIMEOUT","NVST_DISCONN_OPERATOR_COMMANDED_TERMINATION","NVST_DISCONN_MAX_SESSION_TIME_LIMIT","NVST_DISCONN_MAX_CONCURRENT_SESSION_LIMIT","NVST_DISCONN_BIFROST_INITIATED_SESSION_PAUSE","NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_FAILED","NVST_DISCONN_PM_COMMANDED_TERMINATION","NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNAUTHORIZED_PROCESS","NVST_DISCONN_SERVER_TERMINATED_MULTIPLE_LOGIN","NVST_DISCONN_SERVER_TERMINATED_INTENDED_MALICIOUS_PROCESS","NVST_DISCONN_SERVER_TERMINATED_INTENDED_UNKNOWN_PROCESS","NVST_DISCONN_SERVER_TERMINATED_INTENDED_MINER_PROCESS","NVST_DISCONN_SERVER_TERMINATED_FRAME_GRAB_TIMEOUT","NVST_DISCONN_SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT","NVST_DISCONN_SERVER_TERMINATED_FRAME_SEND_TIMEOUT","NVST_DISCONN_SERVER_TERMINATED_ANOTHER_CLIENT","NVST_DISCONN_SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION","NVST_DISCONN_SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED","NVST_DISCONN_SERVER_TERMINATED_CLOSED","NVST_NETERR_CONNLOST","NVST_NETERR_CLIENT_TIMED_OUT","NVST_NETERR_CLIENT_DISCONNECT_UNINTENDED","NVST_NETERR_SERVER_TERMINATED_UNINTENDED","NVST_NETERR_SERVER_TERMINATED_REMOTE_INPUT_ERROR","NVST_NETERR_SERVER_TERMINATED_CONFIG_UNAVAILABLE","NVST_NETERR_SERVER_TERMINATED_INVALID_COMMAND","NVST_NETERR_SERVER_TERMINATED_INVALID_MOUSE_STATE","NVST_DISCONN_SERVER_VFP_PROTECTED_CONTENT","serverErr","SERVER_TERMINATED_HOTKEY","SERVER_TERMINATED_USER_LOGGED_IN_DIFFERENT_ACCOUNT","SERVER_TERMINATED_WINDOWED_MODE","SERVER_TERMINATED_USER_IDLE","SERVER_TERMINATED_UNAUTHORIZED_PROCESS_DETECTED","SERVER_TERMINATED_MALICIOUS_PROCESS_DETECTED","SERVER_TERMINATED_UNKNOWN_PROCESS_DETECTED","SERVER_TERMINATED_MINER_PROCESS_DETECTED","SERVER_TERMINATED_STREAMING_UNSUPPORTED","SERVER_TERMINATED_ANOTHER_CLIENT","SERVER_TERMINATED_CODE_INTEGRITY_VIOLATION","SERVER_TERMINATED_UNAUTHORIZED_ACTIVITY_DETECTED","PM_TERMINATED_UNKNOWN_FROM_PM","PM_TERMINATED_USER_ENTITLED_MINUTES_EXCEEDED","PM_TERMINATED_CLIENT_RECONNECT_TIME_LIMIT_EXCEEDED","PM_TERMINATED_OPERATOR_COMMANDED_TERMINATION","PM_TERMINATED_CONCURRENT_SESSION_LIMIT_EXCEEDED","PM_TERMINATED_MAX_SESSION_TIME_LIMIT_EXCEEDED","PM_TERMINATED_BIFROST_INITIATED_SESSION_PAUSE","PM_TERMINATED_SYSTEM_COMMANDED_TERMINATION","PM_TERMINATED_MULTIPLE_LOGIN","PM_TERMINATED_MAINTENANCE_MODE","SERVER_TERMINATED_NO_RESPONSE","SERVER_TERMINATED_REMOTE_INPUT_ERROR","SERVER_TERMINATED_FRAME_GRAB_FAILED","SERVER_TERMINATED_CONFIG_UNAVAILABLE","SERVER_TERMINATED_INVALID_COMMAND","SERVER_TERMINATED_INVALID_MOUSE_STATE","SERVER_TERMINATED_NETWORK_ERROR","SERVER_TERMINATED_GAME_LAUNCH_FAILED","SERVER_TERMINATED_VIDEO_FIRST_FRAME_SEND_FAILED","SERVER_TERMINATED_VIDEO_NEXT_FRAME_SEND_FAILED","SERVER_TERMINATED_FRAME_GRAB_TIMEOUT","SERVER_TERMINATED_FRAME_ENCODE_TIMEOUT","SERVER_TERMINATED_FRAME_SEND_TIMEOUT","SERVER_TERMINATED_VFP_PROTECTED_CONTENT","CLIENT_TIMED_OUT","CTMT_TERMINATED_USER_OWNERSHIP_ERROR","b64StopData","atob","offset","read16","charCodeAt","module$exports$output$debug$latencyindicator.LatencyIndicator.singleton","module$exports$output$debug$latencyindicator.LatencyIndicator","toggleIndicator","currentColor","renderRed","indicatorContext","clearColor","COLOR_BUFFER_BIT","renderWhite","videoElement","indicatorId","LATENCY_INDICATOR_ID","indicator","getElementById","HTMLCanvasElement","parentElement","random","newIndicator","id","style","position","createLatencyIndicator","bottom","right","zIndex","pointerEvents","insertAdjacentElement","indicatorElement","display","module$exports$output$util$settings.RagnarokSettings","ragnarokConfig","clientConfigOverride","leanMode","gamepadEnabled","webrtcStatsEnabled","statsUploadEnabled","maxBitrate","resWidth","resHeight","gamepadRaf","advancedGestures","forceTouchCapable","touchWarp","storeTouch","storeTouchGesture","latencyTest","gamepadTesterEnabled","rsdmm","rsdmmThumbstickToggle","allowSourceReset","allowAudioReset","allowAutoplayChange","allowEnableMic","allowMutingVideo","allowSendingTelemetry","emitError","ev","resetPerf","perf","RAFTS","DCSend","GetStats","FrameInfo","stopProfiling","module$exports$output$ragnarokprofiler.RagnarokProfiler.stopProfiling","profiling","workerMessage","stopStats","rworker","getStreamTime","streamBeginTs","onPreRender","module$exports$output$ragnarokprofiler.RagnarokProfiler.onPreRender","addStatsReport","report","module$exports$output$ragnarokprofiler.RagnarokProfiler.addStatsReport","webrtcStats","stats","ackid","ackIdGenerator","onFrameInfo","framesDecoded","framesDropped","module$exports$output$ragnarokprofiler.RagnarokProfiler.onFrameInfo","y","onEvent","module$exports$output$ragnarokprofiler.RagnarokProfiler.onEvent","clientEvent","TS","eventtype","module$exports$output$ragnarokprofiler.RagnarokProfiler","module$exports$output$ragnarokprofiler.RagnarokProfilerImpl","wsHandler","pendingErrors","pendingTelemetry","blobUrl","WORKER_SRC","onWorkerMessage","onerror","onWorkerError","startWebSocket","signInURL","maxReceivedAckId","serverSupportsAck","reconnect","stopWebSocket","obj","updateStreamTime","initMessage","statsStarted","wsClose","closeHandler","wsMessage","wsOpening","wsOpen","openHandler","CalculateMaxBitrateKbps","bIsResolution4k","MODE_4KLIKE_PIXEL_THRESHOLD","adjustedFps","MULTIPLIER_30_FPS","maxRateKbps","IsResolution1440p","bIsResolution1440p","bitsPerPixel","module$exports$output$util$settings.RagnarokSettings.bitsPerPixel1440p","bitsPerPixel1440p","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.bitsPerPixel1440p","maxRateKbps1080p","maxRateKbps1440p","module$exports$output$util$settings.RagnarokSettings.bitsPerPixel","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.bitsPerPixel","GetSupportedAudioChannelCountAsync","audioCtx","GetAudioContext","channelCount","destination","maxChannelCount","maxMungePossible","mungingTest","LimitResolution","resolution","limits","AspectRatio","h","a","clip","f","abs","toTuple","ratios","b","rd","bd","clipped","MakeLandscapeResolution","ChooseStreamingSettingsImpl","streamingProfilePreset","candidateSettings","screenWidth","screenHeight","iPhone","iPad","tizen4k","screenAspectRatio","screenPixelCount","filteredSettings","frameRate","sort","settingsCompare","aRes","bRes","aspectRatioDiff","resolutionPresetSelector","frameRateSelection","frameRatePresetSelector","aPixelCount","bPixelCount","pixelCountDiff","selectedSettings","width__tsickle_destructured_1","height__tsickle_destructured_2","width__tsickle_destructured_3","upperLimits","unshift","reducedLimits","GetStreamingSettingsExceptions","isUdPanelSupported","GetSafeAreas","getComputedStyle","documentElement","top","left","getPropertyValue","setProperty","clamp","v","hi","lo","WarpTouch","touch","safe","max","pt","clientX","clientY","anchorY","radiusY","frac","innerHeight","ConvertErrorOnSleep","newCode","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sleepErrorsStreaming","sleepErrorsStreaming","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sleepErrorsStreaming.includes","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sleepErrorsSessionSetup","sleepErrorsSessionSetup","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sleepErrorsSessionSetup.includes","setUint64","dataBufferView","littleEndian","scale","lower","upper","setUint32","CanResume","pixelCount","MODE_QHDLIKE_PIXEL_THRESHOLD","GetCodecType","codecString","codecType","ShouldEnableCPM","allowCPMOnPlatform","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.enableCpm","enableCpm","ToBooleanType","tasksToRunOnInit","GetResolutionString","toFixed","Download","content","fileName","mimeType","link","href","download","appendChild","click","removeChild","sampleRate","audioContext","AudioContext","webkitAudioContext","sampeleRate","IsEqualShallow","keysA","keysB","mungingHelper","channel","sdp","opusDescription","pc","RTCPeerConnection","setRemoteDescription","sdpError","answer","createAnswer","setLocalDescription","receiver","getReceivers","getParameters","codecs","channels","munging5_1","stereo","munging7_1","values","GetCaptureTimestamp","timestamp","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.usePerfNowCaptureTimestamp","usePerfNowCaptureTimestamp","chrome","module$exports$output$ragnarokprofiler.RagnarokProfiler.getStreamTime","module$exports$output$ragnarokprofiler.RagnarokProfiler.getStreamBeginTime","recordFromTouch","warp","identifier","deltaX","deltaY","endTouches","evt","shouldSendTap","touchHandled","touches","changedTouches","touchStartIndex","currentTouches","findIndex","t","module$exports$output$debug$latencyindicator.LatencyIndicator.getInstance","splice","tapTimerId","tap","gestureHandler","target","maxTouchCount","activeGesture","module$exports$output$util$settings.RagnarokSettings.advancedGestures","holdEnd","panZoomEnd","shouldPreventDefaultTouch","preventDefault","module$exports$output$input$gesturedetector.GestureDetector","videoAddEventListener","videoRemoveEventListener","touchStartListener","this.touchStartListener","holdBegin","module$exports$output$input$gesturedetector.maximumTapDurationMs","touchMoveListener","this.touchMoveListener","touchRecord","updatedTouchIndices","touchStart","shouldUpdateTouch","allowableMovement","drag","scroll","panZoom","sign","touchCancelListener","this.touchCancelListener","touchEndListener","this.touchEndListener","passive","stop","warpTouch","warpedPt","TouchRecord","protocolId","radiusX","pageX","pageY","module$exports$output$util$settings.RagnarokSettings.touchWarp","update","TouchStorage","captureTs","touchType","posX","posY","radX","radY","callbackTs","sendTouches","touchesToSend","module$exports$output$input$touchlistener.MAX_TOUCH_COUNT","activeTouches","scaledX","scaleX","margins","horizontal","scaledY","scaleY","vertical","maxX","CLAMP_HI","minY","maxY","minX","CLAMP_LO","touchDataHandler","TOUCH_RECORD_LENGTH","touchBufferView","setUint8","setUint16","droppedEventsCount","TOUCH_HEADER_LENGTH","TOUCH_PACKET_OFFSET","_protocolVersion","totalPacketView","DataView","buffer","sendInput","sendScheduledPackets","touchEnd","removedIds","shouldHandleTouch","removeTouch","activeProtocolIds","module$exports$output$util$settings.RagnarokSettings.storeTouch","clearedAllTouches","module$exports$output$input$touchlistener.TouchListener","storedTouches","storedTouchesTimer","newId","addNewTouch","record","module$exports$output$util$settings.RagnarokSettings.storeTouchGesture","trimStoredTouchesFunc","logStoredTouchesFunc","trimStoredTouches","logStoredTouches","touchStore","oldestTs","trimIndex","idx","setInterval","Array","from","module$exports$output$input$keycodes.CODE_TO_VK_MAP","module$exports$output$input$keycodes.KEY_TO_VK_MAP","module$exports$output$input$keycodes.CHAR_TO_VK_MAP","vkCode","shift","ShiftedDataView","byteLength","byteOffset","this.setUint8","this.setUint16","this.setUint32","setInt8","this.setInt8","setInt16","this.setInt16","setInt32","this.setInt32","setFloat32","this.setFloat32","setFloat64","this.setFloat64","prependTimestamp","hasScheduledPackets","moveEventBuffer","moveEventIndex","prependScheduledMoves","before","callbacks","isUserIdleTimeoutPending","clearIdleTimeout","module$exports$output$input$inputpacketinfo.SENT_TIMESTAMP_LEN","t0","inputChannel","send","updateDcTimeDuration","streamClient","t1","after","measurements","sendInputCount","sendInputOver5ms","sendInputOver10ms","exp","channelOpen","sendMouseWheel","packet","getTempPacket","fillMovePacket","view","absolute","sessionWidth","videoState","displayVideoWidth","sessionHeight","displayVideoHeight","packetype","videoDimensionOffset","readyState","sendCursorPos","packetSize","sendKeyboardEvent","packetId","keyCode","flags","timeScheduledPackets","sendTimerId","populateMultiGamepadPacket","buttons","trigger","axes","gamepadBitmap","getMultiGamepadPacket","GAMEPAD_PACKET_SIZE","module$exports$output$input$inputpackethandler.InputPacketHandler","_lastMoveSendTime","ArrayBuffer","bufferView","touchBuffer","gamepadBufferView","tempBuffer","MAX_SINGLE_INPUT_PACKET","prependScheduledMovesV2","getTempPacketV2","vibrationHandlers","this.inputChannel.onmessage","onMessage","first16","getUint16","handleServerCommandFunc","handleServerCommand","handleVibrationCommand","supportsGrouping","prependScheduledMovesV3","getTempPacketV3","aggCmd","riCmd","getUint32","handleAggregateRiCommand","lMotorSpeed","rMotorSpeed","vibrationHandler","hapticsEnabled","gamepadDetails","gamepad","device","rightMotorSpeed","lastHapticsEffect","hapticsStrongMagnitude","hapticsWeakMagnitude","simplifiedHaptics","MINIMAL_SIMPLIFIED_HAPTICS_DELAY","vibrationActuator","playEffect","startDelay","duration","PARTIAL_HAPTIC_DURATION","weakMagnitude","strongMagnitude","EMPTY_EFFECT","extraPacket","totalSize","getScheduledPacketSizeV2","groupSize","moveEvents","module$exports$output$input$inputpacketinfo.MOUSE_GROUP_HEADER_LEN","groupIndex","absPos","extraBytes","totalPacket","oversizedEventCount","packetIndex","packetSizeIndex","moveEvent","firstEvent","fillMouseGroupPacketV2","firstIndex","groupStartIndex","captureTimestamp","groupTotalSize","callbackTimestamp","sendTimestamp","_moveEventIndex","getUint8","getScheduledPacketSizeV3","module$exports$output$input$inputpacketinfo.CHROME_CALLBACK_LEN","packetPrefixSize","necessaryBufferSize","dv","sendTextInput","bytesSent","textView","sendBuffer","textChunkToSend","MAX_DATA_LEN","foundCodePoint","sendBufferView","bufferedAmount","gamepadBitmapUpdateHandler","GamepadControlIndex","gamepadStateUpdateHandler","mult","virtualGamepadUpdateHandler","finalizeGamepadData","connectUnsupportedGamepad","sendGamepadHapticsControl","enable","module$exports$output$input$inputpackethandler.MoveEventBuffer","_moveEvents","MAX_MOUSE_EVENTS","sendMouseButtonEvent","changedButton","down","MouseEvent","downName","upName","init","button","makeButtonMask","button1","button2","eventElement","dispatchEvent","module$exports$output$input$gamepadrsdmm.GamepadRSDMM","rsdmmTimer","rsdmmPollInterval","accumulatedV","accumulatedH","prevV","prevH","moveName","rtThreshold","ltThreshold","stickIndexX","stickIndexY","rsdmmTickFunc","rsdmmTick","inputaxes","outputAxes","DEAD_ZONE","horiz","vert","eventScale","sqrt","oldButton1","oldButton2","trunc","movementX","movementY","isPrimary","PointerEvent","clearInterval","reset","module$exports$output$input$mousefilter.NullMouseFilter","getX","getY","module$exports$output$input$mousefilter.MouseFilter","oldY","oldX","ignoredY","ignoredX","estimatedAccelY","estimatedAccelX","lastTs","lastY","lastX","consecutiveZero","dotProduct","magSquared","lastMagSquared","allow","COS_25_DEG_SQUARED","mag","lastMag","accelX","accelY","timeMult","MULT_PER_MS","thresholdX","thresholdY","threshold","ignoredAccelX","ignoredAccelY","ACCEL_COEF","createSystemCursor","systemCursor","mimeTypeStr","DEFAULT_CURSOR","imageStr","hotspotX","hotspotY","SYSTEM_CURSORS","onCursorMessage","uint8Array","SYSTEM_CURSOR","BITMAP_CURSOR","cursorId","hotX","hotY","mimeSize","mimearray","subarray","decode","TextDecoder","payloadSize","payload","payloadarray","handleSystemCursor","handleBitmapCursor","CONFINEMENT","configFlags","setCursorConfinement","confine","getCursorCanvas","videoTagElement","cursorCanvasId","canvasId","cursorCanvas","createCursorCanvasElement","touchAction","willChange","setCursorCanvasPosition","bounding","getBoundingClientRect","parentBounding","DOMRect","translationLimits","getTranslationLimits","offsetX","zoomFactor","leftPadding","offsetY","topPadding","updateCursorCanvasState","setRawUpdate","newState","supportsRawUpdate","rawUpdateState","isUserInputEnable","removeMoveListener","addMoveListener","rawCoalesceInterval","preRender","cursorCanvasState","dirty","drawCursor","externalShowCursor","cursorState","absPositioning","dpr","dpiRatio","ratio","hotspotScale","cursorScaling","absX","absY","zoomInProgress","imageChanged","image","cursorPixelWidth","cursorPixelHeight","ctx","graphicsContext","clearRect","imageDimensionsChanged","ceil","imageSmoothingEnabled","drawImage","showing","visibility","transform","hideCursor","shouldPointerLock","isUserInputEnabled","cursorType","windowObserver","windowFocus","confined","getLdatHandler","allowPointerLock","updatePointerLock","shouldLock","isLocked","isPointerLocked","pointerLockElement","shouldUnadjusted","unadjustedMovementAllowed","isUnadjusted","unadjustedMovementActive","exitPointerLock","requestPointerLock","consecutivePointerLockFailedAttempts","isChromium","unadjustedMovement","pointerLockReturnsPromise","updateHardwareCursor","handlePointerLockFailed","setCursorPosFromOffset","setCursorPosFromDisplayVideo","sendMouseDown","pressedButtons","packetHandler","sendMouseUp","handlePointerEvent","shouldIgnorePointerEvent","callbackTime","eventsPerAggregation","eventCount","firstEventIndex","processMovement","mouseFilter","coordX","coordY","setCursorPosFromMovement","scaleMovementByDpr","remX","remY","supportsCoalescedEvents","coalesced","getCoalescedEvents","moveBufferSize","allowedEvents","aggregatedCount","protocolVersion","scheduleCursorDraw","devicePixelRatio","updateVideoState","verticalScaleFactor","setCursor","cursor","updateImage","imageElement","imagePendingDecode","Image","decoding","src","systemCursors","handleCursorCommon","cursorCache","isVisible","setCursorPosFromServer","setCursorMovementAbsolute","rsdmmHandler","getMoveEventName","getFreeMoveFunc","supportsPointerEvents","freePointerMoveFunc","freeMouseMoveFunc","pointerRawUpdateFunc","pointerMoveFunc","releasePressedButtons","setShowCursor","show","module$exports$output$input$mousehandler.MouseHandler","cursorChannel","nonpassiveOptions","cursorChannel.onmessage","clientWidth","clientHeight","scalingFactor","videoWidth","videoHeight","viewportHeight","zoneless","documentAddEventListener","documentRemoveEventListener","mousedownFunc","mousedown","pointerdownFunc","pointerdown","mouseupFunc","mouseup","pointerupFunc","pointerup","mousewheelFunc","mousewheel","pointermove","pointerrawupdate","freeMouseMove","freePointerMove","pointerLockEventFunc","pointerLockChange","pointerLockErrorFunc","pointerLockError","focusChangeFunc","onFocusChange","fullscreenChangeFunc","onFullscreenChange","updateOverride","getRawUpdateOverride","module$exports$output$util$settings.RagnarokSettings.unadjustedMovement","getDefaultUnadjustedMovement","avoidFilter","needsFilter","module$exports$output$util$settings.RagnarokSettings.mouseFilter","eventType","addStateListener","removeStateListener","setPointerCapture","pointerId","audioRecorder","audioTriggerState","destroyRecorder","createRecorder","startRecord","setWindowFocus","maskShift","alreadyScheduled","msSinceSend","lastMoveSendTime","fullscreen","HTMLElement","focus","override","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.mouseCoalesceInterval","mouseCoalesceInterval","SUPPORTED","pointerType","touchMove","touchDelay","mouseHandler","flushImmediately","zoom","MIN_ZOOM_FACTOR","applyVideoTransforms","isVirtualKeyboardVisible","touchListener","firstTouch","secondTouch","currentDistance","hypot","previousDistance","MAX_ZOOM_FACTOR","lastTouch","touchCount","emulateMouseClick","twoFingerTapCount","statsGestureTimerId","toggleOnScreenStats","module$exports$output$util$settings.RagnarokSettings.isInternalUser","isInternalUser","clearStatsGestureTimer","threeFingerTapCount","toggleDisplaySafeZone","safeZoneHandler","perfCallback","list","getEntriesByType","entry","addMainThreadBlockDuration","module$exports$output$ragnarokprofiler.RagnarokProfiler.addMainThreadBlockDuration","statsService","streamStats","mainThreadblockedDuration","setUserIdleTimeoutPending","enabledInputs","enabledInputsBeforeUserIdlePendingOverlay","toggleUserInput","getIdleEvents","idleInputListenerFunc","clearSafeZoneTimeout","safeZoneTimeoutId","updateLockKeysState","isChromeOs","chineseTogglePermitted","isMacOs","tradChineseLayout","getModifierState","supportsNumAndScrollLock","lastLockKeysState","upwardLimit","viewportOverscroll","downwardLimit","getVirtualKeycode","useVkCodes","isAndroidOs","module$exports$output$input$keycodes.CODE_TO_VK_MAP.get","module$exports$output$input$keycodes.KEY_TO_VK_MAP.get","shouldPreventDefaultKb","altKey","getModifierFlags","ctrlKey","metaKey","flag","getShiftModifierFlag","keysRequiredToBeShifted","keysRequiredToBeUnshifted","shiftKey","sendSafeZone","releasePressedKeys","pressedKeys","timerEvent","streamingWarnings","sendHeartbeatEvent","clearSystemIdleTimeout","sendAndClearText","unicodeText","encode","encoder","TextEncoder","textInputElement","hasVirtualKeyCodeMapping","module$exports$output$input$keycodes.CHAR_TO_VK_MAP.get","charAt","sendCharCodesAndClearText","isCapsLockOn","vkmap","keycode","targetRect","module$exports$output$input$inputhandler.InputHandler","sendRawTouchinput","gamepadTester","gamepadHandler","_u","_v","_x","TouchDelay","textCompositionState","textInputDetected","autocorrectSetting","autocapitalizeSetting","windowAddEventListener","windowRemoveEventListener","keydownFunc","keydown","keyupFunc","keyup","fullscreenEventFunc","fullscreenEventHandler","preRenderFunc","resizedFunc","resized","viewportResizedFunc","viewportResized","popStateFunc","popstate","idleInputListener","textInputFunc","textInputHandler","textCompositionFunc","textCompositionHandler","rendering","baseTime","baseTotalVideoFrames","animationFrameCount","singleDroppedFrames","multiDroppedFrames","module$exports$output$util$settings.RagnarokSettings.forceTouchCapable","createTouchListener","gestureDetector","createGestureDetector","ignoredLockKeys","historyProtected","localStats","rafTime","droppedVideoFrames","totalVideoFrames","PerformanceObserver","ResizeObserver","resizeObserver","observe","IntersectionObserver","intersectionObserver","viewport","visualViewport","setGamepadDataSender","setGamepadRSDMM","changeFocusHandling","supportedEntryTypes","entryTypes","module$exports$output$util$settings.RagnarokSettings.latencyTest","getAttribute","videoPaused","paused","currentTime","disconnect","telemetryData","getPlugState","deleteGamepad","sendVirtualGamepadTelemetry","virtualGamepad","v_connected","gamepadPollInterval","GAMEPAD_TICK_IDLE_MS","resetGamepadTimer","gamepadScannedOnce","removeGamepadDataHandler","toggleGamepadTester","module$exports$output$util$settings.RagnarokSettings.leanMode","frameCounts","getVideoFrameCounts","totalDroppedVideoFrames","dropped","droppedFrames","decodedFrames","decoded","postRender","requestAnimationFrame","module$exports$output$util$settings.RagnarokSettings.gamepadEnabled","module$exports$output$util$settings.RagnarokSettings.gamepadRaf","gamepadTick","INTERVAL_MS","elementRatio","videoRatio","diff","client","horizontalScaleFactor","boundingRect","getMargins","pageXOffset","pageYOffset","videoZoomFactor","history","pushState","title","sendGeneratedUpEvent","tradCnToggle","tradChineseToggleKey","jpSpecialKey","krSpecialKey","sendEvent","ldat","queueControlMessage","latencyTrigger","stutterIndicator","module$exports$output$util$settings.RagnarokSettings.stutterIndicator","showDebugMessage","riDeviceOverlayBitmap","riDeviceOverlay","bitmap","sendCustomMessage","messageType","messageRecipient","pcmDumpTrigger","gamepadDataHandlers","setVisible","profilerRunning","disableWebRTCStats","startProfiler","enableWebRTCStats","statsServiceEnabled","perfIndicator","on","toggleStutterIndicator","toggle","styleAutoFireOverlay","autoFireCheckbox","checked","latencyData","decodeTime","processingDuration","videoFrameCallbackTime","mouseClickTime","presentationTime","receiveTime","beginTime","serverRtdReceiveTime","mouseClickCallbackTime","loupePositionX","loupePositionY","positionLoupe","compositionEndEvt","CompositionEvent","sendGeneratedDownEvent","isSecureContext","keyboard","lock","onclick","removeAttribute","releasePressedKeysAndButtons","unlock","inputs","changedInputs","wereAllDisabled","enableUserInput","addedInputs","addClickListeners","wheelAddEventListener","removedInputs","disableUserInput","allDisabled","setAndSendHapticsEnabled","resetGamepadState","gamepadDataSender","resetGamepadDataHandlerState","gamepadConnectedFunc","gamepadDisconnectedFunc","rsdmmActive","removeClickListeners","wheelRemoveEventListener","resetTimer","back","getVirtualGamepadHandler","compositionEvent","compositionText","imeRecommendation","inputText","imeMode","setVirtualKeyboardState","visible","setKeyboardLayout","layout","CHINESE_TRADITIONAL_LAYOUT","sendKeyEvent","flushing","callCallback","module$contents$output$input$inputhandler_TouchDelay.TOUCH_DELAY_MS","getVideoPlaybackQuality","quality","webkitDecodedFrameCount","webkitDroppedFrameCount","calculateNetworkLossScore","currInboundVideo","prevInboundVideo","intervalPacketLost","packetsLost","currentScore","packetsReceived","isNaN","frameLost","pliCount","networkLossScore","coeff","GetStreamQuality","qualityScore","latencyScore","bandwidthScore","streamQuality","module$exports$output$stats$qoscalculator.QosCalculator","maxBitRate","getRollingAvg","currentCount","prevCount","currentSum","prevSum","RollingAverage","sum","updateAvgStreamingRate","currentReport","prevReport","currentBytesReceived","bytesReceived","prevBytesReceived","t2","avgStreamingRate","updateInboundVideoRtpStats","frameWidth","frameHeight","streamingResolution","lastInboundVideoRtpTimestamp","framesDecoded_","totalDecodeTime","decodeTimeAvg","cumulativeAvgDecodeTime","framesReceived","framesReceived_","totalInterFrameDelay","interFrameDelayMs","framesDropped_","packetsLost_","framesLost_","drawStatsOnScreen","enableDevStats","line1","getText","staticStreamStats","requestedRegion","line2","avgGameFps","line3","line4","rtd","avgVideoJitterBufferDelay","bwu","line5","streamingQuality","line6","innerWidth","line7","extendedDebugStats","inputMode","internalStatsLine1","getAvg","dcSendDuration","internalStatsLine2","getStatsDuration","internalStatsLine3","internalStatsLine4","isVideoElementPaused","isAudioElementPaused","micState","isRsdmmActive","internalStatsLine5","softwareDecodeFallback","decoder","overlayElement","innerText","updateVideoCodec","module$exports$output$stats$streamstats.StreamStats","bweMbps","prevFramesLost_","overlay","STATS_OVERLAY_ID","createOverlayNode","padding","backgroundColor","fontSize","fontFamily","color","whiteSpace","lineHeight","avg","depr","rtpv","rtpa","traa","trav","vfmd","pfda","sendCachedVfmdStats","rvfcStatsCache","module$exports$output$stats$binaryreport.BinaryReport","prevFramesDropped","prevPliCount","prevVideoDecodeTimeTotalMs","prevVideoFramesDecoded","prevVideoPacketsLost","videoFrameDecodeTimeAvgMs","videoPacketsLost","lastPfdaFrameNumber","sendVideoTrack","videoTrack","recentFramesDropped","module$exports$output$stats$webrtcbinarystats.statsConfig.trav.size","jitterBufferDelay","jitterBufferEmittedCount","GetDeviceCapabilitiesImpl","displayMode","scaleFactor","maxAutoMode","audioChannelCount","maxSupportedModes","maxSupportedMode","features","vsync","vvsync","reflex","ConvertCapabilityToNumber","capability","numCapability","supported","smooth","powerEfficient","getDecodeCapability","framerate","mediaCapabilities","decodingInfo","config","video","contentType","bitrate","getAv1Capabilities","module$exports$output$util$devicecapabilities.CapabilitiesHelper.getAv1Capabilities","supportsAv1","checkAv1","refreshAv1Support","getRefreshRate","reCalculate","refreshRate","refreshRatePromise","fetchRefreshRate","is120FpsSupported","module$exports$output$util$devicecapabilities.CapabilitiesHelper.is120FpsSupported","calcRefreshRate","timeOutId","times","screenX","screenY","refreshRateLoop","scanIntervalMs","module$exports$output$util$devicecapabilities.CapabilitiesHelper","module$exports$output$util$devicecapabilities.CapabilitiesHelperImpl","refresh120FpsSupport","task","refreshH265Support","checkH265","IsAv1Supported","allowAv1","module$exports$output$util$settings.RagnarokSettings.enableAv1Support","enableAv1Support","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.enableAv1Support","allowAv1ByResolutionAndFps","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.enableAv1ByResolutionAndFps","enableAv1ByResolutionAndFps","All","Allow4k","Allow1440p","Allow120Fps","IsH265Supported","getH265Capabilities","module$exports$output$util$devicecapabilities.CapabilitiesHelper.getH265Capabilities","supportsH265","GetCodecList","codecList","module$exports$output$util$settings.RagnarokSettings.codecList","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.codecList","av1Check","h265Check","GetAvgLuminance","source","getImageData","luma","setActive","Event","bubbles","frameTimings","mouseClickData","convertToVideoCoordinateSpace","rect","onVideoFrame","metadata","presentedFrames","loupePosition","module$exports$output$debug$ldatcontroller.LDATController.GetAvgLuminance","frameTimingData","recordLuminance","MAX_HISTORY","prevFrameTimingData","lumaThreshold","mouseClickCount","mostRecentMouseClick","frameLatencyData","flashCallback","isLoupeInPosition","sendMouseClickEvent","module$exports$output$debug$ldatcontroller.LDATController","module$exports$output$debug$ldatcontroller.DEFAULT_LUMA_THRESHOLD","onmousedown","isActive","module$exports$output$debug$ldatcontroller.MOUSE_EVENT_DELAY_MS","autoFire","shotCountSlider","disabled","shotDelaySlider","autoFireInputs","styleLoupe","defaultPosition","loupe","loupeHeader","border","helpDialogue","styleHelpDialogue","SHOW_HOTKEYS_LABEL","helpDialogueButton","mouseDownFuncName","mouseMoveFuncName","updateLoupePosition","makeDraggable","lumaSlider","oninput","this.lumaSlider.oninput","parseFloat","lumaSpan","innerHTML","this.autoFireCheckbox.oninput","this.shotCountSlider.oninput","shotCountSpan","this.shotDelaySlider.oninput","shotDelaySpan","moveOnClickCheckBox","this.moveOnClickCheckBox.oninput","setMoveOnClick","onLoupePositionInput","positionLoupeFromUserInput","this.loupePositionX.oninput","this.loupePositionY.oninput","startButton","this.startButton.onclick","this.helpDialogueButton.onclick","onmouseup","this.loupe.onmousedown","mouseDownFunc","mouseMoveFunc","showLoupePositionWarning","autoFireInProgress","isAutoFire","shotCount","autoFireIntervalId","resetAutoFire","shotDelayMs","setValueAndDispatchInputEvent","HIDE_HOTKEYS_LABEL","header","dx","dy","onmousemove","header.onmousedown","document.onmouseup","document.onmousemove","offsetTop","offsetLeft","warning","videoRect","loupeRect","paddingTop","paddingRight","paddingBottom","paddingLeft","getPadding","createDiv","div","createTitleDiv","borderBottom","createButton","margin","borderRadius","createCheckBox","createLabel","label","createRangeInput","input","createLoupePositionOverlay","labelX","labelY","createNumberInput","placeholder","paddingToInt","n","module$exports$output$debug$ldatoverlay.LDATOverlay","prevMoveEvent","onfullscreenchange","createOverlay","defaultThreshold","lumaInfo","DEFAULT_SHOT_COUNT","DEFAULT_SHOT_DELAY_MS","labelCheckbox","labelShotCount","labelShotDelay","moveOnClickInfo","createLoupe","textAlign","listStyle","li","append","notification","remove","fromSelf","pointerDownEvent","mouseDownEvent","upDownOptions","moveOptions","MOVE_UNITS","DELAY_MS","latency","module$exports$output$stats$clientstatsservice.IceCandidateCategoryCounts","createStatsDataChannel","statsChannel","peerConnection","createDataChannel","statsChannelParams","ordered","reliable","maxRetransmits","binaryType","addDataChannel","open","statsCollectionState","clearIntervals","this.statsChannel.onmessage","getFloat64","BWE_OFFSET","jitter","JITTER_OFFSET","RTD_OFFSET","gameFps","FPS_OFFSET","qosCalculator","currentBweMbps","lowBandwidthUtilThreshold","iirFilterFactor","maxQosScore","maxLatency","setIntervals","statsIntervalId","sendClientStats","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.getStatsInterval","getStatsInterval","deprecatedstatsIntervalId","saveDeprecatedStats","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.getDeprecatedStatsInterval","getDeprecatedStatsInterval","requestVideoFrameCallback","videoFrameCallbackFunc","processStatsReport","getStatsT0","nextStreamStatsTs","mediaType","updateOnScreenStats","audioElement","inputHandler","micCapturer","getMicState","locked","updateCandidatePairStats","showStreamStats","streamStatsState","avgDecodeTime","frameLoss","packetLoss","totalBandwidth","utilizedBandwidth","reportCache","STREAM_STATS_INTERVAL_MS","type__tsickle_destructured_1","ids__tsickle_destructured_2","convertReportToBinary","typeToIdMap","ids","binaryReport","getUnifiedInboundRtp","rtp","kind","module$exports$output$stats$webrtcbinarystats.statsConfig.rtpa.size","audioRtp","lastPacketReceivedTimestamp","module$exports$output$stats$webrtcbinarystats.statsConfig.traa.size","audioTrack","audioLevel","concealedSamples","concealmentEvents","insertedSamplesForDeceleration","removedSamplesForAcceleration","silentConcealedSamples","totalSamplesReceived","totalSamplesDuration","perFrameEntries","videoRtp","totalDecodeTimeMs","sendVideoRtp","recentPacketsLost","recentPliCount","recentFramesDecoded","recentTotalDecodeTimeMs","module$exports$output$stats$webrtcbinarystats.statsConfig.rtpv.size","keyFramesDecoded","nackCount","totalSquaredInterFrameDelay","totalAssemblyTime","framesAssembledFromMultiplePackets","tempPfdaFrameNumber","frameNumber","module$exports$output$stats$webrtcbinarystats.statsConfig.pfda.size","dataView","assemblyTime","memoryInfo","memory","currentUsedHeapSize","usedJSHeapSize","currentTotalHeapSize","totalJSHeapSize","deltaUsedHeapSize","processGarbageCollectionStats","usedHeapSize","deltaTotalHeapSize","totalHeapSize","addGarbageCollectionStats","module$exports$output$ragnarokprofiler.RagnarokProfiler.addGarbageCollectionStats","garbageCollectionStats","addInputChannelStats","module$exports$output$ragnarokprofiler.RagnarokProfiler.addInputChannelStats","inputChannelStats","maxSchedulingDelay","nextRtpMappingTime","lastUnsentRtpMapping","dataBuffer","RTP_MAPPING_TYPE","RTP_MAPPING_VERSION","RTP_COUNT","mapping","maybeSendMessage","sendRtpMapping","RTP_MAPPING_INTERVAL","APP_FEEDBACK_TYPE","APP_FEEDBACK_VERSION","sendClientPerfStats","sq","shouldEmitInternalStatsEvent","streamingStats","bwe","addQualityScore","module$exports$output$ragnarokprofiler.RagnarokProfiler.addQualityScore","statsTs","getStatsT1","addGetStatsTime","module$exports$output$ragnarokprofiler.RagnarokProfiler.addGetStatsTime","hasAudioStats","emitStatsException","where","initMap","getStats","foundTrack","stat","statsArray","useInboundRtpAsTrack","initTypeId","finalizeGetStats","pendingStats","processEarlyStatsReport","receivers","find","track","enabled","pendingDeprecatedStats","rejectionHandler","names","keyDeprecatedStats","timingFrameInfo","targetDelayMs","minPlayoutDelayMs","currentDelayMs","deprecatedStats","module$exports$output$stats$webrtcbinarystats.statsConfig.depr.size","setOnScreenStats","candidatePair","ICE_STATS_HISTORY_SIZE","iceStats","prevCandidatePair","inboundRtp","trackId","assign","inboundVideo","decoderImplementation","inboundVideoStats","fallbackFrameNumber","videoFramesDecoded","ETWS_SOFTWARE_DECODE_FALLBACK","fallback","etwPrint","counts","success","codecId","videoCodecType","videoPacketsReceived","updateDisplayResolution","prevReportFailed","currReportFailed","physicalResolution","logicalResolution","module$exports$output$util$devicecapabilities.CapabilitiesHelper.getRefreshRate","ETWS_DISPLAY_RESOLUTION","getIceStats","oldPair","newPair","requestsSent","consentRequestsSent","responsesReceived","recentRequestsSent","recentResponsesReceived","recentPacketsReceived","getCandidateStatCategoryCounts","candidateCounts","getIceCandidateCategory","getCandidateAddressRanges","candidateAddressRanges","candidateStat","candidateRange","getIceCandidateAddressRange","module$exports$output$stats$clientstatsservice.ClientStatsService","nvstConfig","running","mapRtpTimestampsToFrames","maximumBitrateKbps","videoFrameCallback","recvTimeMs","presentTimeMs","processTimeMs","module$exports$output$stats$webrtcbinarystats.statsConfig.vfmd.size","rvfcStatsCacheLimit","rtpTimestamp","isEnabled","disableStats","emitMetricEvent","candidate","address","relatedAddress","endsWith","octets","firstOctet","secondOctet","range","parseOfferSdp","sdpStr","origin","time","generalAttributes","media","attributes","msid","inMedia","handleDescEnd","attribute","attributeValue","overrideSdp","localSdp","remoteSdp","regex","groups","path","getMediaTypeForPrefix","localConfig","getMediaConfig","remoteConfig","updateConfig","getNumber","num","clientCapture","videoIdx","clientViewportWd","clientViewportHt","maxFps","initialBitrateKbps","initialPeakBitrateKbps","minimumBitrateKbps","serializeAnswer","addConfigs","localConfigs","remoteConfigs","name__tsickle_destructured_1","remoteMedia","createWebSocket","websocketUrl","localWs","WebSocket","onopen","localWs.onopen","wsLogger","ws","pendingMessage","cacheMsgsForAck","wsQueue","sendOnWsReliablyIfNeeded","onclose","localWs.onclose","wsHadError","wasClean","localWs.onerror","localWs.onmessage","wsMsg","setHeartBeatTimeout","hb","ack","deleteFromAckCache","sendAckToServer","ackmsg","wsException","clearHeartBeatTimeout","heartBeatTimeoutId","checkWebsocketConnectionPeriodically","addInAckCache","module$exports$output$websocketimpl.WebSocketImpl","webSocketImplCallbacks","logCallback","closeCode","OPEN","getVideoCodecExtension","setupStream","readable","writable","createEncodedStreams","TransformStream","namePrefix","flush","encodedFrame","isFull","numBytes","to","toOffset","enqueue","pipeThrough","pipeTo","streams","module$exports$output$debug$bitstreamdump.BitstreamDump","videoCodec","videoTransceiver","getTransceivers","VIDEO_BITSTREAM_MAX_SIZE","extension","debugWindow","showSafeZone","getSafeZone","insets","isScreenNaturalOrientation","angle","orientation","_width","offsets","getOffsets","parent","offsetParent","screenMinusViewportTopPadding","screenMinusViewportLeftPadding","safeZone","module$exports$output$safezonehandler.SafeZoneHandler","sender","telemetryEventCount","normalizedStr","_","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sendInsetValueUpdateEvents","sendInsetValueUpdateEvents","MAX_TELEMETRY_EVENT_COUNT","roundToInt","multFactor","insetsTelemetry","safeZoneTelemetry","updateDebugWindow","listener","windowStateListeners","listeners","isMobile","setMouseFocus","mouseFocus","module$exports$output$windowstateobserver.WindowStateObserver","hasFocus","focusFunc","onFocus","blurFunc","onBlur","fullscreenFunc","mouseEnterFunc","onMouseEnter","mouseLeaveFunc","onMouseLeave","doc","webkitIsFullScreen","mozFullScreen","msFullscreenElement","setFullscreen","GetSelectedCodec","lines","mediaLineIndex","sdpCodecs","lineIndex","rtpMap","AddImageattrsToSDP","maxw","maxh","maxfps","payloadTypes","h26XRe","payloadType","imageattr","minw","minh","minfps","GetMediaBitrateUpdatedSDP","newLines","concat","GetGoogBitrateUpdatedSDP","br_min","br_max","br_start","additionalParams","h264Payloads","AddOpusStereoSupported","fmtpLines","opusFmt","rtpmap","lastFmtpLine","fmtpLine","fmtp","isMultiopusOffered","serverSdp","serverLines","mediaLine","multiopusFmt","redFmt","multiopusChannel","redChannel","multiopusSpec","redSpec","fmtRed","fmtCodec","specificationRed","specificationCodec","AddOpusSurroundSupported","multiopus","endLine","mediaDescriptor","signInTimeoutId","signInUrl","gsHttpEvent","signInRetries","module$exports$output$util$settings.RagnarokSettings.remoteOverrideInfo.type","module$exports$output$util$settings.RagnarokSettings.remoteOverrideInfo.version","module$exports$output$util$networkdetector.NetworkDetector.getNetworkType","module$exports$output$telemetry$telemetryinterfaces.RagnarokTelemetryConfig","MAX_SIGNIN_RETRIES","setSignInfo","createWSAndSignIn","notifyStart","webSocketDirtyCloseCount","peer_info","isAckSupportedOnWs","peer_msg","handlePeerMessage","streamBeginTimeoutId","removedCode","getStreamBeginError","stopStreamWithError","signInDuration","signInTimerStart","startNotified","startStreamBeginTimeout","addDataChannelSendTime","module$exports$output$ragnarokprofiler.RagnarokProfiler.addDataChannelSendTime","debugMessageElement","debugMessageTimeoutId","dataChannel","channelName","isClosing","dataChannel.onopen","checkAndNotifyStartToClient","onclosing","dataChannel.onclosing","dataChannel.onclose","stopStreamWithErrorIfSleep","dataChannel.onerror","stopStreamDueToChannelClosing","emitChannelErrorEvent","stopNotified","signInToConnectionServer","signInTimeoutMs","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.signInTimeout","signInTimeout","logStreamTimestamps","timeOrigin","multiplier","randnum","padEnd","connectionUrl","streamBeginDuration","streamBeginTimerStart","moveWSToWebWorker","webSocket","WS_CLOSE_KEEP_PEER_ALIVE","module$exports$output$ragnarokprofiler.RagnarokProfiler.startWebSocket","module$exports$output$util$settings.RagnarokSettings.statsUploadEnabled","sendCandidatesTelemetry","streamsAttached","onSessionStart","sendControlMessage","controlChannel","EXP_MSG","stopInputHandler","stopStatsService","stopBitstreamDump","bitstreamDump","peerId","dataJson","gotOffer","answerConfig","codecsPromise","selectedCodec","module$exports$output$streamclient.StreamClient.GetSelectedCodec","nvstSdp","nvstServerOverrides","handleNvstSdp","createPeerConnection","updateIceCandidates","module$exports$output$streamclient.StreamClient.AddImageattrsToSDP","timeTakenBySetRemoteDescriptionCall","cacheTrackIdsExpected","renameStreams","shouldCombineStreams","setMediaElementStreams","startBitstreamDump","addSendVideoTrack","setCodecPreferences","sessionDescription","onSessionDescriptionFunction","timeTakenByCreateAnswerCall","bitRateMax","bitRateMin","bitRateSrt","module$exports$output$streamclient.StreamClient.GetMediaBitrateUpdatedSDP","module$exports$output$streamclient.StreamClient.GetGoogBitrateUpdatedSDP","module$exports$output$streamclient.StreamClient.AddOpusStereoSupported","module$exports$output$streamclient.StreamClient.isMultiopusOffered","module$exports$output$streamclient.StreamClient.AddOpusSurroundSupported","timeTakenBySetLocalDescriptionCall","sdpSections","module$exports$rtcutils_core$output$sdp.SDPUtils.SplitSections","sessionPart","ufrag","module$exports$rtcutils_core$output$sdp.SDPUtils.MatchPrefix","mediaSection","sessionpart","pwd","module$exports$rtcutils_core$output$sdp.SDPUtils.ParseFingerprint","nvSections","password","usernameFragment","fingerprints","sendDataToPeer","answerMessage","updatedCandidate","updateIceCandidate","addIceCandidate","sdpMLineIndex","sdpMid","gotRemoteCandidate","videoStreamProgress","totalResponsesReceived","totalRequestsSent","totalNominatedPairs","totalSucceededPairs","pair","nominated","gotAudioTrack","gotVideoTrack","gotLocalCandidate","candidatePairError","getChannelState","signalingState","onStreamStop","onWsInfoLog","onWsExceptionLog","streamBeginTimeout","INITIAL_ICE_CONNECTION_TIMEOUT_MS","stopped","getInvalidTotal","tcpCount","ipv6Count","getCandidateTotal","totalCandidates","candidateLog","candidateCategoriesStats","totalOnCandidateCount","candidateCategoryCounts","totalStatsCount","candidateEventDiff","iceCandidateEventCount","selectedString","videoReceiver","localCandidate","transport","iceTransport","getSelectedCandidatePair","local","statsRanges","iceGatheringState","LEGACY_STREAM_NAME","streamId","VIDEO_STREAM_NAME","MEDIA_STREAM_NAME","LEGACY_SECOND_STREAM_NAME","AUDIO_STREAM_NAME","setStreamOnElement","tracks","mediaStream","MediaStream","srcObject","videoStream","audioStream","transceiver","logMsg","origDir","direction","DIR_SEND_TRACK","replaceTrack","logAndEmitExceptionEvent","RTCRtpReceiver","getCapabilities","RTCRtpSender","codecsToKeep","codecCapabilities","preferences","capabilities","apply","statsHeader","remotePeerId","startProfiling","module$exports$output$ragnarokprofiler.RagnarokProfiler.startProfiling","startStats","queuedControlMessages","notifyIdleUpdate","secondsLeft","onIceCandidateHandler","eventOrigin","sendOverWs","module$exports$output$ragnarokprofiler.RagnarokProfiler.sendOverWs","sendWindowState","windowStateFlags","windowState","streamIndex","signalAudioPacketsReceived","getAudioTrack","onunmute","audioTrack.onunmute","audioTrackMuted","trackIdsExpected","didReceiveExpectedTracks","pcConfig","iceServers","urls","encodedInsertableStreams","stopStream","isIceConnectionFailed","disconnectedIceStats","emitIceStatsEvent","pcState","failedIceStats","iceCandidateFlag","FAILED","CONNECTED","onconnectionstatechange","this.pc.onconnectionstatechange","connectionState","oniceconnectionstatechange","this.pc.oniceconnectionstatechange","iceConnectionState","NEW","CHECKING","DISCONNECTED","streamingState","pcReconnects","COMPLETED","CLOSED","ondatachannel","this.pc.ondatachannel","writeEtwPrint","ETWS_RTC_BROWSER","windowStateChangeFunc","ev.channel.onmessage","timerNotification","clientTimerNotificationCode","serverCode","ENTITLEMENT_WARNING_1","ENTITLEMENT_WARNING_2","USER_INPUT_IDLE_WARNING","MAX_USAGE_LIMIT_WARNING","sendTimerEvent","debugMessage","customMessage","emitCustomMessageEvent","videoStreamProgressEvent","MSG","inputChannelParams","cursorChannelParams","hasPendingKeyboardLayout","module$exports$output$util$settings.RagnarokSettings.webrtcStatsEnabled","iceCandidateEventFunc","onsignalingstatechange","this.pc.onsignalingstatechange","onicecandidate","this.pc.onicecandidate","onicecandidateerror","event_","this.pc.onicecandidateerror","errorText","module$exports$output$util$settings.RagnarokSettings.micEnabled","micEnabled","ontrack","this.pc.ontrack","isMediaStream","isAudioStream","receivedAudioTrackId","getAudioTracks","streamInArray","s","iceCandidate","videoInfo","newIceCandidate","receivedTracks","some","transceivers","MIC_MID","mid","NVST_STC_QOS_STATS","b120FpsOrHigher","b120Fps","b240Fps","b4kResolution","b1440pOr4kResolution","b1440pResolution","bShouldEnableCPM","DFC_ALGO_VERSION_1","NVSC_ENC_PRESET_LOW_LATENCY_HP","MAX_BITRATE_KBPS_LIMIT_FOR_1440P_BELOW_RESOLUTIONS","aspect","drcDfcEnabled","module$exports$output$util$settings.RagnarokSettings.hdr","NVST_CSCM_LIMITED_YCBCR_BT2020","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.nvscClientConfigFields","nvscClientConfigFields","module$exports$output$util$settings.RagnarokSettings.clientConfigOverride","getFramesDecoded","getVideoCodec","module$exports$output$streamclient.StreamClient","streamParam","onWindowStateChange","iceCandidateEventHandler","providedBitrate","module$exports$output$util$settings.RagnarokSettings.maxBitrate","maxBitrateKbps","calculated","MIN_BITRATE","initialBitrate","drc","module$exports$output$ragnarokprofiler.RagnarokProfiler.initialize","module$exports$output$ragnarokprofiler.RagnarokProfiler.updateStreamTime","peerAPIDurationsAndMicTelemetry","getCurrentMicStatus","module$exports$output$ragnarokprofiler.RagnarokProfiler.stopWebSocket","module$exports$output$ragnarokprofiler.RagnarokProfiler.deinitialize","infoMsg","expMsg","canTrickleIceCandidates","setVideoTransforms","setStreamingMaxBitrate","streamIdx","kbps","setMaxBitrate","setDrcDfcState","setDrcState","setDfcState","audioTracks","module$exports$output$util$settings.RagnarokSettings.combineStreams","combineStreams","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.combineStreams","module$exports$output$telemetry$telemetryinterfaces.Streamer_StartDef","Streamer_Start","module$exports$output$telemetry$telemetryinterfaces.Streamer_ExitDef","Streamer_Exit","module$exports$output$telemetry$telemetryinterfaces.Streamer_InputDeviceDef","Streamer_InputDevice","NetworkDetectorImpl","networkTypeMap","networkUpdateCallbacks","detail","updateNetwork","net","module$exports$output$util$networkdetector.NetworkDetector","metricName","valueString","valueDouble","valueInt1","valueInt2","valueInt3","sendTelemetryEvent","telemetryEventProcessor","emitLaunchEvent","launchAnalyticsEvent","getStreamingProfileGuid","getSystemInfoGuid","processExitEvent","eventPayload","eventSent","clientShutDownCallback","updateCachedExitEventData","sendExitEventUsingBeacon","constructEventDataElements","cachedExitEvent","sendCachedExitEvent","getCachedExitEvents","exitEventPayloads","clearExitEventStore","emitGamepadEvent","gamepadName","vid","pid","hapticsSupported","primary","eventMap","MAX_GAMEPAD_EVENTS_TOTAL","totalGamepadEventsCount","vendorId","productId","deviceIndex","reportIndex","hapticsFeedbackCount","eventMapReceived","eventMapProcessed","setGameDetails","gameCmsId","module$exports$output$telemetry$telemetryhandler.TelemetryHandler","exceptionHandler","permissions","query","permissionStatus","updateState","shouldEmit","currentState","micHasBeenStarted","emitMicState","micCaptureStarting","stopMicRecording","initialized","module$exports$output$miccapturer.MicCapturer.micSupported","prevState","mediaDevices","ondevicechange","navigator.mediaDevices.ondevicechange","getSilenceMediaStream","getSenders","getTracks","userDisabledMic","micCaptureStream","resetAudio","recordLowAudioDebugEvent","audioVolumeLow","lowAudioVolumeCounts","getUserMedia","audioOptions","audio","media_obj","micTrack","onended","micTrack.onended","trackEndedTime","oninactive","brokenMics","muted","playPromise","play","setWillAudioVolumeBeLow","willAudioVolumeBeLow","low","deviceId","enumerateDevices","devices","startMicCaptureOnDefaultDeviceWithFallback","googAutoGainControl2","audioInputType","extractAudioInputType","audioInputDeviceCount","audioInputCounts","noAudioInput","builtInMic","headsetMic","createMediaStreamDestination","dst","shutdown","onDeviceChange","deviceChangeCount","isAudioVolumeLow","isUsingBuiltInMic","didUserDisableMic","module$exports$output$miccapturer.MicCapturer","ios15","silenceStream","addTrack","module$exports$output$util$settings.RagnarokSettings.allowAudioReset","shouldDefaultEnableMic","stopSleepDetectionTimer","sleepDetectIntervalId","startSleepDetectionTimer","lastTimeSelfPing","getTime","lastSessionErrorCode","lastSessionErrorTs","lastSleepDetectionTs","sleepTime","DELTA_SELF_PING_MS","periodicSelfPing","PERIODIC_CALLBACK_INTERVAL_MS","reportSleepEvent","MAX_TIMEOUT_ALLOWED","sleepCaseMsg","lastSubSessionIdSentOnSleep","eventSequence","timeToSleep","wasSleepExit","didSleep","setSleepTime","DELTA_SLEEP_PING_ERROR_CASE","module$exports$output$util$sleepdetector.SleepDetector","gamepadTesterElement","gamepadTesterElementId","gamepads","initGamepadTesterElement","className","connectedGamepadsText","createTextNode","head","module$exports$output$debug$gamepadtester.GamepadTester","unsupportedGamepads","module$exports$output$util$settings.RagnarokSettings.gamepadTesterEnabled","gamepadIndex","SUPPORTED_GAMEPAD_COUNT","animationFrame","gamepadTesterContainer","gamepadWidth","gamepadHeight","leftJoyX","rightJoyX","leftJoyY","rightJoyY","joyStickMultiplier","getJoystickPosition","X","Y","initJoystickCSS","joystick","setJoyStickPositions","querySelector","newJoystick","opacity","renderButtons","buttonIndex","fill","beginPath","fillStyle","moveTo","lineTo","arc","PI","closePath","initGamepadDiv","gamepadElement","gamepadID","gamepadIDText","gamepadContainer","gameLoop","SUPPORTED_BUTTON_COUNT","font","fillText","child","cancelAnimationFrame","module$exports$output$input$virtualgamepad.VirtualGamepadHandler","v_enabled","disable","updateInput","v_buttons","v_trigger","v_axes","v_updated","GamepadSnapshot","getButtonMapping","getAxesMapping","triggers","getTriggerMapping","addGamepadDataHandler","module$exports$output$util$settings.RagnarokSettings.rsdmm","gamepadDataHandler","allowHaptics","module$exports$output$util$settings.RagnarokSettings.allowHaptics","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.allowHaptics","addGamepadCommon","xinput","module$exports$output$util$settings.RagnarokSettings.gamepadPollInterval","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.gamepadPollInterval","GAMEPAD_TICK_DEFAULT_MS","msMask","getEventMap","virtualGamepadTelemetry","removeGamepadCommon","v_index","gamepadTimer","gamepadTickFunc","isSuitableGamepad","isSafari14","isSafari13","isDualSenseGamepad","isXboxSeries","isXboxSeriesWired","toggleRsdmmMode","alreadyActive","exitRsdmmMode","enterRsdmmMode","onEnd","getTelemetryData","getStandardGamepadDetail","standard","getStandardButtons","getStandardTrigger","getStandardAxes","isAndroid","getGamepadDetail","getSafari13GamepadDetail","getSafari13Buttons","getSafari13Axes","isSafariOlder","isWebOs","isTizenOs","getStandardGamepadSimplifiedHapticsDetail","getDualSenseGamepadDetail","getDualSenseButtons","getAxesTrigger","get0125Axes","getXboxSeriesGamepadDetail","getXboxSeriesButtons","getXboxSeriesWiredGamepadDetail","getXboxSeriesWiredButtons","get0134Axes","getShieldGamepadDetail","getShieldTrigger","addGamepad","gamepadDetail","hasHaptics","oldBitmap","prevGpValid","gamepadTimestamps","bitmapChanged","reportTelemetry","lastSnapshot","gamepadSnapshotPrevious","timeSinceUpdate","vid__tsickle_destructured_1","pid__tsickle_destructured_2","getDeviceIds","hapticActuators","isPrimaryGamepad","isHapticsSupported","sendGamepadHaptics","hapticsState","getGamepads","scangamepads","sendUpdate","connectVirtualGamepad","disconnectVirtualGamepad","gp","gamepadAlreadySeen","updateGamepad","getDpadFromAxis","axisValue","dpadAxis","getDpadFromTwoAxes","updateGamepadTelemetry","getBitmap","module$exports$output$input$gamepadhandler.GamepadHandler","prevThumbstickDown","seenThumbUp","gamepadConnected","gamepadDisconnected","isSafari","virtualGamepadHandler","triggerL","triggerR","hIndex","vIndex","dPad","currentGamepadTickTs","updateMainThreadSchedulingDelay","previousGamepadTickTs","packetCount","gamepadInactivityFunc","prevSnapshot","curSnapshot","previous","minVariation","current","module$exports$output$util$settings.RagnarokSettings.rsdmmThumbstickToggle","buttonType","thumbNow","mediaRecorder","MediaRecorder","onstart","this.mediaRecorder.onstart","onstop","this.mediaRecorder.onstop","ondataavailable","this.mediaRecorder.ondataavailable","recordedBlobs","recordedBlobsArray","dumpCount","isRecording","timerID","timeoutMSec","module$exports$output$debug$audiorecorder.AudioRecorder","downloadAudio","createDbInstance","instance","isDbClosing","didDbCloseUnexpectedly","dbInstance","onversionchange","this.dbInstance.onversionchange","this.dbInstance.onclose","getDbStateError","indexedDb","visibilityState","storeName","tx","transaction","store","objectStore","oncomplete","tx.oncomplete","onsuccess","result.onsuccess","result.onerror","getAll","queriedObject","queriedObject.onsuccess","queriedObject.onerror","module$exports$output$util$indexdb.IndexedDb","dbName","storeDetails","EXIT_EVENT_STORE_NAME","storeOptions","keyPath","storeIndexName","TELEMETRY_EVENTS_STORE_NAME","request.onerror","request.onsuccess","onupgradeneeded","request.onupgradeneeded","oldVersion","newVersion","createObjectStoreFunc","createObjectStore","createIndex","unique","onblocked","request.onblocked","put","eventDataElements","commonData","canSend","haveConsentToSend","consent","deviceGdprFuncOptIn","gdprTechOptIn","gdprBehOptIn","sendHttpTelemetryRequest","cacheTelemetryEventInDb","eventDbFormat","userId","getStreamerExitEventPayload","exitData","exitReason","exitErrorCode","sleep","connectivity","networkTestSessionId","frameCount","streamDuration","pollingDone","clearExitEventStoreInDb","openPromise","idb","exitEvents","eventPayloads","telemetryEvent","handleCatch","telemetryEventData","eventProtocol","module$exports$output$util$settings.RagnarokSettings.allowSendingTelemetry","getTelemetryServerUrl","localEventObj","formattedEventDetail","experiments","copyCommonEventDataElements","sentTs","events","cachedTelemetryEvent","isPrimaryKeyValid","shouldHandleException","cacheTelemetryEventInDbExceptionSentOnce","blobData","formData","sendBeacon","clearExitEventStoreInDbExceptionSentOnce","funcName","shouldSendException","cacheExitEventInDb","cacheExitEventInDbExceptionSentOnce","clearTelemetryEventStoreInDb","clearTelemetryEventStoreInDbExceptionSentOnce","sendAllCachedTelemetryEvents","telemetryEvents","module$exports$output$telemetry$telemetryeventprocessor.TelemetryEventProcessor","updateEventDataElements","module$exports$output$util$mockpmgridserver.MockPMGridServer","mark","sleepDetector","initializeParams","getConnectivityStatus","connectivityStatus","exitAnalyticsEvent","getStreamExitEventData","exitErrorCodeForUnload","notifyClientWithError","sessionSetupFailed","sessionStartParams","sessionParams","setMicRecordingEnabled","notifyClientStartResult","inputEnabled","systemIdleFunc","collectPerformanceTimingTelemetry","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.sendNonEssentialMetricEvents","sendNonEssentialMetricEvents","jsInitEntry","getEntriesByName","platformBeginEntry","ragnarokBeginEntry","navigationEntries","jsInitTime","platformBeginTime","navigationEntry","loadEventStart","loadEventEnd","domContentLoadedEventStart","domContentLoadedEventEnd","collectMediaCapabilitiesTelemetry","baseCapability","highProfilePromise","constrainedProfilePromise","highProfileResult","constrainedProfileResult","highProfileCheckTime","av1Promise","highFpsPromise","av1Result","highFpsResult","resetSessionIds","gridServer","terminateOrAbortStreaming","isSessionOngoing","streamingTerminatedEvent","sendExitAnalyticsEvent","stopStreamClient","clearExitEventCacheTimeout","exitEventCacheTimeoutId","exitAnalyticsEventData","cacheExitEventInDbPeriodically","updateExitEventCacheWithNewParams","currentTimeoutId","setPeriodicExitEventCacheTimeout","getGridAppUninitializedError","apiName","onSessionStartException","currentSession","onSessionStartError","startStreaming","progressData","region","validatedStreamParams","shouldResetSrc","module$exports$output$util$settings.RagnarokSettings.allowSourceReset","videoElement.play","removeContextFix","applyContextFix","module$exports$output$util$settings.RagnarokSettings.allowAutoplayChange","hasAttribute","kShouldAutoplay","kAutoplay","inputConfigFlags","runSession","sessionPauseInProgress","shortName","pr","systemIdleId","unregisterWindowAndDocumentEvents","unloadFunc","onlineFunc","visibilitychangeFunc","deviceChangeFunc","prepareSession","registerWindowAndDocumentEvents","sessionSetUpInProgress","sendSessionSetupInProgressTelemetry","updateSessionParams","validated","videoTagId","HTMLVideoElement","audioTagId","HTMLAudioElement","module$exports$output$util$settings.RagnarokSettings.sessionMetaData","sessionMetaData","module$exports$output$util$settings.RagnarokSettings.appLaunchMode","shouldOverrideResolution","module$exports$output$util$settings.RagnarokSettings.resWidth","module$exports$output$util$settings.RagnarokSettings.resHeight","shouldOverrideFps","module$exports$output$util$settings.RagnarokSettings.fps","notifyClientOfStop","resetAudioFunc","latencyHint","onstatechange","context.onstatechange","errorData","isLaunchResult","isResumable","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.connectivityCheckTimeout","connectivityCheckTimeout","connectivityUrl","requestStartTime","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.offlineErrorsStreaming","offlineErrorsStreaming","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.offlineErrorsStreaming.includes","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.offlineErrorsSessionSetup","offlineErrorsSessionSetup","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.offlineErrorsSessionSetup.includes","module$exports$output$gridapp.GridApp","pageShutDownCleanupDuringSessionDone","visibilityHiddenTime","module$exports$rtcutils_core$output$utils.CLIENT_IDENTIFICATION","module$exports$rtcutils_core$output$utils.CLIENT_VERSION","unload","online","visibilitychange","unhandledExceptionFunc","unhandledException","deviceChange","handleSystemIdle","module$exports$output$util$networkdetector.NetworkDetector.registerNetworkCallback","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.terminateUnhandledException","terminateUnhandledException","pageShutDownCleanupDuringSession","shouldApplyMuteWAR","module$exports$output$util$settings.RagnarokSettings.allowMutingVideo","shouldEnableMicWAR","module$exports$output$util$settings.RagnarokSettings.allowEnableMic","USER_TERMINATED_MIC_RECORDER_THRESHOLD","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig.userTerminatedMicRecorderThreshold","userTerminatedMicRecorderThreshold","onGsTelemetryEvent","onGsActiveSessionsResult","onGsProgressUpdate","onGsSessionUpdate","authTokenCallback","initializeGridServer","module$exports$output$util$settings.RagnarokSettings.clientType","shouldSetBrowser","gsInitParams","module$exports$output$util$settings.RagnarokSettings.deviceOs","module$exports$output$util$settings.RagnarokSettings.deviceType","module$exports$output$util$settings.RagnarokSettings.deviceModel","module$exports$output$util$settings.RagnarokSettings.clientStreamer","module$exports$output$util$settings.RagnarokSettings.clientId","module$exports$output$util$settings.RagnarokSettings.clientPlatformName","getActiveSessions","startSession","validatedParams","resumeSession","sessionResumeParams","updatedSessionParams","stopSession","exitCode","pauseSession","_error","isMicSupported","toggleRsdmm","idle","DEFAULT_IDLE_SECONDS_LEFT","ChooseStreamingSettings","ChooseStreamingResolution","candidateResolutions","CalculateDataUsage","bitrateKbps","bitratebps","dataUsageGB","streamingBitrate","A120","B120","A60","B60","adjust30","multiplyFactor","InitializeUtils","IsFeatureSupported","browserFeature","isStreamingSupported","GetSupportedAudioChannelCount","GetDeviceCapabilities","ConfigureRagnarokSettings","_y","_z","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","_17","_18","_19","_20","_21","module$exports$output$util$settings.RagnarokSettings.ragnarokConfig","module$exports$output$util$settings.RagnarokSettings.remoteOverrideInfo","ragnarok","casedSettingsMap","module$exports$output$util$settings.RagnarokSettings.loggingEnabled","getSettingInt","getSettingNum","module$exports$output$util$settings.RagnarokSettings.consoleLoggingEnabled","requestRes","resInfo","touchSetting","module$exports$output$util$settings.RagnarokSettings.is1440pSupported","is1440pSupported","metaValue","metaParts","getSettingArray","module$exports$rtcutils_core$output$version.CHANGELIST","GetPlatformDetails","detectPlatformDetails","detector","AddPlatformTelemetry","translatePlatformDetailsForPayload","gxtDetails","translatePlatformDetailsForClientHeader","lcarsDetails"],"sourceRoot":""}