import { StreamClient } from "../streamclient";
import { TelemetryHandler } from "../telemetry/telemetryhandler";
import { PlatformDetails } from "../dependencies";
import { InputConfigFlags } from "../interfaces";
import { InputChannel, InputMediaElement, Measurements } from "./inputinterfaces";
import { VideoState } from "../rinterfaces";
import { InputPacketHandler, MoveEventBuffer } from "./inputpackethandler";
import { GamepadRSDMM } from "./gamepadrsdmm";
import { WindowStateObserver } from "../windowstateobserver";
interface CursorState {
    absPositioning: boolean;
    confined: boolean;
    absX: number;
    absY: number;
    remX: number;
    remY: number;
    style: string;
    imagePendingDecode?: HTMLImageElement;
    image?: HTMLImageElement;
    hotspotX: number;
    hotspotY: number;
    width: number;
    height: number;
    scale: number;
}
export declare class MouseHandler {
    private windowObserver;
    private streamClient;
    private videoTagElement;
    private configFlags;
    private videoState;
    private mousedownFunc;
    private pointerdownFunc;
    private mouseupFunc;
    private pointerupFunc;
    private mousewheelFunc;
    private pointerMoveFunc;
    private pointerRawUpdateFunc;
    private freeMouseMoveFunc;
    private freePointerMoveFunc;
    private pointerLockEventFunc;
    private pointerLockErrorFunc;
    private focusChangeFunc;
    private fullscreenChangeFunc;
    private cursorType;
    private cursorState;
    private cursorCanvasState;
    private cursorCache;
    private systemCursors;
    private cursorCanvas;
    private cursorCanvasId;
    private pointerLockElement;
    private consecutivePointerLockFailedAttempts;
    private allowPointerLock;
    private pressedButtons;
    private supportsRawUpdate;
    private supportsPointerEvents;
    private supportsCoalescedEvents;
    private isChromium;
    private telemetry;
    private unadjustedMovementAllowed;
    private unadjustedMovementActive;
    private pointerLockReturnsPromise;
    private measurements;
    private rawUpdateState;
    private rawCoalesceInterval;
    private mouseFilter;
    private documentAddEventListener;
    private videoAddEventListener;
    private documentRemoveEventListener;
    private videoRemoveEventListener;
    private rsdmmHandler;
    private zoomInProgress;
    private packetHandler;
    private moveEventBuffer;
    private platformDetails;
    private nonpassiveOptions;
    private scaleMovementByDpr;
    private externalShowCursor;
    private isUserInputEnable;
    constructor(streamClient: StreamClient, videoElement: InputMediaElement, cursorChannel: InputChannel, telemetry: TelemetryHandler, configFlags: InputConfigFlags, platformDetails: PlatformDetails, rsdmmHandler: GamepadRSDMM, measurements: Measurements, moveEventBuffer: MoveEventBuffer, packetHandler: InputPacketHandler, windowObserver: WindowStateObserver);
    uninitialize(): void;
    preRender(_timestamp: number): void;
    postRender(): void;
    private pointerdown;
    private mousedown;
    private pointerup;
    private mouseup;
    private mousewheel;
    private freePointerMove;
    private freeMouseMove;
    private handlePointerEvent;
    private pointermove;
    private pointerrawupdate;
    setCursorPosFromOffset(offsetX: number, offsetY: number): void;
    private setCursorPosFromMovement;
    private setCursorPosFromServer;
    private setCursorPosFromDisplayVideo;
    private getCursorCanvas;
    private createCursorCanvasElement;
    private setCursorCanvasPosition;
    updateVideoState(videoState: VideoState): void;
    private updateCursorCanvasState;
    private getCursorScaling;
    private drawCursor;
    private setCursor;
    private drawCursorPadded;
    private hideCursor;
    private onCursorMessage;
    private handleSystemCursor;
    private handleBitmapCursor;
    private handleCursorCommon;
    private makeCursorStyle;
    private makeBase64Url;
    private updateHardwareCursor;
    private scheduleCursorDraw;
    private setCursorMovementAbsolute;
    private setCursorConfinement;
    private onFullscreenChange;
    private pointerLockChange;
    private pointerLockError;
    private handlePointerLockFailed;
    shouldPointerLock(): boolean;
    isPointerLocked(): boolean;
    updatePointerLock(): void;
    enableUserInput(): void;
    disableUserInput(): void;
    isUserInputEnabled(): boolean;
    private setRawUpdate;
    private addMoveListener;
    private removeMoveListener;
    private addClickListeners;
    private removeClickListeners;
    private onFocusChange;
    releasePressedButtons(): void;
    getMoveEventName(): "mousemove" | "pointermove";
    private getFreeMoveFunc;
    sendMouseDown(button: number, ts: number): void;
    sendMouseUp(button: number, ts: number): void;
    private getTranslationLimits;
    setShowCursor(show: boolean): void;
    setZoomInProgress(zoom: boolean): void;
    getCursorState(): CursorState;
    toggleUnadjustedMovement(): void;
    setNextRawUpdate(): void;
    private getDefaultUnadjustedMovement;
    getMouseMode(): string;
}
export {};
